<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="9:TestC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2afe3c2b8130"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2afe3c2623f0"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2afe3c2623f0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2afe3c493590"/></to>
    </wire>
    <wire loc="10:TestC.nc">
      <from><interface-ref name="LinkCtrl" scoped="" ref="0x2afe3c2b4a10"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2afe3c2f6570"/></to>
    </wire>
    <wire loc="50:TDMALinkC.nc">
      <from><interface-ref name="Control" scoped="" ref="0x2afe3c2f6570"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2afe3c4c0cd0"/></to>
    </wire>
    <wire loc="11:TestC.nc">
      <from><interface-ref name="LinkSnd" scoped="" ref="0x2afe3c2c8650"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2afe3c4a1710"/></to>
    </wire>
    <wire loc="47:TDMALinkC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2afe3c4a1710"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2afe3c4bf820"/></to>
    </wire>
    <wire loc="12:TestC.nc">
      <from><interface-ref name="LinkRcv" scoped="" ref="0x2afe3c2b3020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2afe3c4a10c0"/></to>
    </wire>
    <wire loc="44:TDMALinkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2afe3c4a10c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2afe3dbe4650"/></to>
    </wire>
    <wire loc="104:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2afe3c2d88d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2afe3d8e6dd0"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2afe3c2d88d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2afe3d880b70"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2afe3c2d88d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2afe3d89e750"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2afe3c2d88d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2afe3d842080"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2afe3c2d88d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2afe3d741130"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2afe3c2d88d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2afe3d617620"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2afe3c2d88d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2afe3d558820"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2afe3c2d88d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2afe3ce4c7e0"/></to>
    </wire>
    <wire loc="103:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2afe3c2d88d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2afe3e384a40"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2afe3c2d88d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2afe3d170020"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2afe3c2d88d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2afe3cd81510"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2afe3c2d88d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2afe3cb49d50"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2afe3c2d88d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2afe3ca95780"/></to>
    </wire>
    <wire loc="103:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2afe3c2d88d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2afe3e175ca0"/></to>
    </wire>
    <wire loc="45:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2afe3c2d88d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2afe3c5662a0"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2afe3c493c00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2afe3bdc73a0"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2afe3bdc73a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2afe3c21d140"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2afe3c4ad6c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2afe3c2da790"/></to>
    </wire>
    <wire loc="48:/home/zdenial/tinyos/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2afe3c2da790"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2afe3c2d69c0"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2afe3c4addc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2afe3c2d88d0"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x2afe3c2d3150"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x2afe3c2f5020"/></to>
    </wire>
    <wire loc="46:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x2afe3c2f5020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2afe3c2f2020"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2afe3c2d3830"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2afe3c2d5c80"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x2afe3c2d2020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2afe3c995c40"/></to>
    </wire>
    <wire loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2afe3c2f2020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2afe3c31b940"/></to>
    </wire>
    <wire loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x2afe3c30b6c0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x2afe3c31a020"/></to>
    </wire>
    <wire loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2afe3bf74080"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2afe3c319360"/></to>
    </wire>
    <wire loc="113:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x2afe3c35d5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2afe3c41e6d0"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x2afe3c36d020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2afe3c417b30"/></to>
    </wire>
    <wire loc="108:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x2afe3c354700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2afe3c424160"/></to>
    </wire>
    <wire loc="149:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x2afe3c37ca20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2afe3c448cb0"/></to>
    </wire>
    <wire loc="107:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x2afe3c35baa0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2afe3c425480"/></to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x2afe3c382020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2afe3c448020"/></to>
    </wire>
    <wire loc="170:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x2afe3c379a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2afe3c457cb0"/></to>
    </wire>
    <wire loc="154:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x2afe3c3685a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2afe3c442220"/></to>
    </wire>
    <wire loc="99:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x2afe3c35eb10"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2afe3c3c09d0"/></to>
    </wire>
    <wire loc="135:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x2afe3c37ea20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2afe3c4312f0"/></to>
    </wire>
    <wire loc="134:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x2afe3c3843e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2afe3c432610"/></to>
    </wire>
    <wire loc="133:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x2afe3c36c5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2afe3c433220"/></to>
    </wire>
    <wire loc="115:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x2afe3c353700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2afe3c41c7a0"/></to>
    </wire>
    <wire loc="156:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x2afe3c37ba20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2afe3c4402f0"/></to>
    </wire>
    <wire loc="140:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x2afe3c36bbe0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2afe3c42c6d0"/></to>
    </wire>
    <wire loc="114:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x2afe3c35a890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2afe3c41dac0"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x2afe3c34c120"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2afe3c3abc80"/></to>
    </wire>
    <wire loc="155:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x2afe3c382da0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2afe3c441610"/></to>
    </wire>
    <wire loc="106:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x2afe3c3420c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2afe3c426020"/></to>
    </wire>
    <wire loc="161:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x2afe3c366a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2afe3c43b6d0"/></to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x2afe3c370690"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2afe3c408a90"/></to>
    </wire>
    <wire loc="142:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x2afe3c37da20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2afe3c42a7a0"/></to>
    </wire>
    <wire loc="100:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x2afe3c356cf0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2afe3c409de0"/></to>
    </wire>
    <wire loc="141:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x2afe3c3831f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2afe3c42bac0"/></to>
    </wire>
    <wire loc="163:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x2afe3c37aa20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2afe3c45e7a0"/></to>
    </wire>
    <wire loc="147:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x2afe3c3690c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2afe3c44ab30"/></to>
    </wire>
    <wire loc="120:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x2afe3c36f6c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2afe3c3c7c80"/></to>
    </wire>
    <wire loc="162:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x2afe3c381b80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2afe3c45fac0"/></to>
    </wire>
    <wire loc="128:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x2afe3c37fa20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2afe3c415cb0"/></to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x2afe3c380a20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2afe3c457020"/></to>
    </wire>
    <wire loc="127:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x2afe3c385570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2afe3c415020"/></to>
    </wire>
    <wire loc="168:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x2afe3c364020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2afe3c459b30"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x2afe3c3a9c20"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2afe3c3a95b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x2afe3c3cc2f0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x2afe3c452aa0"/></to>
    </wire>
    <wire loc="96:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x2afe3c3cc940"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x2afe3c44e260"/></to>
    </wire>
    <wire loc="102:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2afe3c407930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2afe3c3abc80"/></to>
    </wire>
    <wire loc="103:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2afe3c405020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2afe3c3a95b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2afe3c423020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2afe3c3abc80"/></to>
    </wire>
    <wire loc="110:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2afe3c4227a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2afe3c3a95b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2afe3c41b610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2afe3c3abc80"/></to>
    </wire>
    <wire loc="117:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2afe3c41ac50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2afe3c3a95b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x2afe3c3c5c20"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2afe3c3c55b0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x2afe3c3c42f0"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x2afe3c44e9f0"/></to>
    </wire>
    <wire loc="123:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x2afe3c3c4940"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x2afe3c44d240"/></to>
    </wire>
    <wire loc="129:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2afe3c439b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2afe3c3c7c80"/></to>
    </wire>
    <wire loc="130:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2afe3c4372f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2afe3c3c55b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2afe3c430160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2afe3c3c7c80"/></to>
    </wire>
    <wire loc="137:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2afe3c42f7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2afe3c3c55b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2afe3c429610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2afe3c3c7c80"/></to>
    </wire>
    <wire loc="144:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2afe3c428c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2afe3c3c55b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2afe3c447b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2afe3c3c7c80"/></to>
    </wire>
    <wire loc="151:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2afe3c4452f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2afe3c3c55b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2afe3c43f160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2afe3c3c7c80"/></to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2afe3c43e7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2afe3c3c55b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2afe3c45d610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2afe3c3c7c80"/></to>
    </wire>
    <wire loc="165:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2afe3c45cc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2afe3c3c55b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2afe3c456b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2afe3c3c7c80"/></to>
    </wire>
    <wire loc="172:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2afe3c4542f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2afe3c3c55b0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2afe3bd5d1d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2afe3c21b040"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2afe3c2185d0"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2afe3be372d0"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2afe3dbe4650"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2afe3ccb0210"/>
      <arguments>
        <value cst="I:133">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2afe3c2ad1b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="13:TDMALinkC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2afe3c4bd020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2afe3ccae120"/></to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2afe3ccae120"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2afe3ccce020"/></to>
    </wire>
    <wire loc="14:TDMALinkC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x2afe3c4bc840"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2afe3ccb3020"/></to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2afe3ccb3020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2afe3ccd2680"/></to>
    </wire>
    <wire loc="15:TDMALinkC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2afe3c4cbbf0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2afe3d93e020"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2afe3d93e020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2afe3d939080"/></to>
    </wire>
    <wire loc="19:TDMALinkC.nc">
      <from><interface-ref name="TSPacket" scoped="" ref="0x2afe3c4e2470"/></from>
      <to><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x2afe3da31c50"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x2afe3da31c50"/></from>
      <to><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x2afe3da18b90"/></to>
    </wire>
    <wire loc="20:TDMALinkC.nc">
      <from><interface-ref name="SyncSnd" scoped="" ref="0x2afe3c4ea7b0"/></from>
      <to><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x2afe3da35aa0"/>
      <arguments>
        <value cst="I:130">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:TDMALinkC.nc">
      <from><interface-ref name="SyncRcv" scoped="" ref="0x2afe3c4e8700"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2afe3da3b5c0"/>
      <arguments>
        <value cst="I:130">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="26:TDMALinkC.nc">
      <from><interface-ref name="JoinReqSnd" scoped="" ref="0x2afe3c4e6e10"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2afe3db77cc0"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2afe3db77cc0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2afe3e5f9cb0"/></to>
    </wire>
    <wire loc="27:TDMALinkC.nc">
      <from><interface-ref name="JoinReqRcv" scoped="" ref="0x2afe3c4e1b50"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2afe3db6a800"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2afe3db6a800"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2afe3ccb0210"/>
      <arguments>
        <value cst="I:131">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2afe3c2ad1b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="31:TDMALinkC.nc">
      <from><interface-ref name="JoinAnsSnd" scoped="" ref="0x2afe3c4e0360"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2afe3db65530"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2afe3db65530"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2afe3e67a140"/></to>
    </wire>
    <wire loc="32:TDMALinkC.nc">
      <from><interface-ref name="JoinAnsRcv" scoped="" ref="0x2afe3c4df0d0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2afe3db5f140"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2afe3db5f140"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2afe3ccb0210"/>
      <arguments>
        <value cst="I:132">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2afe3c2ad1b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="36:TDMALinkC.nc">
      <from><interface-ref name="DataSnd" scoped="" ref="0x2afe3c4df870"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2afe3db5ae60"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2afe3db5ae60"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2afe3e64f4c0"/></to>
    </wire>
    <wire loc="40:TDMALinkC.nc">
      <from><interface-ref name="SlotScheduler" scoped="" ref="0x2afe3c4ff5f0"/></from>
      <to><interface-ref name="SlotScheduler" scoped="" ref="0x2afe3dbd5240"/></to>
    </wire>
    <wire loc="16:SlotSchedulerC.nc">
      <from><interface-ref name="SlotScheduler" scoped="" ref="0x2afe3dbd5240"/></from>
      <to><interface-ref name="SlotScheduler" scoped="" ref="0x2afe3dbd4960"/></to>
    </wire>
    <wire loc="42:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2afe3c569490"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2afe3c561a70"/></to>
    </wire>
    <wire loc="48:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="UartControl" scoped="" ref="0x2afe3c542680"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2afe3c558a30"/></to>
    </wire>
    <wire loc="17:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2afe3c558a30"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2afe3caa67a0"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2afe3c561220"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2afe3c57d310"/></to>
    </wire>
    <wire loc="14:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2afe3c57d310"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2afe3caa9060"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x2afe3ca96430"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x2afe3c560960"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2afe3caa9060"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2afe3c5e3560"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="13:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2afe3c5711e0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2afe3ca6c0c0"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2afe3ca6c0c0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2afe3c5e6020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2afe3caa9800"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2afe3caa3080"/></to>
    </wire>
    <wire loc="19:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2afe3caa36f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2afe3ca6ec00"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2afe3ca6ec00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2afe3c5ea4d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2afe3ca6d8f0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2afe3dd89ab0"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2afe3dd89ab0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2afe3c9c72c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2afe3c5e16c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2afe3caa9800"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2afe3dd82be0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2afe3c5e71d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x2afe3c5e23f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x2afe3dd8ae40"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2afe3dd8ae40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2afe3c9c8020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x2afe3c5ddc20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2afe3dd82440"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2afe3dd82440"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2afe3c9ca1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2afe3c5e71d0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2afe3c65edc0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2afe3c5e3560"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2afe3c65c890"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2afe3c5e6020"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2afe3c65d6d0"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2afe3c5ea4d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2afe3c65e020"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2afe3c687020"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2afe3c5e16c0"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x2afe3c688230"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x2afe3c5e23f0"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x2afe3c682290"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x2afe3c5ddc20"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x2afe3c687690"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x2afe3c6768b0"/></to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x2afe3c6768b0"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x2afe3c698020"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2afe3c682c90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2afe3c9319a0"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2afe3c9319a0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2afe3c92b9d0"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2afe3c680dd0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2afe3c930970"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2afe3c930970"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2afe3c9492a0"/></to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2afe3c69d3b0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2afe3c694dc0"/></to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2afe3c676080"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2afe3c69c710"/></to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x2afe3c6b6860"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x2afe3c7803f0"/></to>
    </wire>
    <wire loc="539:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x2afe3c7803f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c870100"/></to>
    </wire>
    <wire loc="92:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x2afe3c691800"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x2afe3c77e3f0"/></to>
    </wire>
    <wire loc="540:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x2afe3c77e3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c86cd10"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x2afe3c6b4800"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x2afe3c7af3f0"/></to>
    </wire>
    <wire loc="541:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x2afe3c7af3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c89d740"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x2afe3c6b2800"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x2afe3c7ab3f0"/></to>
    </wire>
    <wire loc="543:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x2afe3c7ab3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c834740"/></to>
    </wire>
    <wire loc="95:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x2afe3c6b0800"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x2afe3c7ad3f0"/></to>
    </wire>
    <wire loc="542:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x2afe3c7ad3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c83ad10"/></to>
    </wire>
    <wire loc="442:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x2afe3c726cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c7f1d10"/></to>
    </wire>
    <wire loc="455:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x2afe3c743cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c82a740"/></to>
    </wire>
    <wire loc="531:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x2afe3c78f3d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c81b740"/></to>
    </wire>
    <wire loc="551:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x2afe3c79d3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c89fd10"/></to>
    </wire>
    <wire loc="532:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x2afe3c78d3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c84c100"/></to>
    </wire>
    <wire loc="460:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x2afe3c73fcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c820d10"/></to>
    </wire>
    <wire loc="473:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x2afe3c75c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c85c740"/></to>
    </wire>
    <wire loc="486:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x2afe3c779020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c898100"/></to>
    </wire>
    <wire loc="497:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x2afe3c769020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c8a9740"/></to>
    </wire>
    <wire loc="535:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x2afe3c7863f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c843740"/></to>
    </wire>
    <wire loc="545:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x2afe3c7a93e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c885d10"/></to>
    </wire>
    <wire loc="557:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x2afe3c7c93f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c8d2740"/></to>
    </wire>
    <wire loc="445:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x2afe3c71fcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c816d10"/></to>
    </wire>
    <wire loc="536:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x2afe3c7843f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c83e100"/></to>
    </wire>
    <wire loc="450:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x2afe3c71bcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c80c100"/></to>
    </wire>
    <wire loc="463:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x2afe3c739cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c848d10"/></to>
    </wire>
    <wire loc="476:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x2afe3c755020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c84e740"/></to>
    </wire>
    <wire loc="489:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x2afe3c773020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c889100"/></to>
    </wire>
    <wire loc="500:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x2afe3c795020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c8d2740"/></to>
    </wire>
    <wire loc="440:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x2afe3c72acc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c7fa740"/></to>
    </wire>
    <wire loc="453:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x2afe3c747cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c7fe260"/></to>
    </wire>
    <wire loc="466:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x2afe3c733cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c83ad10"/></to>
    </wire>
    <wire loc="530:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x2afe3c7913f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c81b740"/></to>
    </wire>
    <wire loc="548:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x2afe3c7a33e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c8aed10"/></to>
    </wire>
    <wire loc="555:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x2afe3c7973e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c8d2740"/></to>
    </wire>
    <wire loc="471:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x2afe3c761cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c8653f0"/></to>
    </wire>
    <wire loc="484:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x2afe3c74b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c86cd10"/></to>
    </wire>
    <wire loc="495:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x2afe3c76d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c8b2100"/></to>
    </wire>
    <wire loc="549:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x2afe3c7a13e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c8a9740"/></to>
    </wire>
    <wire loc="538:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x2afe3c7823e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c875740"/></to>
    </wire>
    <wire loc="443:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x2afe3c724cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c7ec740"/></to>
    </wire>
    <wire loc="456:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x2afe3c741cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c824100"/></to>
    </wire>
    <wire loc="493:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x2afe3c771020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c885d10"/></to>
    </wire>
    <wire loc="461:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x2afe3c73dcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c81b740"/></to>
    </wire>
    <wire loc="474:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x2afe3c75a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c857100"/></to>
    </wire>
    <wire loc="487:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x2afe3c777020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c894d10"/></to>
    </wire>
    <wire loc="498:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x2afe3c767020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c8a4100"/></to>
    </wire>
    <wire loc="438:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x2afe3c730e10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c7cf3f0"/></to>
    </wire>
    <wire loc="451:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x2afe3c719cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c808d10"/></to>
    </wire>
    <wire loc="464:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x2afe3c737cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c843740"/></to>
    </wire>
    <wire loc="477:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x2afe3c753020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c87e100"/></to>
    </wire>
    <wire loc="546:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x2afe3c7a73e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c8b7740"/></to>
    </wire>
    <wire loc="552:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x2afe3c79b3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c8d2740"/></to>
    </wire>
    <wire loc="482:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x2afe3c74f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c875740"/></to>
    </wire>
    <wire loc="441:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x2afe3c728cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c7f5100"/></to>
    </wire>
    <wire loc="454:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x2afe3c745cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c82fd10"/></to>
    </wire>
    <wire loc="467:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x2afe3c763cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c834740"/></to>
    </wire>
    <wire loc="550:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x2afe3c79f3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c8a4100"/></to>
    </wire>
    <wire loc="472:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x2afe3c75e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c861e00"/></to>
    </wire>
    <wire loc="485:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x2afe3c77b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c89d740"/></to>
    </wire>
    <wire loc="496:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x2afe3c76b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c8aed10"/></to>
    </wire>
    <wire loc="444:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x2afe3c721cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c7e7100"/></to>
    </wire>
    <wire loc="494:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x2afe3c76f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c8b7740"/></to>
    </wire>
    <wire loc="449:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x2afe3c71dcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c811740"/></to>
    </wire>
    <wire loc="462:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x2afe3c73bcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c84c100"/></to>
    </wire>
    <wire loc="475:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x2afe3c757020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c853d10"/></to>
    </wire>
    <wire loc="488:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x2afe3c775020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c88e740"/></to>
    </wire>
    <wire loc="499:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x2afe3c765020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c89fd10"/></to>
    </wire>
    <wire loc="439:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x2afe3c72ccc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c7cbe00"/></to>
    </wire>
    <wire loc="452:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x2afe3c749cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c803740"/></to>
    </wire>
    <wire loc="465:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x2afe3c735cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c83e100"/></to>
    </wire>
    <wire loc="478:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x2afe3c751020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c87ad10"/></to>
    </wire>
    <wire loc="534:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x2afe3c7883d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c848d10"/></to>
    </wire>
    <wire loc="547:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x2afe3c7a53e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c8b2100"/></to>
    </wire>
    <wire loc="533:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x2afe3c78a3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c848d10"/></to>
    </wire>
    <wire loc="483:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x2afe3c74d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c870100"/></to>
    </wire>
    <wire loc="554:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x2afe3c7993e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c89fd10"/></to>
    </wire>
    <wire loc="558:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x2afe3c7c73f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c889100"/></to>
    </wire>
    <wire loc="529:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x2afe3c793060"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afe3c820d10"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2afe3c92b9d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2afe3c925b80"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2afe3c952c50"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2afe3c36f6c0"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2afe3c995c40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2afe3c94cc40"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2afe3c941910"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x2afe3c95e360"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2afe3c95e360"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2afe3c992710"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2afe3c947b10"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x2afe3c9976a0"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2afe3c9976a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2afe3c97c1d0"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2afe3c946e30"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x2afe3c9969c0"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2afe3c9969c0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2afe3c9b3d70"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2afe3c981930"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x2afe3c779020"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2afe3c97b480"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x2afe3c777020"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2afe3c9b1020"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x2afe3c775020"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x2afe3dd87a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x2afe3c6768b0"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2afe3dd872b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2afe3c9c7ad0"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2afe3c9c7ad0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2afe3ca63400"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2afe3c9c68a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2afe3dd82be0"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2afe3c9c72c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2afe3ca65020"/></to>
    </wire>
    <wire loc="106:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2afe3ca65020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2afe3e1703a0"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x2afe3c9ca1d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2afe3c9c4b60"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2afe3c9c8020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2afe3ca66210"/></to>
    </wire>
    <wire loc="105:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2afe3ca66210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2afe3e171540"/></to>
    </wire>
    <wire loc="108:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2afe3ca63400"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2afe3e16f8b0"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x2afe3c9c3c20"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2afe3c69d3b0"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2afe3ca63cd0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2afe3c9c68a0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2afe3c9eca90"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2afe3ca63400"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2afe3ca869d0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2afe3ca657a0"/></to>
    </wire>
    <wire loc="107:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2afe3ca657a0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2afe3e170b20"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2afe3ca5db20"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2afe3c676080"/></to>
    </wire>
    <wire loc="109:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2afe3e16e210"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2afe3ca63cd0"/></to>
    </wire>
    <wire loc="111:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2afe3e16e9d0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2afe3e173330"/></to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2afe3e16bc50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2afe3bd5d1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2afe3e1d93a0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2afe3ca5db20"/></to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x2afe3e1d9b00"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x2afe3ca86400"/></to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2afe3e1d80f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2afe3ca869d0"/></to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2afe3e1d8d00"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2afe3ca85720"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x2afe3ca95de0"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x2afe3ca96430"/></to>
    </wire>
    <wire loc="44:/home/zdenial/tinyos/tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2afe3ca8b020"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2afe3c2623f0"/></to>
    </wire>
    <wire loc="47:/home/zdenial/tinyos/tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x2afe3ca8b740"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2afe3cac3320"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2afe3cac3320"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2afe3cb463d0"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2afe3cb463d0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2afe3cb362f0"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2afe3cac2370"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2afe3caac300"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2afe3cabf020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2afe3cb0ed60"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2afe3cac0530"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2afe3cb0f0d0"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2afe3cab4080"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2afe3cb0da10"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2afe3cabfc90"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2afe3cb0f6c0"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2afe3cb49d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2afe3cb37c30"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2afe3cb43940"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2afe3cab4a00"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2afe3cb0b4a0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2afe3cb44020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2afe3cb0a120"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2afe3cb453e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x2afe3cb43020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x2afe3cc7e6c0"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2afe3cb44020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2afe3cc66830"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2afe3cb453e0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2afe3cc66110"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x2afe3cc64760"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x2afe3cb43020"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2afe3cb338e0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2afe3cb43940"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2afe3cc62590"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2afe3cb43940"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2afe3cc5ac80"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2afe3cb43940"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2afe3cc630e0"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2afe3cb2c5c0"/></to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x2afe3cc639d0"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x2afe3cb2f130"/></to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x2afe3cb688e0"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x2afe3cc5eb70"/></to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x2afe3cb66060"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2afe3c558a30"/></to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2afe3cc5bca0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2afe3c5711e0"/></to>
    </wire>
    <wire loc="332:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x2afe3cb97e40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2afe3bd5d1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x2afe3cb8cd10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2afe3bd5d1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x2afe3cb99400"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2afe3bd5d1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x2afe3cb920c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2afe3bd5d1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x2afe3cc61c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2afe3bd5d1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x2afe3cc60480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2afe3bd5d1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2afe3ccd2680"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2afe3ccf8340"/></to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2afe3ccb2050"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2afe3ccd17f0"/></to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2afe3ccd17f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2afe3d964da0"/></to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2afe3ccb0df0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2afe3cccf880"/></to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2afe3cccf880"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2afe3d961c00"/></to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2afe3ccaf450"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2afe3cccd760"/></to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2afe3cccd760"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2afe3d95f8f0"/></to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2afe3cca29e0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2afe3d66d550"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2afe3d66d550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2afe3d6cea80"/></to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2afe3ccde8a0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2afe3cd09bb0"/></to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2afe3cd09bb0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2afe3ccf0700"/></to>
    </wire>
    <wire loc="81:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2afe3ccb0210"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2afe3ccd0b20"/></to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2afe3ccd0b20"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2afe3d961020"/></to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2afe3ccad800"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2afe3ccca810"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2afe3ccca810"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2afe3ccf1670"/></to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2afe3ccce020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2afe3d9602d0"/></to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2afe3cca3af0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2afe3d66a660"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2afe3d66a660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2afe3d6caaf0"/></to>
    </wire>
    <wire loc="97:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2afe3ccf8340"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2afe3d952b80"/></to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2afe3cd00d40"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2afe3d95d830"/></to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2afe3ccfe500"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2afe3d95eb50"/></to>
    </wire>
    <wire loc="92:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2afe3ccc3970"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2afe3ccf2740"/></to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2afe3ccf2740"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2afe3d673670"/></to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2afe3ccf0700"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2afe3d952080"/></to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2afe3ccf1670"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2afe3d6706e0"/></to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2afe3cd07790"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2afe3ccef2e0"/></to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2afe3ccef2e0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2afe3d93e020"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2afe3cd08a80"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2afe3ccf0080"/></to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2afe3ccf0080"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2afe3d66fa70"/></to>
    </wire>
    <wire loc="97:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x2afe3d9cf0f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2afe3ccf7430"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2afe3d9d7860"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x2afe3ccf3350"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x2afe3ccf3350"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x2afe3d8caca0"/></to>
    </wire>
    <wire loc="99:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2afe3d9d6690"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x2afe3ccf20f0"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x2afe3ccf20f0"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x2afe3d8c9a50"/></to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2afe3d9d14d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2afe3d46bb30"/></to>
    </wire>
    <wire loc="102:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2afe3d9d6ce0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2afe3d673670"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2afe3d673670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2afe3d6d3d20"/></to>
    </wire>
    <wire loc="103:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2afe3d9d5b70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2afe3d66f0c0"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2afe3d66f0c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2afe3d6cf640"/></to>
    </wire>
    <wire loc="104:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2afe3d9d4610"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2afe3cd8adc0"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2afe3cd8adc0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2afe3cd80970"/></to>
    </wire>
    <wire loc="106:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x2afe3d9d01f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2afe3cce9990"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2afe3cce9990"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2afe3cd2b020"/></to>
    </wire>
    <wire loc="109:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2afe3d9cfd30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2afe3c930970"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2afe3d952b80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x2afe3d94fd90"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2afe3d66fa70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2afe3d6ce020"/></to>
    </wire>
    <wire loc="97:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x2afe3d8caca0"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x2afe3d8bfa20"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2afe3d952080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2afe3d94b2d0"/></to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x2afe3ccf5e70"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2afe3d8ca5f0"/></to>
    </wire>
    <wire loc="92:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2afe3d8ca5f0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x2afe3d8bf370"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2afe3d6706e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2afe3d6d0c50"/></to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2afe3ccf7430"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2afe3d8cccb0"/></to>
    </wire>
    <wire loc="96:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2afe3d8cccb0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2afe3d8c27b0"/></to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x2afe3ccf5160"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2afe3d8cb960"/></to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2afe3d8cb960"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x2afe3d8c14d0"/></to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x2afe3ccf4560"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x2afe3d8c8170"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x2afe3d8c8170"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x2afe3d8bd020"/></to>
    </wire>
    <wire loc="98:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x2afe3d8c9a50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x2afe3d8be840"/></to>
    </wire>
    <wire loc="98:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2afe3d94fd90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2afe3ccee9f0"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2afe3ccee9f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2afe3cd2d690"/></to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2afe3d8c76b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2afe3d8a4220"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2afe3d8a4220"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2afe3d8a2a20"/></to>
    </wire>
    <wire loc="102:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2afe3d8a3020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2afe3d93f2a0"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2afe3d93f2a0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2afe3d93c3b0"/></to>
    </wire>
    <wire loc="103:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2afe3d93ed70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2afe3d956cf0"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2afe3d956cf0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2afe3d950860"/></to>
    </wire>
    <wire loc="104:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2afe3d950860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2afe3ccea600"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2afe3ccea600"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2afe3cd2c2e0"/></to>
    </wire>
    <wire loc="107:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2afe3d8c7020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2afe3d953980"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2afe3d953980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2afe3d94f690"/></to>
    </wire>
    <wire loc="108:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2afe3d94f690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2afe3d887aa0"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2afe3d887aa0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2afe3d883e30"/></to>
    </wire>
    <wire loc="109:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2afe3d884950"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2afe3cce9300"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2afe3cce9300"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2afe3d61b7c0"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2afe3d61b7c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2afe3d615020"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2afe3cd2be60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2afe3cd9a950"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2afe3cd9a950"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2afe3cd81b80"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x2afe3cd223f0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x2afe3cd95bf0"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x2afe3cd95bf0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x2afe3cd7e740"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2afe3cd296f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2afe3d4f86d0"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2afe3cd296f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2afe3d61e5c0"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2afe3d61e5c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2afe3d617ca0"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2afe3d4f86d0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2afe3d557020"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x2afe3cd192a0"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x2afe3d4f5020"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x2afe3d4f5020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2afe3d5578c0"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x2afe3cd21060"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2afe3d4f5cb0"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2afe3d4f5cb0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2afe3d556650"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2afe3cd17330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2afe3d673670"/></to>
    </wire>
    <wire loc="73:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2afe3cd0f920"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2afe3d66f0c0"/></to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2afe3cd16420"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2afe3d848a20"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2afe3d848a20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2afe3d841a20"/></to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x2afe3cd0e110"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2afe3d84aaa0"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2afe3d84aaa0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2afe3d174280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2afe3cd16bf0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2afe3c930970"/></to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x2afe3cd4eb70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2afe3bd5d1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x2afe3cd4fba0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2afe3bd5d1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x2afe3cd50c20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2afe3bd5d1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x2afe3cd870c0"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x2afe3cd7db40"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x2afe3cdbdd90"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x2afe3ce48220"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x2afe3ce48220"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x2afe3ce422e0"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2afe3cdb9060"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2afe3cf3f370"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2afe3cf3f370"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2afe3cf321b0"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2afe3cdb8380"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x2afe3cf3cce0"/></to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2afe3cf3cce0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2afe3cf75710"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x2afe3cdb76a0"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x2afe3cf39380"/></to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x2afe3cf39380"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2afe3cf6cd70"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x2afe3cdb50e0"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x2afe3cf56210"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x2afe3cf56210"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x2afe3d08aa30"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2afe3cd9f1d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2afe3d3c4e20"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2afe3d3c4e20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2afe3d0ec960"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2afe3cd9e2e0"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x2afe3d3c07b0"/></to>
    </wire>
    <wire loc="132:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2afe3d3c07b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2afe3cd9e9f0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x2afe3d3bfae0"/></to>
    </wire>
    <wire loc="135:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2afe3d3bfae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2afe3cda0a80"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x2afe3d3c2ad0"/></to>
    </wire>
    <wire loc="130:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2afe3d3c2ad0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2afe3cda0160"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x2afe3d3be160"/></to>
    </wire>
    <wire loc="136:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2afe3d3be160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2afe3cda5b00"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x2afe3d41c870"/></to>
    </wire>
    <wire loc="154:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2afe3d41c870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2afe3cdac3d0"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x2afe3d419880"/></to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2afe3d419880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2afe3cdacc80"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x2afe3d4180a0"/></to>
    </wire>
    <wire loc="159:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2afe3d4180a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2afe3cda75f0"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x2afe3d420e50"/></to>
    </wire>
    <wire loc="147:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2afe3d420e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2afe3cda4020"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x2afe3d41f670"/></to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2afe3d41f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2afe3cdb1520"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x2afe3d40b500"/></to>
    </wire>
    <wire loc="184:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2afe3d40b500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afe3d0e68c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2afe3cda8a90"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x2afe3d40cce0"/></to>
    </wire>
    <wire loc="183:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2afe3d40cce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afe3d0e68c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2afe3cda48e0"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x2afe3d41de50"/></to>
    </wire>
    <wire loc="153:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2afe3d41de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2afe3cda21c0"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x2afe3d41fe50"/></to>
    </wire>
    <wire loc="149:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2afe3d41fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2afe3cda2a70"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x2afe3d41ee50"/></to>
    </wire>
    <wire loc="151:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2afe3d41ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x2afe3cde9d90"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2afe3d3f9a80"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2afe3d3f9a80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2afe3d0ec960"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x2afe3cde9020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2afe3d4329e0"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2afe3d4329e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2afe3d0ec960"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2afe3cdad810"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2afe3d46bb30"/></to>
    </wire>
    <wire loc="100:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2afe3cd7a020"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2afe3d46ad30"/></to>
    </wire>
    <wire loc="23:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2afe3d46ad30"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2afe3d4b6310"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x2afe3cdde820"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2afe3bd5d1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x2afe3cddf940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2afe3bd5d1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2afe3ce4c7e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2afe3ce43a20"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2afe3ce43a20"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2afe3e27ca10"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x2afe3ce422e0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2afe3e27b2a0"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2afe3e27ca10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2afe3e274a10"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2afe3e27b2a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2afe3e26d5f0"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2afe3e274a10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2afe3e258510"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2afe3e267d20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2afe3e2732a0"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2afe3e2732a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2afe3e258da0"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2afe3e26a9b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2afe3cebd020"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2afe3cebd020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2afe3ceb75f0"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2afe3e253020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2afe3e25d1b0"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2afe3e25d1b0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2afe3ce714d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2afe3e252760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2afe3e25c8f0"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2afe3e25c8f0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2afe3ce6f280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2afe3e251a80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2afe3e25bc10"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2afe3e25bc10"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2afe3ce6eba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2afe3ce714d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2afe3c36f6c0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2afe3ce6f280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x2afe3c36d020"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2afe3ce6eba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x2afe3c385570"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2afe3ce714d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2afe3c36f6c0"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2afe3ce6f280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x2afe3c36bbe0"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2afe3ce6eba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x2afe3c3831f0"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2afe3ce714d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2afe3c36f6c0"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2afe3ce6f280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x2afe3c3690c0"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2afe3ce6eba0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x2afe3c382020"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2afe3ce714d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2afe3c36f6c0"/></to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2afe3ce6f280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x2afe3c3685a0"/></to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2afe3ce6eba0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x2afe3c382da0"/></to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2afe3ce714d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2afe3c36f6c0"/></to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2afe3ce6f280"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x2afe3c366a50"/></to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2afe3ce6eba0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x2afe3c381b80"/></to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2afe3ce714d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2afe3c36f6c0"/></to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2afe3ce6f280"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x2afe3c364020"/></to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2afe3ce6eba0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x2afe3c380a20"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2afe3ceeb950"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2afe3c92b9d0"/></to>
    </wire>
    <wire loc="73:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x2afe3cf3e6a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2afe3cf2ed70"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x2afe3cf3d9d0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2afe3cf28b70"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x2afe3cf400e0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2afe3cf37710"/></to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x2afe3cf3a020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2afe3cf701b0"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2afe3cf36930"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x2afe3c726cc0"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2afe3cf31480"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x2afe3c75c020"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2afe3cf2c020"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x2afe3c728cc0"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2afe3cf27de0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x2afe3c730e10"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2afe3cf74930"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x2afe3c753020"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2afe3cf6f480"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x2afe3c75e020"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2afe3cf6a020"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x2afe3c755020"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x2afe3cf515a0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2afe3cf91020"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x2afe3cf56e30"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x2afe3d07aa70"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2afe3cf91ae0"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x2afe3c36c5a0"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x2afe3cf8fda0"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x2afe3c37ea20"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x2afe3cf8ec20"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x2afe3c75e020"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x2afe3d089610"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x2afe3cf7fc40"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x2afe3cf7fc40"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x2afe3cfbea30"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x2afe3d079610"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x2afe3cf82e70"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x2afe3cf82e70"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x2afe3cfc59d0"/></to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x2afe3cfc8bc0"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x2afe3cfb4bc0"/></to>
    </wire>
    <wire loc="73:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x2afe3cf7cbc0"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x2afe3cfbba30"/></to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x2afe3cf7abc0"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x2afe3cfb9a30"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x2afe3cf85d20"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x2afe3cfc1a30"/></to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x2afe3cfcabc0"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x2afe3cfb6a30"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x2afe3cf7ebc0"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x2afe3cfbda30"/></to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x2afe3cfc7bc0"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x2afe3cfb3bc0"/></to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x2afe3cf79bc0"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x2afe3cfb8a30"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x2afe3cf80c80"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x2afe3cfc0a30"/></to>
    </wire>
    <wire loc="81:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x2afe3cfc9c40"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x2afe3cfb5bc0"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x2afe3cf7dbc0"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x2afe3cfbca30"/></to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x2afe3cf7bbc0"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x2afe3cfbaa30"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x2afe3cf86dc0"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x2afe3cfc2a30"/></to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x2afe3cfcbbc0"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x2afe3cfb7a30"/></to>
    </wire>
    <wire loc="131:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2afe3d3c0160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2afe3d41a880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2afe3d4120a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2afe3d4190a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2afe3d407500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afe3d0e68c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2afe3d409500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afe3d0e68c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2afe3d3bf490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2afe3d40f880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2afe3d40a500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afe3d0e68c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2afe3d415880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2afe3d4160a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2afe3d3c3a90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2afe3d0e9680"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2afe3d0e9680"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2afe3d0e3930"/></to>
    </wire>
    <wire loc="138:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2afe3d3bee00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2afe3d3bd490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2afe3d40ec80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2afe3d3bdbe0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2afe3d40ace0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afe3d0e68c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2afe3d40f0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2afe3d41e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2afe3d4100a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2afe3d412880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2afe3d410880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2afe3d408ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afe3d0e68c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2afe3d409ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afe3d0e68c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2afe3d416880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2afe3d4110a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2afe3d40bce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afe3d0e68c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2afe3d418880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2afe3d407ce0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2afe3d0e7630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2afe3d3c2480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2afe3d420670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2afe3d41d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2afe3d4130a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2afe3d413880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2afe3d41a0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2afe3d3bc2f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2afe3d420020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2afe3d3be7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2afe3d40c500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2afe3d408500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afe3d0e68c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2afe3d4150a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2afe3d411880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2afe3d3c0e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2afe3d4170a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2afe3d3bc940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2afe3d417880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2afe3d40e0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2afe3d4059b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2afe3d0e7630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x2afe3d0e7630"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2afe3d0dfbb0"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x2afe3d0e68c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afe3d0dc020"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0dcdb0"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2afe3d0ec960"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2afe3d0e0810"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0dbba0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x2afe3d0d6020"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2afe3d178770"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2afe3d178770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2afe3d174280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2afe3d0da400"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2afe3d157c40"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2afe3d157c40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2afe3e35ce70"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2afe3d0d7080"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2afe3d1568f0"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2afe3d1568f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2afe3e3592c0"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2afe3d0ce680"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2afe3d3ea020"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2afe3d3ea020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2afe3e358440"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2afe3d0d6df0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2afe3c930970"/></to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x2afe3d121120"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2afe3bd5d1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2afe3d174280"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2afe3d170b70"/></to>
    </wire>
    <wire loc="110:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2afe3e358440"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2afe3d19b850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2afe3e3592c0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2afe3d19c020"/></to>
    </wire>
    <wire loc="105:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2afe3e35ce70"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2afe3d19f430"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2afe3e35aaf0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2afe3e3505d0"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2afe3e3505d0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2afe3d2d62c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2afe3d19c020"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2afe3d1f7a10"/></to>
    </wire>
    <wire loc="108:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2afe3e3598d0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2afe3d19c6a0"/></to>
    </wire>
    <wire loc="92:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2afe3d19c6a0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2afe3d1f6060"/></to>
    </wire>
    <wire loc="111:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2afe3d199a40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2afe3e358be0"/></to>
    </wire>
    <wire loc="115:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2afe3e342a80"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2afe3d19e6b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x2afe3d19a690"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x2afe3e351860"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2afe3e351860"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2afe3d2d7020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x2afe3d1982a0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2afe3e349020"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2afe3e349020"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2afe3d2da4d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2afe3d19e6b0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2afe3d1f7250"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2afe3d19b850"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2afe3d1f6c50"/></to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2afe3d19f430"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2afe3d1f8470"/></to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2afe3d1f33e0"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2afe3d199a40"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x2afe3d1f45b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x2afe3d19a690"/></to>
    </wire>
    <wire loc="95:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x2afe3d1ee480"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x2afe3d1982a0"/></to>
    </wire>
    <wire loc="98:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x2afe3d1f3a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x2afe3d1e4020"/></to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x2afe3d1e4020"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x2afe3d1dec70"/></to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2afe3d1eec20"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2afe3c930970"/></to>
    </wire>
    <wire loc="102:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x2afe3d1ec2f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2afe3bd5d1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2afe3d1df5e0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x2afe3d232150"/></to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2afe3d1e0d10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2afe3d233780"/></to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x2afe3d261bb0"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x2afe3c7913f0"/></to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x2afe3d25fb20"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x2afe3c78d3f0"/></to>
    </wire>
    <wire loc="92:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x2afe3d25db20"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x2afe3c78a3f0"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x2afe3d25bb20"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x2afe3c7843f0"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x2afe3d259b20"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x2afe3c7863f0"/></to>
    </wire>
    <wire loc="14:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x2afe3d20ad10"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x2afe3d317430"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2afe3e3497c0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x2afe3d2d83f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x2afe3e349dd0"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x2afe3d323540"/></to>
    </wire>
    <wire loc="11:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x2afe3d323540"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x2afe3d317430"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x2afe3e34e5a0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x2afe3d1e4020"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2afe3e350d70"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2afe3d2d6ad0"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2afe3d2d6ad0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2afe3d2ccc30"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2afe3d2d58a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2afe3e342a80"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2afe3d2d62c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2afe3d2cd850"/></to>
    </wire>
    <wire loc="106:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2afe3d2cd850"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2afe3e37f020"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x2afe3d2da4d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2afe3d2d3060"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2afe3d2d7020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2afe3d2cea80"/></to>
    </wire>
    <wire loc="105:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2afe3d2cea80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2afe3e380270"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x2afe3d2d83f0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x2afe3d2d3990"/></to>
    </wire>
    <wire loc="108:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2afe3d2ccc30"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2afe3e37e400"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2afe3d2cb570"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2afe3d2d58a0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2afe3d2d1e50"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2afe3d2ccc30"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x2afe3d2d1060"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2afe3d1e0d10"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x2afe3d2d1840"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2afe3d1df5e0"/></to>
    </wire>
    <wire loc="107:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2afe3d2cc020"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2afe3e37f7a0"/></to>
    </wire>
    <wire loc="109:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2afe3e37ecf0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2afe3d2cb570"/></to>
    </wire>
    <wire loc="111:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2afe3e37d500"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2afe3e3820a0"/></to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2afe3e37b7a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2afe3bd5d1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x2afe3d310250"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x2afe3d1dec70"/></to>
    </wire>
    <wire loc="18:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x2afe3d30cd40"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x2afe3c7913f0"/></to>
    </wire>
    <wire loc="19:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x2afe3d30acb0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x2afe3c78a3f0"/></to>
    </wire>
    <wire loc="153:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2afe3d451c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2afe3d3f7da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2afe3d3f0b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2afe3d44f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2afe3d448e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2afe3d44fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2afe3d43b2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afe3d0e68c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2afe3d43d2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afe3d0e68c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2afe3d3f5120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2afe3d443670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2afe3d43f2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afe3d0e68c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2afe3d454c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2afe3d452c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2afe3d449670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2afe3d44be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2afe3d44e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2afe3d3f8760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2afe3d0e9680"/></to>
    </wire>
    <wire loc="138:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2afe3d3f3aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2afe3d3f2120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2afe3d442a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2afe3d3f2870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2afe3d43fad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afe3d0e68c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2afe3d3f5dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2afe3d444e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2afe3d452480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2afe3d454480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2afe3d3f7750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2afe3d445e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2afe3d447670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2afe3d444670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2afe3d43cad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afe3d0e68c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2afe3d43dad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afe3d0e68c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2afe3d44a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2afe3d447e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2afe3d440ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afe3d0e68c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2afe3d44d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2afe3d43bad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2afe3d0e7630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2afe3d3f7100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2afe3d3f0370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2afe3d451480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2afe3d449e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2afe3d44ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2afe3d448670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2afe3d450670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2afe3d3f6450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2afe3d450e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2afe3d3f1020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2afe3d3f1cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2afe3d4402f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afe3d0e68c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2afe3d441ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afe3d0e68c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2afe3d3f3450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2afe3d4412f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2afe3d43c2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afe3d0e68c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2afe3d44ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2afe3d445670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2afe3d3f6aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2afe3d3f5770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2afe3d44de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2afe3d3f1670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2afe3d44b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2afe3d443e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2afe3d43a7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2afe3d0e7630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2afe3d425c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2afe3d430da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2afe3d428b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2afe3d422670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2afe3d481e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2afe3d422e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2afe3d4742f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afe3d0e68c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2afe3d4772f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afe3d0e68c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2afe3d42d120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2afe3d47d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2afe3d4782f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afe3d0e68c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2afe3d427c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2afe3d426c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2afe3d482670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2afe3d485e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2afe3d487670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2afe3d431760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2afe3d0e9680"/></to>
    </wire>
    <wire loc="138:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2afe3d42caa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2afe3d42b120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2afe3d47ca70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2afe3d42b870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2afe3d478ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afe3d0e68c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2afe3d42ddc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2afe3d47ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2afe3d426480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2afe3d427480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2afe3d430750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2afe3d47fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2afe3d480670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2afe3d47e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2afe3d476ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afe3d0e68c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2afe3d477ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afe3d0e68c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2afe3d484670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2afe3d480e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2afe3d479ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afe3d0e68c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2afe3d486670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2afe3d474ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2afe3d0e7630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2afe3d430100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2afe3d428370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2afe3d425480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2afe3d482e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2afe3d487e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2afe3d481670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2afe3d424670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2afe3d42e450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2afe3d424e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2afe3d429020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2afe3d429cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2afe3d4792f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afe3d0e68c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2afe3d47aad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afe3d0e68c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2afe3d42c450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2afe3d47a2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2afe3d4762f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afe3d0e68c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2afe3d484e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2afe3d47f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2afe3d42eaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2afe3d42d770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2afe3d486e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2afe3d429670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2afe3d485670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2afe3d47de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2afe3d4737a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2afe3d0e7630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x2afe3d4b28c0"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x2afe3d4a7020"/></to>
    </wire>
    <wire loc="20:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x2afe3d4a7020"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x2afe3d4a1210"/></to>
    </wire>
    <wire loc="16:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x2afe3d49dcb0"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x2afe3d48d020"/></to>
    </wire>
    <wire loc="21:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x2afe3d48d020"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x2afe3d48b490"/></to>
    </wire>
    <wire loc="17:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0x2afe3d4a05b0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2afe3d50ea20"/></to>
    </wire>
    <wire loc="18:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x2afe3d48d8c0"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0x2afe3d48e5a0"/></to>
    </wire>
    <wire loc="11:/home/zdenial/tinyos/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0x2afe3d48e5a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2afe3d50c9e0"/></to>
    </wire>
    <wire loc="18:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x2afe3d4eab40"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x2afe3d4ca020"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x2afe3d4ca020"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x2afe3d4c8d20"/></to>
    </wire>
    <wire loc="19:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x2afe3d48bd30"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2afe3d48d8c0"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2afe3d520260"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x2afe3d51c890"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x2afe3d51c890"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2afe3d515060"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2afe3d513190"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x2afe3c34c120"/></to>
    </wire>
    <wire loc="9:/home/zdenial/tinyos/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2afe3d50bc50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x2afe3c747cc0"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x2afe3d4f19f0"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x2afe3d5555e0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x2afe3d4f3190"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x2afe3d555d70"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x2afe3d5547f0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x2afe3ce48220"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x2afe3d548500"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x2afe3cf400e0"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2afe3d541820"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2afe3cf3f370"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x2afe3d540b40"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x2afe3cf3a020"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x2afe3d549880"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x2afe3cf515a0"/></to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2afe3d53e020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2afe3d5e3c30"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2afe3d5e3c30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2afe3d0ec960"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2afe3d53ed10"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2afe3d5e28f0"/></to>
    </wire>
    <wire loc="125:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2afe3d5e28f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2afe3d0e9680"/></to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2afe3d53b6d0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x2afe3d5e12f0"/></to>
    </wire>
    <wire loc="129:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2afe3d5e12f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2afe3d53bde0"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x2afe3d5dfcc0"/></to>
    </wire>
    <wire loc="133:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2afe3d5dfcc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2afe3d53a530"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x2afe3d5de370"/></to>
    </wire>
    <wire loc="134:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2afe3d5de370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2afe3d53ac60"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x2afe3d5ddd00"/></to>
    </wire>
    <wire loc="138:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2afe3d5ddd00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2afe3d53ce00"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x2afe3d5d7c60"/></to>
    </wire>
    <wire loc="151:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2afe3d5d7c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2afe3d53d780"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x2afe3d62a7a0"/></to>
    </wire>
    <wire loc="196:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2afe3d62a7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2afe3d0e7630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2afe3d53c550"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2afe3d62f2f0"/></to>
    </wire>
    <wire loc="186:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2afe3d62f2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afe3d0e68c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2afe3d5393e0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x2afe3d5d8480"/></to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2afe3d5d8480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2afe3d5385e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x2afe3d5d5e50"/></to>
    </wire>
    <wire loc="155:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2afe3d5d5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2afe3d537020"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x2afe3d5d3670"/></to>
    </wire>
    <wire loc="156:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2afe3d5d3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2afe3d539e80"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x2afe3d5db7b0"/></to>
    </wire>
    <wire loc="142:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2afe3d5db7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2afe3d5359c0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x2afe3d62dad0"/></to>
    </wire>
    <wire loc="191:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2afe3d62dad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afe3d0e68c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2afe3d537890"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x2afe3d62e2f0"/></to>
    </wire>
    <wire loc="188:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2afe3d62e2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afe3d0e68c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2afe3d535130"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x2afe3d62ead0"/></to>
    </wire>
    <wire loc="189:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2afe3d62ead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afe3d0e68c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x2afe3d52fd40"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x2afe3d61edf0"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x2afe3d61edf0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x2afe3d616550"/></to>
    </wire>
    <wire loc="98:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2afe3d550a00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2afe3d673670"/></to>
    </wire>
    <wire loc="99:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2afe3d54f9a0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2afe3d66f0c0"/></to>
    </wire>
    <wire loc="100:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2afe3d54e7c0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2afe3d66d550"/></to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2afe3d543b30"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2afe3d6d5480"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2afe3d6d5480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2afe3d6c68b0"/></to>
    </wire>
    <wire loc="104:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2afe3d5336c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2afe3c930970"/></to>
    </wire>
    <wire loc="153:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2afe3d5d6c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2afe3d5df020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2afe3d5d9c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2afe3d5cce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2afe3d5d3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2afe3d62c2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afe3d0e68c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2afe3d5c8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2afe3d5d8c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2afe3d5ce670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2afe3d5d0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2afe3d5d2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2afe3d5dc370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2afe3d5c7a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2afe3d5dcac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2afe3d62fad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afe3d0e68c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2afe3d5dd060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2afe3d5c9e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2afe3d5d7480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2afe3d5e1940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2afe3d5cae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2afe3d5cb670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2afe3d5c9670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2afe3d5cf670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2afe3d5cbe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2afe3d630ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afe3d0e68c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2afe3d5d1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2afe3d62cad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2afe3d0e7630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2afe3d5d9490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2afe3d5d6480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2afe3d5cee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2afe3d5d2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2afe3d5cc670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2afe3d5d5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2afe3d5df670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2afe3d5db160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2afe3d5dbe00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2afe3d6302f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afe3d0e68c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2afe3d631ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afe3d0e68c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2afe3d5dd6b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2afe3d6312f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2afe3d62d2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afe3d0e68c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2afe3d5cfe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2afe3d5ca670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2afe3d5de9c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2afe3d5d1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2afe3d5d0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2afe3d5c8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x2afe3d61a020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x2afe3d6157c0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2afe3d600150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2afe3c930970"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2afe3d614020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2afe3cf3f370"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x2afe3d613380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x2afe3cf3e6a0"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x2afe3d6126b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x2afe3cf3d9d0"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x2afe3d611a50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x2afe3cf56e30"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2afe3d6106e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2afe3d821d00"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2afe3d821d00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2afe3d0ec960"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2afe3d60f530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x2afe3d7fdad0"/></to>
    </wire>
    <wire loc="195:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2afe3d7fdad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2afe3d0e7630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2afe3d60ead0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x2afe3d81b6b0"/></to>
    </wire>
    <wire loc="137:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2afe3d81b6b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2afe3d60e3a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x2afe3d819370"/></to>
    </wire>
    <wire loc="139:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2afe3d819370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2afe3d60c330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2afe3d673670"/></to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2afe3d60b1e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2afe3d66f0c0"/></to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2afe3d609d70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2afe3d66d550"/></to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2afe3d60bb90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2afe3cd8adc0"/></to>
    </wire>
    <wire loc="81:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2afe3d6043e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x2afe3d812e50"/></to>
    </wire>
    <wire loc="155:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2afe3d812e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2afe3d604cb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x2afe3d811670"/></to>
    </wire>
    <wire loc="156:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2afe3d811670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2afe3d606b10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x2afe3d818160"/></to>
    </wire>
    <wire loc="141:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2afe3d818160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2afe3d6026d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x2afe3d7fd2f0"/></to>
    </wire>
    <wire loc="192:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2afe3d7fd2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afe3d0e68c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2afe3d603590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x2afe3d8002f0"/></to>
    </wire>
    <wire loc="188:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2afe3d8002f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afe3d0e68c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2afe3d603e00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x2afe3d800ad0"/></to>
    </wire>
    <wire loc="189:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2afe3d800ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afe3d0e68c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2afe3d601020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2afe3d801ad0"/></to>
    </wire>
    <wire loc="187:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2afe3d801ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afe3d0e68c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2afe3d6018b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x2afe3d81e300"/></to>
    </wire>
    <wire loc="129:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2afe3d81e300"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x2afe3d6619d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2afe3bd5d1d0"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2afe3d7477c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2afe3cebd020"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x2afe3d6c1820"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2afe3d6e04e0"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x2afe3d6c3b80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2afe3d732b80"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2afe3d732b80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2afe3d7cf2b0"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2afe3d73f7d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2afe3d7dd150"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2afe3d741130"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2afe3d7742a0"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2afe3d7742a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2afe3e53b9d0"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2afe3d7d8640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2afe3d748830"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2afe3d7b5cd0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2afe3d774af0"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2afe3d774af0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2afe3e5345f0"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2afe3d7ce690"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2afe3d71f080"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2afe3d71f080"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2afe3d71acd0"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2afe3e53b9d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2afe3e51e360"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2afe3e52ed20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2afe3e53a260"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2afe3e53a260"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2afe3e51ebf0"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2afe3e5309b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2afe3d71f080"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2afe3e51bdd0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2afe3e523020"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2afe3e523020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2afe3ce714d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2afe3e518440"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2afe3e522760"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2afe3e522760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2afe3ce6f280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2afe3e517760"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2afe3e521a80"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2afe3e521a80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2afe3ce6eba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2afe3d7160f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2afe3c92b9d0"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x2afe3d7b0020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2afe3bd5d1d0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2afe3d7d2a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2afe3bd5d1d0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2afe3d7c58c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2afe3d7bc2c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2afe3d7bc2c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2afe3d73f7d0"/></to>
    </wire>
    <wire loc="153:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2afe3d814c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2afe3d81d020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2afe3d817c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2afe3d80ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2afe3d811e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2afe3d81c370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2afe3d805670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2afe3d8012f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afe3d0e68c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2afe3d816c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2afe3d815c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2afe3d80b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2afe3d80ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2afe3d810670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2afe3d81f970"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2afe3d0e9680"/></to>
    </wire>
    <wire loc="138:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2afe3d81bd00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2afe3d804a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2afe3d819ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2afe3d81b060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2afe3d807e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2afe3d815480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2afe3d816480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2afe3d81e950"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2afe3d808e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2afe3d809670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2afe3d807670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2afe3d7fead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afe3d0e68c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2afe3d80c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2afe3d809e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2afe3d802ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afe3d0e68c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2afe3d80f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2afe3d817490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2afe3d814480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2afe3d80be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2afe3d810e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2afe3d80a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2afe3d812670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2afe3d81d670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2afe3d818e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2afe3d8022f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afe3d0e68c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2afe3d803ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afe3d0e68c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2afe3d8032f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2afe3d7fe2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afe3d0e68c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2afe3d80ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2afe3d808670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2afe3d81dcc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2afe3d81c9c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2afe3d80fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2afe3d8187b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2afe3d80e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2afe3d805e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2afe3d7fc7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2afe3d0e7630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x2afe3d845920"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x2afe3d842940"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2afe3d84c9a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2afe3d842080"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2afe3d89ee60"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2afe3d8a3020"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2afe3d89dae0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2afe3d89f690"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2afe3d89f690"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2afe3d174280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2afe3d89c8f0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2afe3d848a20"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2afe3d89b170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2afe3d66f0c0"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x2afe3d884200"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x2afe3d880570"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2afe3d87e3f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2afe3d884950"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2afe3d87ea70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2afe3d66f0c0"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2afe3d8bdd70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2afe3d8c76b0"/></to>
    </wire>
    <wire loc="95:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2afe3d8bcb10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2afe3d8c7020"/></to>
    </wire>
    <wire loc="100:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2afe3d8bb2f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2afe3d673670"/></to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2afe3d8ba170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2afe3d66f0c0"/></to>
    </wire>
    <wire loc="102:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2afe3d8bab70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2afe3d8e5410"/></to>
    </wire>
    <wire loc="184:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x2afe3d906db0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2afe3bd5d1d0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x2afe3d951800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2afe3d94d580"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2afe3d94d580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2afe3d174280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2afe3d939dd0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2afe3d93ed70"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x2afe3d937af0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2afe3d97c350"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2afe3d97c350"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2afe3d174280"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="DelayTimer" scoped="" ref="0x2afe3d935650"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2afe3d97a750"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2afe3d97a750"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2afe3d7bc2c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2afe3d9369a0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2afe3d6706e0"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2afe3d930a30"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2afe3d66f0c0"/></to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <from><interface-ref name="send" scoped="" ref="0x2afe3d92d2a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2afe3bd5d1d0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2afe3da3e580"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2afe3ccd2680"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x2afe3da29060"/></from>
      <to><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x2afe3da16910"/></to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2afe3da397e0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2afe3da1b340"/></to>
    </wire>
    <wire loc="98:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2afe3da391d0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2afe3da922c0"/></to>
    </wire>
    <wire loc="95:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2afe3da36640"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2afe3cd09bb0"/></to>
    </wire>
    <wire loc="73:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x2afe3da2ee50"/></from>
      <to><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x2afe3da1f4d0"/></to>
    </wire>
    <wire loc="97:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2afe3da3b5c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2afe3da936b0"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2afe3da37b20"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2afe3ccca810"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x2afe3da35aa0"/></from>
      <to><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x2afe3da24c10"/></to>
    </wire>
    <wire loc="99:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2afe3da38470"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2afe3da19020"/></to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2afe3da92a00"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2afe3db96020"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2afe3db96020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2afe3e59dcb0"/></to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubAMPacket" scoped="" ref="0x2afe3da906a0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2afe3db958b0"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2afe3db958b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2afe3e59b590"/></to>
    </wire>
    <wire loc="81:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2afe3da91800"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2afe3db96c30"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2afe3db96c30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2afe3e59c930"/></to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2afe3da8c130"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2afe3d66d550"/></to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2afe3da88270"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2afe3d66a660"/></to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2afe3da85020"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2afe3d6d5480"/></to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2afe3db8db30"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2afe3cebd020"/></to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x2afe3da85d30"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2afe3db8e830"/></to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x2afe3da82060"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2afe3db89e60"/></to>
    </wire>
    <wire loc="26:/home/zdenial/tinyos/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2afe3db89e60"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2afe3d732b80"/></to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2afe3da810f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2afe3c930970"/></to>
    </wire>
    <wire loc="100:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2afe3da8fe60"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2afe3ccb0210"/>
      <arguments>
        <value cst="I:61">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubSnoop" scoped="" ref="0x2afe3da8e550"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2afe3ccb0df0"/>
      <arguments>
        <value cst="I:61">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2afe3e59dcb0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2afe3e646660"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2afe3e59c930"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2afe3ccaf450"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2afe3e59b590"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2afe3ccae120"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2afe3db92020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2afe3e59ac10"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2afe3e59ac10"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2afe3ccad800"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2afe3e644460"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2afe3daf6940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2afe3e6430e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2afe3ccae120"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2afe3daf6940"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2afe3db294b0"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2afe3db28400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2afe3ccb2050"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2afe3db27060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2afe3ccae120"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2afe3db26720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2afe3ccaf450"/></to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x2afe3db25480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2afe3bd5d1d0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x2afe3db25c60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2afe3bd5d1d0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2afe3e5f9cb0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2afe3e699e30"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2afe3db76930"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2afe3e5f8930"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2afe3e5f8930"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2afe3ccaf450"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2afe3db75590"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2afe3e5f7590"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2afe3e5f7590"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2afe3ccae120"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2afe3db74c10"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2afe3e5f6c10"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2afe3e5f6c10"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2afe3ccad800"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2afe3e697ad0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2afe3daf6940"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2afe3e696720"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2afe3ccae120"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2afe3db6add0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2afe3ccaf450"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2afe3db69a10"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2afe3ccae120"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2afe3e67a140"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2afe3e66d390"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2afe3db64270"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2afe3e67ad50"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2afe3e67ad50"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2afe3ccaf450"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2afe3db64e80"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2afe3e679990"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2afe3e679990"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2afe3ccae120"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2afe3db625d0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2afe3e677120"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2afe3e677120"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2afe3ccad800"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2afe3e66c060"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2afe3daf6940"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2afe3e66cc70"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2afe3ccae120"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2afe3db5f710"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2afe3ccaf450"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2afe3db5d400"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2afe3ccae120"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2afe3e64f4c0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2afe3e6f1640"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2afe3db59aa0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2afe3e64e0f0"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2afe3e64e0f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2afe3ccaf450"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2afe3db58720"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2afe3e64ed00"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2afe3e64ed00"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2afe3ccae120"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2afe3db57da0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2afe3e64c440"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2afe3e64c440"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2afe3ccad800"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2afe3e6f02e0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2afe3daf6940"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2afe3e6ef020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2afe3ccae120"/></to>
    </wire>
    <wire loc="12:SlotSchedulerC.nc">
      <from><interface-ref name="EpochTimer" scoped="" ref="0x2afe3dbd19e0"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2afe3dbaa680"/></to>
    </wire>
    <wire loc="9:Timer32C.nc">
      <from><interface-ref name="Timer32khz" scoped="" ref="0x2afe3dbaa680"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2afe3dba1020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="13:SlotSchedulerC.nc">
      <from><interface-ref name="StartSlotTimer" scoped="" ref="0x2afe3dbcb020"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2afe3dbf40f0"/></to>
    </wire>
    <wire loc="9:Timer32C.nc">
      <from><interface-ref name="Timer32khz" scoped="" ref="0x2afe3dbf40f0"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2afe3dba1020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="14:SlotSchedulerC.nc">
      <from><interface-ref name="EndSlotTimer" scoped="" ref="0x2afe3dbc6670"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2afe3dbeeb40"/></to>
    </wire>
    <wire loc="9:Timer32C.nc">
      <from><interface-ref name="Timer32khz" scoped="" ref="0x2afe3dbeeb40"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2afe3dba1020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:Timer32P.nc">
      <from><interface-ref name="Timer32khz" scoped="" ref="0x2afe3dba1020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2afe3dc0cd70"/></to>
    </wire>
    <wire loc="12:Timer32P.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2afe3dc053b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2afe3dc18470"/></to>
    </wire>
    <wire loc="13:Timer32P.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2afe3dc13b10"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2afe3db9aa00"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2afe3db9aa00"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2afe3e6ce890"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2afe3db9a1b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2afe3e6d5c40"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2afe3e6d5c40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2afe3e6b8660"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2afe3e6c70a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2afe3e6d34f0"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2afe3e6d34f0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2afe3e6b7020"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2afe3e6cac00"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2afe3cebd020"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2afe3e6b3190"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2afe3e6bd450"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2afe3e6bd450"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2afe3ce714d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2afe3e6b2770"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2afe3e6bca80"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2afe3e6bca80"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2afe3ce6f280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2afe3e6b1a80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2afe3e6bbda0"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2afe3e6bbda0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2afe3ce6eba0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x2afe3dc0fcc0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2afe3bd5d1d0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2afe3dc00650"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2afe3bd5d1d0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2afe3dbe4c20"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2afe3ccaf450"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2afe3dbe38b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2afe3ccae120"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="TestP" loc="3:TestP.nc">
      <module/>
    </component>
    <component qname="MainC" loc="56:/home/zdenial/tinyos/tos/system/MainC.nc">
      <documentation loc="45:/home/zdenial/tinyos/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:/home/zdenial/tinyos/tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:/home/zdenial/tinyos/tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:/home/zdenial/tinyos/tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:/home/zdenial/tinyos/tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/zdenial/tinyos/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/zdenial/tinyos/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/zdenial/tinyos/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="TDMALinkC" loc="1:TDMALinkC.nc">
      <configuration/>
    </component>
    <component qname="TDMALinkP" loc="9:TDMALinkP.nc">
      <module/>
    </component>
    <component qname="SerialPrintfC" loc="36:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Kevin Klues&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialPrintfP" loc="36:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
        <short> &#10; </short>
        <long> &#10; @author David Moss&#10; @author Kevin Klues&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="2:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <instance number="0">
        <component-ref qname="Msp430Uart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P.UartP" loc="41(Msp430Uart1P.UartP):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="73:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <documentation loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
        <short>&#10; Implementation of USART1 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART1 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/zdenial/tinyos/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/zdenial/tinyos/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="40(PlatformSerialC.UartC.UsartC):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="89(Msp430UsartShare1P.ArbiterC):/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="52(Msp430UsartShare1P.ArbiterC.Arbiter):/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TelosSerialP" loc="1:/home/zdenial/tinyos/tos/platforms/telosa/TelosSerialP.nc">
      <module/>
    </component>
    <component qname="PutcharC" loc="42:/home/zdenial/tinyos/tos/lib/printf/PutcharC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:/home/zdenial/tinyos/tos/lib/printf/PutcharP.nc">
      <documentation loc="64:/home/zdenial/tinyos/tos/lib/printf/PutcharP.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialStartP" loc="37:/home/zdenial/tinyos/tos/lib/serial/SerialStartP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/lib/serial/SerialStartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Thomas Schmid&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/home/zdenial/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="59:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <documentation loc="49:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="38(HplCC2420InterruptsC.CaptureSFDC):/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="43(HplCC2420InterruptsC.InterruptCCAC):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="43(HplCC2420InterruptsC.InterruptFIFOPC):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):/home/zdenial/tinyos/tos/system/StateC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:/home/zdenial/tinyos/tos/system/StateImplC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:/home/zdenial/tinyos/tos/system/StateImplP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="74:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <documentation loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
        <short>&#10; Implementation of USART0 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART0 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @author: Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10; @version $Revision: 1.8 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="89(Msp430UsartShare0P.ArbiterC):/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="52(Msp430UsartShare0P.ArbiterC.Arbiter):/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="37:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-24 05:32:31 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/home/zdenial/tinyos/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/home/zdenial/tinyos/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="52(BusyWaitMicroC.BusyWaitCounterC):/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c45c0"/>
            <typename><typedef-ref name="TMicro" ref="0x2afe3c4c4930"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c45c0"/>
            <typename><typedef-ref name="TMicro" ref="0x2afe3c4c4930"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:/home/zdenial/tinyos/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c55c0"/>
            <typename><typedef-ref name="TMilli" ref="0x2afe3c4c5930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c55c0"/>
            <typename><typedef-ref name="TMilli" ref="0x2afe3c4c5930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c55c0"/>
            <typename><typedef-ref name="TMilli" ref="0x2afe3c4c5930"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c55c0"/>
            <typename><typedef-ref name="TMilli" ref="0x2afe3c4c5930"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c55c0"/>
            <typename><typedef-ref name="TMilli" ref="0x2afe3c4c5930"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/zdenial/tinyos/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/home/zdenial/tinyos/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):/home/zdenial/tinyos/tos/system/StateC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):/home/zdenial/tinyos/tos/system/StateC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):/home/zdenial/tinyos/tos/system/StateC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkC" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkP" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PacketLinkC.SendStateC" loc="65(PacketLinkC.SendStateC):/home/zdenial/tinyos/tos/system/StateC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkC.DelayTimerC" loc="44(PacketLinkC.DelayTimerC):/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TimeSyncMessageC" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
        <short>&#10; The Active Message layer for the CC2420 radio with timesync support.</short>
        <long>&#10; The Active Message layer for the CC2420 radio with timesync support. This&#10; configuration is just layer above CC2420ActiveMessageC that supports&#10; TimeSyncPacket and TimeSyncAMSend interfaces (TEP 133)&#10;&#10; @author: Miklos Maroti&#10; @author: Brano Kusy (CC2420 port)&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TimeSyncMessageP" loc="37:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <module/>
    </component>
    <component qname="CC2420TimeSyncMessageC.AMSenderC" loc="47(CC2420TimeSyncMessageC.AMSenderC):/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:61">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420TimeSyncMessageC.AMSenderC.SenderC" loc="47(CC2420TimeSyncMessageC.AMSenderC.SenderC):/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2afe3c2ad1b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP" loc="43(CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP):/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2afe3c2ad1b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420TimeSyncMessageC.LocalTime32khzC" loc="46(CC2420TimeSyncMessageC.LocalTime32khzC):/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/home/zdenial/tinyos/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/home/zdenial/tinyos/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="TDMALinkC.JoinReqSndC" loc="47(TDMALinkC.JoinReqSndC):/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:131">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.JoinReqSndC.SenderC" loc="47(TDMALinkC.JoinReqSndC.SenderC):/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2afe3c2ad1b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.JoinReqSndC.SenderC.AMQueueEntryP" loc="43(TDMALinkC.JoinReqSndC.SenderC.AMQueueEntryP):/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2afe3c2ad1b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TDMALinkC.JoinReqRcvC" loc="43(TDMALinkC.JoinReqRcvC):/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:131">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.JoinAnsSndC" loc="47(TDMALinkC.JoinAnsSndC):/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:132">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.JoinAnsSndC.SenderC" loc="47(TDMALinkC.JoinAnsSndC.SenderC):/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2afe3c2ad1b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.JoinAnsSndC.SenderC.AMQueueEntryP" loc="43(TDMALinkC.JoinAnsSndC.SenderC.AMQueueEntryP):/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2afe3c2ad1b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TDMALinkC.JoinAnsRcvC" loc="43(TDMALinkC.JoinAnsRcvC):/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:132">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.DataSndC" loc="47(TDMALinkC.DataSndC):/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:133">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.DataSndC.SenderC" loc="47(TDMALinkC.DataSndC.SenderC):/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2afe3c2ad1b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.DataSndC.SenderC.AMQueueEntryP" loc="43(TDMALinkC.DataSndC.SenderC.AMQueueEntryP):/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2afe3c2ad1b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SlotSchedulerC" loc="3:SlotSchedulerC.nc">
      <configuration/>
    </component>
    <component qname="SlotSchedulerP" loc="16:SlotSchedulerP.nc">
      <documentation loc="12:SlotSchedulerP.nc">
        <short></short>
      </documentation>
      <module/>
    </component>
    <component qname="SlotSchedulerC.EpochTimer" loc="2(SlotSchedulerC.EpochTimer):Timer32C.nc">
      <instance number="0">
        <component-ref qname="Timer32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Timer32P" loc="2:Timer32P.nc">
      <configuration/>
    </component>
    <component qname="Timer32P.Alarm32khz32C" loc="41(Timer32P.Alarm32khz32C):/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Timer32P.Alarm32khz32C.AlarmC" loc="41(Timer32P.Alarm32khz32C.AlarmC):/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(Timer32P.Alarm32khz32C.AlarmC.Msp430Timer):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Timer32P.Alarm32khz32C.Transform" loc="51(Timer32P.Alarm32khz32C.Transform):/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Timer32P.AlarmToTimerC" loc="46(Timer32P.AlarmToTimerC):/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Timer32P.VirtualizeTimerC" loc="46(Timer32P.VirtualizeTimerC):/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SlotSchedulerC.StartSlotTimer" loc="2(SlotSchedulerC.StartSlotTimer):Timer32C.nc">
      <instance number="1">
        <component-ref qname="Timer32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SlotSchedulerC.EndSlotTimer" loc="2(SlotSchedulerC.EndSlotTimer):Timer32C.nc">
      <instance number="2">
        <component-ref qname="Timer32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.DataRcvC" loc="43(TDMALinkC.DataRcvC):/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:133">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430TimerP" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x2afe3c395230" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x2afe3c3955d0" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x2afe3c395980" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x2afe3c395d00" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x2afe3c3940d0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x2afe3c394440" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x2afe3c3947d0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x2afe3c394b60" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x2afe3c392020" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x2afe3c3c2960" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x2afe3c3c2d30" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart1C" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x2afe3c7c1890" loc="40:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x2afe3c7c1c40" loc="41:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x2afe3c7c0020" loc="42:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x2afe3c7c03d0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x2afe3c7c0740" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2afe3c926ad0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2afe3c926ad0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x2afe3c9e75b0" loc="89:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x2afe3c9da5b0" loc="42:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/home/zdenial/tinyos/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x2afe3c9fdd90" loc="52:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2afe3cea19d0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2afe3cea19d0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2afe3ceb9bb0" loc="55:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2afe3ceb9bb0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2afe3ceb63b0" loc="56:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2afe3ceb63b0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2afe3ceb67a0" loc="57:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2afe3ceb67a0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2afe3ceb5020" loc="58:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2afe3ceb5020"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2afe3ceb53f0" loc="59:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x2afe3ceb5bf0" loc="60:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x2afe3ceb5bf0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2afe3cebedd0" loc="52:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2afe3cebedd0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2afe3cee3600" loc="53:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2afe3cee3600"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2afe3cee39f0" loc="54:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2afe3cee39f0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2afe3cee2210" loc="55:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2afe3cee2210"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2afe3cee25e0" loc="56:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="GpioCaptureC" loc="38:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:/home/zdenial/tinyos/tos/system/StateC.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="BusyWaitCounterC" loc="52:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2afe3d4c6400" loc="52:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2afe3d4c6400"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2afe3d4c6b90" loc="52:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2afe3d4c6b90"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2afe3d6e2a60" loc="46:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2afe3d6e2a60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmMilli32C" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2afe3d76c160" loc="46:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2afe3d76c160"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2afe3d7ad740" loc="46:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2afe3d7ad740"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2afe3d7ada70" loc="46:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/zdenial/tinyos/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMSenderC" loc="47:/home/zdenial/tinyos/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2afe3da9aa00" loc="47:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2afe3c2ad1b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2afe3db136b0" loc="47:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2afe3c2ad1b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2afe3db09320" loc="43:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2afe3c2ad1b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x2afe3daf0c80" loc="45:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:/home/zdenial/tinyos/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2afe3db6f060" loc="43:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2afe3c2ad1b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Timer32C" loc="2:Timer32C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="LinkSnd" ref="0x2afe3c2c8650" loc="6:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkSnd" scoped="" ref="0x2afe3c2c8650"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3c2c89d0"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3c2c8b60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3c2c8cf0"/>
        <function-ref name="cancel" scoped="" ref="0x2afe3c2c8e80"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3c2b9030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2afe3c2b8130" loc="4:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x2afe3c2b8130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2afe3c2b84b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkCtrl" ref="0x2afe3c2b4a10" loc="5:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkCtrl" scoped="" ref="0x2afe3c2b4a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2afe3c2b4d90"/>
        <function-ref name="stopDone" scoped="" ref="0x2afe3c2ba020"/>
        <function-ref name="start" scoped="" ref="0x2afe3c2ba1b0"/>
        <function-ref name="stop" scoped="" ref="0x2afe3c2ba340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkRcv" ref="0x2afe3c2b3020" loc="7:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkRcv" scoped="" ref="0x2afe3c2b3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2afe3c2b33a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2afe3c2d88d0" loc="58:/home/zdenial/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x2afe3c2d88d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afe3c2d8c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2afe3c2623f0" loc="57:/home/zdenial/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x2afe3c2623f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2afe3c262770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afe3c2da790" loc="42:/home/zdenial/tinyos/tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afe3c2da790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afe3c2dab10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x2afe3c2d3830" loc="6:/home/zdenial/tinyos/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x2afe3c2d3830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afe3c2d3bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afe3c2d69c0" loc="4:/home/zdenial/tinyos/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afe3c2d69c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afe3c2d6d40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x2afe3c2d3150" loc="5:/home/zdenial/tinyos/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x2afe3c2d3150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afe3c2d34d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x2afe3c2d2020" loc="7:/home/zdenial/tinyos/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x2afe3c2d2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afe3c2d23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afe3c2d5c80" loc="2:/home/zdenial/tinyos/tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afe3c2d5c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afe3c2ec0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x2afe3c2f5020" loc="39:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x2afe3c2f5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afe3c2f53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x2afe3c30b6c0" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x2afe3c30b6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x2afe3c2f1660"/>
        <function-ref name="initTimerB" scoped="" ref="0x2afe3c30bbd0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x2afe3c30bd60"/>
        <function-ref name="initTimerA" scoped="" ref="0x2afe3c2f1020"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x2afe3c30ba40"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x2afe3c2f11b0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x2afe3c2f1340"/>
        <function-ref name="initClocks" scoped="" ref="0x2afe3c2f14d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afe3c2f2020" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afe3c2f2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afe3c2f23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x2afe3c31a020" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x2afe3c31a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x2afe3c319020"/>
        <function-ref name="initTimerB" scoped="" ref="0x2afe3c31a530"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x2afe3c31a6c0"/>
        <function-ref name="initTimerA" scoped="" ref="0x2afe3c31a850"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x2afe3c31a3a0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x2afe3c31a9e0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x2afe3c31ab70"/>
        <function-ref name="initClocks" scoped="" ref="0x2afe3c31ad00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2afe3c319360" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x2afe3c319360"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2afe3c3196e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afe3c31b940" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afe3c31b940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afe3c31bcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x2afe3c35d5a0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x2afe3c35d5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2afe3c35d920"/>
        <function-ref name="getControl" scoped="" ref="0x2afe3c35dab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afe3c35dc40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2afe3c35ddd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2afe3c35c020"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afe3c35c1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2afe3c35c340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2afe3c35c4d0"/>
        <function-ref name="setControl" scoped="" ref="0x2afe3c35c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x2afe3c36d020" loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x2afe3c36d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2afe3c36d3a0"/>
        <function-ref name="getControl" scoped="" ref="0x2afe3c36d530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afe3c36d6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2afe3c36d850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2afe3c36d9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afe3c36db70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2afe3c36dd00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2afe3c36c020"/>
        <function-ref name="setControl" scoped="" ref="0x2afe3c36c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x2afe3c354700" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x2afe3c354700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afe3c354a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2afe3c354c10"/>
        <function-ref name="captured" scoped="" ref="0x2afe3c354da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afe3c353020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afe3c3531b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2afe3c353340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x2afe3c37ca20" loc="68:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x2afe3c37ca20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afe3c37cda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2afe3c37b020"/>
        <function-ref name="captured" scoped="" ref="0x2afe3c37b1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afe3c37b340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afe3c37b4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2afe3c37b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x2afe3c35baa0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x2afe3c35baa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afe3c35be20"/>
        <function-ref name="setEvent" scoped="" ref="0x2afe3c35a020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2afe3c35a1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2afe3c35a340"/>
        <function-ref name="fired" scoped="" ref="0x2afe3c35a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x2afe3c382020" loc="61:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x2afe3c382020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afe3c3823a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2afe3c382530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2afe3c3826c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2afe3c382850"/>
        <function-ref name="fired" scoped="" ref="0x2afe3c3829e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x2afe3c379a20" loc="71:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x2afe3c379a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afe3c379da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2afe3c378020"/>
        <function-ref name="captured" scoped="" ref="0x2afe3c3781b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afe3c378340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afe3c3784d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2afe3c378660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x2afe3c3685a0" loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x2afe3c3685a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2afe3c368920"/>
        <function-ref name="getControl" scoped="" ref="0x2afe3c368ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afe3c368c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2afe3c368dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2afe3c366020"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afe3c3661b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2afe3c366340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2afe3c3664d0"/>
        <function-ref name="setControl" scoped="" ref="0x2afe3c366660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x2afe3c35eb10" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x2afe3c35eb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2afe3c343020"/>
        <function-ref name="getControl" scoped="" ref="0x2afe3c3431b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afe3c343340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2afe3c3434d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2afe3c343660"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afe3c3437f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2afe3c343980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2afe3c343b10"/>
        <function-ref name="setControl" scoped="" ref="0x2afe3c343ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x2afe3c37ea20" loc="66:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x2afe3c37ea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afe3c37eda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2afe3c37d020"/>
        <function-ref name="captured" scoped="" ref="0x2afe3c37d1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afe3c37d340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afe3c37d4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2afe3c37d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x2afe3c3843e0" loc="59:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x2afe3c3843e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afe3c384760"/>
        <function-ref name="setEvent" scoped="" ref="0x2afe3c3848f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2afe3c384a80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2afe3c384c10"/>
        <function-ref name="fired" scoped="" ref="0x2afe3c384da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x2afe3c36c5a0" loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x2afe3c36c5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2afe3c36ca20"/>
        <function-ref name="getControl" scoped="" ref="0x2afe3c36cbb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afe3c36cd40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2afe3c36b020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2afe3c36b1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afe3c36b340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2afe3c36b4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2afe3c36b660"/>
        <function-ref name="setControl" scoped="" ref="0x2afe3c36b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x2afe3c353700" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x2afe3c353700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afe3c353a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2afe3c353c10"/>
        <function-ref name="captured" scoped="" ref="0x2afe3c353da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afe3c36f020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afe3c36f1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2afe3c36f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x2afe3c37ba20" loc="69:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x2afe3c37ba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afe3c37bda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2afe3c37a020"/>
        <function-ref name="captured" scoped="" ref="0x2afe3c37a1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afe3c37a340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afe3c37a4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2afe3c37a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x2afe3c36bbe0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x2afe3c36bbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2afe3c36a020"/>
        <function-ref name="getControl" scoped="" ref="0x2afe3c36a1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afe3c36a340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2afe3c36a4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2afe3c36a660"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afe3c36a7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2afe3c36a980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2afe3c36ab10"/>
        <function-ref name="setControl" scoped="" ref="0x2afe3c36aca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x2afe3c35a890" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x2afe3c35a890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afe3c35ac10"/>
        <function-ref name="setEvent" scoped="" ref="0x2afe3c35ada0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2afe3c355020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2afe3c3551b0"/>
        <function-ref name="fired" scoped="" ref="0x2afe3c355340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x2afe3c34c120" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x2afe3c34c120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3c34c4a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2afe3c34c630"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afe3c34c7c0"/>
        <function-ref name="get" scoped="" ref="0x2afe3c34c950"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afe3c34cae0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afe3c34cc70"/>
        <function-ref name="getMode" scoped="" ref="0x2afe3c34ce00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afe3c34b020"/>
        <function-ref name="overflow" scoped="" ref="0x2afe3c34b1b0"/>
        <function-ref name="setMode" scoped="" ref="0x2afe3c34b340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2afe3c34b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x2afe3c382da0" loc="62:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x2afe3c382da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afe3c381180"/>
        <function-ref name="setEvent" scoped="" ref="0x2afe3c381310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2afe3c3814a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2afe3c381630"/>
        <function-ref name="fired" scoped="" ref="0x2afe3c3817c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x2afe3c3420c0" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x2afe3c3420c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2afe3c342440"/>
        <function-ref name="getControl" scoped="" ref="0x2afe3c3425d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afe3c342760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2afe3c3428f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2afe3c342a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afe3c342c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2afe3c342da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2afe3c35d020"/>
        <function-ref name="setControl" scoped="" ref="0x2afe3c35d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x2afe3c366a50" loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x2afe3c366a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2afe3c366dd0"/>
        <function-ref name="getControl" scoped="" ref="0x2afe3c365020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afe3c3651b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2afe3c365340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2afe3c3654d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afe3c365660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2afe3c3657f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2afe3c365980"/>
        <function-ref name="setControl" scoped="" ref="0x2afe3c365b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x2afe3c370690" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x2afe3c370690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afe3c370a10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2afe3c370ba0"/>
        <function-ref name="captured" scoped="" ref="0x2afe3c370d30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afe3c354020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afe3c3541b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2afe3c354340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x2afe3c37da20" loc="67:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x2afe3c37da20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afe3c37dda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2afe3c37c020"/>
        <function-ref name="captured" scoped="" ref="0x2afe3c37c1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afe3c37c340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afe3c37c4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2afe3c37c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x2afe3c356cf0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x2afe3c356cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afe3c35b0a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2afe3c35b230"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2afe3c35b3c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2afe3c35b550"/>
        <function-ref name="fired" scoped="" ref="0x2afe3c35b6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x2afe3c3831f0" loc="60:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x2afe3c3831f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afe3c383570"/>
        <function-ref name="setEvent" scoped="" ref="0x2afe3c383700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2afe3c383890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2afe3c383a20"/>
        <function-ref name="fired" scoped="" ref="0x2afe3c383bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x2afe3c37aa20" loc="70:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x2afe3c37aa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afe3c37ada0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2afe3c379020"/>
        <function-ref name="captured" scoped="" ref="0x2afe3c3791b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afe3c379340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afe3c3794d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2afe3c379660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x2afe3c3690c0" loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x2afe3c3690c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2afe3c369440"/>
        <function-ref name="getControl" scoped="" ref="0x2afe3c3695d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afe3c369760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2afe3c3698f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2afe3c369a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afe3c369c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2afe3c369da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2afe3c368020"/>
        <function-ref name="setControl" scoped="" ref="0x2afe3c3681b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x2afe3c36f6c0" loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x2afe3c36f6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3c36fa40"/>
        <function-ref name="setClockSource" scoped="" ref="0x2afe3c36fbd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afe3c36fd60"/>
        <function-ref name="get" scoped="" ref="0x2afe3c36e020"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afe3c36e1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afe3c36e340"/>
        <function-ref name="getMode" scoped="" ref="0x2afe3c36e4d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afe3c36e660"/>
        <function-ref name="overflow" scoped="" ref="0x2afe3c36e7f0"/>
        <function-ref name="setMode" scoped="" ref="0x2afe3c36e980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2afe3c36eb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x2afe3c381b80" loc="63:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x2afe3c381b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afe3c380020"/>
        <function-ref name="setEvent" scoped="" ref="0x2afe3c3801b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2afe3c380340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2afe3c3804d0"/>
        <function-ref name="fired" scoped="" ref="0x2afe3c380660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x2afe3c37fa20" loc="65:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x2afe3c37fa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afe3c37fda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2afe3c37e020"/>
        <function-ref name="captured" scoped="" ref="0x2afe3c37e1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afe3c37e340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afe3c37e4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2afe3c37e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x2afe3c380a20" loc="64:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x2afe3c380a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afe3c37f020"/>
        <function-ref name="setEvent" scoped="" ref="0x2afe3c37f1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2afe3c37f340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2afe3c37f4d0"/>
        <function-ref name="fired" scoped="" ref="0x2afe3c37f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x2afe3c385570" loc="58:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x2afe3c385570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afe3c3858f0"/>
        <function-ref name="setEvent" scoped="" ref="0x2afe3c385a80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2afe3c385c10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2afe3c385da0"/>
        <function-ref name="fired" scoped="" ref="0x2afe3c384020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x2afe3c364020" loc="57:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x2afe3c364020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2afe3c3643a0"/>
        <function-ref name="getControl" scoped="" ref="0x2afe3c364530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afe3c3646c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2afe3c364850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2afe3c3649e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afe3c364b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2afe3c364d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2afe3c385020"/>
        <function-ref name="setControl" scoped="" ref="0x2afe3c3851b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x2afe3c3cc2f0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x2afe3c3cc2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afe3c3cc670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x2afe3c3a9c20" loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x2afe3c3a9c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afe3c3cc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x2afe3c3cc940" loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x2afe3c3cc940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afe3c3cccc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x2afe3c3a95b0" loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2afe3c3a95b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afe3c3a9950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2afe3c3abc80" loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2afe3c3abc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3c3aa0a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2afe3c3aa230"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afe3c3aa3c0"/>
        <function-ref name="get" scoped="" ref="0x2afe3c3aa550"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afe3c3aa6e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afe3c3aa870"/>
        <function-ref name="getMode" scoped="" ref="0x2afe3c3aaa00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afe3c3aab90"/>
        <function-ref name="overflow" scoped="" ref="0x2afe3c3aad20"/>
        <function-ref name="setMode" scoped="" ref="0x2afe3c3a9020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2afe3c3a91b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x2afe3c3c42f0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x2afe3c3c42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afe3c3c4670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x2afe3c3c5c20" loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x2afe3c3c5c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afe3c3c4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x2afe3c3c4940" loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x2afe3c3c4940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afe3c3c4cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x2afe3c3c55b0" loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2afe3c3c55b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afe3c3c5950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2afe3c3c7c80" loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2afe3c3c7c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3c3c60a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2afe3c3c6230"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afe3c3c63c0"/>
        <function-ref name="get" scoped="" ref="0x2afe3c3c6550"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afe3c3c66e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afe3c3c6870"/>
        <function-ref name="getMode" scoped="" ref="0x2afe3c3c6a00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afe3c3c6b90"/>
        <function-ref name="overflow" scoped="" ref="0x2afe3c3c6d20"/>
        <function-ref name="setMode" scoped="" ref="0x2afe3c3c5020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2afe3c3c51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2afe3c408a90" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2afe3c408a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afe3c408e10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2afe3c407020"/>
        <function-ref name="captured" scoped="" ref="0x2afe3c4071b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afe3c407340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afe3c4074d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2afe3c407660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2afe3c3c09d0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2afe3c3c09d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2afe3c3c0d50"/>
        <function-ref name="getControl" scoped="" ref="0x2afe3c409020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afe3c4091b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2afe3c409340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2afe3c4094d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afe3c409660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2afe3c4097f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2afe3c409980"/>
        <function-ref name="setControl" scoped="" ref="0x2afe3c409b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2afe3c405020" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2afe3c405020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afe3c4053a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2afe3c409de0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2afe3c409de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afe3c408180"/>
        <function-ref name="setEvent" scoped="" ref="0x2afe3c408310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2afe3c4084a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2afe3c408630"/>
        <function-ref name="fired" scoped="" ref="0x2afe3c4087c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2afe3c407930" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2afe3c407930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3c407cb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2afe3c407e40"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afe3c406020"/>
        <function-ref name="get" scoped="" ref="0x2afe3c4061b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afe3c406340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afe3c4064d0"/>
        <function-ref name="getMode" scoped="" ref="0x2afe3c406660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afe3c4067f0"/>
        <function-ref name="overflow" scoped="" ref="0x2afe3c406980"/>
        <function-ref name="setMode" scoped="" ref="0x2afe3c406b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2afe3c406ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2afe3c424160" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2afe3c424160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afe3c4244e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2afe3c424670"/>
        <function-ref name="captured" scoped="" ref="0x2afe3c424800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afe3c424990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afe3c424b20"/>
        <function-ref name="setEdge" scoped="" ref="0x2afe3c424cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2afe3c426020" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2afe3c426020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2afe3c4263a0"/>
        <function-ref name="getControl" scoped="" ref="0x2afe3c426530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afe3c4266c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2afe3c426850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2afe3c4269e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afe3c426b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2afe3c426d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2afe3c425020"/>
        <function-ref name="setControl" scoped="" ref="0x2afe3c4251b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2afe3c4227a0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2afe3c4227a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afe3c422b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2afe3c425480" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2afe3c425480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afe3c425800"/>
        <function-ref name="setEvent" scoped="" ref="0x2afe3c425990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2afe3c425b20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2afe3c425cb0"/>
        <function-ref name="fired" scoped="" ref="0x2afe3c425e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2afe3c423020" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2afe3c423020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3c4233a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2afe3c423530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afe3c4236c0"/>
        <function-ref name="get" scoped="" ref="0x2afe3c423850"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afe3c4239e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afe3c423b70"/>
        <function-ref name="getMode" scoped="" ref="0x2afe3c423d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afe3c422020"/>
        <function-ref name="overflow" scoped="" ref="0x2afe3c4221b0"/>
        <function-ref name="setMode" scoped="" ref="0x2afe3c422340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2afe3c4224d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2afe3c41c7a0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2afe3c41c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afe3c41cb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2afe3c41ccb0"/>
        <function-ref name="captured" scoped="" ref="0x2afe3c41ce40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afe3c41b020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afe3c41b1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2afe3c41b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2afe3c41e6d0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2afe3c41e6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2afe3c41ea50"/>
        <function-ref name="getControl" scoped="" ref="0x2afe3c41ebe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afe3c41ed70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2afe3c41d020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2afe3c41d1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afe3c41d340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2afe3c41d4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2afe3c41d660"/>
        <function-ref name="setControl" scoped="" ref="0x2afe3c41d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2afe3c41ac50" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2afe3c41ac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afe3c419020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2afe3c41dac0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2afe3c41dac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afe3c41de40"/>
        <function-ref name="setEvent" scoped="" ref="0x2afe3c41c020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2afe3c41c1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2afe3c41c340"/>
        <function-ref name="fired" scoped="" ref="0x2afe3c41c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2afe3c41b610" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2afe3c41b610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3c41b990"/>
        <function-ref name="setClockSource" scoped="" ref="0x2afe3c41bb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afe3c41bcb0"/>
        <function-ref name="get" scoped="" ref="0x2afe3c41be40"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afe3c41a020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afe3c41a1b0"/>
        <function-ref name="getMode" scoped="" ref="0x2afe3c41a340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afe3c41a4d0"/>
        <function-ref name="overflow" scoped="" ref="0x2afe3c41a660"/>
        <function-ref name="setMode" scoped="" ref="0x2afe3c41a7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2afe3c41a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2afe3c415cb0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2afe3c415cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afe3c4390a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2afe3c439230"/>
        <function-ref name="captured" scoped="" ref="0x2afe3c4393c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afe3c439550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afe3c4396e0"/>
        <function-ref name="setEdge" scoped="" ref="0x2afe3c439870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2afe3c417b30" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2afe3c417b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2afe3c416020"/>
        <function-ref name="getControl" scoped="" ref="0x2afe3c4161b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afe3c416340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2afe3c4164d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2afe3c416660"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afe3c4167f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2afe3c416980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2afe3c416b10"/>
        <function-ref name="setControl" scoped="" ref="0x2afe3c416ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2afe3c4372f0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2afe3c4372f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afe3c437670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2afe3c415020" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2afe3c415020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afe3c4153a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2afe3c415530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2afe3c4156c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2afe3c415850"/>
        <function-ref name="fired" scoped="" ref="0x2afe3c4159e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2afe3c439b40" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2afe3c439b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3c438020"/>
        <function-ref name="setClockSource" scoped="" ref="0x2afe3c4381b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afe3c438340"/>
        <function-ref name="get" scoped="" ref="0x2afe3c4384d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afe3c438660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afe3c4387f0"/>
        <function-ref name="getMode" scoped="" ref="0x2afe3c438980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afe3c438b10"/>
        <function-ref name="overflow" scoped="" ref="0x2afe3c438ca0"/>
        <function-ref name="setMode" scoped="" ref="0x2afe3c438e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2afe3c437020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2afe3c4312f0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2afe3c4312f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afe3c431670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2afe3c431800"/>
        <function-ref name="captured" scoped="" ref="0x2afe3c431990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afe3c431b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afe3c431cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x2afe3c431e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2afe3c433220" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2afe3c433220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2afe3c4335a0"/>
        <function-ref name="getControl" scoped="" ref="0x2afe3c433730"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afe3c4338c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2afe3c433a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2afe3c433be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afe3c433d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2afe3c432020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2afe3c4321b0"/>
        <function-ref name="setControl" scoped="" ref="0x2afe3c432340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2afe3c42f7a0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2afe3c42f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afe3c42fb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2afe3c432610" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2afe3c432610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afe3c432990"/>
        <function-ref name="setEvent" scoped="" ref="0x2afe3c432b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2afe3c432cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2afe3c432e40"/>
        <function-ref name="fired" scoped="" ref="0x2afe3c431020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2afe3c430160" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2afe3c430160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3c4304e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2afe3c430670"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afe3c430800"/>
        <function-ref name="get" scoped="" ref="0x2afe3c430990"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afe3c430b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afe3c430cb0"/>
        <function-ref name="getMode" scoped="" ref="0x2afe3c430e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afe3c42f020"/>
        <function-ref name="overflow" scoped="" ref="0x2afe3c42f1b0"/>
        <function-ref name="setMode" scoped="" ref="0x2afe3c42f340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2afe3c42f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2afe3c42a7a0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2afe3c42a7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afe3c42ab20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2afe3c42acb0"/>
        <function-ref name="captured" scoped="" ref="0x2afe3c42ae40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afe3c429020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afe3c4291b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2afe3c429340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2afe3c42c6d0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2afe3c42c6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2afe3c42ca50"/>
        <function-ref name="getControl" scoped="" ref="0x2afe3c42cbe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afe3c42cd70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2afe3c42b020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2afe3c42b1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afe3c42b340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2afe3c42b4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2afe3c42b660"/>
        <function-ref name="setControl" scoped="" ref="0x2afe3c42b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2afe3c428c50" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2afe3c428c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afe3c427020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2afe3c42bac0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2afe3c42bac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afe3c42be40"/>
        <function-ref name="setEvent" scoped="" ref="0x2afe3c42a020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2afe3c42a1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2afe3c42a340"/>
        <function-ref name="fired" scoped="" ref="0x2afe3c42a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2afe3c429610" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2afe3c429610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3c429990"/>
        <function-ref name="setClockSource" scoped="" ref="0x2afe3c429b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afe3c429cb0"/>
        <function-ref name="get" scoped="" ref="0x2afe3c429e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afe3c428020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afe3c4281b0"/>
        <function-ref name="getMode" scoped="" ref="0x2afe3c428340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afe3c4284d0"/>
        <function-ref name="overflow" scoped="" ref="0x2afe3c428660"/>
        <function-ref name="setMode" scoped="" ref="0x2afe3c4287f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2afe3c428980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2afe3c448cb0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2afe3c448cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afe3c4470a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2afe3c447230"/>
        <function-ref name="captured" scoped="" ref="0x2afe3c4473c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afe3c447550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afe3c4476e0"/>
        <function-ref name="setEdge" scoped="" ref="0x2afe3c447870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2afe3c44ab30" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2afe3c44ab30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2afe3c449020"/>
        <function-ref name="getControl" scoped="" ref="0x2afe3c4491b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afe3c449340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2afe3c4494d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2afe3c449660"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afe3c4497f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2afe3c449980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2afe3c449b10"/>
        <function-ref name="setControl" scoped="" ref="0x2afe3c449ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2afe3c4452f0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2afe3c4452f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afe3c445670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2afe3c448020" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2afe3c448020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afe3c4483a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2afe3c448530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2afe3c4486c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2afe3c448850"/>
        <function-ref name="fired" scoped="" ref="0x2afe3c4489e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2afe3c447b40" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2afe3c447b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3c446020"/>
        <function-ref name="setClockSource" scoped="" ref="0x2afe3c4461b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afe3c446340"/>
        <function-ref name="get" scoped="" ref="0x2afe3c4464d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afe3c446660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afe3c4467f0"/>
        <function-ref name="getMode" scoped="" ref="0x2afe3c446980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afe3c446b10"/>
        <function-ref name="overflow" scoped="" ref="0x2afe3c446ca0"/>
        <function-ref name="setMode" scoped="" ref="0x2afe3c446e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2afe3c445020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2afe3c4402f0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2afe3c4402f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afe3c440670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2afe3c440800"/>
        <function-ref name="captured" scoped="" ref="0x2afe3c440990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afe3c440b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afe3c440cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x2afe3c440e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2afe3c442220" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2afe3c442220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2afe3c4425a0"/>
        <function-ref name="getControl" scoped="" ref="0x2afe3c442730"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afe3c4428c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2afe3c442a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2afe3c442be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afe3c442d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2afe3c441020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2afe3c4411b0"/>
        <function-ref name="setControl" scoped="" ref="0x2afe3c441340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2afe3c43e7a0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2afe3c43e7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afe3c43eb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2afe3c441610" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2afe3c441610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afe3c441990"/>
        <function-ref name="setEvent" scoped="" ref="0x2afe3c441b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2afe3c441cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2afe3c441e40"/>
        <function-ref name="fired" scoped="" ref="0x2afe3c440020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2afe3c43f160" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2afe3c43f160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3c43f4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2afe3c43f670"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afe3c43f800"/>
        <function-ref name="get" scoped="" ref="0x2afe3c43f990"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afe3c43fb20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afe3c43fcb0"/>
        <function-ref name="getMode" scoped="" ref="0x2afe3c43fe40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afe3c43e020"/>
        <function-ref name="overflow" scoped="" ref="0x2afe3c43e1b0"/>
        <function-ref name="setMode" scoped="" ref="0x2afe3c43e340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2afe3c43e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2afe3c45e7a0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2afe3c45e7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afe3c45eb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2afe3c45ecb0"/>
        <function-ref name="captured" scoped="" ref="0x2afe3c45ee40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afe3c45d020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afe3c45d1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2afe3c45d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2afe3c43b6d0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2afe3c43b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2afe3c43ba50"/>
        <function-ref name="getControl" scoped="" ref="0x2afe3c43bbe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afe3c43bd70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2afe3c45f020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2afe3c45f1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afe3c45f340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2afe3c45f4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2afe3c45f660"/>
        <function-ref name="setControl" scoped="" ref="0x2afe3c45f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2afe3c45cc50" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2afe3c45cc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afe3c45b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2afe3c45fac0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2afe3c45fac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afe3c45fe40"/>
        <function-ref name="setEvent" scoped="" ref="0x2afe3c45e020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2afe3c45e1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2afe3c45e340"/>
        <function-ref name="fired" scoped="" ref="0x2afe3c45e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2afe3c45d610" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2afe3c45d610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3c45d990"/>
        <function-ref name="setClockSource" scoped="" ref="0x2afe3c45db20"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afe3c45dcb0"/>
        <function-ref name="get" scoped="" ref="0x2afe3c45de40"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afe3c45c020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afe3c45c1b0"/>
        <function-ref name="getMode" scoped="" ref="0x2afe3c45c340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afe3c45c4d0"/>
        <function-ref name="overflow" scoped="" ref="0x2afe3c45c660"/>
        <function-ref name="setMode" scoped="" ref="0x2afe3c45c7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2afe3c45c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2afe3c457cb0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2afe3c457cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afe3c4560a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2afe3c456230"/>
        <function-ref name="captured" scoped="" ref="0x2afe3c4563c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afe3c456550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afe3c4566e0"/>
        <function-ref name="setEdge" scoped="" ref="0x2afe3c456870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2afe3c459b30" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2afe3c459b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2afe3c458020"/>
        <function-ref name="getControl" scoped="" ref="0x2afe3c4581b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afe3c458340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2afe3c4584d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2afe3c458660"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afe3c4587f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2afe3c458980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2afe3c458b10"/>
        <function-ref name="setControl" scoped="" ref="0x2afe3c458ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2afe3c4542f0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2afe3c4542f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afe3c454670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2afe3c457020" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2afe3c457020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afe3c4573a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2afe3c457530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2afe3c4576c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2afe3c457850"/>
        <function-ref name="fired" scoped="" ref="0x2afe3c4579e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2afe3c456b40" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2afe3c456b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3c455020"/>
        <function-ref name="setClockSource" scoped="" ref="0x2afe3c4551b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afe3c455340"/>
        <function-ref name="get" scoped="" ref="0x2afe3c4554d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afe3c455660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afe3c4557f0"/>
        <function-ref name="getMode" scoped="" ref="0x2afe3c455980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afe3c455b10"/>
        <function-ref name="overflow" scoped="" ref="0x2afe3c455ca0"/>
        <function-ref name="setMode" scoped="" ref="0x2afe3c455e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2afe3c454020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x2afe3c44d240" loc="7:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x2afe3c44d240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afe3c44d5c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x2afe3c452aa0" loc="4:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x2afe3c452aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afe3c452e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x2afe3c44e260" loc="5:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x2afe3c44e260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afe3c44e5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x2afe3c44e9f0" loc="6:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x2afe3c44e9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afe3c44ed70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2afe3bf74080" loc="55:/home/zdenial/tinyos/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x2afe3bf74080"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2afe3bf74400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2afe3be372d0" loc="51:/home/zdenial/tinyos/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x2afe3be372d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2afe3be37650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2afe3c00c7d0" loc="52:/home/zdenial/tinyos/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x2afe3c00c7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2afe3c00cb50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x2afe3c2f3b50" loc="39:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x2afe3c2f3b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x2afe3c492b10"/>
        <function-ref name="initTimerB" scoped="" ref="0x2afe3c4921b0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x2afe3c492340"/>
        <function-ref name="initTimerA" scoped="" ref="0x2afe3c4924d0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x2afe3c492020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x2afe3c492660"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x2afe3c4927f0"/>
        <function-ref name="initClocks" scoped="" ref="0x2afe3c492980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2afe3c4addc0" loc="60:/home/zdenial/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x2afe3c4addc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afe3c4ac180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2afe3c493590" loc="57:/home/zdenial/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x2afe3c493590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2afe3c493910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2afe3c4ad6c0" loc="59:/home/zdenial/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x2afe3c4ad6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afe3c4ada40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2afe3c493c00" loc="58:/home/zdenial/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x2afe3c493c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afe3c4ad020"/>
        <function-ref name="taskLoop" scoped="" ref="0x2afe3c4ad1b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x2afe3c4ad340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2afe3bd5d1d0" loc="48:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x2afe3bd5d1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2afe3bd5d550"/>
        <function-ref name="runTask" scoped="" ref="0x2afe3bd5d6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2afe3bdc73a0" loc="47:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x2afe3bdc73a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afe3bdc7720"/>
        <function-ref name="taskLoop" scoped="" ref="0x2afe3bdc78b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x2afe3bdc7a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2afe3c21b040" loc="56:/home/zdenial/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x2afe3c21b040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2afe3c21b3c0"/>
        <function-ref name="runTask" scoped="" ref="0x2afe3c21b550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2afe3c2185d0" loc="57:/home/zdenial/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x2afe3c2185d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2afe3c218950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2afe3c21d140" loc="55:/home/zdenial/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x2afe3c21d140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afe3c21d4c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x2afe3c21d650"/>
        <function-ref name="runNextTask" scoped="" ref="0x2afe3c21d7e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2afe3c4a1710" loc="4:TDMALinkC.nc">
      <component-ref qname="TDMALinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2afe3c4a1710"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3c4a1a90"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3c4a1c20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3c4a1db0"/>
        <function-ref name="cancel" scoped="" ref="0x2afe3c4a0020"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3c4a01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2afe3c4a10c0" loc="3:TDMALinkC.nc">
      <component-ref qname="TDMALinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2afe3c4a10c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2afe3c4a1440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2afe3c2f6570" loc="2:TDMALinkC.nc">
      <component-ref qname="TDMALinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2afe3c2f6570"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2afe3c2f68f0"/>
        <function-ref name="stopDone" scoped="" ref="0x2afe3c2f6a80"/>
        <function-ref name="start" scoped="" ref="0x2afe3c2f6c10"/>
        <function-ref name="stop" scoped="" ref="0x2afe3c2f6da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0x2afe3c4bc840" loc="16:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMControl" scoped="" ref="0x2afe3c4bc840"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2afe3c4bcbc0"/>
        <function-ref name="stopDone" scoped="" ref="0x2afe3c4bcd50"/>
        <function-ref name="start" scoped="" ref="0x2afe3c4d6020"/>
        <function-ref name="stop" scoped="" ref="0x2afe3c4d61b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="JoinAnsRcv" ref="0x2afe3c4df0d0" loc="27:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="JoinAnsRcv" scoped="" ref="0x2afe3c4df0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2afe3c4df550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2afe3c4bf820" loc="11:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2afe3c4bf820"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3c4bfba0"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3c4bfd30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3c4be020"/>
        <function-ref name="cancel" scoped="" ref="0x2afe3c4be1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3c4be340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncSnd" ref="0x2afe3c4ea7b0" loc="19:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncSnd" scoped="" ref="0x2afe3c4ea7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3c4c95e0"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3c4e8020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3c4e9b80"/>
        <function-ref name="cancel" scoped="" ref="0x2afe3c4e9020"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3c4e9530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="JoinReqSnd" ref="0x2afe3c4e6e10" loc="23:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="JoinReqSnd" scoped="" ref="0x2afe3c4e6e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3c4e11c0"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3c4e1350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3c4e14e0"/>
        <function-ref name="cancel" scoped="" ref="0x2afe3c4e1670"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3c4e1800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataSnd" ref="0x2afe3c4df870" loc="29:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DataSnd" scoped="" ref="0x2afe3c4df870"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3c4dfbf0"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3c4dfd80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3c4de020"/>
        <function-ref name="cancel" scoped="" ref="0x2afe3c4de1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3c4de340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2afe3c4be620" loc="12:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2afe3c4be620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2afe3c4be9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncRcv" ref="0x2afe3c4e8700" loc="20:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncRcv" scoped="" ref="0x2afe3c4e8700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2afe3c4e8a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2afe3c4c0cd0" loc="10:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2afe3c4c0cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2afe3c4bf0a0"/>
        <function-ref name="stopDone" scoped="" ref="0x2afe3c4bf230"/>
        <function-ref name="start" scoped="" ref="0x2afe3c4bf3c0"/>
        <function-ref name="stop" scoped="" ref="0x2afe3c4bf550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TSPacket" ref="0x2afe3c4e2470" loc="21:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TSPacket" scoped="" ref="0x2afe3c4e2470"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x2afe3c4e6390"/>
        <function-ref name="eventTime" scoped="" ref="0x2afe3c4e68a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="JoinReqRcv" ref="0x2afe3c4e1b50" loc="24:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="JoinReqRcv" scoped="" ref="0x2afe3c4e1b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2afe3c4e0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="JoinAnsSnd" ref="0x2afe3c4e0360" loc="26:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="JoinAnsSnd" scoped="" ref="0x2afe3c4e0360"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3c4e06e0"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3c4e0870"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3c4e0a00"/>
        <function-ref name="cancel" scoped="" ref="0x2afe3c4e0b90"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3c4e0d20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketLink" ref="0x2afe3c4cbbf0" loc="17:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x2afe3c4cbbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2afe3c4d2020"/>
        <function-ref name="setRetries" scoped="" ref="0x2afe3c4d21b0"/>
        <function-ref name="getRetries" scoped="" ref="0x2afe3c4d2340"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2afe3c4d24d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2afe3c4d2660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2afe3c4bd020" loc="15:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2afe3c4bd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2afe3c4bd3a0"/>
        <function-ref name="source" scoped="" ref="0x2afe3c4bd530"/>
        <function-ref name="address" scoped="" ref="0x2afe3c4bd6c0"/>
        <function-ref name="destination" scoped="" ref="0x2afe3c4bd850"/>
        <function-ref name="setSource" scoped="" ref="0x2afe3c4bd9e0"/>
        <function-ref name="setDestination" scoped="" ref="0x2afe3c4bdb70"/>
        <function-ref name="type" scoped="" ref="0x2afe3c4bdd00"/>
        <function-ref name="setType" scoped="" ref="0x2afe3c4bc020"/>
        <function-ref name="isForMe" scoped="" ref="0x2afe3c4bc1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2afe3c4bc340"/>
        <function-ref name="localGroup" scoped="" ref="0x2afe3c4bc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SlotScheduler" ref="0x2afe3c4ff5f0" loc="31:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SlotScheduler" scoped="" ref="0x2afe3c4ff5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlotScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="slotStarted" scoped="" ref="0x2afe3c4ff970"/>
        <function-ref name="getScheduledSlot" scoped="" ref="0x2afe3c4ffb00"/>
        <function-ref name="syncEpochTime" scoped="" ref="0x2afe3c4ffc90"/>
        <function-ref name="slotEnded" scoped="" ref="0x2afe3c4ffe20"/>
        <function-ref name="start" scoped="" ref="0x2afe3c4dd020"/>
        <function-ref name="getEpochTime" scoped="" ref="0x2afe3c4dd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2afe3c569490" loc="38:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <component-ref qname="SerialPrintfC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2afe3c569490"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2afe3c569810"/>
        <function-ref name="stop" scoped="" ref="0x2afe3c5699a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0x2afe3c560960" loc="44:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x2afe3c560960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2afe3c560ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartByte" ref="0x2afe3c561220" loc="39:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x2afe3c561220"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3c5615a0"/>
        <function-ref name="receive" scoped="" ref="0x2afe3c561730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afe3c5662a0" loc="43:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afe3c5662a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afe3c566620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartControl" ref="0x2afe3c542680" loc="38:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartControl" scoped="" ref="0x2afe3c542680"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2afe3c542a00"/>
        <function-ref name="stop" scoped="" ref="0x2afe3c542b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2afe3c561a70" loc="42:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2afe3c561a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2afe3c561df0"/>
        <function-ref name="stop" scoped="" ref="0x2afe3c566020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2afe3c57d310" loc="6:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x2afe3c57d310"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3c57d690"/>
        <function-ref name="receive" scoped="" ref="0x2afe3c57d820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2afe3c5711e0" loc="5:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x2afe3c5711e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3c571560"/>
        <function-ref name="receivedByte" scoped="" ref="0x2afe3c5716f0"/>
        <function-ref name="receive" scoped="" ref="0x2afe3c571880"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2afe3c571a10"/>
        <function-ref name="receiveDone" scoped="" ref="0x2afe3c571ba0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2afe3c571d30"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3c57d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2afe3c558a30" loc="4:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2afe3c558a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2afe3c558db0"/>
        <function-ref name="stop" scoped="" ref="0x2afe3c57e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2afe3ca6d8f0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2afe3ca6d8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2afe3ca6dc70"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2afe3ca6de00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2afe3caa9060" loc="47:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x2afe3caa9060"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3caa93e0"/>
        <function-ref name="receive" scoped="" ref="0x2afe3caa9570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x2afe3caa9800" loc="49:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2afe3caa9800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2afe3caa9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2afe3ca6c0c0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x2afe3ca6c0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3ca6c440"/>
        <function-ref name="receivedByte" scoped="" ref="0x2afe3ca6c5d0"/>
        <function-ref name="receive" scoped="" ref="0x2afe3ca6c760"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2afe3ca6c8f0"/>
        <function-ref name="receiveDone" scoped="" ref="0x2afe3ca6ca80"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2afe3ca6cc10"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3ca6cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2afe3ca6ec00" loc="44:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2afe3ca6ec00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afe3ca6d020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afe3ca6d1b0"/>
        <function-ref name="request" scoped="" ref="0x2afe3ca6d340"/>
        <function-ref name="granted" scoped="" ref="0x2afe3ca6d4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2afe3ca6d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x2afe3c5e71d0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2afe3c5e71d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2afe3c5e7550"/>
        <function-ref name="configure" scoped="" ref="0x2afe3c5e76e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2afe3c5e3560" loc="44:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x2afe3c5e3560"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3c5e38e0"/>
        <function-ref name="receive" scoped="" ref="0x2afe3c5e3a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x2afe3c5e16c0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2afe3c5e16c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2afe3c5e1a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2afe3c5e6020" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x2afe3c5e6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3c5e63a0"/>
        <function-ref name="receivedByte" scoped="" ref="0x2afe3c5e6530"/>
        <function-ref name="receive" scoped="" ref="0x2afe3c5e66c0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2afe3c5e6850"/>
        <function-ref name="receiveDone" scoped="" ref="0x2afe3c5e69e0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2afe3c5e6b70"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3c5e6d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x2afe3c5e23f0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x2afe3c5e23f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afe3c5e2770"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afe3c5e2900"/>
        <function-ref name="request" scoped="" ref="0x2afe3c5e2a90"/>
        <function-ref name="granted" scoped="" ref="0x2afe3c5e2c20"/>
        <function-ref name="isOwner" scoped="" ref="0x2afe3c5e2db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2afe3c5ea4d0" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2afe3c5ea4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afe3c5ea850"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afe3c5ea9e0"/>
        <function-ref name="request" scoped="" ref="0x2afe3c5eab70"/>
        <function-ref name="granted" scoped="" ref="0x2afe3c5ead00"/>
        <function-ref name="isOwner" scoped="" ref="0x2afe3c5e8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x2afe3c5ddc20" loc="48:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x2afe3c5ddc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2afe3c5df020"/>
        <function-ref name="txDone" scoped="" ref="0x2afe3c5df1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x2afe3c65edc0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2afe3c65edc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2afe3c65d180"/>
        <function-ref name="configure" scoped="" ref="0x2afe3c65d310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2afe3c65c890" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x2afe3c65c890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3c65cc30"/>
        <function-ref name="receive" scoped="" ref="0x2afe3c65cdc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x2afe3c687020" loc="49:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2afe3c687020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2afe3c6873c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x2afe3c687690" loc="50:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x2afe3c687690"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2afe3c687a10"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2afe3c687ba0"/>
        <function-ref name="setUctl" scoped="" ref="0x2afe3c687d30"/>
        <function-ref name="enableUart" scoped="" ref="0x2afe3c686020"/>
        <function-ref name="setUrctl" scoped="" ref="0x2afe3c6861b0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2afe3c686340"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2afe3c6864d0"/>
        <function-ref name="getUtctl" scoped="" ref="0x2afe3c686660"/>
        <function-ref name="getUrctl" scoped="" ref="0x2afe3c6867f0"/>
        <function-ref name="resetUsart" scoped="" ref="0x2afe3c686980"/>
        <function-ref name="getUmctl" scoped="" ref="0x2afe3c686b10"/>
        <function-ref name="disableIntr" scoped="" ref="0x2afe3c686ca0"/>
        <function-ref name="setUtctl" scoped="" ref="0x2afe3c686e30"/>
        <function-ref name="getUbr" scoped="" ref="0x2afe3c685120"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2afe3c6852b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x2afe3c685440"/>
        <function-ref name="isUartRx" scoped="" ref="0x2afe3c6855d0"/>
        <function-ref name="isUart" scoped="" ref="0x2afe3c685760"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2afe3c6858f0"/>
        <function-ref name="isSpi" scoped="" ref="0x2afe3c685a80"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2afe3c685c10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2afe3c685da0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2afe3c684020"/>
        <function-ref name="enableIntr" scoped="" ref="0x2afe3c6841b0"/>
        <function-ref name="getMode" scoped="" ref="0x2afe3c684340"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2afe3c6846d0"/>
        <function-ref name="clrIntr" scoped="" ref="0x2afe3c684860"/>
        <function-ref name="setUbr" scoped="" ref="0x2afe3c6849f0"/>
        <function-ref name="tx" scoped="" ref="0x2afe3c684b80"/>
        <function-ref name="getUctl" scoped="" ref="0x2afe3c684d10"/>
        <function-ref name="disableUart" scoped="" ref="0x2afe3c683020"/>
        <function-ref name="enableSpi" scoped="" ref="0x2afe3c6831b0"/>
        <function-ref name="setModeUart" scoped="" ref="0x2afe3c683340"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2afe3c6834d0"/>
        <function-ref name="rx" scoped="" ref="0x2afe3c683660"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2afe3c6837f0"/>
        <function-ref name="isUartTx" scoped="" ref="0x2afe3c683980"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2afe3c683b10"/>
        <function-ref name="disableSpi" scoped="" ref="0x2afe3c683ca0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2afe3c683e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2afe3c65d6d0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x2afe3c65d6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3c65da70"/>
        <function-ref name="receivedByte" scoped="" ref="0x2afe3c65dc00"/>
        <function-ref name="receive" scoped="" ref="0x2afe3c65dd90"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2afe3c65c020"/>
        <function-ref name="receiveDone" scoped="" ref="0x2afe3c65c1b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2afe3c65c340"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3c65c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2afe3c682c90" loc="52:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2afe3c682c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afe3c681ac0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afe3c6804e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afe3c680020"/>
        <function-ref name="overflow" scoped="" ref="0x2afe3c6809a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x2afe3c688230" loc="48:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x2afe3c688230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afe3c6885d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afe3c688760"/>
        <function-ref name="request" scoped="" ref="0x2afe3c6888f0"/>
        <function-ref name="granted" scoped="" ref="0x2afe3c688a80"/>
        <function-ref name="isOwner" scoped="" ref="0x2afe3c688c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2afe3c65e020" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2afe3c65e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afe3c65e3c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afe3c65e550"/>
        <function-ref name="request" scoped="" ref="0x2afe3c65e6e0"/>
        <function-ref name="granted" scoped="" ref="0x2afe3c65e870"/>
        <function-ref name="isOwner" scoped="" ref="0x2afe3c65ea00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x2afe3c682290" loc="51:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x2afe3c682290"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2afe3c682630"/>
        <function-ref name="txDone" scoped="" ref="0x2afe3c6827c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2afe3c680dd0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2afe3c680dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2afe3c67f180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2afe3c67f310"/>
        <function-ref name="led1On" scoped="" ref="0x2afe3c67f4a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2afe3c67f630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2afe3c67f7c0"/>
        <function-ref name="get" scoped="" ref="0x2afe3c67f950"/>
        <function-ref name="led1Off" scoped="" ref="0x2afe3c67fae0"/>
        <function-ref name="led2On" scoped="" ref="0x2afe3c67e1b0"/>
        <function-ref name="set" scoped="" ref="0x2afe3c67fe00"/>
        <function-ref name="led2Off" scoped="" ref="0x2afe3c67fc70"/>
        <function-ref name="led0On" scoped="" ref="0x2afe3c67e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x2afe3c69d3b0" loc="78:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2afe3c69d3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2afe3c69d730"/>
        <function-ref name="txDone" scoped="" ref="0x2afe3c69d8c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2afe3c676080" loc="76:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x2afe3c676080"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2afe3c676400"/>
        <function-ref name="stop" scoped="" ref="0x2afe3c676590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x2afe3c6768b0" loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x2afe3c6768b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2afe3c676c30"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2afe3c676dc0"/>
        <function-ref name="setUctl" scoped="" ref="0x2afe3c675020"/>
        <function-ref name="enableUart" scoped="" ref="0x2afe3c6751b0"/>
        <function-ref name="setUrctl" scoped="" ref="0x2afe3c675340"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2afe3c6754d0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2afe3c675660"/>
        <function-ref name="getUtctl" scoped="" ref="0x2afe3c6757f0"/>
        <function-ref name="getUrctl" scoped="" ref="0x2afe3c675980"/>
        <function-ref name="resetUsart" scoped="" ref="0x2afe3c675b10"/>
        <function-ref name="getUmctl" scoped="" ref="0x2afe3c675ca0"/>
        <function-ref name="disableIntr" scoped="" ref="0x2afe3c675e30"/>
        <function-ref name="setUtctl" scoped="" ref="0x2afe3c6a0020"/>
        <function-ref name="getUbr" scoped="" ref="0x2afe3c6a02b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2afe3c6a0440"/>
        <function-ref name="setUmctl" scoped="" ref="0x2afe3c6a05d0"/>
        <function-ref name="isUartRx" scoped="" ref="0x2afe3c6a0760"/>
        <function-ref name="isUart" scoped="" ref="0x2afe3c6a08f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2afe3c6a0a80"/>
        <function-ref name="isSpi" scoped="" ref="0x2afe3c6a0c10"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2afe3c6a0da0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2afe3c69f020"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2afe3c69f1b0"/>
        <function-ref name="enableIntr" scoped="" ref="0x2afe3c69f340"/>
        <function-ref name="getMode" scoped="" ref="0x2afe3c69f4d0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2afe3c69f860"/>
        <function-ref name="clrIntr" scoped="" ref="0x2afe3c69f9f0"/>
        <function-ref name="setUbr" scoped="" ref="0x2afe3c69fb80"/>
        <function-ref name="tx" scoped="" ref="0x2afe3c69fd10"/>
        <function-ref name="getUctl" scoped="" ref="0x2afe3c69e020"/>
        <function-ref name="disableUart" scoped="" ref="0x2afe3c69e1b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2afe3c69e340"/>
        <function-ref name="setModeUart" scoped="" ref="0x2afe3c69e4d0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2afe3c69e660"/>
        <function-ref name="rx" scoped="" ref="0x2afe3c69e7f0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2afe3c69e980"/>
        <function-ref name="isUartTx" scoped="" ref="0x2afe3c69eb10"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2afe3c69eca0"/>
        <function-ref name="disableSpi" scoped="" ref="0x2afe3c69ee30"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2afe3c69d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x2afe3c6b4800" loc="80:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x2afe3c6b4800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c6b4b80"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c6b4d10"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c6b3020"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c6b31b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c6b3340"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c6b34d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c6b3660"/>
        <function-ref name="get" scoped="" ref="0x2afe3c6b37f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c6b3980"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c6b3b10"/>
        <function-ref name="set" scoped="" ref="0x2afe3c6b3ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c6b3e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c6b2020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c6b22b0"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c6b2440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2afe3c694dc0" loc="76:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2afe3c694dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2afe3c693180"/>
        <function-ref name="txDone" scoped="" ref="0x2afe3c693310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x2afe3c6b2800" loc="81:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x2afe3c6b2800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c6b2b80"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c6b2d10"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c6b1020"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c6b11b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c6b1340"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c6b14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c6b1660"/>
        <function-ref name="get" scoped="" ref="0x2afe3c6b17f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c6b1980"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c6b1b10"/>
        <function-ref name="set" scoped="" ref="0x2afe3c6b1ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c6b1e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c6b0020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c6b02b0"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c6b0440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x2afe3c6b0800" loc="82:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x2afe3c6b0800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c6b0b80"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c6b0d10"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c6af020"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c6af1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c6af340"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c6af4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c6af660"/>
        <function-ref name="get" scoped="" ref="0x2afe3c6af7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c6af980"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c6afb10"/>
        <function-ref name="set" scoped="" ref="0x2afe3c6afca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c6afe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c6ae020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c6ae2b0"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c6ae440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x2afe3c698020" loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x2afe3c698020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2afe3c6983a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2afe3c698530"/>
        <function-ref name="setUctl" scoped="" ref="0x2afe3c6986c0"/>
        <function-ref name="enableUart" scoped="" ref="0x2afe3c698850"/>
        <function-ref name="setUrctl" scoped="" ref="0x2afe3c6989e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2afe3c698b70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2afe3c698d00"/>
        <function-ref name="getUtctl" scoped="" ref="0x2afe3c697020"/>
        <function-ref name="getUrctl" scoped="" ref="0x2afe3c6971b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x2afe3c697340"/>
        <function-ref name="getUmctl" scoped="" ref="0x2afe3c6974d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x2afe3c697660"/>
        <function-ref name="setUtctl" scoped="" ref="0x2afe3c6977f0"/>
        <function-ref name="getUbr" scoped="" ref="0x2afe3c697a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2afe3c697c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x2afe3c697da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x2afe3c696020"/>
        <function-ref name="isUart" scoped="" ref="0x2afe3c6961b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2afe3c696340"/>
        <function-ref name="isSpi" scoped="" ref="0x2afe3c6964d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2afe3c696660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2afe3c6967f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2afe3c696980"/>
        <function-ref name="enableIntr" scoped="" ref="0x2afe3c696b10"/>
        <function-ref name="getMode" scoped="" ref="0x2afe3c696ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2afe3c695220"/>
        <function-ref name="clrIntr" scoped="" ref="0x2afe3c6953b0"/>
        <function-ref name="setUbr" scoped="" ref="0x2afe3c695540"/>
        <function-ref name="tx" scoped="" ref="0x2afe3c6956d0"/>
        <function-ref name="getUctl" scoped="" ref="0x2afe3c695860"/>
        <function-ref name="disableUart" scoped="" ref="0x2afe3c6959f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2afe3c695b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x2afe3c695d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2afe3c694020"/>
        <function-ref name="rx" scoped="" ref="0x2afe3c6941b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2afe3c694340"/>
        <function-ref name="isUartTx" scoped="" ref="0x2afe3c6944d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2afe3c694660"/>
        <function-ref name="disableSpi" scoped="" ref="0x2afe3c6947f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2afe3c694980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2afe3c69c710" loc="74:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x2afe3c69c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2afe3c69ca90"/>
        <function-ref name="stop" scoped="" ref="0x2afe3c69cc20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x2afe3c691800" loc="79:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x2afe3c691800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c691b80"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c691d10"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c6b5020"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c6b51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c6b5340"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c6b54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c6b5660"/>
        <function-ref name="get" scoped="" ref="0x2afe3c6b57f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c6b5980"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c6b5b10"/>
        <function-ref name="set" scoped="" ref="0x2afe3c6b5ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c6b5e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c6b4020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c6b42b0"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c6b4440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x2afe3c6b6860" loc="78:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x2afe3c6b6860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c6b6be0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c6b6d70"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c692020"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c6921b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c692340"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c6924d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c692660"/>
        <function-ref name="get" scoped="" ref="0x2afe3c6927f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c692980"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c692b10"/>
        <function-ref name="set" scoped="" ref="0x2afe3c692ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c692e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c691020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c6912b0"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c691440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x2afe3c726cc0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x2afe3c726cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c7250a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c725230"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c7253c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c725550"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c7256e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c725870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c725a00"/>
        <function-ref name="get" scoped="" ref="0x2afe3c725b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c725d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c724020"/>
        <function-ref name="set" scoped="" ref="0x2afe3c7241b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c724340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c7244d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c724760"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c7248f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x2afe3c743cc0" loc="66:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x2afe3c743cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c7420a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c742230"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c7423c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c742550"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c7426e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c742870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c742a00"/>
        <function-ref name="get" scoped="" ref="0x2afe3c742b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c742d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c741020"/>
        <function-ref name="set" scoped="" ref="0x2afe3c7411b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c741340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c7414d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c741760"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c7418f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x2afe3c78f3d0" loc="145:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x2afe3c78f3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c78f750"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c78f8e0"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c78fa70"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c78fc00"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c78fd90"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c78e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c78e1b0"/>
        <function-ref name="get" scoped="" ref="0x2afe3c78e340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c78e4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c78e660"/>
        <function-ref name="set" scoped="" ref="0x2afe3c78e7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c78e980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c78eb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c78eda0"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c78d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x2afe3c79d3e0" loc="165:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x2afe3c79d3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c79d760"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c79d8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c79da80"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c79dc10"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c79dda0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c79c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c79c1b0"/>
        <function-ref name="get" scoped="" ref="0x2afe3c79c340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c79c4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c79c660"/>
        <function-ref name="set" scoped="" ref="0x2afe3c79c7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c79c980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c79cb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c79cda0"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c79b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x2afe3c78d3f0" loc="146:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x2afe3c78d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c78d770"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c78d900"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c78da90"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c78dc20"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c78ddb0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c78b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c78b1b0"/>
        <function-ref name="get" scoped="" ref="0x2afe3c78b340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c78b4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c78b660"/>
        <function-ref name="set" scoped="" ref="0x2afe3c78b7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c78b980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c78bb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c78bda0"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c78a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x2afe3c73fcc0" loc="71:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x2afe3c73fcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c73e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c73e230"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c73e3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c73e550"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c73e6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c73e870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c73ea00"/>
        <function-ref name="get" scoped="" ref="0x2afe3c73eb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c73ed20"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c73d020"/>
        <function-ref name="set" scoped="" ref="0x2afe3c73d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c73d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c73d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c73d760"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c73d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x2afe3c75c020" loc="84:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x2afe3c75c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c75c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c75c530"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c75c6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c75c850"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c75c9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c75cb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c75cd00"/>
        <function-ref name="get" scoped="" ref="0x2afe3c75b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c75b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c75b340"/>
        <function-ref name="set" scoped="" ref="0x2afe3c75b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c75b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c75b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c75ba80"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c75bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x2afe3c779020" loc="97:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x2afe3c779020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c7793a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c779530"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c7796c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c779850"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c7799e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c779b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c779d00"/>
        <function-ref name="get" scoped="" ref="0x2afe3c778020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c7781b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c778340"/>
        <function-ref name="set" scoped="" ref="0x2afe3c7784d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c778660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c7787f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c778a80"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c778c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x2afe3c769020" loc="108:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x2afe3c769020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c7693a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c769530"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c7696c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c769850"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c7699e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c769b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c769d00"/>
        <function-ref name="get" scoped="" ref="0x2afe3c768020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c7681b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c768340"/>
        <function-ref name="set" scoped="" ref="0x2afe3c7684d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c768660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c7687f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c768a80"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c768c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x2afe3c7863f0" loc="149:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x2afe3c7863f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c786770"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c786900"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c786a90"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c786c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c786db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c785020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c7851b0"/>
        <function-ref name="get" scoped="" ref="0x2afe3c785340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c7854d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c785660"/>
        <function-ref name="set" scoped="" ref="0x2afe3c7857f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c785980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c785b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c785da0"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c784020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x2afe3c7a93e0" loc="159:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x2afe3c7a93e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c7a9760"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c7a98f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c7a9a80"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c7a9c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c7a9da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c7a8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c7a81b0"/>
        <function-ref name="get" scoped="" ref="0x2afe3c7a8340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c7a84d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c7a8660"/>
        <function-ref name="set" scoped="" ref="0x2afe3c7a87f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c7a8980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c7a8b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c7a8da0"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c7a7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x2afe3c7c93f0" loc="171:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x2afe3c7c93f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c7c9770"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c7c9900"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c7c9a90"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c7c9c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c7c9db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c7c8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c7c81b0"/>
        <function-ref name="get" scoped="" ref="0x2afe3c7c8340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c7c84d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c7c8660"/>
        <function-ref name="set" scoped="" ref="0x2afe3c7c87f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c7c8980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c7c8b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c7c8da0"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c7c7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x2afe3c71fcc0" loc="56:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x2afe3c71fcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c71e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c71e230"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c71e3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c71e550"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c71e6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c71e870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c71ea00"/>
        <function-ref name="get" scoped="" ref="0x2afe3c71eb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c71ed20"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c71d020"/>
        <function-ref name="set" scoped="" ref="0x2afe3c71d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c71d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c71d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c71d760"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c71d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x2afe3c7843f0" loc="150:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x2afe3c7843f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c784770"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c784900"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c784a90"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c784c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c784db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c783020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c7831b0"/>
        <function-ref name="get" scoped="" ref="0x2afe3c783340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c7834d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c783660"/>
        <function-ref name="set" scoped="" ref="0x2afe3c7837f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c783980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c783b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c783da0"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c782020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x2afe3c71bcc0" loc="61:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x2afe3c71bcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c71a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c71a230"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c71a3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c71a550"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c71a6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c71a870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c71aa00"/>
        <function-ref name="get" scoped="" ref="0x2afe3c71ab90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c71ad20"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c719020"/>
        <function-ref name="set" scoped="" ref="0x2afe3c7191b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c719340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c7194d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c719760"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c7198f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x2afe3c739cc0" loc="74:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x2afe3c739cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c7380a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c738230"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c7383c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c738550"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c7386e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c738870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c738a00"/>
        <function-ref name="get" scoped="" ref="0x2afe3c738b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c738d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c737020"/>
        <function-ref name="set" scoped="" ref="0x2afe3c7371b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c737340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c7374d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c737760"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c7378f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x2afe3c755020" loc="87:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x2afe3c755020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c7553a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c755530"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c7556c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c755850"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c7559e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c755b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c755d00"/>
        <function-ref name="get" scoped="" ref="0x2afe3c754020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c7541b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c754340"/>
        <function-ref name="set" scoped="" ref="0x2afe3c7544d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c754660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c7547f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c754a80"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c754c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x2afe3c773020" loc="100:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x2afe3c773020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c7733a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c773530"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c7736c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c773850"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c7739e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c773b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c773d00"/>
        <function-ref name="get" scoped="" ref="0x2afe3c772020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c7721b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c772340"/>
        <function-ref name="set" scoped="" ref="0x2afe3c7724d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c772660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c7727f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c772a80"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c772c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x2afe3c795020" loc="111:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x2afe3c795020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c7953a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c795530"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c7956c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c795850"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c7959e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c795b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c795d00"/>
        <function-ref name="get" scoped="" ref="0x2afe3c794020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c7941b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c794340"/>
        <function-ref name="set" scoped="" ref="0x2afe3c7944d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c794660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c7947f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c794a80"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c794c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x2afe3c72acc0" loc="51:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x2afe3c72acc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c7290a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c729230"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c7293c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c729550"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c7296e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c729870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c729a00"/>
        <function-ref name="get" scoped="" ref="0x2afe3c729b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c729d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c728020"/>
        <function-ref name="set" scoped="" ref="0x2afe3c7281b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c728340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c7284d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c728760"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c7288f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x2afe3c747cc0" loc="64:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x2afe3c747cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c746180"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c746310"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c7464a0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c746630"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c7467c0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c746950"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c746ae0"/>
        <function-ref name="get" scoped="" ref="0x2afe3c746c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c746e00"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c745020"/>
        <function-ref name="set" scoped="" ref="0x2afe3c7451b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c745340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c7454d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c745760"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c7458f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x2afe3c733cc0" loc="77:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x2afe3c733cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c7320a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c732230"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c7323c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c732550"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c7326e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c732870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c732a00"/>
        <function-ref name="get" scoped="" ref="0x2afe3c732b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c732d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c763020"/>
        <function-ref name="set" scoped="" ref="0x2afe3c7631b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c763340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c7634d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c763760"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c7638f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x2afe3c7913f0" loc="144:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x2afe3c7913f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c791770"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c791900"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c791a90"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c791c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c791db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c790020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c7901b0"/>
        <function-ref name="get" scoped="" ref="0x2afe3c790340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c7904d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c790660"/>
        <function-ref name="set" scoped="" ref="0x2afe3c7907f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c790980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c790b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c790da0"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c78f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x2afe3c7a33e0" loc="162:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x2afe3c7a33e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c7a3760"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c7a38f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c7a3a80"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c7a3c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c7a3da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c7a2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c7a21b0"/>
        <function-ref name="get" scoped="" ref="0x2afe3c7a2340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c7a24d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c7a2660"/>
        <function-ref name="set" scoped="" ref="0x2afe3c7a27f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c7a2980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c7a2b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c7a2da0"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c7a1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x2afe3c7973e0" loc="169:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x2afe3c7973e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c797760"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c7978f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c797a80"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c797c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c797da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c796020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c7961b0"/>
        <function-ref name="get" scoped="" ref="0x2afe3c796340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c7964d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c796660"/>
        <function-ref name="set" scoped="" ref="0x2afe3c7967f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c796980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c796b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c796da0"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c7c9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x2afe3c7af3f0" loc="155:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x2afe3c7af3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c7af770"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c7af900"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c7afa90"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c7afc20"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c7afdb0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c7ae020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c7ae1b0"/>
        <function-ref name="get" scoped="" ref="0x2afe3c7ae340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c7ae4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c7ae660"/>
        <function-ref name="set" scoped="" ref="0x2afe3c7ae7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c7ae980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c7aeb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c7aeda0"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c7ad020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x2afe3c761cc0" loc="82:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x2afe3c761cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c760410"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c7605a0"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c760730"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c7608c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c760a50"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c760be0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c760d70"/>
        <function-ref name="get" scoped="" ref="0x2afe3c75f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c75f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c75f340"/>
        <function-ref name="set" scoped="" ref="0x2afe3c75f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c75f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c75f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c75fa80"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c75fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x2afe3c74b020" loc="95:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x2afe3c74b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c74b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c74b530"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c74b6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c74b850"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c74b9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c74bb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c74bd00"/>
        <function-ref name="get" scoped="" ref="0x2afe3c77c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c77c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c77c340"/>
        <function-ref name="set" scoped="" ref="0x2afe3c77c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c77c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c77c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c77ca80"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c77cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x2afe3c76d020" loc="106:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x2afe3c76d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c76d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c76d530"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c76d6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c76d850"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c76d9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c76db70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c76dd00"/>
        <function-ref name="get" scoped="" ref="0x2afe3c76c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c76c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c76c340"/>
        <function-ref name="set" scoped="" ref="0x2afe3c76c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c76c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c76c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c76ca80"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c76cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x2afe3c7a13e0" loc="163:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x2afe3c7a13e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c7a1760"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c7a18f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c7a1a80"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c7a1c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c7a1da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c7a0020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c7a01b0"/>
        <function-ref name="get" scoped="" ref="0x2afe3c7a0340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c7a04d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c7a0660"/>
        <function-ref name="set" scoped="" ref="0x2afe3c7a07f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c7a0980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c7a0b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c7a0da0"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c79f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x2afe3c7823e0" loc="152:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x2afe3c7823e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c782760"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c7828f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c782a80"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c782c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c782da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c781020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c7811b0"/>
        <function-ref name="get" scoped="" ref="0x2afe3c781340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c7814d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c781660"/>
        <function-ref name="set" scoped="" ref="0x2afe3c7817f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c781980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c781b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c781da0"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c780020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x2afe3c724cc0" loc="54:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x2afe3c724cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c7220a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c722230"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c7223c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c722550"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c7226e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c722870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c722a00"/>
        <function-ref name="get" scoped="" ref="0x2afe3c722b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c722d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c721020"/>
        <function-ref name="set" scoped="" ref="0x2afe3c7211b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c721340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c7214d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c721760"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c7218f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x2afe3c741cc0" loc="67:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x2afe3c741cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c7400a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c740230"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c7403c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c740550"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c7406e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c740870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c740a00"/>
        <function-ref name="get" scoped="" ref="0x2afe3c740b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c740d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c73f020"/>
        <function-ref name="set" scoped="" ref="0x2afe3c73f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c73f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c73f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c73f760"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c73f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x2afe3c771020" loc="104:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x2afe3c771020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c7713a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c771530"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c7716c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c771850"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c7719e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c771b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c771d00"/>
        <function-ref name="get" scoped="" ref="0x2afe3c770020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c7701b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c770340"/>
        <function-ref name="set" scoped="" ref="0x2afe3c7704d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c770660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c7707f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c770a80"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c770c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x2afe3c73dcc0" loc="72:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x2afe3c73dcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c73c0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c73c230"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c73c3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c73c550"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c73c6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c73c870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c73ca00"/>
        <function-ref name="get" scoped="" ref="0x2afe3c73cb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c73cd20"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c73b020"/>
        <function-ref name="set" scoped="" ref="0x2afe3c73b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c73b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c73b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c73b760"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c73b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x2afe3c75a020" loc="85:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x2afe3c75a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c75a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c75a530"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c75a6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c75a850"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c75a9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c75ab70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c75ad00"/>
        <function-ref name="get" scoped="" ref="0x2afe3c759020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c7591b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c759340"/>
        <function-ref name="set" scoped="" ref="0x2afe3c7594d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c759660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c7597f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c759a80"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c759c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x2afe3c777020" loc="98:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x2afe3c777020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c7773a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c777530"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c7776c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c777850"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c7779e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c777b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c777d00"/>
        <function-ref name="get" scoped="" ref="0x2afe3c776020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c7761b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c776340"/>
        <function-ref name="set" scoped="" ref="0x2afe3c7764d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c776660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c7767f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c776a80"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c776c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x2afe3c767020" loc="109:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x2afe3c767020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c7673a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c767530"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c7676c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c767850"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c7679e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c767b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c767d00"/>
        <function-ref name="get" scoped="" ref="0x2afe3c766020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c7661b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c766340"/>
        <function-ref name="set" scoped="" ref="0x2afe3c7664d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c766660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c7667f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c766a80"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c766c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x2afe3c77e3f0" loc="154:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x2afe3c77e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c77e770"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c77e900"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c77ea90"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c77ec20"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c77edb0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c77d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c77d1b0"/>
        <function-ref name="get" scoped="" ref="0x2afe3c77d340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c77d4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c77d660"/>
        <function-ref name="set" scoped="" ref="0x2afe3c77d7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c77d980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c77db10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c77dda0"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c7af020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x2afe3c730e10" loc="49:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x2afe3c730e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c72d1c0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c72d350"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c72d4e0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c72d670"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c72d800"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c72d990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c72db20"/>
        <function-ref name="get" scoped="" ref="0x2afe3c72dcb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c72de40"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c72c020"/>
        <function-ref name="set" scoped="" ref="0x2afe3c72c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c72c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c72c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c72c760"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c72c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x2afe3c719cc0" loc="62:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x2afe3c719cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c74a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c74a230"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c74a3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c74a550"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c74a6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c74a870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c74aa00"/>
        <function-ref name="get" scoped="" ref="0x2afe3c74ab90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c74ad20"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c749020"/>
        <function-ref name="set" scoped="" ref="0x2afe3c7491b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c749340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c7494d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c749760"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c7498f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x2afe3c737cc0" loc="75:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x2afe3c737cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c7360a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c736230"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c7363c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c736550"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c7366e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c736870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c736a00"/>
        <function-ref name="get" scoped="" ref="0x2afe3c736b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c736d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c735020"/>
        <function-ref name="set" scoped="" ref="0x2afe3c7351b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c735340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c7354d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c735760"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c7358f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x2afe3c753020" loc="88:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x2afe3c753020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c7533a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c753530"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c7536c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c753850"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c7539e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c753b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c753d00"/>
        <function-ref name="get" scoped="" ref="0x2afe3c752020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c7521b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c752340"/>
        <function-ref name="set" scoped="" ref="0x2afe3c7524d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c752660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c7527f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c752a80"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c752c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x2afe3c7ad3f0" loc="156:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x2afe3c7ad3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c7ad770"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c7ad900"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c7ada90"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c7adc20"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c7addb0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c7ac020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c7ac1b0"/>
        <function-ref name="get" scoped="" ref="0x2afe3c7ac340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c7ac4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c7ac660"/>
        <function-ref name="set" scoped="" ref="0x2afe3c7ac7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c7ac980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c7acb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c7acda0"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c7ab020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x2afe3c7a73e0" loc="160:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x2afe3c7a73e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c7a7760"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c7a78f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c7a7a80"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c7a7c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c7a7da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c7a6020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c7a61b0"/>
        <function-ref name="get" scoped="" ref="0x2afe3c7a6340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c7a64d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c7a6660"/>
        <function-ref name="set" scoped="" ref="0x2afe3c7a67f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c7a6980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c7a6b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c7a6da0"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c7a5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x2afe3c79b3e0" loc="166:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x2afe3c79b3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c79b760"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c79b8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c79ba80"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c79bc10"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c79bda0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c79a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c79a1b0"/>
        <function-ref name="get" scoped="" ref="0x2afe3c79a340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c79a4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c79a660"/>
        <function-ref name="set" scoped="" ref="0x2afe3c79a7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c79a980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c79ab10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c79ada0"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c799020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x2afe3c74f020" loc="93:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x2afe3c74f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c74f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c74f530"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c74f6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c74f850"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c74f9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c74fb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c74fd00"/>
        <function-ref name="get" scoped="" ref="0x2afe3c74e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c74e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c74e340"/>
        <function-ref name="set" scoped="" ref="0x2afe3c74e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c74e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c74e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c74ea80"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c74ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x2afe3c7ab3f0" loc="157:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x2afe3c7ab3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c7ab770"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c7ab900"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c7aba90"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c7abc20"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c7abdb0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c7aa020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c7aa1b0"/>
        <function-ref name="get" scoped="" ref="0x2afe3c7aa340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c7aa4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c7aa660"/>
        <function-ref name="set" scoped="" ref="0x2afe3c7aa7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c7aa980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c7aab10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c7aada0"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c7a9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x2afe3c728cc0" loc="52:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x2afe3c728cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c7270a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c727230"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c7273c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c727550"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c7276e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c727870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c727a00"/>
        <function-ref name="get" scoped="" ref="0x2afe3c727b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c727d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c726020"/>
        <function-ref name="set" scoped="" ref="0x2afe3c7261b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c726340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c7264d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c726760"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c7268f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x2afe3c745cc0" loc="65:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x2afe3c745cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c7440a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c744230"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c7443c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c744550"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c7446e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c744870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c744a00"/>
        <function-ref name="get" scoped="" ref="0x2afe3c744b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c744d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c743020"/>
        <function-ref name="set" scoped="" ref="0x2afe3c7431b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c743340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c7434d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c743760"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c7438f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x2afe3c763cc0" loc="78:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x2afe3c763cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c7620a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c762230"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c7623c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c762550"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c7626e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c762870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c762a00"/>
        <function-ref name="get" scoped="" ref="0x2afe3c762b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c762d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c761020"/>
        <function-ref name="set" scoped="" ref="0x2afe3c7611b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c761340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c7614d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c761760"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c7618f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x2afe3c7803f0" loc="153:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x2afe3c7803f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c780770"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c780900"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c780a90"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c780c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c780db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c77f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c77f1b0"/>
        <function-ref name="get" scoped="" ref="0x2afe3c77f340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c77f4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c77f660"/>
        <function-ref name="set" scoped="" ref="0x2afe3c77f7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c77f980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c77fb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c77fda0"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c77e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x2afe3c79f3e0" loc="164:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x2afe3c79f3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c79f760"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c79f8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c79fa80"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c79fc10"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c79fda0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c79e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c79e1b0"/>
        <function-ref name="get" scoped="" ref="0x2afe3c79e340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c79e4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c79e660"/>
        <function-ref name="set" scoped="" ref="0x2afe3c79e7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c79e980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c79eb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c79eda0"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c79d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x2afe3c75e020" loc="83:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x2afe3c75e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c75e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c75e530"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c75e6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c75e850"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c75e9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c75eb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c75ed00"/>
        <function-ref name="get" scoped="" ref="0x2afe3c75d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c75d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c75d340"/>
        <function-ref name="set" scoped="" ref="0x2afe3c75d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c75d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c75d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c75da80"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c75dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x2afe3c77b020" loc="96:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x2afe3c77b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c77b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c77b530"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c77b6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c77b850"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c77b9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c77bb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c77bd00"/>
        <function-ref name="get" scoped="" ref="0x2afe3c77a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c77a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c77a340"/>
        <function-ref name="set" scoped="" ref="0x2afe3c77a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c77a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c77a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c77aa80"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c77ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x2afe3c76b020" loc="107:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x2afe3c76b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c76b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c76b530"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c76b6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c76b850"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c76b9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c76bb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c76bd00"/>
        <function-ref name="get" scoped="" ref="0x2afe3c76a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c76a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c76a340"/>
        <function-ref name="set" scoped="" ref="0x2afe3c76a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c76a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c76a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c76aa80"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c76ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x2afe3c721cc0" loc="55:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x2afe3c721cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c7200a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c720230"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c7203c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c720550"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c7206e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c720870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c720a00"/>
        <function-ref name="get" scoped="" ref="0x2afe3c720b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c720d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c71f020"/>
        <function-ref name="set" scoped="" ref="0x2afe3c71f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c71f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c71f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c71f760"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c71f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x2afe3c76f020" loc="105:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x2afe3c76f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c76f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c76f530"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c76f6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c76f850"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c76f9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c76fb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c76fd00"/>
        <function-ref name="get" scoped="" ref="0x2afe3c76e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c76e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c76e340"/>
        <function-ref name="set" scoped="" ref="0x2afe3c76e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c76e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c76e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c76ea80"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c76ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x2afe3c71dcc0" loc="60:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x2afe3c71dcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c71c0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c71c230"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c71c3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c71c550"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c71c6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c71c870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c71ca00"/>
        <function-ref name="get" scoped="" ref="0x2afe3c71cb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c71cd20"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c71b020"/>
        <function-ref name="set" scoped="" ref="0x2afe3c71b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c71b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c71b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c71b760"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c71b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x2afe3c73bcc0" loc="73:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x2afe3c73bcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c73a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c73a230"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c73a3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c73a550"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c73a6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c73a870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c73aa00"/>
        <function-ref name="get" scoped="" ref="0x2afe3c73ab90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c73ad20"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c739020"/>
        <function-ref name="set" scoped="" ref="0x2afe3c7391b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c739340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c7394d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c739760"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c7398f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x2afe3c757020" loc="86:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x2afe3c757020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c7573a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c757530"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c7576c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c757850"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c7579e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c757b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c757d00"/>
        <function-ref name="get" scoped="" ref="0x2afe3c756020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c7561b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c756340"/>
        <function-ref name="set" scoped="" ref="0x2afe3c7564d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c756660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c7567f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c756a80"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c756c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x2afe3c775020" loc="99:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x2afe3c775020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c7753a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c775530"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c7756c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c775850"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c7759e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c775b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c775d00"/>
        <function-ref name="get" scoped="" ref="0x2afe3c774020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c7741b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c774340"/>
        <function-ref name="set" scoped="" ref="0x2afe3c7744d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c774660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c7747f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c774a80"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c774c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x2afe3c765020" loc="110:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x2afe3c765020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c7653a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c765530"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c7656c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c765850"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c7659e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c765b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c765d00"/>
        <function-ref name="get" scoped="" ref="0x2afe3c764020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c7641b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c764340"/>
        <function-ref name="set" scoped="" ref="0x2afe3c7644d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c764660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c7647f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c764a80"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c764c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x2afe3c72ccc0" loc="50:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x2afe3c72ccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c72b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c72b230"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c72b3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c72b550"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c72b6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c72b870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c72ba00"/>
        <function-ref name="get" scoped="" ref="0x2afe3c72bb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c72bd20"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c72a020"/>
        <function-ref name="set" scoped="" ref="0x2afe3c72a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c72a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c72a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c72a760"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c72a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x2afe3c749cc0" loc="63:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x2afe3c749cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c7480a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c748230"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c7483c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c748550"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c7486e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c748870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c748a00"/>
        <function-ref name="get" scoped="" ref="0x2afe3c748b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c748d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c747020"/>
        <function-ref name="set" scoped="" ref="0x2afe3c7471b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c747340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c7474d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c747760"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c7478f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x2afe3c735cc0" loc="76:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x2afe3c735cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c7340a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c734230"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c7343c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c734550"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c7346e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c734870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c734a00"/>
        <function-ref name="get" scoped="" ref="0x2afe3c734b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c734d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c733020"/>
        <function-ref name="set" scoped="" ref="0x2afe3c7331b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c733340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c7334d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c733760"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c7338f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x2afe3c751020" loc="89:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x2afe3c751020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c7513a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c751530"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c7516c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c751850"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c7519e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c751b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c751d00"/>
        <function-ref name="get" scoped="" ref="0x2afe3c750020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c7501b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c750340"/>
        <function-ref name="set" scoped="" ref="0x2afe3c7504d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c750660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c7507f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c750a80"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c750c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x2afe3c7883d0" loc="148:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x2afe3c7883d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c788750"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c7888e0"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c788a70"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c788c00"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c788d90"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c787020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c7871b0"/>
        <function-ref name="get" scoped="" ref="0x2afe3c787340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c7874d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c787660"/>
        <function-ref name="set" scoped="" ref="0x2afe3c7877f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c787980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c787b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c787da0"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c786020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x2afe3c7a53e0" loc="161:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x2afe3c7a53e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c7a5760"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c7a58f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c7a5a80"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c7a5c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c7a5da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c7a4020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c7a41b0"/>
        <function-ref name="get" scoped="" ref="0x2afe3c7a4340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c7a44d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c7a4660"/>
        <function-ref name="set" scoped="" ref="0x2afe3c7a47f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c7a4980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c7a4b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c7a4da0"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c7a3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x2afe3c78a3f0" loc="147:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x2afe3c78a3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c78a770"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c78a900"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c78aa90"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c78ac20"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c78adb0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c789020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c7891b0"/>
        <function-ref name="get" scoped="" ref="0x2afe3c789340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c7894d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c789660"/>
        <function-ref name="set" scoped="" ref="0x2afe3c7897f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c789980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c789b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c789da0"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c788020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x2afe3c74d020" loc="94:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x2afe3c74d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c74d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c74d530"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c74d6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c74d850"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c74d9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c74db70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c74dd00"/>
        <function-ref name="get" scoped="" ref="0x2afe3c74c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c74c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c74c340"/>
        <function-ref name="set" scoped="" ref="0x2afe3c74c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c74c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c74c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c74ca80"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c74cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x2afe3c7993e0" loc="168:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x2afe3c7993e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c799760"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c7998f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c799a80"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c799c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c799da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c798020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c7981b0"/>
        <function-ref name="get" scoped="" ref="0x2afe3c798340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c7984d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c798660"/>
        <function-ref name="set" scoped="" ref="0x2afe3c7987f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c798980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c798b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c798da0"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c797020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x2afe3c7c73f0" loc="172:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x2afe3c7c73f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c7c7770"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c7c7900"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c7c7a90"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c7c7c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c7c7db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c7c6020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c7c61b0"/>
        <function-ref name="get" scoped="" ref="0x2afe3c7c6340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c7c64d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c7c6660"/>
        <function-ref name="set" scoped="" ref="0x2afe3c7c67f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c7c6980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c7c6b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c7c6da0"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c7c5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x2afe3c793060" loc="143:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x2afe3c793060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c7937e0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c793970"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c793b00"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c793c90"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c793e20"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c792020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c7921b0"/>
        <function-ref name="get" scoped="" ref="0x2afe3c792340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c7924d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c792660"/>
        <function-ref name="set" scoped="" ref="0x2afe3c7927f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c792980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c792b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c792da0"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c791020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afe3c7cf3f0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afe3c7cf3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c7cf770"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c7cf900"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c7cfa90"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c7cfc20"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c7cfdb0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c7ce020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c7ce1b0"/>
        <function-ref name="get" scoped="" ref="0x2afe3c7ce340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c7ce4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c7ce660"/>
        <function-ref name="set" scoped="" ref="0x2afe3c7ce7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c7ce980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c7ceb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c7ceda0"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c7cd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afe3c7cbe00" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afe3c7cbe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c7ca1c0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c7ca350"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c7ca4e0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c7ca670"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c7ca800"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c7ca990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c7cab20"/>
        <function-ref name="get" scoped="" ref="0x2afe3c7cacb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c7cae40"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c7fd020"/>
        <function-ref name="set" scoped="" ref="0x2afe3c7fd1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c7fd340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c7fd4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c7fd760"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c7fd8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afe3c7fa740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afe3c7fa740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c7faac0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c7fac50"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c7fade0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c7f9020"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c7f91b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c7f9340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c7f94d0"/>
        <function-ref name="get" scoped="" ref="0x2afe3c7f9660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c7f97f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c7f9980"/>
        <function-ref name="set" scoped="" ref="0x2afe3c7f9b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c7f9ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c7f9e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c7f8120"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c7f82b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afe3c7f5100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afe3c7f5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c7f5480"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c7f5610"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c7f57a0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c7f5930"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c7f5ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c7f5c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c7f5de0"/>
        <function-ref name="get" scoped="" ref="0x2afe3c7f4020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c7f41b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c7f4340"/>
        <function-ref name="set" scoped="" ref="0x2afe3c7f44d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c7f4660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c7f47f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c7f4a80"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c7f4c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afe3c7f1d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afe3c7f1d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c7f00e0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c7f0270"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c7f0400"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c7f0590"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c7f0720"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c7f08b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c7f0a40"/>
        <function-ref name="get" scoped="" ref="0x2afe3c7f0bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c7f0d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c7ef020"/>
        <function-ref name="set" scoped="" ref="0x2afe3c7ef1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c7ef340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c7ef4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c7ef760"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c7ef8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afe3c7ec740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afe3c7ec740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c7ecac0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c7ecc50"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c7ecde0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c7eb020"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c7eb1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c7eb340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c7eb4d0"/>
        <function-ref name="get" scoped="" ref="0x2afe3c7eb660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c7eb7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c7eb980"/>
        <function-ref name="set" scoped="" ref="0x2afe3c7ebb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c7ebca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c7ebe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c7ea120"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c7ea2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afe3c7e7100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afe3c7e7100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c7e7480"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c7e7610"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c7e77a0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c7e7930"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c7e7ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c7e7c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c7e7de0"/>
        <function-ref name="get" scoped="" ref="0x2afe3c7e6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c7e61b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c7e6340"/>
        <function-ref name="set" scoped="" ref="0x2afe3c7e64d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c7e6660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c7e67f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c7e6a80"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c7e6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afe3c816d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afe3c816d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c8150e0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c815270"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c815400"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c815590"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c815720"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c8158b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c815a40"/>
        <function-ref name="get" scoped="" ref="0x2afe3c815bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c815d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c814020"/>
        <function-ref name="set" scoped="" ref="0x2afe3c8141b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c814340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c8144d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c814760"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c8148f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afe3c811740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afe3c811740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c811ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c811c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c811de0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c810020"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c8101b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c810340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c8104d0"/>
        <function-ref name="get" scoped="" ref="0x2afe3c810660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c8107f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c810980"/>
        <function-ref name="set" scoped="" ref="0x2afe3c810b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c810ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c810e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c80f120"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c80f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afe3c80c100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afe3c80c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c80c480"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c80c610"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c80c7a0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c80c930"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c80cac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c80cc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c80cde0"/>
        <function-ref name="get" scoped="" ref="0x2afe3c80b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c80b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c80b340"/>
        <function-ref name="set" scoped="" ref="0x2afe3c80b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c80b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c80b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c80ba80"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c80bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afe3c808d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afe3c808d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c8070e0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c807270"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c807400"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c807590"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c807720"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c8078b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c807a40"/>
        <function-ref name="get" scoped="" ref="0x2afe3c807bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c807d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c806020"/>
        <function-ref name="set" scoped="" ref="0x2afe3c8061b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c806340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c8064d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c806760"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c8068f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afe3c803740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afe3c803740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c803ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c803c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c803de0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c802020"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c8021b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c802340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c8024d0"/>
        <function-ref name="get" scoped="" ref="0x2afe3c802660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c8027f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c802980"/>
        <function-ref name="set" scoped="" ref="0x2afe3c802b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c802ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c802e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c801120"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c8012b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afe3c7fe260" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afe3c7fe260"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c7fe5e0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c7fe770"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c7fe900"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c7fea90"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c7fec20"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c7fedb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c832020"/>
        <function-ref name="get" scoped="" ref="0x2afe3c8321b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c832340"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c8324d0"/>
        <function-ref name="set" scoped="" ref="0x2afe3c832660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c8327f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c832980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c832c10"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c832da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afe3c82fd10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afe3c82fd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c82e0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c82e270"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c82e400"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c82e590"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c82e720"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c82e8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c82ea40"/>
        <function-ref name="get" scoped="" ref="0x2afe3c82ebd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c82ed60"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c82d020"/>
        <function-ref name="set" scoped="" ref="0x2afe3c82d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c82d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c82d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c82d760"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c82d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afe3c82a740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afe3c82a740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c82aac0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c82ac50"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c82ade0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c828020"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c8281b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c828340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c8284d0"/>
        <function-ref name="get" scoped="" ref="0x2afe3c828660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c8287f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c828980"/>
        <function-ref name="set" scoped="" ref="0x2afe3c828b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c828ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c828e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c827120"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c8272b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afe3c824100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afe3c824100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c824480"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c824610"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c8247a0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c824930"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c824ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c824c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c824de0"/>
        <function-ref name="get" scoped="" ref="0x2afe3c823020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c8231b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c823340"/>
        <function-ref name="set" scoped="" ref="0x2afe3c8234d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c823660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c8237f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c823a80"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c823c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afe3c820d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afe3c820d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c81f0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c81f270"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c81f400"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c81f590"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c81f720"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c81f8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c81fa40"/>
        <function-ref name="get" scoped="" ref="0x2afe3c81fbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c81fd60"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c81e020"/>
        <function-ref name="set" scoped="" ref="0x2afe3c81e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c81e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c81e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c81e760"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c81e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afe3c81b740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afe3c81b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c81bac0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c81bc50"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c81bde0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c81a020"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c81a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c81a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c81a4d0"/>
        <function-ref name="get" scoped="" ref="0x2afe3c81a660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c81a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c81a980"/>
        <function-ref name="set" scoped="" ref="0x2afe3c81ab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c81aca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c81ae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c819120"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c8192b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afe3c84c100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afe3c84c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c84c480"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c84c610"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c84c7a0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c84c930"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c84cac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c84cc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c84cde0"/>
        <function-ref name="get" scoped="" ref="0x2afe3c84b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c84b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c84b340"/>
        <function-ref name="set" scoped="" ref="0x2afe3c84b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c84b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c84b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c84ba80"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c84bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afe3c848d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afe3c848d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c8470e0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c847270"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c847400"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c847590"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c847720"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c8478b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c847a40"/>
        <function-ref name="get" scoped="" ref="0x2afe3c847bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c847d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c846020"/>
        <function-ref name="set" scoped="" ref="0x2afe3c8461b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c846340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c8464d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c846760"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c8468f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afe3c843740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afe3c843740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c843ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c843c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c843de0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c842020"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c8421b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c842340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c8424d0"/>
        <function-ref name="get" scoped="" ref="0x2afe3c842660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c8427f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c842980"/>
        <function-ref name="set" scoped="" ref="0x2afe3c842b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c842ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c842e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c841120"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c8412b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afe3c83e100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afe3c83e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c83e480"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c83e610"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c83e7a0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c83e930"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c83eac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c83ec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c83ede0"/>
        <function-ref name="get" scoped="" ref="0x2afe3c83d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c83d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c83d340"/>
        <function-ref name="set" scoped="" ref="0x2afe3c83d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c83d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c83d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c83da80"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c83dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afe3c83ad10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afe3c83ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c8380e0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c838270"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c838400"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c838590"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c838720"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c8388b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c838a40"/>
        <function-ref name="get" scoped="" ref="0x2afe3c838bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c838d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c837020"/>
        <function-ref name="set" scoped="" ref="0x2afe3c8371b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c837340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c8374d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c837760"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c8378f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afe3c834740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afe3c834740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c834ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c834c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c834de0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c833020"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c8331b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c833340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c8334d0"/>
        <function-ref name="get" scoped="" ref="0x2afe3c833660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c8337f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c833980"/>
        <function-ref name="set" scoped="" ref="0x2afe3c833b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c833ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c833e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c868120"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c8682b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afe3c8653f0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afe3c8653f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c865770"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c865900"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c865a90"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c865c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c865db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c864020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c8641b0"/>
        <function-ref name="get" scoped="" ref="0x2afe3c864340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c8644d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c864660"/>
        <function-ref name="set" scoped="" ref="0x2afe3c8647f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c864980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c864b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c864da0"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c863020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afe3c861e00" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afe3c861e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c8601c0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c860350"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c8604e0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c860670"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c860800"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c860990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c860b20"/>
        <function-ref name="get" scoped="" ref="0x2afe3c860cb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c860e40"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c85f020"/>
        <function-ref name="set" scoped="" ref="0x2afe3c85f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c85f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c85f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c85f760"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c85f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afe3c85c740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afe3c85c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c85cac0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c85cc50"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c85cde0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c85b020"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c85b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c85b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c85b4d0"/>
        <function-ref name="get" scoped="" ref="0x2afe3c85b660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c85b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c85b980"/>
        <function-ref name="set" scoped="" ref="0x2afe3c85bb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c85bca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c85be30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c85a120"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c85a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afe3c857100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afe3c857100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c857480"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c857610"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c8577a0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c857930"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c857ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c857c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c857de0"/>
        <function-ref name="get" scoped="" ref="0x2afe3c856020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c8561b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c856340"/>
        <function-ref name="set" scoped="" ref="0x2afe3c8564d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c856660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c8567f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c856a80"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c856c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afe3c853d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afe3c853d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c8520e0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c852270"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c852400"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c852590"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c852720"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c8528b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c852a40"/>
        <function-ref name="get" scoped="" ref="0x2afe3c852bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c852d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c851020"/>
        <function-ref name="set" scoped="" ref="0x2afe3c8511b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c851340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c8514d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c851760"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c8518f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afe3c84e740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afe3c84e740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c84eac0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c84ec50"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c84ede0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c883020"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c8831b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c883340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c8834d0"/>
        <function-ref name="get" scoped="" ref="0x2afe3c883660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c8837f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c883980"/>
        <function-ref name="set" scoped="" ref="0x2afe3c883b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c883ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c883e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c882120"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c8822b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afe3c87e100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afe3c87e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c87e480"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c87e610"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c87e7a0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c87e930"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c87eac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c87ec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c87ede0"/>
        <function-ref name="get" scoped="" ref="0x2afe3c87d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c87d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c87d340"/>
        <function-ref name="set" scoped="" ref="0x2afe3c87d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c87d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c87d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c87da80"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c87dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afe3c87ad10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afe3c87ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c8790e0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c879270"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c879400"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c879590"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c879720"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c8798b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c879a40"/>
        <function-ref name="get" scoped="" ref="0x2afe3c879bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c879d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c878020"/>
        <function-ref name="set" scoped="" ref="0x2afe3c8781b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c878340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c8784d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c878760"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c8788f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afe3c875740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afe3c875740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c875ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c875c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c875de0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c874020"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c8741b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c874340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c8744d0"/>
        <function-ref name="get" scoped="" ref="0x2afe3c874660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c8747f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c874980"/>
        <function-ref name="set" scoped="" ref="0x2afe3c874b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c874ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c874e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c873120"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c8732b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afe3c870100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afe3c870100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c870480"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c870610"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c8707a0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c870930"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c870ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c870c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c870de0"/>
        <function-ref name="get" scoped="" ref="0x2afe3c86f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c86f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c86f340"/>
        <function-ref name="set" scoped="" ref="0x2afe3c86f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c86f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c86f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c86fa80"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c86fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afe3c86cd10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afe3c86cd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c86b0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c86b270"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c86b400"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c86b590"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c86b720"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c86b8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c86ba40"/>
        <function-ref name="get" scoped="" ref="0x2afe3c86bbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c86bd60"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c86a020"/>
        <function-ref name="set" scoped="" ref="0x2afe3c86a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c86a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c86a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c86a760"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c86a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afe3c89d740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afe3c89d740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c89dac0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c89dc50"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c89dde0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c89c020"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c89c1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c89c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c89c4d0"/>
        <function-ref name="get" scoped="" ref="0x2afe3c89c660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c89c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c89c980"/>
        <function-ref name="set" scoped="" ref="0x2afe3c89cb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c89cca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c89ce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c89b120"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c89b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afe3c898100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afe3c898100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c898480"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c898610"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c8987a0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c898930"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c898ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c898c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c898de0"/>
        <function-ref name="get" scoped="" ref="0x2afe3c897020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c8971b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c897340"/>
        <function-ref name="set" scoped="" ref="0x2afe3c8974d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c897660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c8977f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c897a80"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c897c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afe3c894d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afe3c894d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c8920e0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c892270"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c892400"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c892590"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c892720"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c8928b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c892a40"/>
        <function-ref name="get" scoped="" ref="0x2afe3c892bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c892d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c891020"/>
        <function-ref name="set" scoped="" ref="0x2afe3c8911b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c891340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c8914d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c891760"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c8918f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afe3c88e740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afe3c88e740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c88eac0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c88ec50"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c88ede0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c88d020"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c88d1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c88d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c88d4d0"/>
        <function-ref name="get" scoped="" ref="0x2afe3c88d660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c88d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c88d980"/>
        <function-ref name="set" scoped="" ref="0x2afe3c88db10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c88dca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c88de30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c88c120"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c88c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afe3c889100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afe3c889100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c889480"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c889610"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c8897a0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c889930"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c889ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c889c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c889de0"/>
        <function-ref name="get" scoped="" ref="0x2afe3c888020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c8881b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c888340"/>
        <function-ref name="set" scoped="" ref="0x2afe3c8884d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c888660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c8887f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c888a80"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c888c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afe3c885d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afe3c885d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c8840e0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c884270"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c884400"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c884590"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c884720"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c8848b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c884a40"/>
        <function-ref name="get" scoped="" ref="0x2afe3c884bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c884d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c8ba020"/>
        <function-ref name="set" scoped="" ref="0x2afe3c8ba1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c8ba340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c8ba4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c8ba760"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c8ba8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afe3c8b7740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afe3c8b7740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c8b7ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c8b7c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c8b7de0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c8b6020"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c8b61b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c8b6340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c8b64d0"/>
        <function-ref name="get" scoped="" ref="0x2afe3c8b6660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c8b67f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c8b6980"/>
        <function-ref name="set" scoped="" ref="0x2afe3c8b6b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c8b6ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c8b6e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c8b5120"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c8b52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afe3c8b2100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afe3c8b2100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c8b2480"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c8b2610"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c8b27a0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c8b2930"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c8b2ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c8b2c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c8b2de0"/>
        <function-ref name="get" scoped="" ref="0x2afe3c8b1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c8b11b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c8b1340"/>
        <function-ref name="set" scoped="" ref="0x2afe3c8b14d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c8b1660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c8b17f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c8b1a80"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c8b1c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afe3c8aed10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afe3c8aed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c8ad0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c8ad270"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c8ad400"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c8ad590"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c8ad720"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c8ad8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c8ada40"/>
        <function-ref name="get" scoped="" ref="0x2afe3c8adbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c8add60"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c8ac020"/>
        <function-ref name="set" scoped="" ref="0x2afe3c8ac1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c8ac340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c8ac4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c8ac760"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c8ac8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afe3c8a9740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afe3c8a9740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c8a9ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c8a9c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c8a9de0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c8a8020"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c8a81b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c8a8340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c8a84d0"/>
        <function-ref name="get" scoped="" ref="0x2afe3c8a8660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c8a87f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c8a8980"/>
        <function-ref name="set" scoped="" ref="0x2afe3c8a8b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c8a8ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c8a8e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c8a7120"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c8a72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afe3c8a4100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afe3c8a4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c8a4480"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c8a4610"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c8a47a0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c8a4930"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c8a4ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c8a4c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c8a4de0"/>
        <function-ref name="get" scoped="" ref="0x2afe3c8a2020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c8a21b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c8a2340"/>
        <function-ref name="set" scoped="" ref="0x2afe3c8a24d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c8a2660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c8a27f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c8a2a80"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c8a2c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afe3c89fd10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afe3c89fd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c8d60e0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c8d6270"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c8d6400"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c8d6590"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c8d6720"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c8d68b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c8d6a40"/>
        <function-ref name="get" scoped="" ref="0x2afe3c8d6bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c8d6d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c8d5020"/>
        <function-ref name="set" scoped="" ref="0x2afe3c8d51b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c8d5340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c8d54d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c8d5760"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c8d58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afe3c8d2740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afe3c8d2740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c8d2ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c8d2c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c8d2de0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c8d1020"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c8d11b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c8d1340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c8d14d0"/>
        <function-ref name="get" scoped="" ref="0x2afe3c8d1660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c8d17f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c8d1980"/>
        <function-ref name="set" scoped="" ref="0x2afe3c8d1b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c8d1ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c8d1e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c8d0120"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c8d02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2afe3c9319a0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2afe3c9319a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afe3c92e7e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afe3c92d1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afe3c92eca0"/>
        <function-ref name="overflow" scoped="" ref="0x2afe3c92d670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x2afe3c92b9d0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2afe3c92b9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afe3c928810"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afe3c9271b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afe3c928cd0"/>
        <function-ref name="overflow" scoped="" ref="0x2afe3c927670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2afe3c952c50" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2afe3c952c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3c951020"/>
        <function-ref name="setClockSource" scoped="" ref="0x2afe3c9511b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afe3c951340"/>
        <function-ref name="get" scoped="" ref="0x2afe3c9514d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afe3c951660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afe3c9517f0"/>
        <function-ref name="getMode" scoped="" ref="0x2afe3c951980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afe3c951b10"/>
        <function-ref name="overflow" scoped="" ref="0x2afe3c951ca0"/>
        <function-ref name="setMode" scoped="" ref="0x2afe3c951e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2afe3c950020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2afe3c925b80" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2afe3c925b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afe3c9539b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afe3c952360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afe3c953e70"/>
        <function-ref name="overflow" scoped="" ref="0x2afe3c952820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2afe3c930970" loc="46:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2afe3c930970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2afe3c930cf0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2afe3c930e80"/>
        <function-ref name="led1On" scoped="" ref="0x2afe3c94d030"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2afe3c94d1c0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2afe3c94d350"/>
        <function-ref name="get" scoped="" ref="0x2afe3c94d4e0"/>
        <function-ref name="led1Off" scoped="" ref="0x2afe3c94d670"/>
        <function-ref name="led2Off" scoped="" ref="0x2afe3c94dcb0"/>
        <function-ref name="set" scoped="" ref="0x2afe3c94d800"/>
        <function-ref name="led0On" scoped="" ref="0x2afe3c94d990"/>
        <function-ref name="led2On" scoped="" ref="0x2afe3c94db20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x2afe3c941910" loc="50:/home/zdenial/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x2afe3c941910"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c941c90"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c941e20"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c947020"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c9471b0"/>
        <function-ref name="get" scoped="" ref="0x2afe3c947340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c9474d0"/>
        <function-ref name="set" scoped="" ref="0x2afe3c947660"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c9477f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afe3c94cc40" loc="46:/home/zdenial/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afe3c94cc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afe3c949020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x2afe3c947b10" loc="51:/home/zdenial/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x2afe3c947b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c946020"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c9461b0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c946340"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c9464d0"/>
        <function-ref name="get" scoped="" ref="0x2afe3c946660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c9467f0"/>
        <function-ref name="set" scoped="" ref="0x2afe3c946980"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c946b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2afe3c9492a0" loc="47:/home/zdenial/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2afe3c9492a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2afe3c949620"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2afe3c9497b0"/>
        <function-ref name="led1On" scoped="" ref="0x2afe3c949940"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2afe3c949ad0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2afe3c949c60"/>
        <function-ref name="get" scoped="" ref="0x2afe3c949df0"/>
        <function-ref name="led1Off" scoped="" ref="0x2afe3c948020"/>
        <function-ref name="led2Off" scoped="" ref="0x2afe3c948660"/>
        <function-ref name="set" scoped="" ref="0x2afe3c9481b0"/>
        <function-ref name="led0On" scoped="" ref="0x2afe3c948340"/>
        <function-ref name="led2On" scoped="" ref="0x2afe3c9484d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x2afe3c946e30" loc="52:/home/zdenial/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x2afe3c946e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c9791e0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c979370"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c979500"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c979690"/>
        <function-ref name="get" scoped="" ref="0x2afe3c979820"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c9799b0"/>
        <function-ref name="set" scoped="" ref="0x2afe3c979b40"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c979cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x2afe3c95e360" loc="41:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x2afe3c95e360"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c95e6e0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c95e870"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c95ea00"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c95eb90"/>
        <function-ref name="get" scoped="" ref="0x2afe3c95ed20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c997020"/>
        <function-ref name="set" scoped="" ref="0x2afe3c9971b0"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c997340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x2afe3c9976a0" loc="42:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x2afe3c9976a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c997a20"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c997bb0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c997d40"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c996020"/>
        <function-ref name="get" scoped="" ref="0x2afe3c9961b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c996340"/>
        <function-ref name="set" scoped="" ref="0x2afe3c9964d0"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c996660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x2afe3c995c40" loc="44:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afe3c995c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afe3c994020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x2afe3c9969c0" loc="43:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x2afe3c9969c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c996d40"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c995020"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c9951b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c995340"/>
        <function-ref name="get" scoped="" ref="0x2afe3c9954d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c995660"/>
        <function-ref name="set" scoped="" ref="0x2afe3c9957f0"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c995980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2afe3c981930" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2afe3c981930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c981cb0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c981e40"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c97f020"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c97f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c97f340"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c97f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c97f660"/>
        <function-ref name="get" scoped="" ref="0x2afe3c97f7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c97f980"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c97fb10"/>
        <function-ref name="set" scoped="" ref="0x2afe3c97fca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c97fe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c97e020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c97e2b0"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c97e440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2afe3c992710" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2afe3c992710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c992a90"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c992c20"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c992db0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c981020"/>
        <function-ref name="get" scoped="" ref="0x2afe3c9811b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c981340"/>
        <function-ref name="set" scoped="" ref="0x2afe3c9814d0"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c981660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2afe3c97b480" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2afe3c97b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c97b800"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c97b990"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c97bb20"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c97bcb0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c97be40"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c9b5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c9b51b0"/>
        <function-ref name="get" scoped="" ref="0x2afe3c9b5340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c9b54d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c9b5660"/>
        <function-ref name="set" scoped="" ref="0x2afe3c9b57f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c9b5980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c9b5b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c9b5da0"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c9b4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2afe3c97c1d0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2afe3c97c1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c97c550"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c97c6e0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c97c870"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c97ca00"/>
        <function-ref name="get" scoped="" ref="0x2afe3c97cb90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c97cd20"/>
        <function-ref name="set" scoped="" ref="0x2afe3c97b020"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c97b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2afe3c9b1020" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2afe3c9b1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c9b13a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c9b1530"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3c9b16c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c9b1850"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c9b19e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3c9b1b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c9b1d00"/>
        <function-ref name="get" scoped="" ref="0x2afe3c9b0020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3c9b01b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3c9b0340"/>
        <function-ref name="set" scoped="" ref="0x2afe3c9b04d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3c9b0660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3c9b07f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3c9b0a80"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c9b0c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2afe3c9b3d70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2afe3c9b3d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3c9b2180"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3c9b2310"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3c9b24a0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3c9b2630"/>
        <function-ref name="get" scoped="" ref="0x2afe3c9b27c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3c9b2950"/>
        <function-ref name="set" scoped="" ref="0x2afe3c9b2ae0"/>
        <function-ref name="clr" scoped="" ref="0x2afe3c9b2c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2afe3dd89ab0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2afe3dd89ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2afe3dd89e30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2afe3dd87020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2afe3dd82be0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2afe3dd82be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2afe3dd81020"/>
        <function-ref name="configure" scoped="" ref="0x2afe3dd811b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x2afe3dd82440" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2afe3dd82440"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2afe3dd827c0"/>
        <function-ref name="txDone" scoped="" ref="0x2afe3dd82950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2afe3dd8ae40" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2afe3dd8ae40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afe3dd891e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afe3dd89370"/>
        <function-ref name="request" scoped="" ref="0x2afe3dd89500"/>
        <function-ref name="granted" scoped="" ref="0x2afe3dd89690"/>
        <function-ref name="isOwner" scoped="" ref="0x2afe3dd89820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x2afe3dd87a50" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x2afe3dd87a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2afe3dd87dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2afe3dd86020"/>
        <function-ref name="setUctl" scoped="" ref="0x2afe3dd861b0"/>
        <function-ref name="enableUart" scoped="" ref="0x2afe3dd86340"/>
        <function-ref name="setUrctl" scoped="" ref="0x2afe3dd864d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2afe3dd86660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2afe3dd867f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x2afe3dd86980"/>
        <function-ref name="getUrctl" scoped="" ref="0x2afe3dd86b10"/>
        <function-ref name="resetUsart" scoped="" ref="0x2afe3dd86ca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x2afe3dd86e30"/>
        <function-ref name="disableIntr" scoped="" ref="0x2afe3dd85020"/>
        <function-ref name="setUtctl" scoped="" ref="0x2afe3dd851b0"/>
        <function-ref name="getUbr" scoped="" ref="0x2afe3dd85440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2afe3dd855d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x2afe3dd85760"/>
        <function-ref name="isUartRx" scoped="" ref="0x2afe3dd858f0"/>
        <function-ref name="isUart" scoped="" ref="0x2afe3dd85a80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2afe3dd85c10"/>
        <function-ref name="isSpi" scoped="" ref="0x2afe3dd85da0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2afe3dd84020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2afe3dd841b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2afe3dd84340"/>
        <function-ref name="enableIntr" scoped="" ref="0x2afe3dd844d0"/>
        <function-ref name="getMode" scoped="" ref="0x2afe3dd84660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2afe3dd849f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x2afe3dd84b80"/>
        <function-ref name="setUbr" scoped="" ref="0x2afe3dd84d10"/>
        <function-ref name="tx" scoped="" ref="0x2afe3dd83020"/>
        <function-ref name="getUctl" scoped="" ref="0x2afe3dd831b0"/>
        <function-ref name="disableUart" scoped="" ref="0x2afe3dd83340"/>
        <function-ref name="enableSpi" scoped="" ref="0x2afe3dd834d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x2afe3dd83660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2afe3dd837f0"/>
        <function-ref name="rx" scoped="" ref="0x2afe3dd83980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2afe3dd83b10"/>
        <function-ref name="isUartTx" scoped="" ref="0x2afe3dd83ca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2afe3dd83e30"/>
        <function-ref name="disableSpi" scoped="" ref="0x2afe3dd82020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2afe3dd821b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2afe3dd872b0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2afe3dd872b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2afe3dd87630"/>
        <function-ref name="userId" scoped="" ref="0x2afe3dd877c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2afe3c9c72c0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2afe3c9c72c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2afe3c9c7640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2afe3c9c77d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2afe3c9c68a0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2afe3c9c68a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2afe3c9c6c20"/>
        <function-ref name="configure" scoped="" ref="0x2afe3c9c6db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2afe3c9ca1d0" loc="40:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2afe3c9ca1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2afe3c9ca550"/>
        <function-ref name="txDone" scoped="" ref="0x2afe3c9ca6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2afe3c9c8020" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2afe3c9c8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afe3c9c83a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afe3c9c8530"/>
        <function-ref name="request" scoped="" ref="0x2afe3c9c86c0"/>
        <function-ref name="granted" scoped="" ref="0x2afe3c9c8850"/>
        <function-ref name="isOwner" scoped="" ref="0x2afe3c9c89e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2afe3c9c7ad0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2afe3c9c7ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2afe3c9c7e50"/>
        <function-ref name="userId" scoped="" ref="0x2afe3c9c6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2afe3c9eca90" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2afe3c9eca90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2afe3c9ece10"/>
        <function-ref name="userId" scoped="" ref="0x2afe3c9eb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2afe3c9c4b60" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2afe3c9c4b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2afe3c9c3020"/>
        <function-ref name="txDone" scoped="" ref="0x2afe3c9c31b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x2afe3c9ec480" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x2afe3c9ec480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afe3c9ec800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x2afe3c9c35b0" loc="40:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x2afe3c9c35b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afe3c9c3950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x2afe3c9c3c20" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x2afe3c9c3c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2afe3c9ec020"/>
        <function-ref name="txDone" scoped="" ref="0x2afe3c9ec1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2afe3ca65020" loc="92:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2afe3ca65020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2afe3ca653c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2afe3ca65550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2afe3ca63cd0" loc="96:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2afe3ca63cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2afe3ca620a0"/>
        <function-ref name="configure" scoped="" ref="0x2afe3ca62230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2afe3ca657a0" loc="93:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2afe3ca657a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afe3ca65b20"/>
        <function-ref name="requested" scoped="" ref="0x2afe3ca65cb0"/>
        <function-ref name="granted" scoped="" ref="0x2afe3ca65e40"/>
        <function-ref name="isOwner" scoped="" ref="0x2afe3ca63020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2afe3ca631b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2afe3ca66210" loc="91:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2afe3ca66210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afe3ca665b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afe3ca66740"/>
        <function-ref name="request" scoped="" ref="0x2afe3ca668d0"/>
        <function-ref name="granted" scoped="" ref="0x2afe3ca66a60"/>
        <function-ref name="isOwner" scoped="" ref="0x2afe3ca66bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2afe3ca63400" loc="94:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2afe3ca63400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2afe3ca63780"/>
        <function-ref name="userId" scoped="" ref="0x2afe3ca63910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afe3e175ca0" loc="44:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afe3e175ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afe3e1730a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2afe3e173330" loc="45:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x2afe3e173330"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2afe3e1736b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2afe3e173840"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2afe3e1739d0"/>
        <function-ref name="dequeue" scoped="" ref="0x2afe3e173b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2afe3e1703a0" loc="55:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2afe3e1703a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2afe3e170740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2afe3e1708d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2afe3e16e210" loc="60:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2afe3e16e210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2afe3e16e5b0"/>
        <function-ref name="configure" scoped="" ref="0x2afe3e16e740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2afe3e16e9d0" loc="61:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x2afe3e16e9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2afe3e16ed50"/>
        <function-ref name="isEmpty" scoped="" ref="0x2afe3e16d020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2afe3e16d1b0"/>
        <function-ref name="dequeue" scoped="" ref="0x2afe3e16d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2afe3e170b20" loc="56:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2afe3e170b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afe3e16f020"/>
        <function-ref name="requested" scoped="" ref="0x2afe3e16f1b0"/>
        <function-ref name="granted" scoped="" ref="0x2afe3e16f340"/>
        <function-ref name="isOwner" scoped="" ref="0x2afe3e16f4d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2afe3e16f660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2afe3e16d590" loc="62:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2afe3e16d590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2afe3e16d910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2afe3e16daa0"/>
        <function-ref name="led1On" scoped="" ref="0x2afe3e16dc30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2afe3e16ddc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2afe3e16b020"/>
        <function-ref name="get" scoped="" ref="0x2afe3e16b1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x2afe3e16b340"/>
        <function-ref name="led0On" scoped="" ref="0x2afe3e16b980"/>
        <function-ref name="set" scoped="" ref="0x2afe3e16b660"/>
        <function-ref name="led2On" scoped="" ref="0x2afe3e16b4d0"/>
        <function-ref name="led2Off" scoped="" ref="0x2afe3e16b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2afe3e171540" loc="54:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2afe3e171540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afe3e1718e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afe3e171a70"/>
        <function-ref name="request" scoped="" ref="0x2afe3e171c00"/>
        <function-ref name="granted" scoped="" ref="0x2afe3e171d90"/>
        <function-ref name="isOwner" scoped="" ref="0x2afe3e170020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2afe3e16f8b0" loc="57:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2afe3e16f8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2afe3e16fc30"/>
        <function-ref name="userId" scoped="" ref="0x2afe3e16fdc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2afe3e16bc50" loc="75:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x2afe3e16bc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2afe3e16a020"/>
        <function-ref name="runTask" scoped="" ref="0x2afe3e16a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2afe3ca86400" loc="72:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2afe3ca86400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2afe3ca86780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2afe3ca869d0" loc="73:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2afe3ca869d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afe3ca86d50"/>
        <function-ref name="requested" scoped="" ref="0x2afe3ca85020"/>
        <function-ref name="granted" scoped="" ref="0x2afe3ca851b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2afe3ca85340"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2afe3ca854d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x2afe3ca5db20" loc="70:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x2afe3ca5db20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2afe3ca86020"/>
        <function-ref name="stop" scoped="" ref="0x2afe3ca861b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2afe3ca85720" loc="74:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2afe3ca85720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2afe3ca85aa0"/>
        <function-ref name="userId" scoped="" ref="0x2afe3ca85c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2afe3e1d9b00" loc="62:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2afe3e1d9b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2afe3e1d9e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2afe3e1d80f0" loc="63:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2afe3e1d80f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afe3e1d8470"/>
        <function-ref name="requested" scoped="" ref="0x2afe3e1d8600"/>
        <function-ref name="granted" scoped="" ref="0x2afe3e1d8790"/>
        <function-ref name="isOwner" scoped="" ref="0x2afe3e1d8920"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2afe3e1d8ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x2afe3e1d93a0" loc="60:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x2afe3e1d93a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2afe3e1d9720"/>
        <function-ref name="stop" scoped="" ref="0x2afe3e1d98b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2afe3e1d8d00" loc="64:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2afe3e1d8d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2afe3e1d70a0"/>
        <function-ref name="userId" scoped="" ref="0x2afe3e1d7230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x2afe3caa3080" loc="3:/home/zdenial/tinyos/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2afe3caa3080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2afe3caa3400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2afe3caa36f0" loc="4:/home/zdenial/tinyos/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2afe3caa36f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afe3caa3a70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afe3caa3c00"/>
        <function-ref name="request" scoped="" ref="0x2afe3caa3d90"/>
        <function-ref name="granted" scoped="" ref="0x2afe3caa2020"/>
        <function-ref name="isOwner" scoped="" ref="0x2afe3caa21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2afe3caa67a0" loc="2:/home/zdenial/tinyos/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2afe3caa67a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2afe3caa6b20"/>
        <function-ref name="stop" scoped="" ref="0x2afe3caa6cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x2afe3ca96430" loc="43:/home/zdenial/tinyos/tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x2afe3ca96430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2afe3ca967b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afe3ca95780" loc="94:/home/zdenial/tinyos/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afe3ca95780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afe3ca95b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x2afe3ca95de0" loc="95:/home/zdenial/tinyos/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x2afe3ca95de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2afe3ca92180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2afe3ca8b020" loc="39:/home/zdenial/tinyos/tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x2afe3ca8b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2afe3ca8b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x2afe3ca8b740" loc="40:/home/zdenial/tinyos/tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x2afe3ca8b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2afe3ca8bac0"/>
        <function-ref name="stopDone" scoped="" ref="0x2afe3ca8bc50"/>
        <function-ref name="start" scoped="" ref="0x2afe3ca8bde0"/>
        <function-ref name="stop" scoped="" ref="0x2afe3cac9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2afe3cac3320" loc="46:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2afe3cac3320"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2afe3cac36a0"/>
        <function-ref name="stopDone" scoped="" ref="0x2afe3cac3830"/>
        <function-ref name="start" scoped="" ref="0x2afe3cac39c0"/>
        <function-ref name="stop" scoped="" ref="0x2afe3cac3b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2afe3cac2370" loc="47:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2afe3cac2370"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2afe3c2ad1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3cac26f0"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3cac2880"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3cac2a10"/>
        <function-ref name="cancel" scoped="" ref="0x2afe3cac2ba0"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3cac2d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2afe3cabf020" loc="49:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2afe3cabf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3cabf3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2afe3cabf530"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3cabf6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3cabf850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2afe3cabf9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2afe3cac0530" loc="48:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2afe3cac0530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2afe3c2ad1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2afe3cac08b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2afe3cab4a00" loc="53:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2afe3cab4a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2afe3cab4d80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2afe3cab3020"/>
        <function-ref name="led1On" scoped="" ref="0x2afe3cab31b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2afe3cab3340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2afe3cab34d0"/>
        <function-ref name="get" scoped="" ref="0x2afe3cab3660"/>
        <function-ref name="led1Off" scoped="" ref="0x2afe3cab37f0"/>
        <function-ref name="led2Off" scoped="" ref="0x2afe3cab3e30"/>
        <function-ref name="set" scoped="" ref="0x2afe3cab3980"/>
        <function-ref name="led0On" scoped="" ref="0x2afe3cab3b10"/>
        <function-ref name="led2On" scoped="" ref="0x2afe3cab3ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2afe3cab4080" loc="51:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2afe3cab4080"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2afe3cab4400"/>
        <function-ref name="noAck" scoped="" ref="0x2afe3cab4590"/>
        <function-ref name="wasAcked" scoped="" ref="0x2afe3cab4720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2afe3cabfc90" loc="50:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2afe3cabfc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2afe3cabe0a0"/>
        <function-ref name="source" scoped="" ref="0x2afe3cabe230"/>
        <function-ref name="address" scoped="" ref="0x2afe3cabe3c0"/>
        <function-ref name="destination" scoped="" ref="0x2afe3cabe550"/>
        <function-ref name="setSource" scoped="" ref="0x2afe3cabe6e0"/>
        <function-ref name="setDestination" scoped="" ref="0x2afe3cabe870"/>
        <function-ref name="type" scoped="" ref="0x2afe3cabea00"/>
        <function-ref name="setType" scoped="" ref="0x2afe3cabeb90"/>
        <function-ref name="isForMe" scoped="" ref="0x2afe3cabed20"/>
        <function-ref name="setGroup" scoped="" ref="0x2afe3cab6020"/>
        <function-ref name="localGroup" scoped="" ref="0x2afe3cab61b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2afe3cb0b4a0" loc="54:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2afe3cb0b4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3cb0b820"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3cb0b9b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3cb0bb40"/>
        <function-ref name="cancel" scoped="" ref="0x2afe3cb0bcd0"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3cb0be60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2afe3cb0a120" loc="55:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2afe3cb0a120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2afe3cb0a4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2afe3caac300" loc="47:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2afe3caac300"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2afe3c2ad1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3caac6a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3caac830"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3caac9c0"/>
        <function-ref name="cancel" scoped="" ref="0x2afe3caacb50"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3caacce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2afe3cb0ed60" loc="50:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2afe3cb0ed60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3cb0d180"/>
        <function-ref name="payloadLength" scoped="" ref="0x2afe3cb0d310"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3cb0d4a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3cb0d630"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2afe3cb0d7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2afe3cb0f0d0" loc="48:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2afe3cb0f0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2afe3c2ad1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2afe3cb0f470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2afe3cb0da10" loc="51:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2afe3cb0da10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2afe3cb0dd90"/>
        <function-ref name="noAck" scoped="" ref="0x2afe3cb0b020"/>
        <function-ref name="wasAcked" scoped="" ref="0x2afe3cb0b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2afe3cb0f6c0" loc="49:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2afe3cb0f6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2afe3cb0fa40"/>
        <function-ref name="source" scoped="" ref="0x2afe3cb0fbd0"/>
        <function-ref name="address" scoped="" ref="0x2afe3cb0fd60"/>
        <function-ref name="destination" scoped="" ref="0x2afe3cb0e020"/>
        <function-ref name="setSource" scoped="" ref="0x2afe3cb0e1b0"/>
        <function-ref name="setDestination" scoped="" ref="0x2afe3cb0e340"/>
        <function-ref name="type" scoped="" ref="0x2afe3cb0e4d0"/>
        <function-ref name="setType" scoped="" ref="0x2afe3cb0e660"/>
        <function-ref name="isForMe" scoped="" ref="0x2afe3cb0e7f0"/>
        <function-ref name="setGroup" scoped="" ref="0x2afe3cb0e980"/>
        <function-ref name="localGroup" scoped="" ref="0x2afe3cb0eb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2afe3cb463d0" loc="50:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2afe3cb463d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2afe3cb46750"/>
        <function-ref name="stopDone" scoped="" ref="0x2afe3cb468e0"/>
        <function-ref name="start" scoped="" ref="0x2afe3cb46a70"/>
        <function-ref name="stop" scoped="" ref="0x2afe3cb46c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2afe3cb44020" loc="52:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2afe3cb44020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2afe3c2acd70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3cb443a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3cb44530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3cb446c0"/>
        <function-ref name="cancel" scoped="" ref="0x2afe3cb44850"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3cb449e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afe3cb49d50" loc="49:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afe3cb49d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afe3cb46100"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2afe3cb453e0" loc="51:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2afe3cb453e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2afe3c2acd70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2afe3cb45760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2afe3cb43940" loc="56:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2afe3cb43940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2afe3cb43cc0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2afe3cb43e50"/>
        <function-ref name="led1On" scoped="" ref="0x2afe3cb42020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2afe3cb421b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2afe3cb42340"/>
        <function-ref name="get" scoped="" ref="0x2afe3cb424d0"/>
        <function-ref name="led1Off" scoped="" ref="0x2afe3cb42660"/>
        <function-ref name="led2Off" scoped="" ref="0x2afe3cb42ca0"/>
        <function-ref name="set" scoped="" ref="0x2afe3cb427f0"/>
        <function-ref name="led0On" scoped="" ref="0x2afe3cb42980"/>
        <function-ref name="led2On" scoped="" ref="0x2afe3cb42b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x2afe3cb43020" loc="55:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialPacketInfo" scoped="" ref="0x2afe3cb43020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2afe3c2acd70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2afe3cb433a0"/>
        <function-ref name="offset" scoped="" ref="0x2afe3cb43530"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2afe3cb436c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2afe3cb362f0" loc="66:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2afe3cb362f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2afe3cb36670"/>
        <function-ref name="stopDone" scoped="" ref="0x2afe3cb36800"/>
        <function-ref name="start" scoped="" ref="0x2afe3cb36990"/>
        <function-ref name="stop" scoped="" ref="0x2afe3cb36b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x2afe3cb97e40" loc="332:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDoneTask" scoped="" ref="0x2afe3cb97e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2afe3cb961e0"/>
        <function-ref name="runTask" scoped="" ref="0x2afe3cb96370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x2afe3cb66060" loc="74:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x2afe3cb66060"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2afe3cb663e0"/>
        <function-ref name="stop" scoped="" ref="0x2afe3cb66570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x2afe3cb8cd10" loc="191:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RunTx" scoped="" ref="0x2afe3cb8cd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2afe3cb8b0e0"/>
        <function-ref name="runTask" scoped="" ref="0x2afe3cb8b270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afe3cb37c30" loc="65:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afe3cb37c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afe3cb36020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x2afe3cb63c50" loc="75:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFlush" scoped="" ref="0x2afe3cb63c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x2afe3cb65020"/>
        <function-ref name="flush" scoped="" ref="0x2afe3cb651b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x2afe3cb99400" loc="322:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDoneTask" scoped="" ref="0x2afe3cb99400"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2afe3cb99780"/>
        <function-ref name="runTask" scoped="" ref="0x2afe3cb99910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x2afe3cb688e0" loc="72:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x2afe3cb688e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x2afe3cb68c60"/>
        <function-ref name="resetSend" scoped="" ref="0x2afe3cb68df0"/>
        <function-ref name="dataReceived" scoped="" ref="0x2afe3cb33020"/>
        <function-ref name="resetReceive" scoped="" ref="0x2afe3cb331b0"/>
        <function-ref name="putData" scoped="" ref="0x2afe3cb33340"/>
        <function-ref name="putDone" scoped="" ref="0x2afe3cb334d0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x2afe3cb33660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2afe3cb338e0" loc="73:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2afe3cb338e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2afe3cb33c60"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2afe3cb33df0"/>
        <function-ref name="led1On" scoped="" ref="0x2afe3cb2a020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2afe3cb2a1b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2afe3cb2a340"/>
        <function-ref name="get" scoped="" ref="0x2afe3cb2a4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x2afe3cb2a660"/>
        <function-ref name="led2Off" scoped="" ref="0x2afe3cb2aca0"/>
        <function-ref name="set" scoped="" ref="0x2afe3cb2a7f0"/>
        <function-ref name="led0On" scoped="" ref="0x2afe3cb2a980"/>
        <function-ref name="led2On" scoped="" ref="0x2afe3cb2ab10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x2afe3cb920c0" loc="341:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x2afe3cb920c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2afe3cb92440"/>
        <function-ref name="runTask" scoped="" ref="0x2afe3cb925d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x2afe3cb2f130" loc="67:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x2afe3cb2f130"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x2afe3cb2f4b0"/>
        <function-ref name="nextByte" scoped="" ref="0x2afe3cb2f640"/>
        <function-ref name="startSend" scoped="" ref="0x2afe3cb2f7d0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x2afe3cb2f960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x2afe3cb2c5c0" loc="68:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2afe3cb2c5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x2afe3cb2c940"/>
        <function-ref name="byteReceived" scoped="" ref="0x2afe3cb2cad0"/>
        <function-ref name="endPacket" scoped="" ref="0x2afe3cb2cc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x2afe3cc61c50" loc="275:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveTask" scoped="" ref="0x2afe3cc61c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2afe3cc60020"/>
        <function-ref name="runTask" scoped="" ref="0x2afe3cc601b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2afe3cc66830" loc="51:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2afe3cc66830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2afe3c2acd70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3cc66bd0"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3cc66d60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3cc64020"/>
        <function-ref name="cancel" scoped="" ref="0x2afe3cc641b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3cc64340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x2afe3cc60480" loc="158:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalSendDone" scoped="" ref="0x2afe3cc60480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2afe3cc60800"/>
        <function-ref name="runTask" scoped="" ref="0x2afe3cc60990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2afe3cc66110" loc="50:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2afe3cc66110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2afe3c2acd70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2afe3cc664b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x2afe3cc64760" loc="54:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketInfo" scoped="" ref="0x2afe3cc64760"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2afe3c2acd70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2afe3cc64b00"/>
        <function-ref name="offset" scoped="" ref="0x2afe3cc64c90"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2afe3cc64e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2afe3cc62590" loc="57:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2afe3cc62590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2afe3cc62910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2afe3cc62aa0"/>
        <function-ref name="led1On" scoped="" ref="0x2afe3cc62c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2afe3cc62dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2afe3cc61020"/>
        <function-ref name="get" scoped="" ref="0x2afe3cc611b0"/>
        <function-ref name="led1Off" scoped="" ref="0x2afe3cc61340"/>
        <function-ref name="led2On" scoped="" ref="0x2afe3cc61980"/>
        <function-ref name="set" scoped="" ref="0x2afe3cc61660"/>
        <function-ref name="led2Off" scoped="" ref="0x2afe3cc614d0"/>
        <function-ref name="led0On" scoped="" ref="0x2afe3cc617f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x2afe3cc639d0" loc="56:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x2afe3cc639d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x2afe3cc63d50"/>
        <function-ref name="nextByte" scoped="" ref="0x2afe3cc62020"/>
        <function-ref name="startSend" scoped="" ref="0x2afe3cc621b0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x2afe3cc62340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x2afe3cc630e0" loc="55:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2afe3cc630e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x2afe3cc63460"/>
        <function-ref name="byteReceived" scoped="" ref="0x2afe3cc635f0"/>
        <function-ref name="endPacket" scoped="" ref="0x2afe3cc63780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x2afe3cc5bca0" loc="50:/home/zdenial/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x2afe3cc5bca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3cc5a0a0"/>
        <function-ref name="receivedByte" scoped="" ref="0x2afe3cc5a230"/>
        <function-ref name="receive" scoped="" ref="0x2afe3cc5a3c0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2afe3cc5a550"/>
        <function-ref name="receiveDone" scoped="" ref="0x2afe3cc5a6e0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2afe3cc5a870"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3cc5aa00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x2afe3cc5eb70" loc="48:/home/zdenial/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x2afe3cc5eb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x2afe3cc5b020"/>
        <function-ref name="resetSend" scoped="" ref="0x2afe3cc5b1b0"/>
        <function-ref name="dataReceived" scoped="" ref="0x2afe3cc5b340"/>
        <function-ref name="resetReceive" scoped="" ref="0x2afe3cc5b4d0"/>
        <function-ref name="putData" scoped="" ref="0x2afe3cc5b660"/>
        <function-ref name="putDone" scoped="" ref="0x2afe3cc5b7f0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x2afe3cc5b980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2afe3cc5ac80" loc="51:/home/zdenial/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2afe3cc5ac80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2afe3cc590a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2afe3cc59230"/>
        <function-ref name="led1On" scoped="" ref="0x2afe3cc593c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2afe3cc59550"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2afe3cc596e0"/>
        <function-ref name="get" scoped="" ref="0x2afe3cc59870"/>
        <function-ref name="led1Off" scoped="" ref="0x2afe3cc59a00"/>
        <function-ref name="led2Off" scoped="" ref="0x2afe3cc9e1b0"/>
        <function-ref name="set" scoped="" ref="0x2afe3cc59b90"/>
        <function-ref name="led0On" scoped="" ref="0x2afe3cc59d20"/>
        <function-ref name="led2On" scoped="" ref="0x2afe3cc9e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x2afe3cc7e6c0" loc="47:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Info" scoped="" ref="0x2afe3cc7e6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2afe3cc7ea40"/>
        <function-ref name="offset" scoped="" ref="0x2afe3cc7ebd0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2afe3cc7ed60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2afe3ccb3020" loc="61:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2afe3ccb3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2afe3ccb33a0"/>
        <function-ref name="stopDone" scoped="" ref="0x2afe3ccb3530"/>
        <function-ref name="start" scoped="" ref="0x2afe3ccb36c0"/>
        <function-ref name="stop" scoped="" ref="0x2afe3ccb3850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2afe3ccb2050" loc="63:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2afe3ccb2050"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2afe3c2ad1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3ccb23d0"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3ccb2560"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3ccb26f0"/>
        <function-ref name="cancel" scoped="" ref="0x2afe3ccb2880"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3ccb2a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2afe3ccb0df0" loc="65:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x2afe3ccb0df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2afe3c2ad1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2afe3ccaf1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2afe3ccaf450" loc="67:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2afe3ccaf450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3ccaf7d0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2afe3ccaf960"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3ccafaf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3ccafc80"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2afe3ccafe10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2afe3cca29e0" loc="70:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2afe3cca29e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2afe3ccaa020"/>
        <function-ref name="clear" scoped="" ref="0x2afe3ccaa750"/>
        <function-ref name="isValid" scoped="" ref="0x2afe3ccab890"/>
        <function-ref name="set" scoped="" ref="0x2afe3ccaae80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2afe3ccde8a0" loc="72:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2afe3ccde8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2afe3ccdec20"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2afe3ccdedb0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2afe3cce4020"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2afe3cce41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2afe3ccb0210" loc="64:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2afe3ccb0210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2afe3c2ad1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2afe3ccb0590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2afe3ccad800" loc="69:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2afe3ccad800"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2afe3ccadb80"/>
        <function-ref name="noAck" scoped="" ref="0x2afe3ccadd10"/>
        <function-ref name="wasAcked" scoped="" ref="0x2afe3ccac020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2afe3ccae120" loc="68:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2afe3ccae120"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2afe3ccae4a0"/>
        <function-ref name="source" scoped="" ref="0x2afe3ccae630"/>
        <function-ref name="address" scoped="" ref="0x2afe3ccae7c0"/>
        <function-ref name="destination" scoped="" ref="0x2afe3ccae950"/>
        <function-ref name="setSource" scoped="" ref="0x2afe3ccaeae0"/>
        <function-ref name="setDestination" scoped="" ref="0x2afe3ccaec70"/>
        <function-ref name="type" scoped="" ref="0x2afe3ccaee00"/>
        <function-ref name="setType" scoped="" ref="0x2afe3ccad020"/>
        <function-ref name="isForMe" scoped="" ref="0x2afe3ccad1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2afe3ccad340"/>
        <function-ref name="localGroup" scoped="" ref="0x2afe3ccad4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2afe3cca3af0" loc="71:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2afe3cca3af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c55c0"/>
            <typename><typedef-ref name="TMilli" ref="0x2afe3c4c5930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2afe3cc9f0d0"/>
        <function-ref name="clear" scoped="" ref="0x2afe3cc9f800"/>
        <function-ref name="isValid" scoped="" ref="0x2afe3cca0970"/>
        <function-ref name="set" scoped="" ref="0x2afe3cce6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2afe3ccd2680" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2afe3ccd2680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2afe3ccd2a00"/>
        <function-ref name="stopDone" scoped="" ref="0x2afe3ccd2b90"/>
        <function-ref name="start" scoped="" ref="0x2afe3ccd2d20"/>
        <function-ref name="stop" scoped="" ref="0x2afe3ccd1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2afe3cd00d40" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2afe3cd00d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2afe3c2ad1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2afe3cd090e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2afe3cd09270"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2afe3cd09400"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2afe3cd09590"/>
        <function-ref name="setCca" scoped="" ref="0x2afe3cd09720"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2afe3cd098b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2afe3ccfe500" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x2afe3ccfe500"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2afe3c2ad1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2afe3ccfe980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2afe3cccd760" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2afe3cccd760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3cccdae0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2afe3cccdc70"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3cccde00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3cccc020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2afe3cccc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2afe3ccd17f0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2afe3ccd17f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2afe3c2ad1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3ccd1b70"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3ccd1d00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3ccd0020"/>
        <function-ref name="cancel" scoped="" ref="0x2afe3ccd01b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3ccd0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2afe3cccf880" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x2afe3cccf880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2afe3c2ad1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2afe3cccfc00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2afe3ccc3970" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2afe3ccc3970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2afe3ccc3cf0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2afe3ccc3e80"/>
        <function-ref name="getRssi" scoped="" ref="0x2afe3ccca030"/>
        <function-ref name="getNetwork" scoped="" ref="0x2afe3ccca1c0"/>
        <function-ref name="getPower" scoped="" ref="0x2afe3ccca350"/>
        <function-ref name="getLqi" scoped="" ref="0x2afe3ccca4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2afe3cd09bb0" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2afe3cd09bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2afe3cd07020"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2afe3cd071b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2afe3cd07340"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2afe3cd074d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2afe3ccd0b20" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2afe3ccd0b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2afe3c2ad1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2afe3cccf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2afe3ccca810" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2afe3ccca810"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2afe3cccab90"/>
        <function-ref name="noAck" scoped="" ref="0x2afe3cccad20"/>
        <function-ref name="wasAcked" scoped="" ref="0x2afe3ccc9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2afe3cd07790" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x2afe3cd07790"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2afe3cd07b10"/>
        <function-ref name="setRetries" scoped="" ref="0x2afe3cd07ca0"/>
        <function-ref name="getRetries" scoped="" ref="0x2afe3cd07e30"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2afe3ccff020"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2afe3ccff1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2afe3ccce020" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2afe3ccce020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2afe3ccce3a0"/>
        <function-ref name="source" scoped="" ref="0x2afe3ccce530"/>
        <function-ref name="address" scoped="" ref="0x2afe3ccce6c0"/>
        <function-ref name="destination" scoped="" ref="0x2afe3ccce850"/>
        <function-ref name="setSource" scoped="" ref="0x2afe3ccce9e0"/>
        <function-ref name="setDestination" scoped="" ref="0x2afe3ccceb70"/>
        <function-ref name="type" scoped="" ref="0x2afe3ccced00"/>
        <function-ref name="setType" scoped="" ref="0x2afe3cccd020"/>
        <function-ref name="isForMe" scoped="" ref="0x2afe3cccd1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2afe3cccd340"/>
        <function-ref name="localGroup" scoped="" ref="0x2afe3cccd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2afe3cd08a80" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2afe3cd08a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2afe3cd08e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2afe3ccf8340" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2afe3ccf8340"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2afe3ccf86c0"/>
        <function-ref name="stopDone" scoped="" ref="0x2afe3ccf8850"/>
        <function-ref name="start" scoped="" ref="0x2afe3ccf89e0"/>
        <function-ref name="stop" scoped="" ref="0x2afe3ccf8b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2afe3ccf0080" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2afe3ccf0080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2afe3ccf0400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2afe3ccef2e0" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x2afe3ccef2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2afe3ccef660"/>
        <function-ref name="setRetries" scoped="" ref="0x2afe3ccef7f0"/>
        <function-ref name="getRetries" scoped="" ref="0x2afe3ccef980"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2afe3ccefb10"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2afe3ccefca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2afe3ccf2740" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2afe3ccf2740"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2afe3ccf2ac0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2afe3ccf2c50"/>
        <function-ref name="getRssi" scoped="" ref="0x2afe3ccf2de0"/>
        <function-ref name="getNetwork" scoped="" ref="0x2afe3ccf1020"/>
        <function-ref name="getPower" scoped="" ref="0x2afe3ccf11b0"/>
        <function-ref name="getLqi" scoped="" ref="0x2afe3ccf1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x2afe3ccf3350" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x2afe3ccf3350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3ccf36d0"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3ccf3860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3ccf39f0"/>
        <function-ref name="cancel" scoped="" ref="0x2afe3ccf3b80"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3ccf3d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2afe3ccf0700" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2afe3ccf0700"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2afe3ccf0a80"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2afe3ccf0c10"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2afe3ccf0da0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2afe3ccef020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x2afe3ccf5e70" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x2afe3ccf5e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2afe3ccf4220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2afe3ccf1670" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2afe3ccf1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2afe3ccf19f0"/>
        <function-ref name="noAck" scoped="" ref="0x2afe3ccf1b80"/>
        <function-ref name="wasAcked" scoped="" ref="0x2afe3ccf1d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2afe3ccf7430" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2afe3ccf7430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afe3ccf77b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afe3ccf7940"/>
        <function-ref name="request" scoped="" ref="0x2afe3ccf7ad0"/>
        <function-ref name="granted" scoped="" ref="0x2afe3ccf7c60"/>
        <function-ref name="isOwner" scoped="" ref="0x2afe3ccf7df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2afe3ccf5160" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x2afe3ccf5160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3ccf54e0"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3ccf5670"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3ccf5800"/>
        <function-ref name="cancel" scoped="" ref="0x2afe3ccf5990"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3ccf5b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x2afe3ccf4560" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x2afe3ccf4560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3ccf48e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2afe3ccf4a70"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3ccf4c00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3ccf4d90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2afe3ccf3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x2afe3ccf20f0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x2afe3ccf20f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2afe3ccf2470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2afe3ccee9f0" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2afe3ccee9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2afe3cceed70"/>
        <function-ref name="stopDone" scoped="" ref="0x2afe3ccea020"/>
        <function-ref name="start" scoped="" ref="0x2afe3ccea1b0"/>
        <function-ref name="stop" scoped="" ref="0x2afe3ccea340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2afe3cce9990" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2afe3cce9990"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2afe3cce9d10"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2afe3cce8020"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2afe3cce81b0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2afe3cce8340"/>
        <function-ref name="setCca" scoped="" ref="0x2afe3cce84d0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2afe3cce8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2afe3ccea600" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2afe3ccea600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3ccea980"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3cceab10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3cceaca0"/>
        <function-ref name="cancel" scoped="" ref="0x2afe3cceae30"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3cce9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2afe3cce9300" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2afe3cce9300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2afe3cce9680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2afe3cd2d690" loc="39:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2afe3cd2d690"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2afe3cd2da10"/>
        <function-ref name="stopDone" scoped="" ref="0x2afe3cd2dba0"/>
        <function-ref name="start" scoped="" ref="0x2afe3cd2dd30"/>
        <function-ref name="stop" scoped="" ref="0x2afe3cd2c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2afe3cd2b020" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2afe3cd2b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2afe3cd2b3a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2afe3cd2b530"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2afe3cd2b6c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2afe3cd2b850"/>
        <function-ref name="setCca" scoped="" ref="0x2afe3cd2b9e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2afe3cd2bb70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x2afe3cd21060" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x2afe3cd21060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2afe3cd213e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2afe3cd21570"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2afe3cd21700"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2afe3cd21890"/>
        <function-ref name="setCca" scoped="" ref="0x2afe3cd21a20"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2afe3cd21bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2afe3cd17330" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2afe3cd17330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2afe3cd176b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2afe3cd17840"/>
        <function-ref name="getRssi" scoped="" ref="0x2afe3cd179d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x2afe3cd17b60"/>
        <function-ref name="getPower" scoped="" ref="0x2afe3cd17cf0"/>
        <function-ref name="getLqi" scoped="" ref="0x2afe3cd17e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x2afe3cd192a0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x2afe3cd192a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3cd19620"/>
        <function-ref name="cancel" scoped="" ref="0x2afe3cd197b0"/>
        <function-ref name="modify" scoped="" ref="0x2afe3cd19940"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3cd19ad0"/>
        <function-ref name="resend" scoped="" ref="0x2afe3cd19c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2afe3cd2c2e0" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2afe3cd2c2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3cd2c660"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3cd2c7f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3cd2c980"/>
        <function-ref name="cancel" scoped="" ref="0x2afe3cd2cb10"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3cd2cca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2afe3cd16420" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x2afe3cd16420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2afe3cd167a0"/>
        <function-ref name="rand32" scoped="" ref="0x2afe3cd16930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2afe3cd296f0" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x2afe3cd296f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2afe3cd29a70"/>
        <function-ref name="stop" scoped="" ref="0x2afe3cd29c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2afe3cd0f920" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2afe3cd0f920"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2afe3cd0fca0"/>
        <function-ref name="getHeader" scoped="" ref="0x2afe3cd0fe30"/>
        <function-ref name="getMetadata" scoped="" ref="0x2afe3cd14020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x2afe3cd223f0" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x2afe3cd223f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2afe3cd22770"/>
        <function-ref name="rfOff" scoped="" ref="0x2afe3cd22900"/>
        <function-ref name="rxOn" scoped="" ref="0x2afe3cd22a90"/>
        <function-ref name="startVReg" scoped="" ref="0x2afe3cd22c20"/>
        <function-ref name="stopVReg" scoped="" ref="0x2afe3cd22db0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2afe3cd29020"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2afe3cd291b0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2afe3cd29340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2afe3cd16bf0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2afe3cd16bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2afe3cd18020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2afe3cd181b0"/>
        <function-ref name="led1On" scoped="" ref="0x2afe3cd18340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2afe3cd184d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2afe3cd18660"/>
        <function-ref name="get" scoped="" ref="0x2afe3cd187f0"/>
        <function-ref name="led1Off" scoped="" ref="0x2afe3cd18980"/>
        <function-ref name="led2Off" scoped="" ref="0x2afe3cd17020"/>
        <function-ref name="set" scoped="" ref="0x2afe3cd18b10"/>
        <function-ref name="led0On" scoped="" ref="0x2afe3cd18ca0"/>
        <function-ref name="led2On" scoped="" ref="0x2afe3cd18e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2afe3cd2be60" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2afe3cd2be60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afe3cd2a210"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afe3cd2a3a0"/>
        <function-ref name="request" scoped="" ref="0x2afe3cd2a530"/>
        <function-ref name="granted" scoped="" ref="0x2afe3cd2a6c0"/>
        <function-ref name="isOwner" scoped="" ref="0x2afe3cd2a850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x2afe3cd0e110" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x2afe3cd0e110"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2afe3cd0e590"/>
        <function-ref name="toIdle" scoped="" ref="0x2afe3cd0e720"/>
        <function-ref name="isState" scoped="" ref="0x2afe3cd0e8b0"/>
        <function-ref name="isIdle" scoped="" ref="0x2afe3cd0ea40"/>
        <function-ref name="requestState" scoped="" ref="0x2afe3cd0ebd0"/>
        <function-ref name="forceState" scoped="" ref="0x2afe3cd0ed60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x2afe3cd4eb70" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x2afe3cd4eb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2afe3cd4d020"/>
        <function-ref name="runTask" scoped="" ref="0x2afe3cd4d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x2afe3cd4fba0" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x2afe3cd4fba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2afe3cd4e020"/>
        <function-ref name="runTask" scoped="" ref="0x2afe3cd4e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x2afe3cd50c20" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x2afe3cd50c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2afe3cd4f020"/>
        <function-ref name="runTask" scoped="" ref="0x2afe3cd4f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x2afe3cd8adc0" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x2afe3cd8adc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2afe3cd96180"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2afe3cd96310"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2afe3cd964a0"/>
        <function-ref name="syncDone" scoped="" ref="0x2afe3cd96630"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2afe3cd967c0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2afe3cd96950"/>
        <function-ref name="setChannel" scoped="" ref="0x2afe3cd96ae0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2afe3cd96c70"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2afe3cd96e00"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2afe3cd95020"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2afe3cd951b0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2afe3cd95340"/>
        <function-ref name="sync" scoped="" ref="0x2afe3cd954d0"/>
        <function-ref name="getChannel" scoped="" ref="0x2afe3cd95760"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2afe3cd958f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x2afe3cd870c0" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x2afe3cd870c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3cd87cb0"/>
        <function-ref name="readDone" scoped="" ref="0x2afe3cd84170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x2afe3cd95bf0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x2afe3cd95bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2afe3cd89020"/>
        <function-ref name="rfOff" scoped="" ref="0x2afe3cd891b0"/>
        <function-ref name="rxOn" scoped="" ref="0x2afe3cd89340"/>
        <function-ref name="startVReg" scoped="" ref="0x2afe3cd894d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x2afe3cd89660"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2afe3cd897f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2afe3cd89980"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2afe3cd89b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2afe3cd9a950" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2afe3cd9a950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afe3cd9acd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afe3cd9ae60"/>
        <function-ref name="request" scoped="" ref="0x2afe3cd97020"/>
        <function-ref name="granted" scoped="" ref="0x2afe3cd971b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2afe3cd97340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x2afe3cd80970" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x2afe3cd80970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2afe3cd80cf0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2afe3cd80e80"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2afe3cd7f030"/>
        <function-ref name="syncDone" scoped="" ref="0x2afe3cd7f1c0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2afe3cd7f350"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2afe3cd7f4e0"/>
        <function-ref name="setChannel" scoped="" ref="0x2afe3cd7f670"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2afe3cd7f800"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2afe3cd7f990"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2afe3cd7fb20"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2afe3cd7fcb0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2afe3cd7fe40"/>
        <function-ref name="sync" scoped="" ref="0x2afe3cd7e020"/>
        <function-ref name="getChannel" scoped="" ref="0x2afe3cd7e2b0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2afe3cd7e440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x2afe3cda48e0" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2afe3cda48e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3cda4c60"/>
        <function-ref name="write" scoped="" ref="0x2afe3cda4df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x2afe3cd7a020" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2afe3cd7a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x2afe3cd7a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x2afe3cdbdd90" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x2afe3cdbdd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afe3cdbb670"/>
        <function-ref name="fired" scoped="" ref="0x2afe3cdc35d0"/>
        <function-ref name="startAt" scoped="" ref="0x2afe3cdbb020"/>
        <function-ref name="isRunning" scoped="" ref="0x2afe3cdc3a90"/>
        <function-ref name="getAlarm" scoped="" ref="0x2afe3cdbbb30"/>
        <function-ref name="start" scoped="" ref="0x2afe3cd79bc0"/>
        <function-ref name="stop" scoped="" ref="0x2afe3cdc3110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x2afe3cda75f0" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2afe3cda75f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3cda7970"/>
        <function-ref name="write" scoped="" ref="0x2afe3cda7b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x2afe3cdb8380" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x2afe3cdb8380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3cdb8700"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3cdb8890"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3cdb8a20"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3cdb8bb0"/>
        <function-ref name="get" scoped="" ref="0x2afe3cdb8d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3cdb7020"/>
        <function-ref name="set" scoped="" ref="0x2afe3cdb71b0"/>
        <function-ref name="clr" scoped="" ref="0x2afe3cdb7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x2afe3cd7db40" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x2afe3cd7db40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3cd7c750"/>
        <function-ref name="readDone" scoped="" ref="0x2afe3cd7cbd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x2afe3cdde820" loc="126:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x2afe3cdde820"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2afe3cddeba0"/>
        <function-ref name="runTask" scoped="" ref="0x2afe3cdded30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x2afe3cda21c0" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2afe3cda21c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3cda2540"/>
        <function-ref name="write" scoped="" ref="0x2afe3cda26d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x2afe3cda2a70" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2afe3cda2a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3cda2df0"/>
        <function-ref name="write" scoped="" ref="0x2afe3cda1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x2afe3cdac3d0" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2afe3cdac3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3cdac750"/>
        <function-ref name="write" scoped="" ref="0x2afe3cdac8e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2afe3cdad810" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2afe3cdad810"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2afe3cdadb90"/>
        <function-ref name="changed" scoped="" ref="0x2afe3cdadd20"/>
        <function-ref name="amGroup" scoped="" ref="0x2afe3cdb4020"/>
        <function-ref name="setAddress" scoped="" ref="0x2afe3cdb41b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2afe3cdb9060" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x2afe3cdb9060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3cdb93e0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3cdb9570"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3cdb9700"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3cdb9890"/>
        <function-ref name="get" scoped="" ref="0x2afe3cdb9a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3cdb9bb0"/>
        <function-ref name="set" scoped="" ref="0x2afe3cdb9d40"/>
        <function-ref name="clr" scoped="" ref="0x2afe3cdb8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x2afe3cda0160" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2afe3cda0160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3cda06e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x2afe3cdb76a0" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x2afe3cdb76a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3cdb7a20"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3cdb7bb0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3cdb7d40"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3cdb6020"/>
        <function-ref name="get" scoped="" ref="0x2afe3cdb61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3cdb6340"/>
        <function-ref name="set" scoped="" ref="0x2afe3cdb64d0"/>
        <function-ref name="clr" scoped="" ref="0x2afe3cdb6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afe3cd81510" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afe3cd81510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afe3cd81890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x2afe3cda4020" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2afe3cda4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3cda43a0"/>
        <function-ref name="write" scoped="" ref="0x2afe3cda4530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x2afe3cda0a80" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2afe3cda0a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3cda0e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2afe3cd9f1d0" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x2afe3cd9f1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afe3cd9f550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afe3cd9f6e0"/>
        <function-ref name="request" scoped="" ref="0x2afe3cd9f870"/>
        <function-ref name="granted" scoped="" ref="0x2afe3cd9fa00"/>
        <function-ref name="isOwner" scoped="" ref="0x2afe3cd9fb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x2afe3cde9d90" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x2afe3cde9d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afe3cde8180"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afe3cde8310"/>
        <function-ref name="request" scoped="" ref="0x2afe3cde84a0"/>
        <function-ref name="granted" scoped="" ref="0x2afe3cde8630"/>
        <function-ref name="isOwner" scoped="" ref="0x2afe3cde87c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x2afe3cd7e740" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x2afe3cd7e740"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2afe3cd7eac0"/>
        <function-ref name="rfOff" scoped="" ref="0x2afe3cd7ec50"/>
        <function-ref name="rxOn" scoped="" ref="0x2afe3cd7ede0"/>
        <function-ref name="startVReg" scoped="" ref="0x2afe3cd7d020"/>
        <function-ref name="stopVReg" scoped="" ref="0x2afe3cd7d1b0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2afe3cd7d340"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2afe3cd7d4d0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2afe3cd7d660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x2afe3cdacc80" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2afe3cdacc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3cda70a0"/>
        <function-ref name="write" scoped="" ref="0x2afe3cda7230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x2afe3cda5b00" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2afe3cda5b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3cda5e80"/>
        <function-ref name="write" scoped="" ref="0x2afe3cdac030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x2afe3cd9e2e0" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2afe3cd9e2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3cd9e660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2afe3cde8a80" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2afe3cde8a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2afe3cde8e00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2afe3cde7020"/>
        <function-ref name="led1On" scoped="" ref="0x2afe3cde71b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2afe3cde7340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2afe3cde74d0"/>
        <function-ref name="get" scoped="" ref="0x2afe3cde7660"/>
        <function-ref name="led1Off" scoped="" ref="0x2afe3cde77f0"/>
        <function-ref name="led2Off" scoped="" ref="0x2afe3cde7e30"/>
        <function-ref name="set" scoped="" ref="0x2afe3cde7980"/>
        <function-ref name="led0On" scoped="" ref="0x2afe3cde7b10"/>
        <function-ref name="led2On" scoped="" ref="0x2afe3cde7ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x2afe3cddf940" loc="125:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x2afe3cddf940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2afe3cddfcc0"/>
        <function-ref name="runTask" scoped="" ref="0x2afe3cddfe50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2afe3cd81b80" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2afe3cd81b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afe3cd80020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afe3cd801b0"/>
        <function-ref name="request" scoped="" ref="0x2afe3cd80340"/>
        <function-ref name="granted" scoped="" ref="0x2afe3cd804d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2afe3cd80660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x2afe3cdb1520" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2afe3cdb1520"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3cdb18a0"/>
        <function-ref name="write" scoped="" ref="0x2afe3cdb1a30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x2afe3cda8a90" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2afe3cda8a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3cdb1020"/>
        <function-ref name="write" scoped="" ref="0x2afe3cdb11b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x2afe3cdb50e0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x2afe3cdb50e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afe3cdb5460"/>
        <function-ref name="disable" scoped="" ref="0x2afe3cdb55f0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2afe3cdb5780"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2afe3cdb5910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x2afe3cde9020" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x2afe3cde9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afe3cde93a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afe3cde9530"/>
        <function-ref name="request" scoped="" ref="0x2afe3cde96c0"/>
        <function-ref name="granted" scoped="" ref="0x2afe3cde9850"/>
        <function-ref name="isOwner" scoped="" ref="0x2afe3cde99e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x2afe3cd9e9f0" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2afe3cd9e9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3cd9ed70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afe3ce4c7e0" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afe3ce4c7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afe3ce4cb60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x2afe3ce48220" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x2afe3ce48220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afe3ce45b30"/>
        <function-ref name="fired" scoped="" ref="0x2afe3ce46a60"/>
        <function-ref name="startAt" scoped="" ref="0x2afe3ce454e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2afe3ce45020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2afe3ce44020"/>
        <function-ref name="start" scoped="" ref="0x2afe3ce46090"/>
        <function-ref name="stop" scoped="" ref="0x2afe3ce465a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afe3ce43a20" loc="42:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afe3ce43a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afe3ce43da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x2afe3ce422e0" loc="43:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x2afe3ce422e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afe3cf45b30"/>
        <function-ref name="fired" scoped="" ref="0x2afe3cf46ae0"/>
        <function-ref name="startAt" scoped="" ref="0x2afe3cf454e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2afe3cf45020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2afe3cf44020"/>
        <function-ref name="start" scoped="" ref="0x2afe3cf46110"/>
        <function-ref name="stop" scoped="" ref="0x2afe3cf46620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2afe3e27b2a0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2afe3e27b2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afe3e278b30"/>
        <function-ref name="fired" scoped="" ref="0x2afe3e27aaa0"/>
        <function-ref name="startAt" scoped="" ref="0x2afe3e2784e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2afe3e278020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2afe3e277020"/>
        <function-ref name="start" scoped="" ref="0x2afe3e27a0d0"/>
        <function-ref name="stop" scoped="" ref="0x2afe3e27a5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afe3e27ca10" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afe3e27ca10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afe3e27cd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2afe3e2732a0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2afe3e2732a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afe3e271b30"/>
        <function-ref name="fired" scoped="" ref="0x2afe3e272aa0"/>
        <function-ref name="startAt" scoped="" ref="0x2afe3e2714e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2afe3e271020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2afe3e270020"/>
        <function-ref name="start" scoped="" ref="0x2afe3e2720d0"/>
        <function-ref name="stop" scoped="" ref="0x2afe3e2725e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afe3e274a10" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afe3e274a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afe3e274d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x2afe3e25bc10" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2afe3e25bc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afe3e25a020"/>
        <function-ref name="setEvent" scoped="" ref="0x2afe3e25a1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2afe3e25a340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2afe3e25a4d0"/>
        <function-ref name="fired" scoped="" ref="0x2afe3e25a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x2afe3e25d1b0" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2afe3e25d1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3e25d530"/>
        <function-ref name="setClockSource" scoped="" ref="0x2afe3e25d6c0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afe3e25d850"/>
        <function-ref name="get" scoped="" ref="0x2afe3e25d9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afe3e25db70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afe3e25dd00"/>
        <function-ref name="getMode" scoped="" ref="0x2afe3e25c020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afe3e25c1b0"/>
        <function-ref name="overflow" scoped="" ref="0x2afe3e25c340"/>
        <function-ref name="setMode" scoped="" ref="0x2afe3e25c4d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2afe3e25c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x2afe3e25c8f0" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2afe3e25c8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2afe3e25cc70"/>
        <function-ref name="getControl" scoped="" ref="0x2afe3e25ce00"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afe3e25b020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2afe3e25b1b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2afe3e25b340"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afe3e25b4d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2afe3e25b660"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2afe3e25b7f0"/>
        <function-ref name="setControl" scoped="" ref="0x2afe3e25b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x2afe3ce6eba0" loc="52:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2afe3ce6eba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afe3ce6c020"/>
        <function-ref name="setEvent" scoped="" ref="0x2afe3ce6c1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2afe3ce6c340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2afe3ce6c4d0"/>
        <function-ref name="fired" scoped="" ref="0x2afe3ce6c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x2afe3ce714d0" loc="50:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2afe3ce714d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3ce71850"/>
        <function-ref name="setClockSource" scoped="" ref="0x2afe3ce719e0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afe3ce71b70"/>
        <function-ref name="get" scoped="" ref="0x2afe3ce71d00"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afe3ce70020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afe3ce701b0"/>
        <function-ref name="getMode" scoped="" ref="0x2afe3ce70340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afe3ce704d0"/>
        <function-ref name="overflow" scoped="" ref="0x2afe3ce70660"/>
        <function-ref name="setMode" scoped="" ref="0x2afe3ce707f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2afe3ce70980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x2afe3ce6f280" loc="51:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2afe3ce6f280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2afe3ce6f600"/>
        <function-ref name="getControl" scoped="" ref="0x2afe3ce6f790"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afe3ce6f920"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2afe3ce6fab0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2afe3ce6fc40"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afe3ce6fdd0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2afe3ce6e020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2afe3ce6e1b0"/>
        <function-ref name="setControl" scoped="" ref="0x2afe3ce6e340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x2afe3e251a80" loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2afe3e251a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afe3e251e00"/>
        <function-ref name="setEvent" scoped="" ref="0x2afe3e250020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2afe3e2501b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2afe3e250340"/>
        <function-ref name="fired" scoped="" ref="0x2afe3e2504d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2afe3e253020" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2afe3e253020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3e2533a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2afe3e253530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afe3e2536c0"/>
        <function-ref name="get" scoped="" ref="0x2afe3e253850"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afe3e2539e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afe3e253b70"/>
        <function-ref name="getMode" scoped="" ref="0x2afe3e253d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afe3e252020"/>
        <function-ref name="overflow" scoped="" ref="0x2afe3e2521b0"/>
        <function-ref name="setMode" scoped="" ref="0x2afe3e252340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2afe3e2524d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2afe3e258da0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2afe3e258da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afe3e254670"/>
        <function-ref name="fired" scoped="" ref="0x2afe3e255610"/>
        <function-ref name="startAt" scoped="" ref="0x2afe3e254020"/>
        <function-ref name="isRunning" scoped="" ref="0x2afe3e255ad0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2afe3e254b30"/>
        <function-ref name="start" scoped="" ref="0x2afe3e256bf0"/>
        <function-ref name="stop" scoped="" ref="0x2afe3e255150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afe3e258510" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afe3e258510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afe3e258890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x2afe3e252760" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2afe3e252760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2afe3e252ae0"/>
        <function-ref name="getControl" scoped="" ref="0x2afe3e252c70"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afe3e252e00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2afe3e251020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2afe3e2511b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afe3e251340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2afe3e2514d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2afe3e251660"/>
        <function-ref name="setControl" scoped="" ref="0x2afe3e2517f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2afe3cebd020" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2afe3cebd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afe3cebde30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afe3cebc800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afe3cebc340"/>
        <function-ref name="overflow" scoped="" ref="0x2afe3cebccc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2afe3ceeb950" loc="63:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x2afe3ceeb950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afe3cee9780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afe3cee8150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afe3cee9c40"/>
        <function-ref name="overflow" scoped="" ref="0x2afe3cee8610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2afe3ceb75f0" loc="62:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2afe3ceb75f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afe3ceec430"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afe3ceecdb0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afe3ceec8f0"/>
        <function-ref name="overflow" scoped="" ref="0x2afe3ceeb2a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2afe3e26d5f0" loc="61:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2afe3e26d5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afe3e26be50"/>
        <function-ref name="fired" scoped="" ref="0x2afe3e26ce00"/>
        <function-ref name="startAt" scoped="" ref="0x2afe3e26b800"/>
        <function-ref name="isRunning" scoped="" ref="0x2afe3e26b340"/>
        <function-ref name="getAlarm" scoped="" ref="0x2afe3e26a340"/>
        <function-ref name="start" scoped="" ref="0x2afe3e26c430"/>
        <function-ref name="stop" scoped="" ref="0x2afe3e26c940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2afe3e267d20" loc="73:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x2afe3e267d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afe3e264670"/>
        <function-ref name="fired" scoped="" ref="0x2afe3e265550"/>
        <function-ref name="startAt" scoped="" ref="0x2afe3e264020"/>
        <function-ref name="isRunning" scoped="" ref="0x2afe3e265a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x2afe3e264b30"/>
        <function-ref name="start" scoped="" ref="0x2afe3e266b60"/>
        <function-ref name="stop" scoped="" ref="0x2afe3e265090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2afe3e26a9b0" loc="68:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2afe3e26a9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afe3e2697e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afe3e2671b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afe3e269ca0"/>
        <function-ref name="overflow" scoped="" ref="0x2afe3e267670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x2afe3cf3e6a0" loc="44:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x2afe3cf3e6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3cf3ea20"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3cf3ebb0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3cf3ed40"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3cf3d020"/>
        <function-ref name="get" scoped="" ref="0x2afe3cf3d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3cf3d340"/>
        <function-ref name="set" scoped="" ref="0x2afe3cf3d4d0"/>
        <function-ref name="clr" scoped="" ref="0x2afe3cf3d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x2afe3cf3d9d0" loc="45:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x2afe3cf3d9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3cf3dd50"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3cf3c020"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3cf3c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3cf3c340"/>
        <function-ref name="get" scoped="" ref="0x2afe3cf3c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3cf3c660"/>
        <function-ref name="set" scoped="" ref="0x2afe3cf3c7f0"/>
        <function-ref name="clr" scoped="" ref="0x2afe3cf3c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x2afe3cf3cce0" loc="46:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x2afe3cf3cce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3cf3b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3cf3b230"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3cf3b3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3cf3b550"/>
        <function-ref name="get" scoped="" ref="0x2afe3cf3b6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3cf3b870"/>
        <function-ref name="set" scoped="" ref="0x2afe3cf3ba00"/>
        <function-ref name="clr" scoped="" ref="0x2afe3cf3bb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x2afe3cf3f370" loc="43:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x2afe3cf3f370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3cf3f6f0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3cf3f880"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3cf3fa10"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3cf3fba0"/>
        <function-ref name="get" scoped="" ref="0x2afe3cf3fd30"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3cf3e020"/>
        <function-ref name="set" scoped="" ref="0x2afe3cf3e1b0"/>
        <function-ref name="clr" scoped="" ref="0x2afe3cf3e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x2afe3cf39380" loc="48:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x2afe3cf39380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3cf39700"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3cf39890"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3cf39a20"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3cf39bb0"/>
        <function-ref name="get" scoped="" ref="0x2afe3cf39d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3cf38020"/>
        <function-ref name="set" scoped="" ref="0x2afe3cf381b0"/>
        <function-ref name="clr" scoped="" ref="0x2afe3cf38340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x2afe3cf400e0" loc="42:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x2afe3cf400e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3cf40460"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3cf405f0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3cf40780"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3cf40910"/>
        <function-ref name="get" scoped="" ref="0x2afe3cf40aa0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3cf40c30"/>
        <function-ref name="set" scoped="" ref="0x2afe3cf40dc0"/>
        <function-ref name="clr" scoped="" ref="0x2afe3cf3f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x2afe3cf3a020" loc="47:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x2afe3cf3a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3cf3a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3cf3a530"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3cf3a6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3cf3a850"/>
        <function-ref name="get" scoped="" ref="0x2afe3cf3a9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3cf3ab70"/>
        <function-ref name="set" scoped="" ref="0x2afe3cf3ad00"/>
        <function-ref name="clr" scoped="" ref="0x2afe3cf39020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2afe3cf36930" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2afe3cf36930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3cf36cb0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3cf36e40"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3cf35020"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3cf351b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3cf35340"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3cf354d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3cf35660"/>
        <function-ref name="get" scoped="" ref="0x2afe3cf357f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3cf35980"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3cf35b10"/>
        <function-ref name="set" scoped="" ref="0x2afe3cf35ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3cf35e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3cf34020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3cf342b0"/>
        <function-ref name="clr" scoped="" ref="0x2afe3cf34440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2afe3cf37710" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2afe3cf37710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3cf37a90"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3cf37c20"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3cf37db0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3cf36020"/>
        <function-ref name="get" scoped="" ref="0x2afe3cf361b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3cf36340"/>
        <function-ref name="set" scoped="" ref="0x2afe3cf364d0"/>
        <function-ref name="clr" scoped="" ref="0x2afe3cf36660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2afe3cf31480" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2afe3cf31480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3cf31800"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3cf31990"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3cf31b20"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3cf31cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3cf31e40"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3cf30020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3cf301b0"/>
        <function-ref name="get" scoped="" ref="0x2afe3cf30340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3cf304d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3cf30660"/>
        <function-ref name="set" scoped="" ref="0x2afe3cf307f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3cf30980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3cf30b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3cf30da0"/>
        <function-ref name="clr" scoped="" ref="0x2afe3cf2f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2afe3cf321b0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2afe3cf321b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3cf32530"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3cf326c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3cf32850"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3cf329e0"/>
        <function-ref name="get" scoped="" ref="0x2afe3cf32b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3cf32d00"/>
        <function-ref name="set" scoped="" ref="0x2afe3cf31020"/>
        <function-ref name="clr" scoped="" ref="0x2afe3cf311b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2afe3cf2c020" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2afe3cf2c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3cf2c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3cf2c530"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3cf2c6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3cf2c850"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3cf2c9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3cf2cb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3cf2cd00"/>
        <function-ref name="get" scoped="" ref="0x2afe3cf2b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3cf2b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3cf2b340"/>
        <function-ref name="set" scoped="" ref="0x2afe3cf2b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3cf2b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3cf2b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3cf2ba80"/>
        <function-ref name="clr" scoped="" ref="0x2afe3cf2bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2afe3cf2ed70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2afe3cf2ed70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3cf2d180"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3cf2d310"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3cf2d4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3cf2d630"/>
        <function-ref name="get" scoped="" ref="0x2afe3cf2d7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3cf2d950"/>
        <function-ref name="set" scoped="" ref="0x2afe3cf2dae0"/>
        <function-ref name="clr" scoped="" ref="0x2afe3cf2dc70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2afe3cf27de0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2afe3cf27de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3cf26180"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3cf26310"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3cf264a0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3cf26630"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3cf267c0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3cf26950"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3cf26ae0"/>
        <function-ref name="get" scoped="" ref="0x2afe3cf26c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3cf26e00"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3cf25020"/>
        <function-ref name="set" scoped="" ref="0x2afe3cf251b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3cf25340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3cf254d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3cf25760"/>
        <function-ref name="clr" scoped="" ref="0x2afe3cf258f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2afe3cf28b70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2afe3cf28b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3cf27020"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3cf271b0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3cf27340"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3cf274d0"/>
        <function-ref name="get" scoped="" ref="0x2afe3cf27660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3cf277f0"/>
        <function-ref name="set" scoped="" ref="0x2afe3cf27980"/>
        <function-ref name="clr" scoped="" ref="0x2afe3cf27b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2afe3cf74930" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2afe3cf74930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3cf74cb0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3cf74e40"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3cf73020"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3cf731b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3cf73340"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3cf734d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3cf73660"/>
        <function-ref name="get" scoped="" ref="0x2afe3cf737f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3cf73980"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3cf73b10"/>
        <function-ref name="set" scoped="" ref="0x2afe3cf73ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3cf73e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3cf72020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3cf722b0"/>
        <function-ref name="clr" scoped="" ref="0x2afe3cf72440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2afe3cf75710" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2afe3cf75710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3cf75a90"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3cf75c20"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3cf75db0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3cf74020"/>
        <function-ref name="get" scoped="" ref="0x2afe3cf741b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3cf74340"/>
        <function-ref name="set" scoped="" ref="0x2afe3cf744d0"/>
        <function-ref name="clr" scoped="" ref="0x2afe3cf74660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2afe3cf6f480" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2afe3cf6f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3cf6f800"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3cf6f990"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3cf6fb20"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3cf6fcb0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3cf6fe40"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3cf6e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3cf6e1b0"/>
        <function-ref name="get" scoped="" ref="0x2afe3cf6e340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3cf6e4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3cf6e660"/>
        <function-ref name="set" scoped="" ref="0x2afe3cf6e7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3cf6e980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3cf6eb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3cf6eda0"/>
        <function-ref name="clr" scoped="" ref="0x2afe3cf6d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2afe3cf701b0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2afe3cf701b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3cf70530"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3cf706c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3cf70850"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3cf709e0"/>
        <function-ref name="get" scoped="" ref="0x2afe3cf70b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3cf70d00"/>
        <function-ref name="set" scoped="" ref="0x2afe3cf6f020"/>
        <function-ref name="clr" scoped="" ref="0x2afe3cf6f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2afe3cf6a020" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2afe3cf6a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3cf6a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3cf6a530"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3cf6a6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3cf6a850"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3cf6a9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3cf6ab70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3cf6ad00"/>
        <function-ref name="get" scoped="" ref="0x2afe3cf69020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3cf691b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3cf69340"/>
        <function-ref name="set" scoped="" ref="0x2afe3cf694d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3cf69660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3cf697f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3cf69a80"/>
        <function-ref name="clr" scoped="" ref="0x2afe3cf69c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2afe3cf6cd70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2afe3cf6cd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3cf6b180"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3cf6b310"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3cf6b4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3cf6b630"/>
        <function-ref name="get" scoped="" ref="0x2afe3cf6b7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3cf6b950"/>
        <function-ref name="set" scoped="" ref="0x2afe3cf6bae0"/>
        <function-ref name="clr" scoped="" ref="0x2afe3cf6bc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x2afe3cf515a0" loc="42:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x2afe3cf515a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2afe3cf51920"/>
        <function-ref name="disable" scoped="" ref="0x2afe3cf51ab0"/>
        <function-ref name="captured" scoped="" ref="0x2afe3cf51c40"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2afe3cf51dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x2afe3cf56210" loc="43:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x2afe3cf56210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afe3cf56590"/>
        <function-ref name="disable" scoped="" ref="0x2afe3cf56720"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2afe3cf568b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2afe3cf56a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x2afe3cf56e30" loc="44:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x2afe3cf56e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afe3cf551e0"/>
        <function-ref name="disable" scoped="" ref="0x2afe3cf55370"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2afe3cf55500"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2afe3cf55690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x2afe3cf8fda0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x2afe3cf8fda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afe3cf8e180"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2afe3cf8e310"/>
        <function-ref name="captured" scoped="" ref="0x2afe3cf8e4a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afe3cf8e630"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afe3cf8e7c0"/>
        <function-ref name="setEdge" scoped="" ref="0x2afe3cf8e950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2afe3cf91020" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2afe3cf91020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2afe3cf913a0"/>
        <function-ref name="disable" scoped="" ref="0x2afe3cf91530"/>
        <function-ref name="captured" scoped="" ref="0x2afe3cf916c0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2afe3cf91850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x2afe3cf91ae0" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2afe3cf91ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2afe3cf91e60"/>
        <function-ref name="getControl" scoped="" ref="0x2afe3cf8f020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afe3cf8f1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2afe3cf8f340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2afe3cf8f4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afe3cf8f660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2afe3cf8f7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2afe3cf8f980"/>
        <function-ref name="setControl" scoped="" ref="0x2afe3cf8fb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x2afe3cf8ec20" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2afe3cf8ec20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3cf8d020"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3cf8d1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3cf8d340"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3cf8d4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3cf8d660"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3cf8d7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3cf8d980"/>
        <function-ref name="get" scoped="" ref="0x2afe3cf8db10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3cf8dca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3cf8de30"/>
        <function-ref name="set" scoped="" ref="0x2afe3cf8c020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3cf8c1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3cf8c340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3cf8c5d0"/>
        <function-ref name="clr" scoped="" ref="0x2afe3cf8c760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x2afe3cf7fc40" loc="46:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x2afe3cf7fc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3cf7e020"/>
        <function-ref name="fired" scoped="" ref="0x2afe3cf7e1b0"/>
        <function-ref name="disable" scoped="" ref="0x2afe3cf7e340"/>
        <function-ref name="edge" scoped="" ref="0x2afe3cf7e4d0"/>
        <function-ref name="enable" scoped="" ref="0x2afe3cf7e660"/>
        <function-ref name="getValue" scoped="" ref="0x2afe3cf7e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x2afe3cfc8bc0" loc="58:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x2afe3cfc8bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3cfc7020"/>
        <function-ref name="fired" scoped="" ref="0x2afe3cfc71b0"/>
        <function-ref name="disable" scoped="" ref="0x2afe3cfc7340"/>
        <function-ref name="edge" scoped="" ref="0x2afe3cfc74d0"/>
        <function-ref name="enable" scoped="" ref="0x2afe3cfc7660"/>
        <function-ref name="getValue" scoped="" ref="0x2afe3cfc77f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x2afe3cf7cbc0" loc="49:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x2afe3cf7cbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3cf7b020"/>
        <function-ref name="fired" scoped="" ref="0x2afe3cf7b1b0"/>
        <function-ref name="disable" scoped="" ref="0x2afe3cf7b340"/>
        <function-ref name="edge" scoped="" ref="0x2afe3cf7b4d0"/>
        <function-ref name="enable" scoped="" ref="0x2afe3cf7b660"/>
        <function-ref name="getValue" scoped="" ref="0x2afe3cf7b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x2afe3cf7abc0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x2afe3cf7abc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3cf79020"/>
        <function-ref name="fired" scoped="" ref="0x2afe3cf791b0"/>
        <function-ref name="disable" scoped="" ref="0x2afe3cf79340"/>
        <function-ref name="edge" scoped="" ref="0x2afe3cf794d0"/>
        <function-ref name="enable" scoped="" ref="0x2afe3cf79660"/>
        <function-ref name="getValue" scoped="" ref="0x2afe3cf797f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x2afe3cf85d20" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x2afe3cf85d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3cf800e0"/>
        <function-ref name="fired" scoped="" ref="0x2afe3cf80270"/>
        <function-ref name="disable" scoped="" ref="0x2afe3cf80400"/>
        <function-ref name="edge" scoped="" ref="0x2afe3cf80590"/>
        <function-ref name="enable" scoped="" ref="0x2afe3cf80720"/>
        <function-ref name="getValue" scoped="" ref="0x2afe3cf808b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x2afe3cfcabc0" loc="56:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x2afe3cfcabc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3cfc90a0"/>
        <function-ref name="fired" scoped="" ref="0x2afe3cfc9230"/>
        <function-ref name="disable" scoped="" ref="0x2afe3cfc93c0"/>
        <function-ref name="edge" scoped="" ref="0x2afe3cfc9550"/>
        <function-ref name="enable" scoped="" ref="0x2afe3cfc96e0"/>
        <function-ref name="getValue" scoped="" ref="0x2afe3cfc9870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x2afe3cf7ebc0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x2afe3cf7ebc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3cf7d020"/>
        <function-ref name="fired" scoped="" ref="0x2afe3cf7d1b0"/>
        <function-ref name="disable" scoped="" ref="0x2afe3cf7d340"/>
        <function-ref name="edge" scoped="" ref="0x2afe3cf7d4d0"/>
        <function-ref name="enable" scoped="" ref="0x2afe3cf7d660"/>
        <function-ref name="getValue" scoped="" ref="0x2afe3cf7d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x2afe3cfc7bc0" loc="59:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x2afe3cfc7bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3cfc6020"/>
        <function-ref name="fired" scoped="" ref="0x2afe3cfc61b0"/>
        <function-ref name="disable" scoped="" ref="0x2afe3cfc6340"/>
        <function-ref name="edge" scoped="" ref="0x2afe3cfc64d0"/>
        <function-ref name="enable" scoped="" ref="0x2afe3cfc6660"/>
        <function-ref name="getValue" scoped="" ref="0x2afe3cfc67f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x2afe3cf82e70" loc="42:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x2afe3cf82e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3cf86220"/>
        <function-ref name="fired" scoped="" ref="0x2afe3cf863b0"/>
        <function-ref name="disable" scoped="" ref="0x2afe3cf86540"/>
        <function-ref name="edge" scoped="" ref="0x2afe3cf866d0"/>
        <function-ref name="enable" scoped="" ref="0x2afe3cf86860"/>
        <function-ref name="getValue" scoped="" ref="0x2afe3cf869f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x2afe3cf79bc0" loc="54:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x2afe3cf79bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3cfcb020"/>
        <function-ref name="fired" scoped="" ref="0x2afe3cfcb1b0"/>
        <function-ref name="disable" scoped="" ref="0x2afe3cfcb340"/>
        <function-ref name="edge" scoped="" ref="0x2afe3cfcb4d0"/>
        <function-ref name="enable" scoped="" ref="0x2afe3cfcb660"/>
        <function-ref name="getValue" scoped="" ref="0x2afe3cfcb7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x2afe3cf80c80" loc="45:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x2afe3cf80c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3cf7f0a0"/>
        <function-ref name="fired" scoped="" ref="0x2afe3cf7f230"/>
        <function-ref name="disable" scoped="" ref="0x2afe3cf7f3c0"/>
        <function-ref name="edge" scoped="" ref="0x2afe3cf7f550"/>
        <function-ref name="enable" scoped="" ref="0x2afe3cf7f6e0"/>
        <function-ref name="getValue" scoped="" ref="0x2afe3cf7f870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x2afe3cfc9c40" loc="57:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x2afe3cfc9c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3cfc8020"/>
        <function-ref name="fired" scoped="" ref="0x2afe3cfc81b0"/>
        <function-ref name="disable" scoped="" ref="0x2afe3cfc8340"/>
        <function-ref name="edge" scoped="" ref="0x2afe3cfc84d0"/>
        <function-ref name="enable" scoped="" ref="0x2afe3cfc8660"/>
        <function-ref name="getValue" scoped="" ref="0x2afe3cfc87f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x2afe3cf7dbc0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x2afe3cf7dbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3cf7c020"/>
        <function-ref name="fired" scoped="" ref="0x2afe3cf7c1b0"/>
        <function-ref name="disable" scoped="" ref="0x2afe3cf7c340"/>
        <function-ref name="edge" scoped="" ref="0x2afe3cf7c4d0"/>
        <function-ref name="enable" scoped="" ref="0x2afe3cf7c660"/>
        <function-ref name="getValue" scoped="" ref="0x2afe3cf7c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x2afe3cf7bbc0" loc="52:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x2afe3cf7bbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3cf7a020"/>
        <function-ref name="fired" scoped="" ref="0x2afe3cf7a1b0"/>
        <function-ref name="disable" scoped="" ref="0x2afe3cf7a340"/>
        <function-ref name="edge" scoped="" ref="0x2afe3cf7a4d0"/>
        <function-ref name="enable" scoped="" ref="0x2afe3cf7a660"/>
        <function-ref name="getValue" scoped="" ref="0x2afe3cf7a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x2afe3cf86dc0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x2afe3cf86dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3cf85180"/>
        <function-ref name="fired" scoped="" ref="0x2afe3cf85310"/>
        <function-ref name="disable" scoped="" ref="0x2afe3cf854a0"/>
        <function-ref name="edge" scoped="" ref="0x2afe3cf85630"/>
        <function-ref name="enable" scoped="" ref="0x2afe3cf857c0"/>
        <function-ref name="getValue" scoped="" ref="0x2afe3cf85950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x2afe3cfcbbc0" loc="55:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x2afe3cfcbbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3cfca020"/>
        <function-ref name="fired" scoped="" ref="0x2afe3cfca1b0"/>
        <function-ref name="disable" scoped="" ref="0x2afe3cfca340"/>
        <function-ref name="edge" scoped="" ref="0x2afe3cfca4d0"/>
        <function-ref name="enable" scoped="" ref="0x2afe3cfca660"/>
        <function-ref name="getValue" scoped="" ref="0x2afe3cfca7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x2afe3cfbea30" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x2afe3cfbea30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3cfbedb0"/>
        <function-ref name="fired" scoped="" ref="0x2afe3cfbd020"/>
        <function-ref name="disable" scoped="" ref="0x2afe3cfbd1b0"/>
        <function-ref name="edge" scoped="" ref="0x2afe3cfbd340"/>
        <function-ref name="enable" scoped="" ref="0x2afe3cfbd4d0"/>
        <function-ref name="getValue" scoped="" ref="0x2afe3cfbd660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x2afe3cfb4bc0" loc="55:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x2afe3cfb4bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3cfb3020"/>
        <function-ref name="fired" scoped="" ref="0x2afe3cfb31b0"/>
        <function-ref name="disable" scoped="" ref="0x2afe3cfb3340"/>
        <function-ref name="edge" scoped="" ref="0x2afe3cfb34d0"/>
        <function-ref name="enable" scoped="" ref="0x2afe3cfb3660"/>
        <function-ref name="getValue" scoped="" ref="0x2afe3cfb37f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x2afe3cfbba30" loc="46:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x2afe3cfbba30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3cfbbdb0"/>
        <function-ref name="fired" scoped="" ref="0x2afe3cfba020"/>
        <function-ref name="disable" scoped="" ref="0x2afe3cfba1b0"/>
        <function-ref name="edge" scoped="" ref="0x2afe3cfba340"/>
        <function-ref name="enable" scoped="" ref="0x2afe3cfba4d0"/>
        <function-ref name="getValue" scoped="" ref="0x2afe3cfba660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x2afe3cfb9a30" loc="50:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x2afe3cfb9a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3cfb9db0"/>
        <function-ref name="fired" scoped="" ref="0x2afe3cfb8020"/>
        <function-ref name="disable" scoped="" ref="0x2afe3cfb81b0"/>
        <function-ref name="edge" scoped="" ref="0x2afe3cfb8340"/>
        <function-ref name="enable" scoped="" ref="0x2afe3cfb84d0"/>
        <function-ref name="getValue" scoped="" ref="0x2afe3cfb8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x2afe3cfc1a30" loc="41:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x2afe3cfc1a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3cfc1db0"/>
        <function-ref name="fired" scoped="" ref="0x2afe3cfc0020"/>
        <function-ref name="disable" scoped="" ref="0x2afe3cfc01b0"/>
        <function-ref name="edge" scoped="" ref="0x2afe3cfc0340"/>
        <function-ref name="enable" scoped="" ref="0x2afe3cfc04d0"/>
        <function-ref name="getValue" scoped="" ref="0x2afe3cfc0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x2afe3cfb6a30" loc="53:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x2afe3cfb6a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3cfb5020"/>
        <function-ref name="fired" scoped="" ref="0x2afe3cfb51b0"/>
        <function-ref name="disable" scoped="" ref="0x2afe3cfb5340"/>
        <function-ref name="edge" scoped="" ref="0x2afe3cfb54d0"/>
        <function-ref name="enable" scoped="" ref="0x2afe3cfb5660"/>
        <function-ref name="getValue" scoped="" ref="0x2afe3cfb57f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x2afe3cfbda30" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x2afe3cfbda30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3cfbddb0"/>
        <function-ref name="fired" scoped="" ref="0x2afe3cfbc020"/>
        <function-ref name="disable" scoped="" ref="0x2afe3cfbc1b0"/>
        <function-ref name="edge" scoped="" ref="0x2afe3cfbc340"/>
        <function-ref name="enable" scoped="" ref="0x2afe3cfbc4d0"/>
        <function-ref name="getValue" scoped="" ref="0x2afe3cfbc660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x2afe3cfb3bc0" loc="56:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x2afe3cfb3bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3cfb2020"/>
        <function-ref name="fired" scoped="" ref="0x2afe3cfb21b0"/>
        <function-ref name="disable" scoped="" ref="0x2afe3cfb2340"/>
        <function-ref name="edge" scoped="" ref="0x2afe3cfb24d0"/>
        <function-ref name="enable" scoped="" ref="0x2afe3cfb2660"/>
        <function-ref name="getValue" scoped="" ref="0x2afe3cfb27f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x2afe3cfc59d0" loc="39:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x2afe3cfc59d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3cfc5d50"/>
        <function-ref name="fired" scoped="" ref="0x2afe3cfc2020"/>
        <function-ref name="disable" scoped="" ref="0x2afe3cfc21b0"/>
        <function-ref name="edge" scoped="" ref="0x2afe3cfc2340"/>
        <function-ref name="enable" scoped="" ref="0x2afe3cfc24d0"/>
        <function-ref name="getValue" scoped="" ref="0x2afe3cfc2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x2afe3cfb8a30" loc="51:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x2afe3cfb8a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3cfb8db0"/>
        <function-ref name="fired" scoped="" ref="0x2afe3cfb7020"/>
        <function-ref name="disable" scoped="" ref="0x2afe3cfb71b0"/>
        <function-ref name="edge" scoped="" ref="0x2afe3cfb7340"/>
        <function-ref name="enable" scoped="" ref="0x2afe3cfb74d0"/>
        <function-ref name="getValue" scoped="" ref="0x2afe3cfb7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x2afe3cfc0a30" loc="42:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x2afe3cfc0a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3cfc0db0"/>
        <function-ref name="fired" scoped="" ref="0x2afe3cfbe020"/>
        <function-ref name="disable" scoped="" ref="0x2afe3cfbe1b0"/>
        <function-ref name="edge" scoped="" ref="0x2afe3cfbe340"/>
        <function-ref name="enable" scoped="" ref="0x2afe3cfbe4d0"/>
        <function-ref name="getValue" scoped="" ref="0x2afe3cfbe660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x2afe3cfb5bc0" loc="54:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x2afe3cfb5bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3cfb4020"/>
        <function-ref name="fired" scoped="" ref="0x2afe3cfb41b0"/>
        <function-ref name="disable" scoped="" ref="0x2afe3cfb4340"/>
        <function-ref name="edge" scoped="" ref="0x2afe3cfb44d0"/>
        <function-ref name="enable" scoped="" ref="0x2afe3cfb4660"/>
        <function-ref name="getValue" scoped="" ref="0x2afe3cfb47f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x2afe3cfbca30" loc="45:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x2afe3cfbca30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3cfbcdb0"/>
        <function-ref name="fired" scoped="" ref="0x2afe3cfbb020"/>
        <function-ref name="disable" scoped="" ref="0x2afe3cfbb1b0"/>
        <function-ref name="edge" scoped="" ref="0x2afe3cfbb340"/>
        <function-ref name="enable" scoped="" ref="0x2afe3cfbb4d0"/>
        <function-ref name="getValue" scoped="" ref="0x2afe3cfbb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x2afe3cfbaa30" loc="49:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x2afe3cfbaa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3cfbadb0"/>
        <function-ref name="fired" scoped="" ref="0x2afe3cfb9020"/>
        <function-ref name="disable" scoped="" ref="0x2afe3cfb91b0"/>
        <function-ref name="edge" scoped="" ref="0x2afe3cfb9340"/>
        <function-ref name="enable" scoped="" ref="0x2afe3cfb94d0"/>
        <function-ref name="getValue" scoped="" ref="0x2afe3cfb9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x2afe3cfc2a30" loc="40:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x2afe3cfc2a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3cfc2db0"/>
        <function-ref name="fired" scoped="" ref="0x2afe3cfc1020"/>
        <function-ref name="disable" scoped="" ref="0x2afe3cfc11b0"/>
        <function-ref name="edge" scoped="" ref="0x2afe3cfc1340"/>
        <function-ref name="enable" scoped="" ref="0x2afe3cfc14d0"/>
        <function-ref name="getValue" scoped="" ref="0x2afe3cfc1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x2afe3cfb7a30" loc="52:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x2afe3cfb7a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3cfb7db0"/>
        <function-ref name="fired" scoped="" ref="0x2afe3cfb6020"/>
        <function-ref name="disable" scoped="" ref="0x2afe3cfb61b0"/>
        <function-ref name="edge" scoped="" ref="0x2afe3cfb6340"/>
        <function-ref name="enable" scoped="" ref="0x2afe3cfb64d0"/>
        <function-ref name="getValue" scoped="" ref="0x2afe3cfb6660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x2afe3d089610" loc="46:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x2afe3d089610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3d089990"/>
        <function-ref name="fired" scoped="" ref="0x2afe3d089b20"/>
        <function-ref name="disable" scoped="" ref="0x2afe3d089cb0"/>
        <function-ref name="edge" scoped="" ref="0x2afe3d089e40"/>
        <function-ref name="enable" scoped="" ref="0x2afe3d07b020"/>
        <function-ref name="getValue" scoped="" ref="0x2afe3d07b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x2afe3d08aa30" loc="45:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x2afe3d08aa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afe3d08adb0"/>
        <function-ref name="disable" scoped="" ref="0x2afe3d089020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2afe3d0891b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2afe3d089340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x2afe3d079610" loc="46:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x2afe3d079610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3d079990"/>
        <function-ref name="fired" scoped="" ref="0x2afe3d079b20"/>
        <function-ref name="disable" scoped="" ref="0x2afe3d079cb0"/>
        <function-ref name="edge" scoped="" ref="0x2afe3d079e40"/>
        <function-ref name="enable" scoped="" ref="0x2afe3d078020"/>
        <function-ref name="getValue" scoped="" ref="0x2afe3d0781b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x2afe3d07aa70" loc="45:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x2afe3d07aa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afe3d07adf0"/>
        <function-ref name="disable" scoped="" ref="0x2afe3d079020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2afe3d0791b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2afe3d079340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2afe3d41de50" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2afe3d41de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d41c410"/>
        <function-ref name="write" scoped="" ref="0x2afe3d41c5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2afe3d3c0160" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2afe3d3c0160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d3c04e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2afe3d420e50" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2afe3d420e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d41f210"/>
        <function-ref name="write" scoped="" ref="0x2afe3d41f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2afe3d41a880" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2afe3d41a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d41ac00"/>
        <function-ref name="write" scoped="" ref="0x2afe3d41ad90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2afe3d4120a0" loc="86:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2afe3d4120a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d412420"/>
        <function-ref name="write" scoped="" ref="0x2afe3d4125b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2afe3d4190a0" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2afe3d4190a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d419420"/>
        <function-ref name="write" scoped="" ref="0x2afe3d4195b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2afe3d407500" loc="108:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2afe3d407500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d407880"/>
        <function-ref name="write" scoped="" ref="0x2afe3d407a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2afe3d409500" loc="104:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2afe3d409500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d409880"/>
        <function-ref name="write" scoped="" ref="0x2afe3d409a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2afe3d3bf490" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2afe3d3bf490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d3bf810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2afe3d40f880" loc="93:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2afe3d40f880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d40fc00"/>
        <function-ref name="write" scoped="" ref="0x2afe3d40fd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2afe3d40a500" loc="102:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2afe3d40a500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d40a880"/>
        <function-ref name="write" scoped="" ref="0x2afe3d40aa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2afe3d41fe50" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2afe3d41fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d41e210"/>
        <function-ref name="write" scoped="" ref="0x2afe3d41e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2afe3d41ee50" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2afe3d41ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d41d210"/>
        <function-ref name="write" scoped="" ref="0x2afe3d41d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2afe3d415880" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2afe3d415880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d415c00"/>
        <function-ref name="write" scoped="" ref="0x2afe3d415d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2afe3d4160a0" loc="79:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2afe3d4160a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d416420"/>
        <function-ref name="write" scoped="" ref="0x2afe3d4165b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2afe3d419880" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2afe3d419880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d419c00"/>
        <function-ref name="write" scoped="" ref="0x2afe3d419d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2afe3d3c3a90" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2afe3d3c3a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2afe3d3c3e10"/>
        <function-ref name="abortRelease" scoped="" ref="0x2afe3d3c2020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2afe3d3c21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2afe3d3bee00" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2afe3d3bee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d3bd1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2afe3d3bd490" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2afe3d3bd490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d3bd910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2afe3d40ec80" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2afe3d40ec80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d40c0a0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d40c230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2afe3d3bdbe0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2afe3d3bdbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d3bc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2afe3d40ace0" loc="103:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2afe3d40ace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d4090a0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d409230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2afe3d3be160" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2afe3d3be160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d3be4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2afe3d40f0a0" loc="92:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2afe3d40f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d40f420"/>
        <function-ref name="write" scoped="" ref="0x2afe3d40f5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2afe3d41e670" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2afe3d41e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d41e9f0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d41eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2afe3d41f670" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2afe3d41f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d41f9f0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d41fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2afe3d3c2ad0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2afe3d3c2ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d3c2e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2afe3d4100a0" loc="90:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2afe3d4100a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d410420"/>
        <function-ref name="write" scoped="" ref="0x2afe3d4105b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2afe3d412880" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2afe3d412880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d412c00"/>
        <function-ref name="write" scoped="" ref="0x2afe3d412d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2afe3d410880" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2afe3d410880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d410c00"/>
        <function-ref name="write" scoped="" ref="0x2afe3d410d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2afe3d408ce0" loc="107:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2afe3d408ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d4070a0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d407230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2afe3d409ce0" loc="105:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2afe3d409ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d4080a0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d408230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2afe3d416880" loc="80:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2afe3d416880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d416c00"/>
        <function-ref name="write" scoped="" ref="0x2afe3d416d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2afe3d4110a0" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2afe3d4110a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d411420"/>
        <function-ref name="write" scoped="" ref="0x2afe3d4115b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2afe3d40bce0" loc="101:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2afe3d40bce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d40a0a0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d40a230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2afe3d418880" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2afe3d418880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d418c00"/>
        <function-ref name="write" scoped="" ref="0x2afe3d418d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2afe3d407ce0" loc="111:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2afe3d407ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2afe3d4050a0"/>
        <function-ref name="writeDone" scoped="" ref="0x2afe3d405230"/>
        <function-ref name="write" scoped="" ref="0x2afe3d4053c0"/>
        <function-ref name="beginRead" scoped="" ref="0x2afe3d405550"/>
        <function-ref name="readDone" scoped="" ref="0x2afe3d4056e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2afe3d3c2480" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2afe3d3c2480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d3c2800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2afe3d420670" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2afe3d420670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d4209f0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d420b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2afe3d41d670" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2afe3d41d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d41d9f0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d41db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2afe3d4130a0" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2afe3d4130a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d413420"/>
        <function-ref name="write" scoped="" ref="0x2afe3d4135b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2afe3d4180a0" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2afe3d4180a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d418420"/>
        <function-ref name="write" scoped="" ref="0x2afe3d4185b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2afe3d413880" loc="85:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2afe3d413880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d413c00"/>
        <function-ref name="write" scoped="" ref="0x2afe3d413d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2afe3d41c870" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2afe3d41c870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d41cbf0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d41cd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2afe3d3c07b0" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2afe3d3c07b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d3c0b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2afe3d41a0a0" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2afe3d41a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d41a420"/>
        <function-ref name="write" scoped="" ref="0x2afe3d41a5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2afe3d3c4e20" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2afe3d3c4e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afe3d3c31c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afe3d3c3350"/>
        <function-ref name="request" scoped="" ref="0x2afe3d3c34e0"/>
        <function-ref name="granted" scoped="" ref="0x2afe3d3c3670"/>
        <function-ref name="isOwner" scoped="" ref="0x2afe3d3c3800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2afe3d3bc2f0" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2afe3d3bc2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d3bc670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2afe3d420020" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2afe3d420020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d4203a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2afe3d40b500" loc="100:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2afe3d40b500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d40b880"/>
        <function-ref name="write" scoped="" ref="0x2afe3d40ba10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2afe3d40cce0" loc="99:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2afe3d40cce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d40b0a0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d40b230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2afe3d3be7b0" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2afe3d3be7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d3beb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2afe3d40c500" loc="96:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2afe3d40c500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d40c880"/>
        <function-ref name="write" scoped="" ref="0x2afe3d40ca10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2afe3d408500" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2afe3d408500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d408880"/>
        <function-ref name="write" scoped="" ref="0x2afe3d408a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2afe3d4150a0" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2afe3d4150a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d415420"/>
        <function-ref name="write" scoped="" ref="0x2afe3d4155b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2afe3d411880" loc="89:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2afe3d411880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d411c00"/>
        <function-ref name="write" scoped="" ref="0x2afe3d411d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2afe3d3c0e00" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2afe3d3c0e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d3bf1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2afe3d3bfae0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2afe3d3bfae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d3bfe60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2afe3d4170a0" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2afe3d4170a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d417420"/>
        <function-ref name="write" scoped="" ref="0x2afe3d4175b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2afe3d3bc940" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2afe3d3bc940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d3bccc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2afe3d417880" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2afe3d417880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d417c00"/>
        <function-ref name="write" scoped="" ref="0x2afe3d417d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2afe3d40e0a0" loc="94:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2afe3d40e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d40e820"/>
        <function-ref name="write" scoped="" ref="0x2afe3d40e9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2afe3d4059b0" loc="112:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2afe3d4059b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2afe3d405d30"/>
        <function-ref name="writeDone" scoped="" ref="0x2afe3d404020"/>
        <function-ref name="write" scoped="" ref="0x2afe3d4041b0"/>
        <function-ref name="beginRead" scoped="" ref="0x2afe3d404340"/>
        <function-ref name="readDone" scoped="" ref="0x2afe3d4044d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x2afe3d0e7630" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x2afe3d0e7630"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2afe3d0e79b0"/>
        <function-ref name="writeDone" scoped="" ref="0x2afe3d0e7b40"/>
        <function-ref name="write" scoped="" ref="0x2afe3d0e7cd0"/>
        <function-ref name="beginRead" scoped="" ref="0x2afe3d0e7e60"/>
        <function-ref name="readDone" scoped="" ref="0x2afe3d0e6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2afe3d0e9680" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2afe3d0e9680"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2afe3d0e9a00"/>
        <function-ref name="abortRelease" scoped="" ref="0x2afe3d0e9b90"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2afe3d0e9d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x2afe3d0e68c0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x2afe3d0e68c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d0e6c40"/>
        <function-ref name="write" scoped="" ref="0x2afe3d0e6dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x2afe3d0e56f0" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x2afe3d0e56f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d0e5a70"/>
        <function-ref name="write" scoped="" ref="0x2afe3d0e5c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2afe3d0ec960" loc="39:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2afe3d0ec960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afe3d0ecce0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afe3d0ece70"/>
        <function-ref name="request" scoped="" ref="0x2afe3d0e9030"/>
        <function-ref name="granted" scoped="" ref="0x2afe3d0e91c0"/>
        <function-ref name="isOwner" scoped="" ref="0x2afe3d0e9350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x2afe3d0e4510" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x2afe3d0e4510"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d0e4890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x2afe3d0ce680" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2afe3d0ce680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3d0cea00"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3d0ceb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x2afe3d0dfbb0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x2afe3d0dfbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2afe3d0dd020"/>
        <function-ref name="writeDone" scoped="" ref="0x2afe3d0dd1b0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d0dd340"/>
        <function-ref name="beginRead" scoped="" ref="0x2afe3d0dd4d0"/>
        <function-ref name="readDone" scoped="" ref="0x2afe3d0dd660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2afe3d0e3930" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2afe3d0e3930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2afe3d0e3cb0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2afe3d0e3e40"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2afe3d0e0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x2afe3d0d7080" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2afe3d0d7080"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2afe3d0d7400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x2afe3d0d6020" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x2afe3d0d6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2afe3d0d63a0"/>
        <function-ref name="toIdle" scoped="" ref="0x2afe3d0d6530"/>
        <function-ref name="isState" scoped="" ref="0x2afe3d0d66c0"/>
        <function-ref name="isIdle" scoped="" ref="0x2afe3d0d6850"/>
        <function-ref name="requestState" scoped="" ref="0x2afe3d0d69e0"/>
        <function-ref name="forceState" scoped="" ref="0x2afe3d0d6b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2afe3d0da400" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x2afe3d0da400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afe3d0da780"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afe3d0da910"/>
        <function-ref name="request" scoped="" ref="0x2afe3d0daaa0"/>
        <function-ref name="granted" scoped="" ref="0x2afe3d0dac30"/>
        <function-ref name="isOwner" scoped="" ref="0x2afe3d0dadc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x2afe3d0dc020" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x2afe3d0dc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d0dc3a0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d0dc530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x2afe3d0dcdb0" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x2afe3d0dcdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d0db180"/>
        <function-ref name="write" scoped="" ref="0x2afe3d0db310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2afe3d0d6df0" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2afe3d0d6df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2afe3d0d51c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2afe3d0d5350"/>
        <function-ref name="led1On" scoped="" ref="0x2afe3d0d54e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2afe3d0d5670"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2afe3d0d5800"/>
        <function-ref name="get" scoped="" ref="0x2afe3d0d5990"/>
        <function-ref name="led1Off" scoped="" ref="0x2afe3d0d5b20"/>
        <function-ref name="led2Off" scoped="" ref="0x2afe3d0cf1b0"/>
        <function-ref name="set" scoped="" ref="0x2afe3d0d5cb0"/>
        <function-ref name="led0On" scoped="" ref="0x2afe3d0d5e40"/>
        <function-ref name="led2On" scoped="" ref="0x2afe3d0cf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2afe3d0e0810" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2afe3d0e0810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afe3d0e0b90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afe3d0e0d20"/>
        <function-ref name="request" scoped="" ref="0x2afe3d0df020"/>
        <function-ref name="granted" scoped="" ref="0x2afe3d0df1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2afe3d0df340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x2afe3d121120" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x2afe3d121120"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2afe3d1214a0"/>
        <function-ref name="runTask" scoped="" ref="0x2afe3d121630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x2afe3d0dbba0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x2afe3d0dbba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d0da020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2afe3d178770" loc="67:/home/zdenial/tinyos/tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2afe3d178770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2afe3d178af0"/>
        <function-ref name="toIdle" scoped="" ref="0x2afe3d178c80"/>
        <function-ref name="isState" scoped="" ref="0x2afe3d178e10"/>
        <function-ref name="isIdle" scoped="" ref="0x2afe3d171020"/>
        <function-ref name="requestState" scoped="" ref="0x2afe3d1711b0"/>
        <function-ref name="forceState" scoped="" ref="0x2afe3d171340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2afe3d174280" loc="66:/home/zdenial/tinyos/tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2afe3d174280"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2afe3d174600"/>
        <function-ref name="toIdle" scoped="" ref="0x2afe3d174790"/>
        <function-ref name="isState" scoped="" ref="0x2afe3d174920"/>
        <function-ref name="isIdle" scoped="" ref="0x2afe3d174ab0"/>
        <function-ref name="requestState" scoped="" ref="0x2afe3d174c40"/>
        <function-ref name="forceState" scoped="" ref="0x2afe3d174dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afe3d170020" loc="66:/home/zdenial/tinyos/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afe3d170020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afe3d1703a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2afe3d170b70" loc="67:/home/zdenial/tinyos/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2afe3d170b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2afe3d16f020"/>
        <function-ref name="toIdle" scoped="" ref="0x2afe3d16f1b0"/>
        <function-ref name="isState" scoped="" ref="0x2afe3d16f340"/>
        <function-ref name="isIdle" scoped="" ref="0x2afe3d16f4d0"/>
        <function-ref name="requestState" scoped="" ref="0x2afe3d16f660"/>
        <function-ref name="forceState" scoped="" ref="0x2afe3d16f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2afe3d3ea020" loc="44:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2afe3d3ea020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3d3ea3a0"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3d3ea530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2afe3d1568f0" loc="43:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2afe3d1568f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2afe3d156c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2afe3d157c40" loc="42:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2afe3d157c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afe3d156020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afe3d1561b0"/>
        <function-ref name="request" scoped="" ref="0x2afe3d156340"/>
        <function-ref name="granted" scoped="" ref="0x2afe3d1564d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2afe3d156660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2afe3e35aaf0" loc="82:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2afe3e35aaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2afe3e35ae70"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2afe3e359030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2afe3e358440" loc="87:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2afe3e358440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3e3587c0"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3e358950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x2afe3e358be0" loc="89:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2afe3e358be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2afe3e357020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2afe3e3592c0" loc="83:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2afe3e3592c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2afe3e359640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2afe3e35ce70" loc="81:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2afe3e35ce70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afe3e35a220"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afe3e35a3b0"/>
        <function-ref name="request" scoped="" ref="0x2afe3e35a540"/>
        <function-ref name="granted" scoped="" ref="0x2afe3e35a6d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2afe3e35a860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2afe3e3598d0" loc="85:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x2afe3e3598d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2afe3e359c50"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2afe3e359de0"/>
        <function-ref name="splitRead" scoped="" ref="0x2afe3e358020"/>
        <function-ref name="write" scoped="" ref="0x2afe3e3581b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x2afe3d19e6b0" loc="74:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2afe3d19e6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2afe3d19ea30"/>
        <function-ref name="configure" scoped="" ref="0x2afe3d19ebc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2afe3d19b850" loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2afe3d19b850"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3d19bbd0"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3d19bd60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x2afe3d199a40" loc="80:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2afe3d199a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2afe3d199dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2afe3d19c020" loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2afe3d19c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2afe3d19c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x2afe3d19a690" loc="79:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x2afe3d19a690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afe3d19aa10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afe3d19aba0"/>
        <function-ref name="request" scoped="" ref="0x2afe3d19ad30"/>
        <function-ref name="granted" scoped="" ref="0x2afe3d199020"/>
        <function-ref name="isOwner" scoped="" ref="0x2afe3d1991b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2afe3d19f430" loc="73:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2afe3d19f430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afe3d19f7b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afe3d19f940"/>
        <function-ref name="request" scoped="" ref="0x2afe3d19fad0"/>
        <function-ref name="granted" scoped="" ref="0x2afe3d19fc60"/>
        <function-ref name="isOwner" scoped="" ref="0x2afe3d19fdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2afe3d19c6a0" loc="76:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x2afe3d19c6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2afe3d19ca20"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2afe3d19cbb0"/>
        <function-ref name="splitRead" scoped="" ref="0x2afe3d19cd40"/>
        <function-ref name="write" scoped="" ref="0x2afe3d19b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x2afe3d1982a0" loc="81:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x2afe3d1982a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2afe3d198620"/>
        <function-ref name="txDone" scoped="" ref="0x2afe3d1987b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x2afe3d1f7250" loc="76:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2afe3d1f7250"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2afe3d1f75f0"/>
        <function-ref name="configure" scoped="" ref="0x2afe3d1f7780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2afe3d1f6c50" loc="79:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2afe3d1f6c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3d1f4020"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3d1f41b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x2afe3d1f33e0" loc="82:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2afe3d1f33e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2afe3d1f3780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2afe3d1f7a10" loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2afe3d1f7a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2afe3d1f7d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x2afe3d1f3a50" loc="83:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x2afe3d1f3a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2afe3d1f3dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2afe3d1f2020"/>
        <function-ref name="setUctl" scoped="" ref="0x2afe3d1f21b0"/>
        <function-ref name="enableUart" scoped="" ref="0x2afe3d1f2340"/>
        <function-ref name="setUrctl" scoped="" ref="0x2afe3d1f24d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2afe3d1f2660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2afe3d1f27f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x2afe3d1f2980"/>
        <function-ref name="getUrctl" scoped="" ref="0x2afe3d1f2b10"/>
        <function-ref name="resetUsart" scoped="" ref="0x2afe3d1f2ca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x2afe3d1f2e30"/>
        <function-ref name="disableIntr" scoped="" ref="0x2afe3d1f1020"/>
        <function-ref name="setUtctl" scoped="" ref="0x2afe3d1f11b0"/>
        <function-ref name="getUbr" scoped="" ref="0x2afe3d1f1440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2afe3d1f15d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x2afe3d1f1760"/>
        <function-ref name="isUartRx" scoped="" ref="0x2afe3d1f18f0"/>
        <function-ref name="isUart" scoped="" ref="0x2afe3d1f1a80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2afe3d1f1c10"/>
        <function-ref name="isSpi" scoped="" ref="0x2afe3d1f1da0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2afe3d1f0020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2afe3d1f01b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2afe3d1f0340"/>
        <function-ref name="enableIntr" scoped="" ref="0x2afe3d1f04d0"/>
        <function-ref name="getMode" scoped="" ref="0x2afe3d1f0660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2afe3d1f09f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x2afe3d1f0b80"/>
        <function-ref name="setUbr" scoped="" ref="0x2afe3d1f0d10"/>
        <function-ref name="tx" scoped="" ref="0x2afe3d1ef020"/>
        <function-ref name="getUctl" scoped="" ref="0x2afe3d1ef1b0"/>
        <function-ref name="disableUart" scoped="" ref="0x2afe3d1ef340"/>
        <function-ref name="enableSpi" scoped="" ref="0x2afe3d1ef4d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x2afe3d1ef660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2afe3d1ef7f0"/>
        <function-ref name="rx" scoped="" ref="0x2afe3d1ef980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2afe3d1efb10"/>
        <function-ref name="isUartTx" scoped="" ref="0x2afe3d1efca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2afe3d1efe30"/>
        <function-ref name="disableSpi" scoped="" ref="0x2afe3d1ee020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2afe3d1ee1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2afe3d1eec20" loc="85:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2afe3d1eec20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2afe3d1ed020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2afe3d1ed1b0"/>
        <function-ref name="led1On" scoped="" ref="0x2afe3d1ed340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2afe3d1ed4d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2afe3d1ed660"/>
        <function-ref name="get" scoped="" ref="0x2afe3d1ed7f0"/>
        <function-ref name="led1Off" scoped="" ref="0x2afe3d1ed980"/>
        <function-ref name="led2On" scoped="" ref="0x2afe3d1ec020"/>
        <function-ref name="set" scoped="" ref="0x2afe3d1edca0"/>
        <function-ref name="led2Off" scoped="" ref="0x2afe3d1edb10"/>
        <function-ref name="led0On" scoped="" ref="0x2afe3d1ede30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x2afe3d1f45b0" loc="81:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x2afe3d1f45b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afe3d1f4950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afe3d1f4ae0"/>
        <function-ref name="request" scoped="" ref="0x2afe3d1f4c70"/>
        <function-ref name="granted" scoped="" ref="0x2afe3d1f4e00"/>
        <function-ref name="isOwner" scoped="" ref="0x2afe3d1f3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2afe3d1f8470" loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2afe3d1f8470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afe3d1f8810"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afe3d1f89a0"/>
        <function-ref name="request" scoped="" ref="0x2afe3d1f8b30"/>
        <function-ref name="granted" scoped="" ref="0x2afe3d1f8cc0"/>
        <function-ref name="isOwner" scoped="" ref="0x2afe3d1f8e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2afe3d1f6060" loc="78:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x2afe3d1f6060"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2afe3d1f63e0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2afe3d1f6570"/>
        <function-ref name="splitRead" scoped="" ref="0x2afe3d1f6700"/>
        <function-ref name="write" scoped="" ref="0x2afe3d1f6890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x2afe3d1ee480" loc="84:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x2afe3d1ee480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2afe3d1ee800"/>
        <function-ref name="txDone" scoped="" ref="0x2afe3d1ee990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x2afe3d1ec2f0" loc="102:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x2afe3d1ec2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2afe3d1ec670"/>
        <function-ref name="runTask" scoped="" ref="0x2afe3d1ec800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x2afe3d1df5e0" loc="78:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2afe3d1df5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afe3d1df960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x2afe3d1e0d10" loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2afe3d1e0d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2afe3d1df0e0"/>
        <function-ref name="txDone" scoped="" ref="0x2afe3d1df270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x2afe3d1e4020" loc="76:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x2afe3d1e4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2afe3d1e43a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2afe3d1e4530"/>
        <function-ref name="setUctl" scoped="" ref="0x2afe3d1e46c0"/>
        <function-ref name="enableUart" scoped="" ref="0x2afe3d1e4850"/>
        <function-ref name="setUrctl" scoped="" ref="0x2afe3d1e49e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2afe3d1e4b70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2afe3d1e4d00"/>
        <function-ref name="getUtctl" scoped="" ref="0x2afe3d1e3020"/>
        <function-ref name="getUrctl" scoped="" ref="0x2afe3d1e31b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x2afe3d1e3340"/>
        <function-ref name="getUmctl" scoped="" ref="0x2afe3d1e34d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x2afe3d1e3660"/>
        <function-ref name="setUtctl" scoped="" ref="0x2afe3d1e37f0"/>
        <function-ref name="getUbr" scoped="" ref="0x2afe3d1e3a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2afe3d1e3c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x2afe3d1e3da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x2afe3d1e2020"/>
        <function-ref name="isUart" scoped="" ref="0x2afe3d1e21b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2afe3d1e2340"/>
        <function-ref name="isSpi" scoped="" ref="0x2afe3d1e24d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2afe3d1e2660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2afe3d1e27f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2afe3d1e2980"/>
        <function-ref name="enableIntr" scoped="" ref="0x2afe3d1e2b10"/>
        <function-ref name="getMode" scoped="" ref="0x2afe3d1e2ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2afe3d1e1220"/>
        <function-ref name="clrIntr" scoped="" ref="0x2afe3d1e13b0"/>
        <function-ref name="setUbr" scoped="" ref="0x2afe3d1e1540"/>
        <function-ref name="tx" scoped="" ref="0x2afe3d1e16d0"/>
        <function-ref name="getUctl" scoped="" ref="0x2afe3d1e1860"/>
        <function-ref name="disableUart" scoped="" ref="0x2afe3d1e19f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2afe3d1e1b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x2afe3d1e1d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2afe3d1e0020"/>
        <function-ref name="rx" scoped="" ref="0x2afe3d1e01b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2afe3d1e0340"/>
        <function-ref name="isUartTx" scoped="" ref="0x2afe3d1e04d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2afe3d1e0660"/>
        <function-ref name="disableSpi" scoped="" ref="0x2afe3d1e07f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2afe3d1e0980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x2afe3d25db20" loc="82:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x2afe3d25db20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3d25c020"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3d25c1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3d25c340"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3d25c4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3d25c660"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3d25c7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3d25c980"/>
        <function-ref name="get" scoped="" ref="0x2afe3d25cb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3d25cca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3d25ce30"/>
        <function-ref name="set" scoped="" ref="0x2afe3d25b020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3d25b1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3d25b340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3d25b5d0"/>
        <function-ref name="clr" scoped="" ref="0x2afe3d25b760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2afe3d233780" loc="76:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2afe3d233780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2afe3d233b00"/>
        <function-ref name="txDone" scoped="" ref="0x2afe3d233c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x2afe3d25bb20" loc="83:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x2afe3d25bb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3d25a020"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3d25a1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3d25a340"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3d25a4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3d25a660"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3d25a7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3d25a980"/>
        <function-ref name="get" scoped="" ref="0x2afe3d25ab10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3d25aca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3d25ae30"/>
        <function-ref name="set" scoped="" ref="0x2afe3d259020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3d2591b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3d259340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3d2595d0"/>
        <function-ref name="clr" scoped="" ref="0x2afe3d259760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x2afe3d259b20" loc="84:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x2afe3d259b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3d258020"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3d2581b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3d258340"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3d2584d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3d258660"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3d2587f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3d258980"/>
        <function-ref name="get" scoped="" ref="0x2afe3d258b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3d258ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3d258e30"/>
        <function-ref name="set" scoped="" ref="0x2afe3d257020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3d2571b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3d257340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3d2575d0"/>
        <function-ref name="clr" scoped="" ref="0x2afe3d257760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x2afe3d1dec70" loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x2afe3d1dec70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2afe3d1db020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2afe3d1db1b0"/>
        <function-ref name="setUctl" scoped="" ref="0x2afe3d1db340"/>
        <function-ref name="enableUart" scoped="" ref="0x2afe3d1db4d0"/>
        <function-ref name="setUrctl" scoped="" ref="0x2afe3d1db660"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2afe3d1db7f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2afe3d1db980"/>
        <function-ref name="getUtctl" scoped="" ref="0x2afe3d1dbb10"/>
        <function-ref name="getUrctl" scoped="" ref="0x2afe3d1dbca0"/>
        <function-ref name="resetUsart" scoped="" ref="0x2afe3d1dbe30"/>
        <function-ref name="getUmctl" scoped="" ref="0x2afe3d1da020"/>
        <function-ref name="disableIntr" scoped="" ref="0x2afe3d1da1b0"/>
        <function-ref name="setUtctl" scoped="" ref="0x2afe3d1da340"/>
        <function-ref name="getUbr" scoped="" ref="0x2afe3d1da5d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2afe3d1da760"/>
        <function-ref name="setUmctl" scoped="" ref="0x2afe3d1da8f0"/>
        <function-ref name="isUartRx" scoped="" ref="0x2afe3d1daa80"/>
        <function-ref name="isUart" scoped="" ref="0x2afe3d1dac10"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2afe3d1dada0"/>
        <function-ref name="isSpi" scoped="" ref="0x2afe3d235020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2afe3d2351b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2afe3d235340"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2afe3d2354d0"/>
        <function-ref name="enableIntr" scoped="" ref="0x2afe3d235660"/>
        <function-ref name="getMode" scoped="" ref="0x2afe3d2357f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2afe3d235b80"/>
        <function-ref name="clrIntr" scoped="" ref="0x2afe3d235d10"/>
        <function-ref name="setUbr" scoped="" ref="0x2afe3d234020"/>
        <function-ref name="tx" scoped="" ref="0x2afe3d2341b0"/>
        <function-ref name="getUctl" scoped="" ref="0x2afe3d234340"/>
        <function-ref name="disableUart" scoped="" ref="0x2afe3d2344d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2afe3d234660"/>
        <function-ref name="setModeUart" scoped="" ref="0x2afe3d2347f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2afe3d234980"/>
        <function-ref name="rx" scoped="" ref="0x2afe3d234b10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2afe3d234ca0"/>
        <function-ref name="isUartTx" scoped="" ref="0x2afe3d234e30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2afe3d233020"/>
        <function-ref name="disableSpi" scoped="" ref="0x2afe3d2331b0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2afe3d233340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x2afe3d20ad10" loc="79:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x2afe3d20ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x2afe3d2310e0"/>
        <function-ref name="getStartByte" scoped="" ref="0x2afe3d231270"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x2afe3d231400"/>
        <function-ref name="setMasterMode" scoped="" ref="0x2afe3d231590"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x2afe3d231720"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x2afe3d2318b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x2afe3d231a40"/>
        <function-ref name="getStopBit" scoped="" ref="0x2afe3d231bd0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2afe3d231d60"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x2afe3d230020"/>
        <function-ref name="getData" scoped="" ref="0x2afe3d2301b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x2afe3d230340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x2afe3d2304d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x2afe3d230760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x2afe3d2308f0"/>
        <function-ref name="getIV" scoped="" ref="0x2afe3d230a80"/>
        <function-ref name="enableI2C" scoped="" ref="0x2afe3d230c10"/>
        <function-ref name="setStartBit" scoped="" ref="0x2afe3d230da0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x2afe3d208020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x2afe3d2081b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x2afe3d208340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x2afe3d2084d0"/>
        <function-ref name="isI2C" scoped="" ref="0x2afe3d208660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x2afe3d2087f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x2afe3d208980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x2afe3d208d10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x2afe3d264020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x2afe3d2641b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x2afe3d264340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x2afe3d2644d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x2afe3d264660"/>
        <function-ref name="disableI2C" scoped="" ref="0x2afe3d2647f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x2afe3d264980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x2afe3d264b10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x2afe3d264ca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x2afe3d264e30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x2afe3d263020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x2afe3d2631b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x2afe3d263340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x2afe3d2634d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x2afe3d263660"/>
        <function-ref name="setWordMode" scoped="" ref="0x2afe3d2637f0"/>
        <function-ref name="setData" scoped="" ref="0x2afe3d263980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x2afe3d263b10"/>
        <function-ref name="getClockSource" scoped="" ref="0x2afe3d263ca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x2afe3d263e30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x2afe3d262020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x2afe3d2621b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x2afe3d262340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x2afe3d2628d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x2afe3d262a60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x2afe3d262bf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x2afe3d262d80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x2afe3d261020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x2afe3d2611b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x2afe3d261340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x2afe3d2614d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x2afe3d261660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x2afe3d2617f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x2afe3d25fb20" loc="81:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x2afe3d25fb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3d25e020"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3d25e1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3d25e340"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3d25e4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3d25e660"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3d25e7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3d25e980"/>
        <function-ref name="get" scoped="" ref="0x2afe3d25eb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3d25eca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3d25ee30"/>
        <function-ref name="set" scoped="" ref="0x2afe3d25d020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3d25d1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3d25d340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3d25d5d0"/>
        <function-ref name="clr" scoped="" ref="0x2afe3d25d760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x2afe3d232150" loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x2afe3d232150"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afe3d2324d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x2afe3d261bb0" loc="80:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x2afe3d261bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3d260020"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3d2601b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3d260340"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3d2604d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3d260660"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3d2607f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3d260980"/>
        <function-ref name="get" scoped="" ref="0x2afe3d260b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3d260ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3d260e30"/>
        <function-ref name="set" scoped="" ref="0x2afe3d25f020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3d25f1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3d25f340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3d25f5d0"/>
        <function-ref name="clr" scoped="" ref="0x2afe3d25f760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2afe3e3505d0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2afe3e3505d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2afe3e350950"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2afe3e350ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x2afe3e3497c0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2afe3e3497c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afe3e349b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2afe3e342a80" loc="51:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2afe3e342a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2afe3e342e00"/>
        <function-ref name="configure" scoped="" ref="0x2afe3e341020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x2afe3e349dd0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x2afe3e349dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x2afe3e348180"/>
        <function-ref name="getStartByte" scoped="" ref="0x2afe3e348310"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x2afe3e3484a0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x2afe3e348630"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x2afe3e3487c0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x2afe3e348950"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x2afe3e348ae0"/>
        <function-ref name="getStopBit" scoped="" ref="0x2afe3e348c70"/>
        <function-ref name="setClockSource" scoped="" ref="0x2afe3e348e00"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x2afe3e347020"/>
        <function-ref name="getData" scoped="" ref="0x2afe3e3471b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x2afe3e347340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x2afe3e3474d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x2afe3e347760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x2afe3e3478f0"/>
        <function-ref name="getIV" scoped="" ref="0x2afe3e347a80"/>
        <function-ref name="enableI2C" scoped="" ref="0x2afe3e347c10"/>
        <function-ref name="setStartBit" scoped="" ref="0x2afe3e347da0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x2afe3e346020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x2afe3e3461b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x2afe3e346340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x2afe3e3464d0"/>
        <function-ref name="isI2C" scoped="" ref="0x2afe3e346660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x2afe3e3467f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x2afe3e346980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x2afe3e346d10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x2afe3e345020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x2afe3e3451b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x2afe3e345340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x2afe3e3454d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x2afe3e345660"/>
        <function-ref name="disableI2C" scoped="" ref="0x2afe3e3457f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x2afe3e345980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x2afe3e345b10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x2afe3e345ca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x2afe3e345e30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x2afe3e344020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x2afe3e3441b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x2afe3e344340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x2afe3e3444d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x2afe3e344660"/>
        <function-ref name="setWordMode" scoped="" ref="0x2afe3e3447f0"/>
        <function-ref name="setData" scoped="" ref="0x2afe3e344980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x2afe3e344b10"/>
        <function-ref name="getClockSource" scoped="" ref="0x2afe3e344ca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x2afe3e344e30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x2afe3e343020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x2afe3e3431b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x2afe3e343340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x2afe3e3438d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x2afe3e343a60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x2afe3e343bf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x2afe3e343d80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x2afe3e342020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x2afe3e3421b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x2afe3e342340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x2afe3e3424d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x2afe3e342660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x2afe3e3427f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x2afe3e349020" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2afe3e349020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2afe3e3493a0"/>
        <function-ref name="txDone" scoped="" ref="0x2afe3e349530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2afe3e351860" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2afe3e351860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afe3e351be0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afe3e351d70"/>
        <function-ref name="request" scoped="" ref="0x2afe3e350020"/>
        <function-ref name="granted" scoped="" ref="0x2afe3e3501b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2afe3e350340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x2afe3e34e5a0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x2afe3e34e5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2afe3e34e920"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2afe3e34eab0"/>
        <function-ref name="setUctl" scoped="" ref="0x2afe3e34ec40"/>
        <function-ref name="enableUart" scoped="" ref="0x2afe3e34edd0"/>
        <function-ref name="setUrctl" scoped="" ref="0x2afe3e34d020"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2afe3e34d1b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2afe3e34d340"/>
        <function-ref name="getUtctl" scoped="" ref="0x2afe3e34d4d0"/>
        <function-ref name="getUrctl" scoped="" ref="0x2afe3e34d660"/>
        <function-ref name="resetUsart" scoped="" ref="0x2afe3e34d7f0"/>
        <function-ref name="getUmctl" scoped="" ref="0x2afe3e34d980"/>
        <function-ref name="disableIntr" scoped="" ref="0x2afe3e34db10"/>
        <function-ref name="setUtctl" scoped="" ref="0x2afe3e34dca0"/>
        <function-ref name="getUbr" scoped="" ref="0x2afe3e34c020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2afe3e34c1b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x2afe3e34c340"/>
        <function-ref name="isUartRx" scoped="" ref="0x2afe3e34c4d0"/>
        <function-ref name="isUart" scoped="" ref="0x2afe3e34c660"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2afe3e34c7f0"/>
        <function-ref name="isSpi" scoped="" ref="0x2afe3e34c980"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2afe3e34cb10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2afe3e34cca0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2afe3e34ce30"/>
        <function-ref name="enableIntr" scoped="" ref="0x2afe3e34b020"/>
        <function-ref name="getMode" scoped="" ref="0x2afe3e34b1b0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2afe3e34b540"/>
        <function-ref name="clrIntr" scoped="" ref="0x2afe3e34b6d0"/>
        <function-ref name="setUbr" scoped="" ref="0x2afe3e34b860"/>
        <function-ref name="tx" scoped="" ref="0x2afe3e34b9f0"/>
        <function-ref name="getUctl" scoped="" ref="0x2afe3e34bb80"/>
        <function-ref name="disableUart" scoped="" ref="0x2afe3e34bd10"/>
        <function-ref name="enableSpi" scoped="" ref="0x2afe3e34a020"/>
        <function-ref name="setModeUart" scoped="" ref="0x2afe3e34a1b0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2afe3e34a340"/>
        <function-ref name="rx" scoped="" ref="0x2afe3e34a4d0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2afe3e34a660"/>
        <function-ref name="isUartTx" scoped="" ref="0x2afe3e34a7f0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2afe3e34a980"/>
        <function-ref name="disableSpi" scoped="" ref="0x2afe3e34ab10"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2afe3e34aca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2afe3e350d70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2afe3e350d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2afe3e34e180"/>
        <function-ref name="userId" scoped="" ref="0x2afe3e34e310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2afe3d2d62c0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2afe3d2d62c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2afe3d2d6640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2afe3d2d67d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2afe3d2d58a0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2afe3d2d58a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2afe3d2d5c20"/>
        <function-ref name="configure" scoped="" ref="0x2afe3d2d5db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2afe3d2da4d0" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2afe3d2da4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2afe3d2da850"/>
        <function-ref name="txDone" scoped="" ref="0x2afe3d2da9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2afe3d2d7020" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2afe3d2d7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afe3d2d73a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afe3d2d7530"/>
        <function-ref name="request" scoped="" ref="0x2afe3d2d76c0"/>
        <function-ref name="granted" scoped="" ref="0x2afe3d2d7850"/>
        <function-ref name="isOwner" scoped="" ref="0x2afe3d2d79e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x2afe3d2d83f0" loc="40:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x2afe3d2d83f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afe3d2d8770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2afe3d2d6ad0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2afe3d2d6ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2afe3d2d6e50"/>
        <function-ref name="userId" scoped="" ref="0x2afe3d2d5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2afe3d2d1e50" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2afe3d2d1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2afe3d2d0210"/>
        <function-ref name="userId" scoped="" ref="0x2afe3d2d03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2afe3d2d3060" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2afe3d2d3060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2afe3d2d3400"/>
        <function-ref name="txDone" scoped="" ref="0x2afe3d2d3590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x2afe3d2d1840" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x2afe3d2d1840"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afe3d2d1bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x2afe3d2d3990" loc="40:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x2afe3d2d3990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afe3d2d3d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x2afe3d2d1060" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x2afe3d2d1060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2afe3d2d13e0"/>
        <function-ref name="txDone" scoped="" ref="0x2afe3d2d1570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2afe3d2cd850" loc="92:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2afe3d2cd850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2afe3d2cdbf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2afe3d2cdd80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2afe3d2cb570" loc="96:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2afe3d2cb570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2afe3d2cb910"/>
        <function-ref name="configure" scoped="" ref="0x2afe3d2cbaa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2afe3d2cc020" loc="93:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2afe3d2cc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afe3d2cc3a0"/>
        <function-ref name="requested" scoped="" ref="0x2afe3d2cc530"/>
        <function-ref name="granted" scoped="" ref="0x2afe3d2cc6c0"/>
        <function-ref name="isOwner" scoped="" ref="0x2afe3d2cc850"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2afe3d2cc9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2afe3d2cea80" loc="91:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2afe3d2cea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afe3d2cee20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afe3d2cd020"/>
        <function-ref name="request" scoped="" ref="0x2afe3d2cd1b0"/>
        <function-ref name="granted" scoped="" ref="0x2afe3d2cd340"/>
        <function-ref name="isOwner" scoped="" ref="0x2afe3d2cd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2afe3d2ccc30" loc="94:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2afe3d2ccc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2afe3d2cb020"/>
        <function-ref name="userId" scoped="" ref="0x2afe3d2cb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afe3e384a40" loc="44:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afe3e384a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afe3e384dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2afe3e3820a0" loc="45:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x2afe3e3820a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2afe3e382420"/>
        <function-ref name="isEmpty" scoped="" ref="0x2afe3e3825b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2afe3e382740"/>
        <function-ref name="dequeue" scoped="" ref="0x2afe3e3828d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2afe3e37f020" loc="55:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2afe3e37f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2afe3e37f3c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2afe3e37f550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2afe3e37ecf0" loc="60:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2afe3e37ecf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2afe3e37d0e0"/>
        <function-ref name="configure" scoped="" ref="0x2afe3e37d270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2afe3e37d500" loc="61:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x2afe3e37d500"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2afe3e37d880"/>
        <function-ref name="isEmpty" scoped="" ref="0x2afe3e37da10"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2afe3e37dba0"/>
        <function-ref name="dequeue" scoped="" ref="0x2afe3e37dd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2afe3e37f7a0" loc="56:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2afe3e37f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afe3e37fb20"/>
        <function-ref name="requested" scoped="" ref="0x2afe3e37fcb0"/>
        <function-ref name="granted" scoped="" ref="0x2afe3e37fe40"/>
        <function-ref name="isOwner" scoped="" ref="0x2afe3e37e020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2afe3e37e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2afe3e37c020" loc="62:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2afe3e37c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2afe3e37c3a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2afe3e37c530"/>
        <function-ref name="led1On" scoped="" ref="0x2afe3e37c6c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2afe3e37c850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2afe3e37c9e0"/>
        <function-ref name="get" scoped="" ref="0x2afe3e37cb70"/>
        <function-ref name="led1Off" scoped="" ref="0x2afe3e37cd00"/>
        <function-ref name="led0On" scoped="" ref="0x2afe3e37b4d0"/>
        <function-ref name="set" scoped="" ref="0x2afe3e37b1b0"/>
        <function-ref name="led2On" scoped="" ref="0x2afe3e37b020"/>
        <function-ref name="led2Off" scoped="" ref="0x2afe3e37b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2afe3e380270" loc="54:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2afe3e380270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afe3e380610"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afe3e3807a0"/>
        <function-ref name="request" scoped="" ref="0x2afe3e380930"/>
        <function-ref name="granted" scoped="" ref="0x2afe3e380ac0"/>
        <function-ref name="isOwner" scoped="" ref="0x2afe3e380c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2afe3e37e400" loc="57:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2afe3e37e400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2afe3e37e780"/>
        <function-ref name="userId" scoped="" ref="0x2afe3e37e910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2afe3e37b7a0" loc="75:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x2afe3e37b7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2afe3e37bb20"/>
        <function-ref name="runTask" scoped="" ref="0x2afe3e37bcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x2afe3d323540" loc="4:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x2afe3d323540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x2afe3d3238c0"/>
        <function-ref name="getStartByte" scoped="" ref="0x2afe3d323a50"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x2afe3d323be0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x2afe3d323d70"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x2afe3d320020"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x2afe3d3201b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x2afe3d320340"/>
        <function-ref name="getStopBit" scoped="" ref="0x2afe3d3204d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2afe3d320660"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x2afe3d3207f0"/>
        <function-ref name="getData" scoped="" ref="0x2afe3d320980"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x2afe3d320b10"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x2afe3d320ca0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x2afe3d31f020"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x2afe3d31f1b0"/>
        <function-ref name="getIV" scoped="" ref="0x2afe3d31f340"/>
        <function-ref name="enableI2C" scoped="" ref="0x2afe3d31f4d0"/>
        <function-ref name="setStartBit" scoped="" ref="0x2afe3d31f660"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x2afe3d31f7f0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x2afe3d31f980"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x2afe3d31fb10"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x2afe3d31fca0"/>
        <function-ref name="isI2C" scoped="" ref="0x2afe3d31fe30"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x2afe3d31e020"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x2afe3d31e1b0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x2afe3d31e540"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x2afe3d31e6d0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x2afe3d31e860"/>
        <function-ref name="disableNoAck" scoped="" ref="0x2afe3d31e9f0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x2afe3d31eb80"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x2afe3d31ed10"/>
        <function-ref name="disableI2C" scoped="" ref="0x2afe3d31d020"/>
        <function-ref name="getShiftClock" scoped="" ref="0x2afe3d31d1b0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x2afe3d31d340"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x2afe3d31d4d0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x2afe3d31d660"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x2afe3d31d7f0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x2afe3d31d980"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x2afe3d31db10"/>
        <function-ref name="setModeI2C" scoped="" ref="0x2afe3d31dca0"/>
        <function-ref name="getStartBit" scoped="" ref="0x2afe3d31de30"/>
        <function-ref name="setWordMode" scoped="" ref="0x2afe3d31c020"/>
        <function-ref name="setData" scoped="" ref="0x2afe3d31c1b0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x2afe3d31c340"/>
        <function-ref name="getClockSource" scoped="" ref="0x2afe3d31c4d0"/>
        <function-ref name="getWordMode" scoped="" ref="0x2afe3d31c660"/>
        <function-ref name="setShiftClock" scoped="" ref="0x2afe3d31c7f0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x2afe3d31c980"/>
        <function-ref name="enableNoAck" scoped="" ref="0x2afe3d31cb10"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x2afe3d31b420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x2afe3d31b5b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x2afe3d31b740"/>
        <function-ref name="setStopBit" scoped="" ref="0x2afe3d31b8d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x2afe3d31ba60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x2afe3d31bbf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x2afe3d31bd80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x2afe3d31a020"/>
        <function-ref name="setStartByte" scoped="" ref="0x2afe3d31a1b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x2afe3d31a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x2afe3d310250" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x2afe3d310250"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2afe3d3105d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2afe3d310760"/>
        <function-ref name="setUctl" scoped="" ref="0x2afe3d3108f0"/>
        <function-ref name="enableUart" scoped="" ref="0x2afe3d310a80"/>
        <function-ref name="setUrctl" scoped="" ref="0x2afe3d310c10"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2afe3d310da0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2afe3d30f020"/>
        <function-ref name="getUtctl" scoped="" ref="0x2afe3d30f1b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x2afe3d30f340"/>
        <function-ref name="resetUsart" scoped="" ref="0x2afe3d30f4d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x2afe3d30f660"/>
        <function-ref name="disableIntr" scoped="" ref="0x2afe3d30f7f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x2afe3d30f980"/>
        <function-ref name="getUbr" scoped="" ref="0x2afe3d30fc10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2afe3d30fda0"/>
        <function-ref name="setUmctl" scoped="" ref="0x2afe3d30e020"/>
        <function-ref name="isUartRx" scoped="" ref="0x2afe3d30e1b0"/>
        <function-ref name="isUart" scoped="" ref="0x2afe3d30e340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2afe3d30e4d0"/>
        <function-ref name="isSpi" scoped="" ref="0x2afe3d30e660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2afe3d30e7f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2afe3d30e980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2afe3d30eb10"/>
        <function-ref name="enableIntr" scoped="" ref="0x2afe3d30eca0"/>
        <function-ref name="getMode" scoped="" ref="0x2afe3d30ee30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2afe3d30d220"/>
        <function-ref name="clrIntr" scoped="" ref="0x2afe3d30d3b0"/>
        <function-ref name="setUbr" scoped="" ref="0x2afe3d30d540"/>
        <function-ref name="tx" scoped="" ref="0x2afe3d30d6d0"/>
        <function-ref name="getUctl" scoped="" ref="0x2afe3d30d860"/>
        <function-ref name="disableUart" scoped="" ref="0x2afe3d30d9f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2afe3d30db80"/>
        <function-ref name="setModeUart" scoped="" ref="0x2afe3d30dd10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2afe3d30c020"/>
        <function-ref name="rx" scoped="" ref="0x2afe3d30c1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2afe3d30c340"/>
        <function-ref name="isUartTx" scoped="" ref="0x2afe3d30c4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2afe3d30c660"/>
        <function-ref name="disableSpi" scoped="" ref="0x2afe3d30c7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2afe3d30c980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x2afe3d30acb0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x2afe3d30acb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3d3090a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3d309230"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3d3093c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3d309550"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3d3096e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3d309870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3d309a00"/>
        <function-ref name="get" scoped="" ref="0x2afe3d309b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3d309d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3d308020"/>
        <function-ref name="set" scoped="" ref="0x2afe3d3081b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3d308340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3d3084d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3d308760"/>
        <function-ref name="clr" scoped="" ref="0x2afe3d3088f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x2afe3d317430" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x2afe3d317430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x2afe3d3177b0"/>
        <function-ref name="getStartByte" scoped="" ref="0x2afe3d317940"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x2afe3d317ad0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x2afe3d317c60"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x2afe3d317df0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x2afe3d316020"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x2afe3d3161b0"/>
        <function-ref name="getStopBit" scoped="" ref="0x2afe3d316340"/>
        <function-ref name="setClockSource" scoped="" ref="0x2afe3d3164d0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x2afe3d316660"/>
        <function-ref name="getData" scoped="" ref="0x2afe3d3167f0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x2afe3d316980"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x2afe3d316b10"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x2afe3d316da0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x2afe3d315020"/>
        <function-ref name="getIV" scoped="" ref="0x2afe3d3151b0"/>
        <function-ref name="enableI2C" scoped="" ref="0x2afe3d315340"/>
        <function-ref name="setStartBit" scoped="" ref="0x2afe3d3154d0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x2afe3d315660"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x2afe3d3157f0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x2afe3d315980"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x2afe3d315b10"/>
        <function-ref name="isI2C" scoped="" ref="0x2afe3d315ca0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x2afe3d315e30"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x2afe3d314020"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x2afe3d3143b0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x2afe3d314540"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x2afe3d3146d0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x2afe3d314860"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x2afe3d3149f0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x2afe3d314b80"/>
        <function-ref name="disableI2C" scoped="" ref="0x2afe3d314d10"/>
        <function-ref name="getShiftClock" scoped="" ref="0x2afe3d313020"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x2afe3d3131b0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x2afe3d313340"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x2afe3d3134d0"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x2afe3d313660"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x2afe3d3137f0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x2afe3d313980"/>
        <function-ref name="setModeI2C" scoped="" ref="0x2afe3d313b10"/>
        <function-ref name="getStartBit" scoped="" ref="0x2afe3d313ca0"/>
        <function-ref name="setWordMode" scoped="" ref="0x2afe3d313e30"/>
        <function-ref name="setData" scoped="" ref="0x2afe3d312020"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x2afe3d3121b0"/>
        <function-ref name="getClockSource" scoped="" ref="0x2afe3d312340"/>
        <function-ref name="getWordMode" scoped="" ref="0x2afe3d3124d0"/>
        <function-ref name="setShiftClock" scoped="" ref="0x2afe3d312660"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x2afe3d3127f0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x2afe3d312980"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x2afe3d311020"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x2afe3d3111b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x2afe3d311340"/>
        <function-ref name="setStopBit" scoped="" ref="0x2afe3d3114d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x2afe3d311660"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x2afe3d3117f0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x2afe3d311980"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x2afe3d311b10"/>
        <function-ref name="setStartByte" scoped="" ref="0x2afe3d311ca0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x2afe3d311e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x2afe3d30cd40" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x2afe3d30cd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3d30b0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3d30b270"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3d30b400"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3d30b590"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3d30b720"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3d30b8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3d30ba40"/>
        <function-ref name="get" scoped="" ref="0x2afe3d30bbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3d30bd60"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3d30a020"/>
        <function-ref name="set" scoped="" ref="0x2afe3d30a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3d30a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3d30a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3d30a760"/>
        <function-ref name="clr" scoped="" ref="0x2afe3d30a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2afe3d451c60" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2afe3d451c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d450210"/>
        <function-ref name="write" scoped="" ref="0x2afe3d4503a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2afe3d3f7da0" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2afe3d3f7da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d3f6180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2afe3d3f0b50" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2afe3d3f0b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d454020"/>
        <function-ref name="write" scoped="" ref="0x2afe3d4541b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2afe3d44f670" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2afe3d44f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d44f9f0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d44fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2afe3d448e50" loc="86:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2afe3d448e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d447210"/>
        <function-ref name="write" scoped="" ref="0x2afe3d4473a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2afe3d44fe50" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2afe3d44fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d44e210"/>
        <function-ref name="write" scoped="" ref="0x2afe3d44e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2afe3d43b2f0" loc="108:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2afe3d43b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d43b670"/>
        <function-ref name="write" scoped="" ref="0x2afe3d43b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2afe3d43d2f0" loc="104:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2afe3d43d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d43d670"/>
        <function-ref name="write" scoped="" ref="0x2afe3d43d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2afe3d3f5120" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2afe3d3f5120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d3f54a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2afe3d443670" loc="93:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2afe3d443670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d4439f0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d443b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2afe3d43f2f0" loc="102:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2afe3d43f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d43f670"/>
        <function-ref name="write" scoped="" ref="0x2afe3d43f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2afe3d454c60" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2afe3d454c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d452020"/>
        <function-ref name="write" scoped="" ref="0x2afe3d4521b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2afe3d452c60" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2afe3d452c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d451020"/>
        <function-ref name="write" scoped="" ref="0x2afe3d4511b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2afe3d449670" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2afe3d449670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d4499f0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d449b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2afe3d44be50" loc="79:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2afe3d44be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d44a210"/>
        <function-ref name="write" scoped="" ref="0x2afe3d44a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2afe3d44e670" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2afe3d44e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d44e9f0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d44eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2afe3d3f8760" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2afe3d3f8760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2afe3d3f8ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2afe3d3f8c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2afe3d3f8e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2afe3d3f3aa0" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2afe3d3f3aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d3f3e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2afe3d3f2120" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2afe3d3f2120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d3f25a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2afe3d442a70" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2afe3d442a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d442df0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d441020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2afe3d3f2870" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2afe3d3f2870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d3f2bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2afe3d43fad0" loc="103:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2afe3d43fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d43fe50"/>
        <function-ref name="write" scoped="" ref="0x2afe3d43d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2afe3d3f5dc0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2afe3d3f5dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d3f3180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2afe3d444e50" loc="92:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2afe3d444e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d443210"/>
        <function-ref name="write" scoped="" ref="0x2afe3d4433a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2afe3d452480" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2afe3d452480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d452800"/>
        <function-ref name="write" scoped="" ref="0x2afe3d452990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2afe3d454480" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2afe3d454480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d454800"/>
        <function-ref name="write" scoped="" ref="0x2afe3d454990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2afe3d3f7750" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2afe3d3f7750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d3f7ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2afe3d445e50" loc="90:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2afe3d445e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d444210"/>
        <function-ref name="write" scoped="" ref="0x2afe3d4443a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2afe3d447670" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2afe3d447670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d4479f0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d447b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2afe3d444670" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2afe3d444670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d4449f0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d444b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2afe3d43cad0" loc="107:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2afe3d43cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d43ce50"/>
        <function-ref name="write" scoped="" ref="0x2afe3d43b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2afe3d43dad0" loc="105:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2afe3d43dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d43de50"/>
        <function-ref name="write" scoped="" ref="0x2afe3d43c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2afe3d44a670" loc="80:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2afe3d44a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d44a9f0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d44ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2afe3d447e50" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2afe3d447e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d445210"/>
        <function-ref name="write" scoped="" ref="0x2afe3d4453a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2afe3d440ad0" loc="101:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2afe3d440ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d440e50"/>
        <function-ref name="write" scoped="" ref="0x2afe3d43f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2afe3d44d670" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2afe3d44d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d44d9f0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d44db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2afe3d43bad0" loc="111:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2afe3d43bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2afe3d43be50"/>
        <function-ref name="writeDone" scoped="" ref="0x2afe3d43a020"/>
        <function-ref name="write" scoped="" ref="0x2afe3d43a1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x2afe3d43a340"/>
        <function-ref name="readDone" scoped="" ref="0x2afe3d43a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2afe3d3f7100" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2afe3d3f7100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d3f7480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2afe3d3f0370" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2afe3d3f0370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d3f06f0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d3f0880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2afe3d451480" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2afe3d451480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d451800"/>
        <function-ref name="write" scoped="" ref="0x2afe3d451990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2afe3d449e50" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2afe3d449e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d448210"/>
        <function-ref name="write" scoped="" ref="0x2afe3d4483a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2afe3d44ee50" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2afe3d44ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d44d210"/>
        <function-ref name="write" scoped="" ref="0x2afe3d44d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2afe3d448670" loc="85:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2afe3d448670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d4489f0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d448b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2afe3d450670" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2afe3d450670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d4509f0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d450b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2afe3d3f6450" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2afe3d3f6450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d3f67d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2afe3d450e50" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2afe3d450e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d44f210"/>
        <function-ref name="write" scoped="" ref="0x2afe3d44f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2afe3d3f9a80" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2afe3d3f9a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afe3d3f9e00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afe3d3f8020"/>
        <function-ref name="request" scoped="" ref="0x2afe3d3f81b0"/>
        <function-ref name="granted" scoped="" ref="0x2afe3d3f8340"/>
        <function-ref name="isOwner" scoped="" ref="0x2afe3d3f84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2afe3d3f1020" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2afe3d3f1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d3f13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2afe3d3f1cc0" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2afe3d3f1cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d3f00a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2afe3d4402f0" loc="100:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2afe3d4402f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d440670"/>
        <function-ref name="write" scoped="" ref="0x2afe3d440800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2afe3d441ad0" loc="99:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2afe3d441ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d441e50"/>
        <function-ref name="write" scoped="" ref="0x2afe3d440020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2afe3d3f3450" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2afe3d3f3450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d3f37d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2afe3d4412f0" loc="96:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2afe3d4412f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d441670"/>
        <function-ref name="write" scoped="" ref="0x2afe3d441800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2afe3d43c2f0" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2afe3d43c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d43c670"/>
        <function-ref name="write" scoped="" ref="0x2afe3d43c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2afe3d44ae50" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2afe3d44ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d449210"/>
        <function-ref name="write" scoped="" ref="0x2afe3d4493a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2afe3d445670" loc="89:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2afe3d445670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d4459f0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d445b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2afe3d3f6aa0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2afe3d3f6aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d3f6e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2afe3d3f5770" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2afe3d3f5770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d3f5af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2afe3d44de50" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2afe3d44de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d44b210"/>
        <function-ref name="write" scoped="" ref="0x2afe3d44b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2afe3d3f1670" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2afe3d3f1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d3f19f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2afe3d44b670" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2afe3d44b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d44b9f0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d44bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2afe3d443e50" loc="94:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2afe3d443e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d442610"/>
        <function-ref name="write" scoped="" ref="0x2afe3d4427a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2afe3d43a7a0" loc="112:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2afe3d43a7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2afe3d43ab20"/>
        <function-ref name="writeDone" scoped="" ref="0x2afe3d43acb0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d43ae40"/>
        <function-ref name="beginRead" scoped="" ref="0x2afe3d439020"/>
        <function-ref name="readDone" scoped="" ref="0x2afe3d4391b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2afe3d425c60" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2afe3d425c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d424210"/>
        <function-ref name="write" scoped="" ref="0x2afe3d4243a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2afe3d430da0" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2afe3d430da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d42e180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2afe3d428b50" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2afe3d428b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d427020"/>
        <function-ref name="write" scoped="" ref="0x2afe3d4271b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2afe3d422670" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2afe3d422670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d4229f0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d422b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2afe3d481e50" loc="86:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2afe3d481e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d480210"/>
        <function-ref name="write" scoped="" ref="0x2afe3d4803a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2afe3d422e50" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2afe3d422e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d487210"/>
        <function-ref name="write" scoped="" ref="0x2afe3d4873a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2afe3d4742f0" loc="108:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2afe3d4742f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d474670"/>
        <function-ref name="write" scoped="" ref="0x2afe3d474800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2afe3d4772f0" loc="104:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2afe3d4772f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d477670"/>
        <function-ref name="write" scoped="" ref="0x2afe3d477800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2afe3d42d120" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2afe3d42d120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d42d4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2afe3d47d670" loc="93:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2afe3d47d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d47d9f0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d47db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2afe3d4782f0" loc="102:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2afe3d4782f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d478670"/>
        <function-ref name="write" scoped="" ref="0x2afe3d478800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2afe3d427c60" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2afe3d427c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d426020"/>
        <function-ref name="write" scoped="" ref="0x2afe3d4261b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2afe3d426c60" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2afe3d426c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d425020"/>
        <function-ref name="write" scoped="" ref="0x2afe3d4251b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2afe3d482670" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2afe3d482670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d4829f0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d482b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2afe3d485e50" loc="79:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2afe3d485e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d484210"/>
        <function-ref name="write" scoped="" ref="0x2afe3d4843a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2afe3d487670" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2afe3d487670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d4879f0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d487b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2afe3d431760" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2afe3d431760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2afe3d431ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2afe3d431c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2afe3d431e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2afe3d42caa0" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2afe3d42caa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d42ce20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2afe3d42b120" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2afe3d42b120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d42b5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2afe3d47ca70" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2afe3d47ca70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d47cdf0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d47a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2afe3d42b870" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2afe3d42b870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d42bbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2afe3d478ad0" loc="103:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2afe3d478ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d478e50"/>
        <function-ref name="write" scoped="" ref="0x2afe3d477020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2afe3d42ddc0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2afe3d42ddc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d42c180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2afe3d47ee50" loc="92:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2afe3d47ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d47d210"/>
        <function-ref name="write" scoped="" ref="0x2afe3d47d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2afe3d426480" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2afe3d426480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d426800"/>
        <function-ref name="write" scoped="" ref="0x2afe3d426990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2afe3d427480" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2afe3d427480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d427800"/>
        <function-ref name="write" scoped="" ref="0x2afe3d427990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2afe3d430750" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2afe3d430750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d430ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2afe3d47fe50" loc="90:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2afe3d47fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d47e210"/>
        <function-ref name="write" scoped="" ref="0x2afe3d47e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2afe3d480670" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2afe3d480670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d4809f0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d480b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2afe3d47e670" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2afe3d47e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d47e9f0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d47eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2afe3d476ad0" loc="107:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2afe3d476ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d476e50"/>
        <function-ref name="write" scoped="" ref="0x2afe3d474020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2afe3d477ad0" loc="105:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2afe3d477ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d477e50"/>
        <function-ref name="write" scoped="" ref="0x2afe3d476020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2afe3d484670" loc="80:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2afe3d484670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d4849f0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d484b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2afe3d480e50" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2afe3d480e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d47f210"/>
        <function-ref name="write" scoped="" ref="0x2afe3d47f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2afe3d479ad0" loc="101:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2afe3d479ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d479e50"/>
        <function-ref name="write" scoped="" ref="0x2afe3d478020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2afe3d486670" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2afe3d486670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d4869f0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d486b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2afe3d474ad0" loc="111:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2afe3d474ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2afe3d474e50"/>
        <function-ref name="writeDone" scoped="" ref="0x2afe3d473020"/>
        <function-ref name="write" scoped="" ref="0x2afe3d4731b0"/>
        <function-ref name="beginRead" scoped="" ref="0x2afe3d473340"/>
        <function-ref name="readDone" scoped="" ref="0x2afe3d4734d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2afe3d430100" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2afe3d430100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d430480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2afe3d428370" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2afe3d428370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d4286f0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d428880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2afe3d425480" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2afe3d425480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d425800"/>
        <function-ref name="write" scoped="" ref="0x2afe3d425990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2afe3d482e50" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2afe3d482e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d481210"/>
        <function-ref name="write" scoped="" ref="0x2afe3d4813a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2afe3d487e50" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2afe3d487e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d486210"/>
        <function-ref name="write" scoped="" ref="0x2afe3d4863a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2afe3d481670" loc="85:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2afe3d481670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d4819f0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d481b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2afe3d424670" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2afe3d424670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d4249f0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d424b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2afe3d42e450" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2afe3d42e450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d42e7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2afe3d424e50" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2afe3d424e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d422210"/>
        <function-ref name="write" scoped="" ref="0x2afe3d4223a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2afe3d4329e0" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2afe3d4329e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afe3d432d60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afe3d431020"/>
        <function-ref name="request" scoped="" ref="0x2afe3d4311b0"/>
        <function-ref name="granted" scoped="" ref="0x2afe3d431340"/>
        <function-ref name="isOwner" scoped="" ref="0x2afe3d4314d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2afe3d429020" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2afe3d429020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d4293a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2afe3d429cc0" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2afe3d429cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d4280a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2afe3d4792f0" loc="100:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2afe3d4792f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d479670"/>
        <function-ref name="write" scoped="" ref="0x2afe3d479800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2afe3d47aad0" loc="99:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2afe3d47aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d47ae50"/>
        <function-ref name="write" scoped="" ref="0x2afe3d479020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2afe3d42c450" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2afe3d42c450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d42c7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2afe3d47a2f0" loc="96:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2afe3d47a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d47a670"/>
        <function-ref name="write" scoped="" ref="0x2afe3d47a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2afe3d4762f0" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2afe3d4762f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d476670"/>
        <function-ref name="write" scoped="" ref="0x2afe3d476800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2afe3d484e50" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2afe3d484e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d482210"/>
        <function-ref name="write" scoped="" ref="0x2afe3d4823a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2afe3d47f670" loc="89:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2afe3d47f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d47f9f0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d47fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2afe3d42eaa0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2afe3d42eaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d42ee20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2afe3d42d770" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2afe3d42d770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d42daf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2afe3d486e50" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2afe3d486e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d485210"/>
        <function-ref name="write" scoped="" ref="0x2afe3d4853a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2afe3d429670" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2afe3d429670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d4299f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2afe3d485670" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2afe3d485670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d4859f0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d485b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2afe3d47de50" loc="94:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2afe3d47de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d47c610"/>
        <function-ref name="write" scoped="" ref="0x2afe3d47c7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2afe3d4737a0" loc="112:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2afe3d4737a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2afe3d473b20"/>
        <function-ref name="writeDone" scoped="" ref="0x2afe3d473cb0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d473e40"/>
        <function-ref name="beginRead" scoped="" ref="0x2afe3d472020"/>
        <function-ref name="readDone" scoped="" ref="0x2afe3d4721b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x2afe3d46bb30" loc="54:/home/zdenial/tinyos/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2afe3d46bb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2afe3d468020"/>
        <function-ref name="changed" scoped="" ref="0x2afe3d4681b0"/>
        <function-ref name="amGroup" scoped="" ref="0x2afe3d468340"/>
        <function-ref name="setAddress" scoped="" ref="0x2afe3d4684d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x2afe3d46ad30" loc="13:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2afe3d46ad30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x2afe3d4ba0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x2afe3d4b6310" loc="5:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2afe3d4b6310"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x2afe3d4b6690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0x2afe3d4b28c0" loc="8:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x2afe3d4b28c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d4b2c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x2afe3d4a7020" loc="8:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x2afe3d4a7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d4a73a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x2afe3d49dcb0" loc="14:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x2afe3d49dcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d4a00a0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d4a0230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0x2afe3d4a05b0" loc="15:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0x2afe3d4a05b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2afe3d4a0930"/>
        <function-ref name="stop" scoped="" ref="0x2afe3d4a0ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x2afe3d4a1210" loc="11:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x2afe3d4a1210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d4a1590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x2afe3d48d020" loc="8:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x2afe3d48d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d48d3a0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d48d530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x2afe3d48d8c0" loc="11:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x2afe3d48d8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3d48dc40"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3d48ddd0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3d48c020"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3d48c1b0"/>
        <function-ref name="get" scoped="" ref="0x2afe3d48c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3d48c4d0"/>
        <function-ref name="set" scoped="" ref="0x2afe3d48c660"/>
        <function-ref name="clr" scoped="" ref="0x2afe3d48c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x2afe3d4eab40" loc="15:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x2afe3d4eab40"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c45c0"/>
            <typename><typedef-ref name="TMicro" ref="0x2afe3c4c4930"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2afe3d4ed970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x2afe3d48b490" loc="11:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x2afe3d48b490"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d48b810"/>
        <function-ref name="write" scoped="" ref="0x2afe3d48b9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x2afe3d48bd30" loc="14:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x2afe3d48bd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3d4880e0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3d488270"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3d488400"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3d488590"/>
        <function-ref name="get" scoped="" ref="0x2afe3d488720"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3d4888b0"/>
        <function-ref name="set" scoped="" ref="0x2afe3d488a40"/>
        <function-ref name="clr" scoped="" ref="0x2afe3d488bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x2afe3d4ca020" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x2afe3d4ca020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c45c0"/>
            <typename><typedef-ref name="TMicro" ref="0x2afe3c4c4930"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2afe3d4cae30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x2afe3d4c8d20" loc="54:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x2afe3d4c8d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c45c0"/>
            <typename><typedef-ref name="TMicro" ref="0x2afe3c4c4930"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2afe3d4c7b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2afe3d520260" loc="55:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2afe3d520260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c45c0"/>
            <typename><typedef-ref name="TMicro" ref="0x2afe3c4c4930"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afe3d51e090"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afe3d51ea10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afe3d51e550"/>
        <function-ref name="overflow" scoped="" ref="0x2afe3d51d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x2afe3d51c890" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x2afe3d51c890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c45c0"/>
            <typename><typedef-ref name="TMicro" ref="0x2afe3c4c4930"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afe3d5196e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afe3d517090"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afe3d519ba0"/>
        <function-ref name="overflow" scoped="" ref="0x2afe3d517550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2afe3d513190" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2afe3d513190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3d513510"/>
        <function-ref name="setClockSource" scoped="" ref="0x2afe3d5136a0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afe3d513830"/>
        <function-ref name="get" scoped="" ref="0x2afe3d5139c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afe3d513b50"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afe3d513ce0"/>
        <function-ref name="getMode" scoped="" ref="0x2afe3d513e70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afe3d511030"/>
        <function-ref name="overflow" scoped="" ref="0x2afe3d5111c0"/>
        <function-ref name="setMode" scoped="" ref="0x2afe3d511350"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2afe3d5114e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2afe3d515060" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2afe3d515060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c45c0"/>
            <typename><typedef-ref name="TMicro" ref="0x2afe3c4c4930"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afe3d515e70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afe3d514820"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afe3d514360"/>
        <function-ref name="overflow" scoped="" ref="0x2afe3d514ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0x2afe3d48e5a0" loc="3:/home/zdenial/tinyos/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0x2afe3d48e5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3d48e920"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3d48eab0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3d48ec40"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3d48edd0"/>
        <function-ref name="get" scoped="" ref="0x2afe3d50d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3d50d1b0"/>
        <function-ref name="set" scoped="" ref="0x2afe3d50d340"/>
        <function-ref name="clr" scoped="" ref="0x2afe3d50d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2afe3d50bc50" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2afe3d50bc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3d50a020"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3d50a1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2afe3d50a340"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3d50a4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3d50a660"/>
        <function-ref name="getResistor" scoped="" ref="0x2afe3d50a7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3d50a980"/>
        <function-ref name="get" scoped="" ref="0x2afe3d50ab10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afe3d50aca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afe3d50ae30"/>
        <function-ref name="set" scoped="" ref="0x2afe3d509020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afe3d5091b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afe3d509340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afe3d5095d0"/>
        <function-ref name="clr" scoped="" ref="0x2afe3d509760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2afe3d50c9e0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2afe3d50c9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3d50cd60"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3d50b020"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3d50b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3d50b340"/>
        <function-ref name="get" scoped="" ref="0x2afe3d50b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3d50b660"/>
        <function-ref name="set" scoped="" ref="0x2afe3d50b7f0"/>
        <function-ref name="clr" scoped="" ref="0x2afe3d50b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2afe3d50ea20" loc="14:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2afe3d50ea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2afe3d50eda0"/>
        <function-ref name="stop" scoped="" ref="0x2afe3d504020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2afe3d4f5cb0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2afe3d4f5cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2afe3d4f40a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2afe3d4f4230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2afe3d4f43c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2afe3d4f4550"/>
        <function-ref name="setCca" scoped="" ref="0x2afe3d4f46e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2afe3d4f4870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x2afe3d4f19f0" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x2afe3d4f19f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2afe3d4f1d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x2afe3d4f5020" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x2afe3d4f5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3d4f53a0"/>
        <function-ref name="cancel" scoped="" ref="0x2afe3d4f5530"/>
        <function-ref name="modify" scoped="" ref="0x2afe3d4f56c0"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3d4f5850"/>
        <function-ref name="resend" scoped="" ref="0x2afe3d4f59e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2afe3d4f86d0" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2afe3d4f86d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2afe3d4f8a50"/>
        <function-ref name="stop" scoped="" ref="0x2afe3d4f8be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x2afe3d4f3190" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x2afe3d4f3190"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2afe3d4f3510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2afe3d556650" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2afe3d556650"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2afe3d5569d0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2afe3d556b60"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2afe3d556cf0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2afe3d556e80"/>
        <function-ref name="setCca" scoped="" ref="0x2afe3d555030"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2afe3d5551c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2afe3d54e7c0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2afe3d54e7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2afe3d54dd50"/>
        <function-ref name="clear" scoped="" ref="0x2afe3d54b4c0"/>
        <function-ref name="isValid" scoped="" ref="0x2afe3d54d620"/>
        <function-ref name="set" scoped="" ref="0x2afe3d54bbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x2afe3d537020" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2afe3d537020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d5373a0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d537530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x2afe3d537890" loc="79:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2afe3d537890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d537c10"/>
        <function-ref name="write" scoped="" ref="0x2afe3d537da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x2afe3d5555e0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x2afe3d5555e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2afe3d555960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x2afe3d53a530" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2afe3d53a530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d53a8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x2afe3d549880" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x2afe3d549880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2afe3d549c00"/>
        <function-ref name="disable" scoped="" ref="0x2afe3d549d90"/>
        <function-ref name="captured" scoped="" ref="0x2afe3d548020"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2afe3d5481b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x2afe3d5547f0" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x2afe3d5547f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afe3d550090"/>
        <function-ref name="fired" scoped="" ref="0x2afe3d552090"/>
        <function-ref name="startAt" scoped="" ref="0x2afe3d552a10"/>
        <function-ref name="isRunning" scoped="" ref="0x2afe3d552550"/>
        <function-ref name="getAlarm" scoped="" ref="0x2afe3d550550"/>
        <function-ref name="start" scoped="" ref="0x2afe3d5536a0"/>
        <function-ref name="stop" scoped="" ref="0x2afe3d553bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2afe3d550a00" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2afe3d550a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2afe3d550d80"/>
        <function-ref name="setNetwork" scoped="" ref="0x2afe3d54f020"/>
        <function-ref name="getRssi" scoped="" ref="0x2afe3d54f1b0"/>
        <function-ref name="getNetwork" scoped="" ref="0x2afe3d54f340"/>
        <function-ref name="getPower" scoped="" ref="0x2afe3d54f4d0"/>
        <function-ref name="getLqi" scoped="" ref="0x2afe3d54f660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x2afe3d53c550" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2afe3d53c550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d53c8d0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d53ca60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x2afe3d53ce00" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2afe3d53ce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d53b1c0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d53b350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x2afe3d52fd40" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x2afe3d52fd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2afe3d5330e0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2afe3d533270"/>
        <function-ref name="sfd" scoped="" ref="0x2afe3d533400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2afe3d5578c0" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2afe3d5578c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3d557c40"/>
        <function-ref name="cancel" scoped="" ref="0x2afe3d557dd0"/>
        <function-ref name="modify" scoped="" ref="0x2afe3d556020"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3d5561b0"/>
        <function-ref name="resend" scoped="" ref="0x2afe3d556340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x2afe3d53ed10" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2afe3d53ed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2afe3d53d0e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2afe3d53d270"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2afe3d53d400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x2afe3d53ac60" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2afe3d53ac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d539020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2afe3d541820" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x2afe3d541820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3d541ba0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3d541d30"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3d540020"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3d5401b0"/>
        <function-ref name="get" scoped="" ref="0x2afe3d540340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3d5404d0"/>
        <function-ref name="set" scoped="" ref="0x2afe3d540660"/>
        <function-ref name="clr" scoped="" ref="0x2afe3d5407f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afe3d558820" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afe3d558820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afe3d558ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2afe3d54f9a0" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2afe3d54f9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2afe3d54fd20"/>
        <function-ref name="getHeader" scoped="" ref="0x2afe3d54e020"/>
        <function-ref name="getMetadata" scoped="" ref="0x2afe3d54e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x2afe3d543b30" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2afe3d543b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afe3d549020"/>
        <function-ref name="isSet" scoped="" ref="0x2afe3d5491b0"/>
        <function-ref name="cancel" scoped="" ref="0x2afe3d549340"/>
        <function-ref name="set" scoped="" ref="0x2afe3d5494d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x2afe3d5393e0" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2afe3d5393e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d539960"/>
        <function-ref name="write" scoped="" ref="0x2afe3d539af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2afe3d53e020" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x2afe3d53e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afe3d53e3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afe3d53e530"/>
        <function-ref name="request" scoped="" ref="0x2afe3d53e6c0"/>
        <function-ref name="granted" scoped="" ref="0x2afe3d53e850"/>
        <function-ref name="isOwner" scoped="" ref="0x2afe3d53e9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x2afe3d548500" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x2afe3d548500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3d548980"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3d548b10"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3d548ca0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3d548e30"/>
        <function-ref name="get" scoped="" ref="0x2afe3d541020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3d5411b0"/>
        <function-ref name="set" scoped="" ref="0x2afe3d541340"/>
        <function-ref name="clr" scoped="" ref="0x2afe3d5414d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x2afe3d535130" loc="80:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2afe3d535130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d5354b0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d535640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x2afe3d5359c0" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2afe3d5359c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d535d40"/>
        <function-ref name="write" scoped="" ref="0x2afe3d534020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x2afe3d53b6d0" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2afe3d53b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d53ba50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x2afe3d540b40" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x2afe3d540b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3d53f020"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3d53f1b0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3d53f340"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3d53f4d0"/>
        <function-ref name="get" scoped="" ref="0x2afe3d53f660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3d53f7f0"/>
        <function-ref name="set" scoped="" ref="0x2afe3d53f980"/>
        <function-ref name="clr" scoped="" ref="0x2afe3d53fb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2afe3d5336c0" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2afe3d5336c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2afe3d533a40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2afe3d533bd0"/>
        <function-ref name="led1On" scoped="" ref="0x2afe3d533d60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2afe3d532020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2afe3d5321b0"/>
        <function-ref name="get" scoped="" ref="0x2afe3d532340"/>
        <function-ref name="led1Off" scoped="" ref="0x2afe3d5324d0"/>
        <function-ref name="led2Off" scoped="" ref="0x2afe3d532b10"/>
        <function-ref name="set" scoped="" ref="0x2afe3d532660"/>
        <function-ref name="led0On" scoped="" ref="0x2afe3d5327f0"/>
        <function-ref name="led2On" scoped="" ref="0x2afe3d532980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x2afe3d5385e0" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2afe3d5385e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d538960"/>
        <function-ref name="write" scoped="" ref="0x2afe3d538af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2afe3d557020" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2afe3d557020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2afe3d5573a0"/>
        <function-ref name="stop" scoped="" ref="0x2afe3d557530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x2afe3d53d780" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2afe3d53d780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2afe3d53db00"/>
        <function-ref name="writeDone" scoped="" ref="0x2afe3d53dc90"/>
        <function-ref name="write" scoped="" ref="0x2afe3d53de20"/>
        <function-ref name="beginRead" scoped="" ref="0x2afe3d53c020"/>
        <function-ref name="readDone" scoped="" ref="0x2afe3d53c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x2afe3d53bde0" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2afe3d53bde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d53a180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x2afe3d539e80" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2afe3d539e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d538220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x2afe3d555d70" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x2afe3d555d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2afe3d554180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2afe3d5d6c60" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2afe3d5d6c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d5d5210"/>
        <function-ref name="write" scoped="" ref="0x2afe3d5d53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2afe3d5df020" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2afe3d5df020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d5df3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2afe3d5d9c70" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2afe3d5d9c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d5d8020"/>
        <function-ref name="write" scoped="" ref="0x2afe3d5d81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2afe3d5d3670" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2afe3d5d3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d5d39f0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d5d3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2afe3d5cce50" loc="86:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2afe3d5cce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d5cb210"/>
        <function-ref name="write" scoped="" ref="0x2afe3d5cb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2afe3d5d3e50" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2afe3d5d3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d5d2210"/>
        <function-ref name="write" scoped="" ref="0x2afe3d5d23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2afe3d62c2f0" loc="108:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2afe3d62c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d62c670"/>
        <function-ref name="write" scoped="" ref="0x2afe3d62c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2afe3d62e2f0" loc="104:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2afe3d62e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d62e670"/>
        <function-ref name="write" scoped="" ref="0x2afe3d62e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2afe3d5de370" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2afe3d5de370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d5de6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2afe3d5c8670" loc="93:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2afe3d5c8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d5c89f0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d5c8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2afe3d62f2f0" loc="102:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2afe3d62f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d62f670"/>
        <function-ref name="write" scoped="" ref="0x2afe3d62f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2afe3d5d8c60" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2afe3d5d8c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d5d7020"/>
        <function-ref name="write" scoped="" ref="0x2afe3d5d71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2afe3d5d7c60" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2afe3d5d7c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d5d6020"/>
        <function-ref name="write" scoped="" ref="0x2afe3d5d61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2afe3d5ce670" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2afe3d5ce670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d5ce9f0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d5ceb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2afe3d5d0e50" loc="79:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2afe3d5d0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d5cf210"/>
        <function-ref name="write" scoped="" ref="0x2afe3d5cf3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2afe3d5d2670" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2afe3d5d2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d5d29f0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d5d2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2afe3d5e28f0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2afe3d5e28f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2afe3d5e2c70"/>
        <function-ref name="abortRelease" scoped="" ref="0x2afe3d5e2e00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2afe3d5e1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2afe3d5ddd00" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2afe3d5ddd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d5dc0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2afe3d5dc370" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2afe3d5dc370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d5dc7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2afe3d5c7a70" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2afe3d5c7a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d5c7df0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d631020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2afe3d5dcac0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2afe3d5dcac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d5dce40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2afe3d62fad0" loc="103:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2afe3d62fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d62fe50"/>
        <function-ref name="write" scoped="" ref="0x2afe3d62e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2afe3d5dd060" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2afe3d5dd060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d5dd3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2afe3d5c9e50" loc="92:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2afe3d5c9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d5c8210"/>
        <function-ref name="write" scoped="" ref="0x2afe3d5c83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2afe3d5d7480" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2afe3d5d7480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d5d7800"/>
        <function-ref name="write" scoped="" ref="0x2afe3d5d7990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2afe3d5d8480" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2afe3d5d8480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d5d8800"/>
        <function-ref name="write" scoped="" ref="0x2afe3d5d8990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2afe3d5e1940" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2afe3d5e1940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d5e1cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2afe3d5cae50" loc="90:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2afe3d5cae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d5c9210"/>
        <function-ref name="write" scoped="" ref="0x2afe3d5c93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2afe3d5cb670" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2afe3d5cb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d5cb9f0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d5cbb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2afe3d5c9670" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2afe3d5c9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d5c99f0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d5c9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2afe3d62dad0" loc="107:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2afe3d62dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d62de50"/>
        <function-ref name="write" scoped="" ref="0x2afe3d62c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2afe3d62ead0" loc="105:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2afe3d62ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d62ee50"/>
        <function-ref name="write" scoped="" ref="0x2afe3d62d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2afe3d5cf670" loc="80:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2afe3d5cf670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d5cf9f0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d5cfb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2afe3d5cbe50" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2afe3d5cbe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d5ca210"/>
        <function-ref name="write" scoped="" ref="0x2afe3d5ca3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2afe3d630ad0" loc="101:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2afe3d630ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d630e50"/>
        <function-ref name="write" scoped="" ref="0x2afe3d62f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2afe3d5d1670" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2afe3d5d1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d5d19f0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d5d1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2afe3d62cad0" loc="111:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2afe3d62cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2afe3d62ce50"/>
        <function-ref name="writeDone" scoped="" ref="0x2afe3d62a020"/>
        <function-ref name="write" scoped="" ref="0x2afe3d62a1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x2afe3d62a340"/>
        <function-ref name="readDone" scoped="" ref="0x2afe3d62a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2afe3d5e12f0" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2afe3d5e12f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d5e1670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2afe3d5d9490" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2afe3d5d9490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d5d9810"/>
        <function-ref name="write" scoped="" ref="0x2afe3d5d99a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2afe3d5d6480" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2afe3d5d6480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d5d6800"/>
        <function-ref name="write" scoped="" ref="0x2afe3d5d6990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2afe3d5cee50" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2afe3d5cee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d5cc210"/>
        <function-ref name="write" scoped="" ref="0x2afe3d5cc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2afe3d5d2e50" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2afe3d5d2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d5d1210"/>
        <function-ref name="write" scoped="" ref="0x2afe3d5d13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2afe3d5cc670" loc="85:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2afe3d5cc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d5cc9f0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d5ccb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2afe3d5d5670" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2afe3d5d5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d5d59f0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d5d5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2afe3d5df670" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2afe3d5df670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d5df9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2afe3d5d5e50" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2afe3d5d5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d5d3210"/>
        <function-ref name="write" scoped="" ref="0x2afe3d5d33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2afe3d5e3c30" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2afe3d5e3c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afe3d5e2020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afe3d5e21b0"/>
        <function-ref name="request" scoped="" ref="0x2afe3d5e2340"/>
        <function-ref name="granted" scoped="" ref="0x2afe3d5e24d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2afe3d5e2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2afe3d5db160" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2afe3d5db160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d5db4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2afe3d5dbe00" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2afe3d5dbe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d5d91c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2afe3d6302f0" loc="100:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2afe3d6302f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d630670"/>
        <function-ref name="write" scoped="" ref="0x2afe3d630800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2afe3d631ad0" loc="99:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2afe3d631ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d631e50"/>
        <function-ref name="write" scoped="" ref="0x2afe3d630020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2afe3d5dd6b0" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2afe3d5dd6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d5dda30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2afe3d6312f0" loc="96:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2afe3d6312f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d631670"/>
        <function-ref name="write" scoped="" ref="0x2afe3d631800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2afe3d62d2f0" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2afe3d62d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d62d670"/>
        <function-ref name="write" scoped="" ref="0x2afe3d62d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2afe3d5cfe50" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2afe3d5cfe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d5ce210"/>
        <function-ref name="write" scoped="" ref="0x2afe3d5ce3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2afe3d5ca670" loc="89:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2afe3d5ca670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d5ca9f0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d5cab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2afe3d5dfcc0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2afe3d5dfcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d5de0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2afe3d5de9c0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2afe3d5de9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d5ded40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2afe3d5d1e50" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2afe3d5d1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d5d0210"/>
        <function-ref name="write" scoped="" ref="0x2afe3d5d03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2afe3d5db7b0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2afe3d5db7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d5dbb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2afe3d5d0670" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2afe3d5d0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d5d09f0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d5d0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2afe3d5c8e50" loc="94:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2afe3d5c8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d5c7610"/>
        <function-ref name="write" scoped="" ref="0x2afe3d5c77a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2afe3d62a7a0" loc="112:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2afe3d62a7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2afe3d62ab20"/>
        <function-ref name="writeDone" scoped="" ref="0x2afe3d62acb0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d62ae40"/>
        <function-ref name="beginRead" scoped="" ref="0x2afe3d629020"/>
        <function-ref name="readDone" scoped="" ref="0x2afe3d6291b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x2afe3d61edf0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x2afe3d61edf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2afe3d61b1c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2afe3d61b350"/>
        <function-ref name="sfd" scoped="" ref="0x2afe3d61b4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2afe3d61b7c0" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2afe3d61b7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2afe3d61bb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x2afe3d61a020" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x2afe3d61a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2afe3d61a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2afe3d61e5c0" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2afe3d61e5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2afe3d61e940"/>
        <function-ref name="stop" scoped="" ref="0x2afe3d61ead0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x2afe3d613380" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x2afe3d613380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3d613700"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3d613890"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3d613a20"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3d613bb0"/>
        <function-ref name="get" scoped="" ref="0x2afe3d613d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3d612020"/>
        <function-ref name="set" scoped="" ref="0x2afe3d6121b0"/>
        <function-ref name="clr" scoped="" ref="0x2afe3d612340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x2afe3d60bb90" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x2afe3d60bb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2afe3d60a020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2afe3d60a1b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2afe3d60a340"/>
        <function-ref name="syncDone" scoped="" ref="0x2afe3d60a4d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2afe3d60a660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2afe3d60a7f0"/>
        <function-ref name="setChannel" scoped="" ref="0x2afe3d60a980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2afe3d60ab10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2afe3d60aca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2afe3d60ae30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2afe3d609020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2afe3d6091b0"/>
        <function-ref name="sync" scoped="" ref="0x2afe3d609340"/>
        <function-ref name="getChannel" scoped="" ref="0x2afe3d6095d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2afe3d609760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x2afe3d6619d0" loc="148:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x2afe3d6619d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2afe3d661d50"/>
        <function-ref name="runTask" scoped="" ref="0x2afe3d660020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2afe3d609d70" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2afe3d609d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2afe3d607330"/>
        <function-ref name="clear" scoped="" ref="0x2afe3d607a60"/>
        <function-ref name="isValid" scoped="" ref="0x2afe3d608ba0"/>
        <function-ref name="set" scoped="" ref="0x2afe3d606210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x2afe3d6126b0" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x2afe3d6126b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3d612a30"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3d612bc0"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3d612d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3d611020"/>
        <function-ref name="get" scoped="" ref="0x2afe3d6111b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3d611340"/>
        <function-ref name="set" scoped="" ref="0x2afe3d6114d0"/>
        <function-ref name="clr" scoped="" ref="0x2afe3d611660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x2afe3d604cb0" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2afe3d604cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d6030a0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d603230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x2afe3d603590" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2afe3d603590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d603910"/>
        <function-ref name="write" scoped="" ref="0x2afe3d603aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x2afe3d6026d0" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2afe3d6026d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d602a50"/>
        <function-ref name="write" scoped="" ref="0x2afe3d602be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2afe3d60c330" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2afe3d60c330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2afe3d60c6b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2afe3d60c840"/>
        <function-ref name="getRssi" scoped="" ref="0x2afe3d60c9d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x2afe3d60cb60"/>
        <function-ref name="getPower" scoped="" ref="0x2afe3d60ccf0"/>
        <function-ref name="getLqi" scoped="" ref="0x2afe3d60ce80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x2afe3d616550" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x2afe3d616550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2afe3d6168d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2afe3d616a60"/>
        <function-ref name="sfd" scoped="" ref="0x2afe3d616bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x2afe3d60e3a0" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2afe3d60e3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d60e720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2afe3d614020" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x2afe3d614020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afe3d6143a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afe3d614530"/>
        <function-ref name="toggle" scoped="" ref="0x2afe3d6146c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afe3d614850"/>
        <function-ref name="get" scoped="" ref="0x2afe3d6149e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afe3d614b70"/>
        <function-ref name="set" scoped="" ref="0x2afe3d614d00"/>
        <function-ref name="clr" scoped="" ref="0x2afe3d613020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x2afe3d601020" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2afe3d601020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d6013a0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d601530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afe3d617620" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afe3d617620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afe3d6179a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2afe3d60b1e0" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2afe3d60b1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2afe3d60b560"/>
        <function-ref name="getHeader" scoped="" ref="0x2afe3d60b6f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x2afe3d60b880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2afe3d615020" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2afe3d615020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2afe3d6153a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2afe3d6106e0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x2afe3d6106e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afe3d610a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afe3d610bf0"/>
        <function-ref name="request" scoped="" ref="0x2afe3d610d80"/>
        <function-ref name="granted" scoped="" ref="0x2afe3d60f020"/>
        <function-ref name="isOwner" scoped="" ref="0x2afe3d60f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x2afe3d603e00" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2afe3d603e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d6021c0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d602350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x2afe3d60f530" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2afe3d60f530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2afe3d60f8b0"/>
        <function-ref name="writeDone" scoped="" ref="0x2afe3d60fa40"/>
        <function-ref name="write" scoped="" ref="0x2afe3d60fbd0"/>
        <function-ref name="beginRead" scoped="" ref="0x2afe3d60fd60"/>
        <function-ref name="readDone" scoped="" ref="0x2afe3d60e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x2afe3d6018b0" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2afe3d6018b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d601e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x2afe3d6157c0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x2afe3d6157c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2afe3d615b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2afe3d600150" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2afe3d600150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2afe3d6004d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2afe3d600660"/>
        <function-ref name="led1On" scoped="" ref="0x2afe3d6007f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2afe3d600980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2afe3d600b10"/>
        <function-ref name="get" scoped="" ref="0x2afe3d600ca0"/>
        <function-ref name="led1Off" scoped="" ref="0x2afe3d600e30"/>
        <function-ref name="led2Off" scoped="" ref="0x2afe3d5ff4d0"/>
        <function-ref name="set" scoped="" ref="0x2afe3d5ff020"/>
        <function-ref name="led0On" scoped="" ref="0x2afe3d5ff1b0"/>
        <function-ref name="led2On" scoped="" ref="0x2afe3d5ff340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x2afe3d6043e0" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2afe3d6043e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d604760"/>
        <function-ref name="write" scoped="" ref="0x2afe3d6048f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x2afe3d606b10" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2afe3d606b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d604020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x2afe3d611a50" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x2afe3d611a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afe3d611dd0"/>
        <function-ref name="disable" scoped="" ref="0x2afe3d610020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2afe3d6101b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2afe3d610340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x2afe3d60ead0" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2afe3d60ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d60c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2afe3d617ca0" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2afe3d617ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2afe3d6160a0"/>
        <function-ref name="stop" scoped="" ref="0x2afe3d616230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2afe3d66fa70" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2afe3d66fa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2afe3d66fdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2afe3d673670" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2afe3d673670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2afe3d6739f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2afe3d673b80"/>
        <function-ref name="getRssi" scoped="" ref="0x2afe3d673d10"/>
        <function-ref name="getNetwork" scoped="" ref="0x2afe3d670020"/>
        <function-ref name="getPower" scoped="" ref="0x2afe3d6701b0"/>
        <function-ref name="getLqi" scoped="" ref="0x2afe3d670340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2afe3d66d550" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2afe3d66d550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2afe3d66cb00"/>
        <function-ref name="clear" scoped="" ref="0x2afe3d66b2a0"/>
        <function-ref name="isValid" scoped="" ref="0x2afe3d66c3d0"/>
        <function-ref name="set" scoped="" ref="0x2afe3d66b9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x2afe3d66f0c0" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2afe3d66f0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2afe3d66f440"/>
        <function-ref name="getHeader" scoped="" ref="0x2afe3d66f5d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x2afe3d66f760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2afe3d6d5480" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2afe3d6d5480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afe3d6d5800"/>
        <function-ref name="isSet" scoped="" ref="0x2afe3d6d5990"/>
        <function-ref name="cancel" scoped="" ref="0x2afe3d6d5b20"/>
        <function-ref name="set" scoped="" ref="0x2afe3d6d5cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2afe3d66a660" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2afe3d66a660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c55c0"/>
            <typename><typedef-ref name="TMilli" ref="0x2afe3c4c5930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2afe3d6d7ce0"/>
        <function-ref name="clear" scoped="" ref="0x2afe3d6d6460"/>
        <function-ref name="isValid" scoped="" ref="0x2afe3d6d75b0"/>
        <function-ref name="set" scoped="" ref="0x2afe3d6d6b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2afe3d6706e0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2afe3d6706e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2afe3d670a60"/>
        <function-ref name="noAck" scoped="" ref="0x2afe3d670bf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2afe3d670d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2afe3d6ce020" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2afe3d6ce020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2afe3d6ce3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2afe3d6d3d20" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2afe3d6d3d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2afe3d6d00e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2afe3d6d0270"/>
        <function-ref name="getRssi" scoped="" ref="0x2afe3d6d0400"/>
        <function-ref name="getNetwork" scoped="" ref="0x2afe3d6d0590"/>
        <function-ref name="getPower" scoped="" ref="0x2afe3d6d0720"/>
        <function-ref name="getLqi" scoped="" ref="0x2afe3d6d08b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2afe3d6c54a0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2afe3d6c54a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3d6c5820"/>
        <function-ref name="payloadLength" scoped="" ref="0x2afe3d6c59b0"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3d6c5b40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3d6c5cd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2afe3d6c5e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2afe3d6cea80" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2afe3d6cea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2afe3d6cc020"/>
        <function-ref name="clear" scoped="" ref="0x2afe3d6cc750"/>
        <function-ref name="isValid" scoped="" ref="0x2afe3d6cd8d0"/>
        <function-ref name="set" scoped="" ref="0x2afe3d6cce80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x2afe3d6cf640" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2afe3d6cf640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2afe3d6cf9c0"/>
        <function-ref name="getHeader" scoped="" ref="0x2afe3d6cfb50"/>
        <function-ref name="getMetadata" scoped="" ref="0x2afe3d6cfce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2afe3d6c68b0" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2afe3d6c68b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afe3d6c6c30"/>
        <function-ref name="isSet" scoped="" ref="0x2afe3d6c6dc0"/>
        <function-ref name="cancel" scoped="" ref="0x2afe3d6c5020"/>
        <function-ref name="set" scoped="" ref="0x2afe3d6c51b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x2afe3d6c1820" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x2afe3d6c1820"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afe3d6c34c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x2afe3d6c3b80" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x2afe3d6c3b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c55c0"/>
            <typename><typedef-ref name="TMilli" ref="0x2afe3c4c5930"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afe3d6c27d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2afe3d6caaf0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2afe3d6caaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c55c0"/>
            <typename><typedef-ref name="TMilli" ref="0x2afe3c4c5930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2afe3d6c80d0"/>
        <function-ref name="clear" scoped="" ref="0x2afe3d6c8800"/>
        <function-ref name="isValid" scoped="" ref="0x2afe3d6c9970"/>
        <function-ref name="set" scoped="" ref="0x2afe3d6c6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2afe3d6d0c50" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2afe3d6d0c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2afe3d6cf020"/>
        <function-ref name="noAck" scoped="" ref="0x2afe3d6cf1b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2afe3d6cf340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2afe3d6e04e0" loc="48:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2afe3d6e04e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afe3d747150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2afe3d7477c0" loc="49:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2afe3d7477c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afe3d746620"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afe3d745020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afe3d746ae0"/>
        <function-ref name="overflow" scoped="" ref="0x2afe3d7454e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2afe3d73f7d0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x2afe3d73f7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c55c0"/>
            <typename><typedef-ref name="TMilli" ref="0x2afe3c4c5930"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afe3d733c40"/>
        <function-ref name="fired" scoped="" ref="0x2afe3d734260"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2afe3d733020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2afe3d734b60"/>
        <function-ref name="getdt" scoped="" ref="0x2afe3d732590"/>
        <function-ref name="gett0" scoped="" ref="0x2afe3d732110"/>
        <function-ref name="isRunning" scoped="" ref="0x2afe3d7346e0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2afe3d73e400"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2afe3d733630"/>
        <function-ref name="startOneShot" scoped="" ref="0x2afe3d73e8d0"/>
        <function-ref name="stop" scoped="" ref="0x2afe3d73eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2afe3d732b80" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2afe3d732b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c55c0"/>
            <typename><typedef-ref name="TMilli" ref="0x2afe3c4c5930"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afe3d7307d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afe3d741130" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afe3d741130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afe3d7414b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2afe3d774af0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2afe3d774af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c55c0"/>
            <typename><typedef-ref name="TMilli" ref="0x2afe3c4c5930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afe3d770390"/>
        <function-ref name="fired" scoped="" ref="0x2afe3d772360"/>
        <function-ref name="startAt" scoped="" ref="0x2afe3d772ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x2afe3d772820"/>
        <function-ref name="getAlarm" scoped="" ref="0x2afe3d770850"/>
        <function-ref name="start" scoped="" ref="0x2afe3d773970"/>
        <function-ref name="stop" scoped="" ref="0x2afe3d773e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afe3d7742a0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afe3d7742a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afe3d774620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2afe3e53a260" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2afe3e53a260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afe3e537b30"/>
        <function-ref name="fired" scoped="" ref="0x2afe3e539a60"/>
        <function-ref name="startAt" scoped="" ref="0x2afe3e5374e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2afe3e537020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2afe3e536020"/>
        <function-ref name="start" scoped="" ref="0x2afe3e539090"/>
        <function-ref name="stop" scoped="" ref="0x2afe3e5395a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afe3e53b9d0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afe3e53b9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afe3e53bd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x2afe3e521a80" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2afe3e521a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afe3e521e00"/>
        <function-ref name="setEvent" scoped="" ref="0x2afe3e520020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2afe3e5201b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2afe3e520340"/>
        <function-ref name="fired" scoped="" ref="0x2afe3e5204d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x2afe3e523020" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2afe3e523020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3e5233a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2afe3e523530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afe3e5236c0"/>
        <function-ref name="get" scoped="" ref="0x2afe3e523850"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afe3e5239e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afe3e523b70"/>
        <function-ref name="getMode" scoped="" ref="0x2afe3e523d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afe3e522020"/>
        <function-ref name="overflow" scoped="" ref="0x2afe3e5221b0"/>
        <function-ref name="setMode" scoped="" ref="0x2afe3e522340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2afe3e5224d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x2afe3e522760" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2afe3e522760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2afe3e522ae0"/>
        <function-ref name="getControl" scoped="" ref="0x2afe3e522c70"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afe3e522e00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2afe3e521020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2afe3e5211b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afe3e521340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2afe3e5214d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2afe3e521660"/>
        <function-ref name="setControl" scoped="" ref="0x2afe3e5217f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x2afe3e517760" loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2afe3e517760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afe3e517ae0"/>
        <function-ref name="setEvent" scoped="" ref="0x2afe3e517c70"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2afe3e517e00"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2afe3e516020"/>
        <function-ref name="fired" scoped="" ref="0x2afe3e5161b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2afe3e51bdd0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2afe3e51bdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3e519180"/>
        <function-ref name="setClockSource" scoped="" ref="0x2afe3e519310"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afe3e5194a0"/>
        <function-ref name="get" scoped="" ref="0x2afe3e519630"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afe3e5197c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afe3e519950"/>
        <function-ref name="getMode" scoped="" ref="0x2afe3e519ae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afe3e519c70"/>
        <function-ref name="overflow" scoped="" ref="0x2afe3e519e00"/>
        <function-ref name="setMode" scoped="" ref="0x2afe3e518020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2afe3e5181b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2afe3e51ebf0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2afe3e51ebf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afe3e51b4e0"/>
        <function-ref name="fired" scoped="" ref="0x2afe3e51c4e0"/>
        <function-ref name="startAt" scoped="" ref="0x2afe3e51ce60"/>
        <function-ref name="isRunning" scoped="" ref="0x2afe3e51c9a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2afe3e51b9a0"/>
        <function-ref name="start" scoped="" ref="0x2afe3e51da80"/>
        <function-ref name="stop" scoped="" ref="0x2afe3e51c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afe3e51e360" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afe3e51e360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afe3e51e6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x2afe3e518440" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2afe3e518440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2afe3e5187c0"/>
        <function-ref name="getControl" scoped="" ref="0x2afe3e518950"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afe3e518ae0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2afe3e518c70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2afe3e518e00"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afe3e517020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2afe3e5171b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2afe3e517340"/>
        <function-ref name="setControl" scoped="" ref="0x2afe3e5174d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2afe3d71f080" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2afe3d71f080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c55c0"/>
            <typename><typedef-ref name="TMilli" ref="0x2afe3c4c5930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afe3d71e020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afe3d71e9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afe3d71e4e0"/>
        <function-ref name="overflow" scoped="" ref="0x2afe3d71ee60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2afe3d7160f0" loc="63:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x2afe3d7160f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afe3d715020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afe3d7159a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afe3d7154e0"/>
        <function-ref name="overflow" scoped="" ref="0x2afe3d715e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2afe3d71acd0" loc="62:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2afe3d71acd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c55c0"/>
            <typename><typedef-ref name="TMilli" ref="0x2afe3c4c5930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afe3d719b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afe3d717550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afe3d717090"/>
        <function-ref name="overflow" scoped="" ref="0x2afe3d717a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2afe3e5345f0" loc="61:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2afe3e5345f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c55c0"/>
            <typename><typedef-ref name="TMilli" ref="0x2afe3c4c5930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afe3e532e50"/>
        <function-ref name="fired" scoped="" ref="0x2afe3e533e00"/>
        <function-ref name="startAt" scoped="" ref="0x2afe3e532800"/>
        <function-ref name="isRunning" scoped="" ref="0x2afe3e532340"/>
        <function-ref name="getAlarm" scoped="" ref="0x2afe3e530340"/>
        <function-ref name="start" scoped="" ref="0x2afe3e533430"/>
        <function-ref name="stop" scoped="" ref="0x2afe3e533940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2afe3e52ed20" loc="73:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x2afe3e52ed20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afe3e52a670"/>
        <function-ref name="fired" scoped="" ref="0x2afe3e52c550"/>
        <function-ref name="startAt" scoped="" ref="0x2afe3e52a020"/>
        <function-ref name="isRunning" scoped="" ref="0x2afe3e52ca10"/>
        <function-ref name="getAlarm" scoped="" ref="0x2afe3e52ab30"/>
        <function-ref name="start" scoped="" ref="0x2afe3e52db60"/>
        <function-ref name="stop" scoped="" ref="0x2afe3e52c090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2afe3e5309b0" loc="68:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2afe3e5309b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c55c0"/>
            <typename><typedef-ref name="TMilli" ref="0x2afe3c4c5930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afe3e52f7e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afe3e52e1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afe3e52fca0"/>
        <function-ref name="overflow" scoped="" ref="0x2afe3e52e670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2afe3d7b0020" loc="74:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x2afe3d7b0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2afe3d7b03a0"/>
        <function-ref name="runTask" scoped="" ref="0x2afe3d7b0530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2afe3d7b5cd0" loc="49:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2afe3d7b5cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c55c0"/>
            <typename><typedef-ref name="TMilli" ref="0x2afe3c4c5930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afe3d7b1670"/>
        <function-ref name="fired" scoped="" ref="0x2afe3d7b2550"/>
        <function-ref name="startAt" scoped="" ref="0x2afe3d7b1020"/>
        <function-ref name="isRunning" scoped="" ref="0x2afe3d7b2a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x2afe3d7b1b30"/>
        <function-ref name="start" scoped="" ref="0x2afe3d7b3b60"/>
        <function-ref name="stop" scoped="" ref="0x2afe3d7b2090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2afe3d748830" loc="48:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2afe3d748830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c55c0"/>
            <typename><typedef-ref name="TMilli" ref="0x2afe3c4c5930"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afe3d7b6cf0"/>
        <function-ref name="fired" scoped="" ref="0x2afe3d7b7300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2afe3d7b60d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2afe3d7b7c00"/>
        <function-ref name="getdt" scoped="" ref="0x2afe3d7b5660"/>
        <function-ref name="gett0" scoped="" ref="0x2afe3d7b51e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2afe3d7b7780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2afe3d7b8480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2afe3d7b66e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2afe3d7b8950"/>
        <function-ref name="stop" scoped="" ref="0x2afe3d7b8e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2afe3d7d2a00" loc="71:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x2afe3d7d2a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2afe3d7d2d80"/>
        <function-ref name="runTask" scoped="" ref="0x2afe3d7d1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2afe3d7d8640" loc="49:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x2afe3d7d8640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c55c0"/>
            <typename><typedef-ref name="TMilli" ref="0x2afe3c4c5930"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afe3d7d4c40"/>
        <function-ref name="fired" scoped="" ref="0x2afe3d7d51e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2afe3d7d4020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2afe3d7d5ae0"/>
        <function-ref name="getdt" scoped="" ref="0x2afe3d7d2590"/>
        <function-ref name="gett0" scoped="" ref="0x2afe3d7d2110"/>
        <function-ref name="isRunning" scoped="" ref="0x2afe3d7d5660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2afe3d7d6390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2afe3d7d4630"/>
        <function-ref name="startOneShot" scoped="" ref="0x2afe3d7d6860"/>
        <function-ref name="stop" scoped="" ref="0x2afe3d7d6d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2afe3d7dd150" loc="48:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2afe3d7dd150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c55c0"/>
            <typename><typedef-ref name="TMilli" ref="0x2afe3c4c5930"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afe3d7d9700"/>
        <function-ref name="fired" scoped="" ref="0x2afe3d7dcc30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2afe3d7dba50"/>
        <function-ref name="isOneShot" scoped="" ref="0x2afe3d7db5b0"/>
        <function-ref name="getdt" scoped="" ref="0x2afe3d7d8090"/>
        <function-ref name="gett0" scoped="" ref="0x2afe3d7d9ba0"/>
        <function-ref name="isRunning" scoped="" ref="0x2afe3d7db110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2afe3d7ddd60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2afe3d7d90d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2afe3d7dc2a0"/>
        <function-ref name="stop" scoped="" ref="0x2afe3d7dc790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2afe3d7cf2b0" loc="48:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2afe3d7cf2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c55c0"/>
            <typename><typedef-ref name="TMilli" ref="0x2afe3c4c5930"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afe3d7ce020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2afe3d7ce690" loc="49:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2afe3d7ce690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c55c0"/>
            <typename><typedef-ref name="TMilli" ref="0x2afe3c4c5930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afe3d7cc5b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afe3d7cb020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afe3d7cca70"/>
        <function-ref name="overflow" scoped="" ref="0x2afe3d7cb4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2afe3d7c58c0" loc="45:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2afe3d7c58c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c55c0"/>
            <typename><typedef-ref name="TMilli" ref="0x2afe3c4c5930"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afe3d825cf0"/>
        <function-ref name="fired" scoped="" ref="0x2afe3d826320"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2afe3d8250d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2afe3d826c20"/>
        <function-ref name="getdt" scoped="" ref="0x2afe3d824660"/>
        <function-ref name="gett0" scoped="" ref="0x2afe3d8241e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2afe3d8267a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2afe3d8284e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2afe3d8256e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2afe3d8289b0"/>
        <function-ref name="stop" scoped="" ref="0x2afe3d828e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2afe3d7bc2c0" loc="49:/home/zdenial/tinyos/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x2afe3d7bc2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c55c0"/>
            <typename><typedef-ref name="TMilli" ref="0x2afe3c4c5930"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afe3d82c870"/>
        <function-ref name="fired" scoped="" ref="0x2afe3d7bbe40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2afe3d82dc00"/>
        <function-ref name="isOneShot" scoped="" ref="0x2afe3d82d780"/>
        <function-ref name="getdt" scoped="" ref="0x2afe3d82b1e0"/>
        <function-ref name="gett0" scoped="" ref="0x2afe3d82ccf0"/>
        <function-ref name="isRunning" scoped="" ref="0x2afe3d82d300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2afe3d7bb020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2afe3d82c260"/>
        <function-ref name="startOneShot" scoped="" ref="0x2afe3d7bb4f0"/>
        <function-ref name="stop" scoped="" ref="0x2afe3d7bb9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2afe3d814c60" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2afe3d814c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d812210"/>
        <function-ref name="write" scoped="" ref="0x2afe3d8123a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2afe3d81d020" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2afe3d81d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d81d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2afe3d817c70" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2afe3d817c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d816020"/>
        <function-ref name="write" scoped="" ref="0x2afe3d8161b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2afe3d811670" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2afe3d811670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d8119f0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d811b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2afe3d80ae50" loc="86:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2afe3d80ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d809210"/>
        <function-ref name="write" scoped="" ref="0x2afe3d8093a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2afe3d811e50" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2afe3d811e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d810210"/>
        <function-ref name="write" scoped="" ref="0x2afe3d8103a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2afe3d7fd2f0" loc="108:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2afe3d7fd2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d7fd670"/>
        <function-ref name="write" scoped="" ref="0x2afe3d7fd800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2afe3d8002f0" loc="104:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2afe3d8002f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d800670"/>
        <function-ref name="write" scoped="" ref="0x2afe3d800800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2afe3d81c370" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2afe3d81c370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d81c6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2afe3d805670" loc="93:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2afe3d805670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d8059f0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d805b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2afe3d8012f0" loc="102:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2afe3d8012f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d801670"/>
        <function-ref name="write" scoped="" ref="0x2afe3d801800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2afe3d816c60" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2afe3d816c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d815020"/>
        <function-ref name="write" scoped="" ref="0x2afe3d8151b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2afe3d815c60" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2afe3d815c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d814020"/>
        <function-ref name="write" scoped="" ref="0x2afe3d8141b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2afe3d80b670" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2afe3d80b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d80b9f0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d80bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2afe3d80ee50" loc="79:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2afe3d80ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d80c210"/>
        <function-ref name="write" scoped="" ref="0x2afe3d80c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2afe3d810670" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2afe3d810670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d8109f0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d810b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2afe3d81f970" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2afe3d81f970"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2afe3d81fcf0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2afe3d81fe80"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2afe3d81e030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2afe3d81bd00" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2afe3d81bd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d8190a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2afe3d819370" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2afe3d819370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d8197f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2afe3d804a70" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2afe3d804a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d804df0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d803020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2afe3d819ac0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2afe3d819ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d819e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2afe3d801ad0" loc="103:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2afe3d801ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d801e50"/>
        <function-ref name="write" scoped="" ref="0x2afe3d800020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2afe3d81b060" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2afe3d81b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d81b3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2afe3d807e50" loc="92:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2afe3d807e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d805210"/>
        <function-ref name="write" scoped="" ref="0x2afe3d8053a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2afe3d815480" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2afe3d815480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d815800"/>
        <function-ref name="write" scoped="" ref="0x2afe3d815990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2afe3d816480" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2afe3d816480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d816800"/>
        <function-ref name="write" scoped="" ref="0x2afe3d816990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2afe3d81e950" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2afe3d81e950"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d81ecd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2afe3d808e50" loc="90:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2afe3d808e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d807210"/>
        <function-ref name="write" scoped="" ref="0x2afe3d8073a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2afe3d809670" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2afe3d809670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d8099f0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d809b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2afe3d807670" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2afe3d807670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d8079f0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d807b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2afe3d7fead0" loc="107:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2afe3d7fead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d7fee50"/>
        <function-ref name="write" scoped="" ref="0x2afe3d7fd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2afe3d800ad0" loc="105:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2afe3d800ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d800e50"/>
        <function-ref name="write" scoped="" ref="0x2afe3d7fe020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2afe3d80c670" loc="80:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2afe3d80c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d80c9f0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d80cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2afe3d809e50" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2afe3d809e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d808210"/>
        <function-ref name="write" scoped="" ref="0x2afe3d8083a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2afe3d802ad0" loc="101:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2afe3d802ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d802e50"/>
        <function-ref name="write" scoped="" ref="0x2afe3d801020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2afe3d80f670" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2afe3d80f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d80f9f0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d80fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2afe3d7fdad0" loc="111:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2afe3d7fdad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2afe3d7fde50"/>
        <function-ref name="writeDone" scoped="" ref="0x2afe3d7fc020"/>
        <function-ref name="write" scoped="" ref="0x2afe3d7fc1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x2afe3d7fc340"/>
        <function-ref name="readDone" scoped="" ref="0x2afe3d7fc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2afe3d81e300" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2afe3d81e300"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d81e680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2afe3d817490" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2afe3d817490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d817810"/>
        <function-ref name="write" scoped="" ref="0x2afe3d8179a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2afe3d814480" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2afe3d814480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d814800"/>
        <function-ref name="write" scoped="" ref="0x2afe3d814990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2afe3d80be50" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2afe3d80be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d80a210"/>
        <function-ref name="write" scoped="" ref="0x2afe3d80a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2afe3d810e50" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2afe3d810e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d80f210"/>
        <function-ref name="write" scoped="" ref="0x2afe3d80f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2afe3d80a670" loc="85:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2afe3d80a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d80a9f0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d80ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2afe3d812670" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2afe3d812670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d8129f0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d812b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2afe3d81d670" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2afe3d81d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d81d9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2afe3d812e50" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2afe3d812e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d811210"/>
        <function-ref name="write" scoped="" ref="0x2afe3d8113a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2afe3d821d00" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2afe3d821d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afe3d81f0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afe3d81f230"/>
        <function-ref name="request" scoped="" ref="0x2afe3d81f3c0"/>
        <function-ref name="granted" scoped="" ref="0x2afe3d81f550"/>
        <function-ref name="isOwner" scoped="" ref="0x2afe3d81f6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2afe3d818160" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2afe3d818160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d8184e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2afe3d818e00" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2afe3d818e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d8171c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2afe3d8022f0" loc="100:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2afe3d8022f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d802670"/>
        <function-ref name="write" scoped="" ref="0x2afe3d802800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2afe3d803ad0" loc="99:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2afe3d803ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d803e50"/>
        <function-ref name="write" scoped="" ref="0x2afe3d802020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2afe3d81b6b0" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2afe3d81b6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d81ba30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2afe3d8032f0" loc="96:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2afe3d8032f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d803670"/>
        <function-ref name="write" scoped="" ref="0x2afe3d803800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2afe3d7fe2f0" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2afe3d7fe2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d7fe670"/>
        <function-ref name="write" scoped="" ref="0x2afe3d7fe800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2afe3d80ce50" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2afe3d80ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d80b210"/>
        <function-ref name="write" scoped="" ref="0x2afe3d80b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2afe3d808670" loc="89:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2afe3d808670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d8089f0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d808b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2afe3d81dcc0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2afe3d81dcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d81c0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2afe3d81c9c0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2afe3d81c9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d81cd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2afe3d80fe50" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2afe3d80fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d80e210"/>
        <function-ref name="write" scoped="" ref="0x2afe3d80e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2afe3d8187b0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2afe3d8187b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afe3d818b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2afe3d80e670" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2afe3d80e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d80e9f0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d80eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2afe3d805e50" loc="94:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2afe3d805e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afe3d804610"/>
        <function-ref name="write" scoped="" ref="0x2afe3d8047a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2afe3d7fc7a0" loc="112:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2afe3d7fc7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2afe3d7fcb20"/>
        <function-ref name="writeDone" scoped="" ref="0x2afe3d7fccb0"/>
        <function-ref name="write" scoped="" ref="0x2afe3d7fce40"/>
        <function-ref name="beginRead" scoped="" ref="0x2afe3d7fb020"/>
        <function-ref name="readDone" scoped="" ref="0x2afe3d7fb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2afe3d848a20" loc="46:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x2afe3d848a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2afe3d848da0"/>
        <function-ref name="rand32" scoped="" ref="0x2afe3d847020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2afe3d845920" loc="45:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x2afe3d845920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afe3d848560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afe3d84c9a0" loc="44:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afe3d84c9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afe3d84cd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2afe3d841a20" loc="48:/home/zdenial/tinyos/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x2afe3d841a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2afe3d841da0"/>
        <function-ref name="rand32" scoped="" ref="0x2afe3d840020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2afe3d842940" loc="47:/home/zdenial/tinyos/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x2afe3d842940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afe3d841560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afe3d842080" loc="46:/home/zdenial/tinyos/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afe3d842080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afe3d842400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2afe3d84aaa0" loc="67:/home/zdenial/tinyos/tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2afe3d84aaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2afe3d84ae20"/>
        <function-ref name="toIdle" scoped="" ref="0x2afe3d833020"/>
        <function-ref name="isState" scoped="" ref="0x2afe3d8331b0"/>
        <function-ref name="isIdle" scoped="" ref="0x2afe3d833340"/>
        <function-ref name="requestState" scoped="" ref="0x2afe3d8334d0"/>
        <function-ref name="forceState" scoped="" ref="0x2afe3d833660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2afe3d8a3020" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2afe3d8a3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3d8a33a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3d8a3530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3d8a36c0"/>
        <function-ref name="cancel" scoped="" ref="0x2afe3d8a3850"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3d8a39e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2afe3d8a4220" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2afe3d8a4220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3d8a45a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3d8a4730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3d8a48c0"/>
        <function-ref name="cancel" scoped="" ref="0x2afe3d8a4a50"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3d8a4be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2afe3d89ee60" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2afe3d89ee60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3d89d210"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3d89d3a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3d89d530"/>
        <function-ref name="cancel" scoped="" ref="0x2afe3d89d6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3d89d850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2afe3d8a2a20" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2afe3d8a2a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3d8a2da0"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3d89e020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3d89e1b0"/>
        <function-ref name="cancel" scoped="" ref="0x2afe3d89e340"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3d89e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2afe3d89c8f0" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x2afe3d89c8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2afe3d89cc70"/>
        <function-ref name="rand32" scoped="" ref="0x2afe3d89ce00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afe3d89e750" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afe3d89e750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afe3d89ead0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2afe3d89b170" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2afe3d89b170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2afe3d89b4f0"/>
        <function-ref name="getHeader" scoped="" ref="0x2afe3d89b680"/>
        <function-ref name="getMetadata" scoped="" ref="0x2afe3d89b810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x2afe3d89dae0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2afe3d89dae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2afe3d89de60"/>
        <function-ref name="toIdle" scoped="" ref="0x2afe3d89c020"/>
        <function-ref name="isState" scoped="" ref="0x2afe3d89c1b0"/>
        <function-ref name="isIdle" scoped="" ref="0x2afe3d89c340"/>
        <function-ref name="requestState" scoped="" ref="0x2afe3d89c4d0"/>
        <function-ref name="forceState" scoped="" ref="0x2afe3d89c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2afe3d89f690" loc="67:/home/zdenial/tinyos/tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2afe3d89f690"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2afe3d89fa10"/>
        <function-ref name="toIdle" scoped="" ref="0x2afe3d89fba0"/>
        <function-ref name="isState" scoped="" ref="0x2afe3d89fd30"/>
        <function-ref name="isIdle" scoped="" ref="0x2afe3d88a020"/>
        <function-ref name="requestState" scoped="" ref="0x2afe3d88a1b0"/>
        <function-ref name="forceState" scoped="" ref="0x2afe3d88a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2afe3d884950" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2afe3d884950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2afe3d884cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2afe3d887aa0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2afe3d887aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2afe3d887e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x2afe3d884200" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x2afe3d884200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2afe3d884580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2afe3d87e3f0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2afe3d87e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2afe3d87e770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afe3d880b70" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afe3d880b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afe3d87e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2afe3d883e30" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2afe3d883e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2afe3d8801e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2afe3d87ea70" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2afe3d87ea70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2afe3d87edf0"/>
        <function-ref name="getHeader" scoped="" ref="0x2afe3d87d020"/>
        <function-ref name="getMetadata" scoped="" ref="0x2afe3d87d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x2afe3d880570" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x2afe3d880570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2afe3d8808f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2afe3d8c7020" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2afe3d8c7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2afe3d8c73a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2afe3d8c76b0" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2afe3d8c76b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3d8c7a30"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3d8c7bc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3d8c7d50"/>
        <function-ref name="cancel" scoped="" ref="0x2afe3d8c6020"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3d8c61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2afe3d8cb960" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2afe3d8cb960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3d8cbce0"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3d8cbe70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3d8ca030"/>
        <function-ref name="cancel" scoped="" ref="0x2afe3d8ca1c0"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3d8ca350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x2afe3d8caca0" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x2afe3d8caca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3d8c90a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3d8c9230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3d8c93c0"/>
        <function-ref name="cancel" scoped="" ref="0x2afe3d8c9550"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3d8c96e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2afe3d8ca5f0" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2afe3d8ca5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2afe3d8ca970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2afe3d8cccb0" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2afe3d8cccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afe3d8cb0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afe3d8cb230"/>
        <function-ref name="request" scoped="" ref="0x2afe3d8cb3c0"/>
        <function-ref name="granted" scoped="" ref="0x2afe3d8cb550"/>
        <function-ref name="isOwner" scoped="" ref="0x2afe3d8cb6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x2afe3d8c9a50" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x2afe3d8c9a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2afe3d8c9dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x2afe3d8c8170" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x2afe3d8c8170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3d8c84f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2afe3d8c8680"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3d8c8810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3d8c89a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2afe3d8c8b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2afe3d8bdd70" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2afe3d8bdd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3d8bc180"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3d8bc310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3d8bc4a0"/>
        <function-ref name="cancel" scoped="" ref="0x2afe3d8bc630"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3d8bc7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2afe3d8bcb10" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2afe3d8bcb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2afe3d8bb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x2afe3d906db0" loc="184:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x2afe3d906db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2afe3d905180"/>
        <function-ref name="runTask" scoped="" ref="0x2afe3d905310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2afe3d8bb2f0" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2afe3d8bb2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2afe3d8bb670"/>
        <function-ref name="setNetwork" scoped="" ref="0x2afe3d8bb800"/>
        <function-ref name="getRssi" scoped="" ref="0x2afe3d8bb990"/>
        <function-ref name="getNetwork" scoped="" ref="0x2afe3d8bbb20"/>
        <function-ref name="getPower" scoped="" ref="0x2afe3d8bbcb0"/>
        <function-ref name="getLqi" scoped="" ref="0x2afe3d8bbe40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x2afe3d8bfa20" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x2afe3d8bfa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3d8bfda0"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3d8be020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3d8be1b0"/>
        <function-ref name="cancel" scoped="" ref="0x2afe3d8be340"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3d8be4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2afe3d8bab70" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x2afe3d8bab70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2afe3d8b9020"/>
        <function-ref name="isEmpty" scoped="" ref="0x2afe3d8b91b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2afe3d8b9340"/>
        <function-ref name="dequeue" scoped="" ref="0x2afe3d8b94d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2afe3d8ba170" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2afe3d8ba170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2afe3d8ba4f0"/>
        <function-ref name="getHeader" scoped="" ref="0x2afe3d8ba680"/>
        <function-ref name="getMetadata" scoped="" ref="0x2afe3d8ba810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x2afe3d8bf370" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x2afe3d8bf370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2afe3d8bf6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2afe3d8c27b0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2afe3d8c27b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afe3d8c2b30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afe3d8c2cc0"/>
        <function-ref name="request" scoped="" ref="0x2afe3d8c2e50"/>
        <function-ref name="granted" scoped="" ref="0x2afe3d8c1020"/>
        <function-ref name="isOwner" scoped="" ref="0x2afe3d8c11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2afe3d8c14d0" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x2afe3d8c14d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3d8c1850"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3d8c19e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3d8c1b70"/>
        <function-ref name="cancel" scoped="" ref="0x2afe3d8c1d00"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3d8bf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x2afe3d8be840" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x2afe3d8be840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2afe3d8bebc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x2afe3d8bd020" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x2afe3d8bd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3d8bd3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2afe3d8bd530"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3d8bd6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3d8bd850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2afe3d8bd9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afe3d8e6dd0" loc="44:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afe3d8e6dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afe3d8e5180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2afe3d8e5410" loc="45:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x2afe3d8e5410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2afe3d8e5790"/>
        <function-ref name="isEmpty" scoped="" ref="0x2afe3d8e5920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2afe3d8e5ab0"/>
        <function-ref name="dequeue" scoped="" ref="0x2afe3d8e5c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2afe3d952b80" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2afe3d952b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2afe3d951020"/>
        <function-ref name="stopDone" scoped="" ref="0x2afe3d9511b0"/>
        <function-ref name="start" scoped="" ref="0x2afe3d951340"/>
        <function-ref name="stop" scoped="" ref="0x2afe3d9514d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2afe3d950860" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2afe3d950860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3d950be0"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3d950d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3d94f020"/>
        <function-ref name="cancel" scoped="" ref="0x2afe3d94f1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3d94f340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2afe3d94f690" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2afe3d94f690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2afe3d94fa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2afe3d956cf0" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2afe3d956cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3d9530a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3d953230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3d9533c0"/>
        <function-ref name="cancel" scoped="" ref="0x2afe3d953550"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3d9536e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2afe3d952080" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2afe3d952080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2afe3d952400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2afe3d952590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2afe3d952720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2afe3d9528b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x2afe3d951800" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x2afe3d951800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2afe3d951b80"/>
        <function-ref name="toIdle" scoped="" ref="0x2afe3d951d10"/>
        <function-ref name="isState" scoped="" ref="0x2afe3d950020"/>
        <function-ref name="isIdle" scoped="" ref="0x2afe3d9501b0"/>
        <function-ref name="requestState" scoped="" ref="0x2afe3d950340"/>
        <function-ref name="forceState" scoped="" ref="0x2afe3d9504d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2afe3d94fd90" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x2afe3d94fd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2afe3d94e180"/>
        <function-ref name="stopDone" scoped="" ref="0x2afe3d94e310"/>
        <function-ref name="start" scoped="" ref="0x2afe3d94e4a0"/>
        <function-ref name="stop" scoped="" ref="0x2afe3d94e630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2afe3d953980" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2afe3d953980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2afe3d953d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2afe3d94b2d0" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2afe3d94b2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2afe3d94b650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2afe3d94b7e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2afe3d94b970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2afe3d94bb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2afe3d94d580" loc="67:/home/zdenial/tinyos/tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2afe3d94d580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2afe3d94d900"/>
        <function-ref name="toIdle" scoped="" ref="0x2afe3d94da90"/>
        <function-ref name="isState" scoped="" ref="0x2afe3d94dc20"/>
        <function-ref name="isIdle" scoped="" ref="0x2afe3d94ddb0"/>
        <function-ref name="requestState" scoped="" ref="0x2afe3d94c020"/>
        <function-ref name="forceState" scoped="" ref="0x2afe3d94c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2afe3d93ed70" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <component-ref qname="PacketLinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2afe3d93ed70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3d93d180"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3d93d310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3d93d4a0"/>
        <function-ref name="cancel" scoped="" ref="0x2afe3d93d630"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3d93d7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2afe3d93f2a0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <component-ref qname="PacketLinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2afe3d93f2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3d93f620"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3d93f7b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3d93f940"/>
        <function-ref name="cancel" scoped="" ref="0x2afe3d93fad0"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3d93fc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2afe3d93e020" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <component-ref qname="PacketLinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x2afe3d93e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2afe3d93e3a0"/>
        <function-ref name="setRetries" scoped="" ref="0x2afe3d93e530"/>
        <function-ref name="getRetries" scoped="" ref="0x2afe3d93e6c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2afe3d93e850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2afe3d93e9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2afe3d939dd0" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2afe3d939dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3d937180"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3d937310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3d9374a0"/>
        <function-ref name="cancel" scoped="" ref="0x2afe3d937630"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3d9377c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="send" ref="0x2afe3d92d2a0" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="send" scoped="" ref="0x2afe3d92d2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2afe3d92d620"/>
        <function-ref name="runTask" scoped="" ref="0x2afe3d92d7b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelayTimer" ref="0x2afe3d935650" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DelayTimer" scoped="" ref="0x2afe3d935650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c55c0"/>
            <typename><typedef-ref name="TMilli" ref="0x2afe3c4c5930"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afe3d932c40"/>
        <function-ref name="fired" scoped="" ref="0x2afe3d9331e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2afe3d932020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2afe3d933ae0"/>
        <function-ref name="getdt" scoped="" ref="0x2afe3d930590"/>
        <function-ref name="gett0" scoped="" ref="0x2afe3d930110"/>
        <function-ref name="isRunning" scoped="" ref="0x2afe3d933660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2afe3d934390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2afe3d932630"/>
        <function-ref name="startOneShot" scoped="" ref="0x2afe3d934860"/>
        <function-ref name="stop" scoped="" ref="0x2afe3d934d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2afe3d93c3b0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2afe3d93c3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3d93c730"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3d93c8c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3d93ca50"/>
        <function-ref name="cancel" scoped="" ref="0x2afe3d93cbe0"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3d93cd70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendState" ref="0x2afe3d937af0" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x2afe3d937af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2afe3d937e70"/>
        <function-ref name="toIdle" scoped="" ref="0x2afe3d936030"/>
        <function-ref name="isState" scoped="" ref="0x2afe3d9361c0"/>
        <function-ref name="isIdle" scoped="" ref="0x2afe3d936350"/>
        <function-ref name="requestState" scoped="" ref="0x2afe3d9364e0"/>
        <function-ref name="forceState" scoped="" ref="0x2afe3d936670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2afe3d930a30" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2afe3d930a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2afe3d930db0"/>
        <function-ref name="getHeader" scoped="" ref="0x2afe3d92f020"/>
        <function-ref name="getMetadata" scoped="" ref="0x2afe3d92f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x2afe3d9369a0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2afe3d9369a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2afe3d936d20"/>
        <function-ref name="noAck" scoped="" ref="0x2afe3d935020"/>
        <function-ref name="wasAcked" scoped="" ref="0x2afe3d9351b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2afe3d939080" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x2afe3d939080"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2afe3d939400"/>
        <function-ref name="setRetries" scoped="" ref="0x2afe3d939590"/>
        <function-ref name="getRetries" scoped="" ref="0x2afe3d939720"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2afe3d9398b0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2afe3d939a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2afe3d97c350" loc="67:/home/zdenial/tinyos/tos/system/StateC.nc">
      <component-ref qname="PacketLinkC.SendStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2afe3d97c350"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2afe3d97c6d0"/>
        <function-ref name="toIdle" scoped="" ref="0x2afe3d97c860"/>
        <function-ref name="isState" scoped="" ref="0x2afe3d97c9f0"/>
        <function-ref name="isIdle" scoped="" ref="0x2afe3d97cb80"/>
        <function-ref name="requestState" scoped="" ref="0x2afe3d97cd10"/>
        <function-ref name="forceState" scoped="" ref="0x2afe3d97b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2afe3d97a750" loc="45:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="PacketLinkC.DelayTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2afe3d97a750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c55c0"/>
            <typename><typedef-ref name="TMilli" ref="0x2afe3c4c5930"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afe3d977c40"/>
        <function-ref name="fired" scoped="" ref="0x2afe3d9781e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2afe3d977020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2afe3d978ae0"/>
        <function-ref name="getdt" scoped="" ref="0x2afe3d975590"/>
        <function-ref name="gett0" scoped="" ref="0x2afe3d975110"/>
        <function-ref name="isRunning" scoped="" ref="0x2afe3d978660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2afe3d979390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2afe3d977630"/>
        <function-ref name="startOneShot" scoped="" ref="0x2afe3d979860"/>
        <function-ref name="stop" scoped="" ref="0x2afe3d979d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2afe3d9d6690" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2afe3d9d6690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2afe3d9d6a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2afe3d9d7860" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2afe3d9d7860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3d9d7be0"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3d9d7d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3d9d6020"/>
        <function-ref name="cancel" scoped="" ref="0x2afe3d9d61b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3d9d6340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x2afe3d9d4610" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x2afe3d9d4610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2afe3d9d4990"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2afe3d9d4b20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2afe3d9d4cb0"/>
        <function-ref name="syncDone" scoped="" ref="0x2afe3d9d4e40"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2afe3d9d2020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2afe3d9d21b0"/>
        <function-ref name="setChannel" scoped="" ref="0x2afe3d9d2340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2afe3d9d24d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2afe3d9d2660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2afe3d9d27f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2afe3d9d2980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2afe3d9d2b10"/>
        <function-ref name="sync" scoped="" ref="0x2afe3d9d2ca0"/>
        <function-ref name="getChannel" scoped="" ref="0x2afe3d9d1020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2afe3d9d11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2afe3d95d830" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2afe3d95d830"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2afe3c2ad1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2afe3d95dbb0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2afe3d95dd40"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2afe3d9d7020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2afe3d9d71b0"/>
        <function-ref name="setCca" scoped="" ref="0x2afe3d9d7340"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2afe3d9d74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2afe3d95eb50" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x2afe3d95eb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2afe3c2ad1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2afe3d95d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x2afe3d9d01f0" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x2afe3d9d01f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2afe3d9d0570"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2afe3d9d0700"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2afe3d9d0890"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2afe3d9d0a20"/>
        <function-ref name="setCca" scoped="" ref="0x2afe3d9d0bb0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2afe3d9d0d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2afe3d95f8f0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2afe3d95f8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3d95fc70"/>
        <function-ref name="payloadLength" scoped="" ref="0x2afe3d95fe00"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3d95e020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3d95e1b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2afe3d95e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2afe3d964da0" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2afe3d964da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2afe3c2ad1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3d963180"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3d963310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3d9634a0"/>
        <function-ref name="cancel" scoped="" ref="0x2afe3d963630"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3d9637c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2afe3d961c00" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x2afe3d961c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2afe3c2ad1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2afe3d960020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2afe3d9d6ce0" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2afe3d9d6ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2afe3d9d50a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2afe3d9d5230"/>
        <function-ref name="getRssi" scoped="" ref="0x2afe3d9d53c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x2afe3d9d5550"/>
        <function-ref name="getPower" scoped="" ref="0x2afe3d9d56e0"/>
        <function-ref name="getLqi" scoped="" ref="0x2afe3d9d5870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2afe3d9d14d0" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2afe3d9d14d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2afe3d9d1950"/>
        <function-ref name="changed" scoped="" ref="0x2afe3d9d1ae0"/>
        <function-ref name="amGroup" scoped="" ref="0x2afe3d9d1c70"/>
        <function-ref name="setAddress" scoped="" ref="0x2afe3d9d1e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2afe3d9d5b70" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2afe3d9d5b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2afe3d9d4020"/>
        <function-ref name="getHeader" scoped="" ref="0x2afe3d9d41b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x2afe3d9d4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2afe3d961020" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2afe3d961020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2afe3c2ad1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2afe3d9613a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2afe3d9cfd30" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2afe3d9cfd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2afe3d9ce0e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2afe3d9ce270"/>
        <function-ref name="led1On" scoped="" ref="0x2afe3d9ce400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2afe3d9ce590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2afe3d9ce720"/>
        <function-ref name="get" scoped="" ref="0x2afe3d9ce8b0"/>
        <function-ref name="led1Off" scoped="" ref="0x2afe3d9cea40"/>
        <function-ref name="led2Off" scoped="" ref="0x2afe3d9cd1b0"/>
        <function-ref name="set" scoped="" ref="0x2afe3d9cebd0"/>
        <function-ref name="led0On" scoped="" ref="0x2afe3d9ced60"/>
        <function-ref name="led2On" scoped="" ref="0x2afe3d9cd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2afe3d9602d0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2afe3d9602d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2afe3d960650"/>
        <function-ref name="source" scoped="" ref="0x2afe3d9607e0"/>
        <function-ref name="address" scoped="" ref="0x2afe3d960970"/>
        <function-ref name="destination" scoped="" ref="0x2afe3d960b00"/>
        <function-ref name="setSource" scoped="" ref="0x2afe3d960c90"/>
        <function-ref name="setDestination" scoped="" ref="0x2afe3d960e20"/>
        <function-ref name="type" scoped="" ref="0x2afe3d95f020"/>
        <function-ref name="setType" scoped="" ref="0x2afe3d95f1b0"/>
        <function-ref name="isForMe" scoped="" ref="0x2afe3d95f340"/>
        <function-ref name="setGroup" scoped="" ref="0x2afe3d95f4d0"/>
        <function-ref name="localGroup" scoped="" ref="0x2afe3d95f660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x2afe3d9cf0f0" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x2afe3d9cf0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afe3d9cf470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afe3d9cf600"/>
        <function-ref name="request" scoped="" ref="0x2afe3d9cf790"/>
        <function-ref name="granted" scoped="" ref="0x2afe3d9cf920"/>
        <function-ref name="isOwner" scoped="" ref="0x2afe3d9cfab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2afe3da3e580" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2afe3da3e580"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2afe3da3e900"/>
        <function-ref name="stopDone" scoped="" ref="0x2afe3da3ea90"/>
        <function-ref name="start" scoped="" ref="0x2afe3da3ec20"/>
        <function-ref name="stop" scoped="" ref="0x2afe3da3edb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacketMilli" ref="0x2afe3da29060" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x2afe3da29060"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c55c0"/>
            <typename><typedef-ref name="TMilli" ref="0x2afe3c4c5930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x2afe3da29e30"/>
        <function-ref name="eventTime" scoped="" ref="0x2afe3da27380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2afe3da397e0" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2afe3da397e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3da39b60"/>
        <function-ref name="payloadLength" scoped="" ref="0x2afe3da39cf0"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3da39e80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3da38030"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2afe3da381c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2afe3da391d0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x2afe3da391d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2afe3c2ad1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2afe3da39550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2afe3da36640" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2afe3da36640"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2afe3da369c0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2afe3da36b50"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2afe3da36ce0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2afe3da36e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSendMilli" ref="0x2afe3da2ee50" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x2afe3da2ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c55c0"/>
            <typename><typedef-ref name="TMilli" ref="0x2afe3c4c5930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2afe3c2ad1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3da2dc60"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3da2a590"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3da2a110"/>
        <function-ref name="cancel" scoped="" ref="0x2afe3da2c580"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3da2ca90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2afe3da3b5c0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2afe3da3b5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2afe3c2ad1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2afe3da3b940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2afe3da37b20" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2afe3da37b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2afe3da36020"/>
        <function-ref name="noAck" scoped="" ref="0x2afe3da361b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2afe3da36340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSend32khz" ref="0x2afe3da35aa0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x2afe3da35aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2afe3c2ad1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3da34890"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3da311e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3da33d10"/>
        <function-ref name="cancel" scoped="" ref="0x2afe3da331b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3da336c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2afe3da38470" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2afe3da38470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2afe3da387f0"/>
        <function-ref name="source" scoped="" ref="0x2afe3da38980"/>
        <function-ref name="address" scoped="" ref="0x2afe3da38b10"/>
        <function-ref name="destination" scoped="" ref="0x2afe3da38ca0"/>
        <function-ref name="setSource" scoped="" ref="0x2afe3da38e30"/>
        <function-ref name="setDestination" scoped="" ref="0x2afe3da37020"/>
        <function-ref name="type" scoped="" ref="0x2afe3da371b0"/>
        <function-ref name="setType" scoped="" ref="0x2afe3da37340"/>
        <function-ref name="isForMe" scoped="" ref="0x2afe3da374d0"/>
        <function-ref name="setGroup" scoped="" ref="0x2afe3da37660"/>
        <function-ref name="localGroup" scoped="" ref="0x2afe3da377f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacket32khz" ref="0x2afe3da31c50" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x2afe3da31c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x2afe3da30a40"/>
        <function-ref name="eventTime" scoped="" ref="0x2afe3da2e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2afe3da8fe60" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2afe3da8fe60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2afe3da8e210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2afe3da92a00" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2afe3da92a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3da92d80"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3da91020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3da911b0"/>
        <function-ref name="cancel" scoped="" ref="0x2afe3da91340"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3da914d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacketMilli" ref="0x2afe3da16910" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x2afe3da16910"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c55c0"/>
            <typename><typedef-ref name="TMilli" ref="0x2afe3c4c5930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x2afe3da95740"/>
        <function-ref name="eventTime" scoped="" ref="0x2afe3da95c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSendMilli" ref="0x2afe3da1f4d0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x2afe3da1f4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c55c0"/>
            <typename><typedef-ref name="TMilli" ref="0x2afe3c4c5930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3da1e390"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3da1cc80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3da1c800"/>
        <function-ref name="cancel" scoped="" ref="0x2afe3da1ec60"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3da1c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2afe3da1b340" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2afe3da1b340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3da1b6c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2afe3da1b850"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3da1b9e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3da1bb70"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2afe3da1bd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2afe3da922c0" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x2afe3da922c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2afe3c2ad1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2afe3da92640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2afe3da91800" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubPacket" scoped="" ref="0x2afe3da91800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3da91b80"/>
        <function-ref name="payloadLength" scoped="" ref="0x2afe3da91d10"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3da90020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3da901b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2afe3da90340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp32khz" ref="0x2afe3da8c130" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2afe3da8c130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2afe3da8b750"/>
        <function-ref name="clear" scoped="" ref="0x2afe3da8be80"/>
        <function-ref name="isValid" scoped="" ref="0x2afe3da8b020"/>
        <function-ref name="set" scoped="" ref="0x2afe3da8a5d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMPacket" ref="0x2afe3da906a0" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubAMPacket" scoped="" ref="0x2afe3da906a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2afe3da90a20"/>
        <function-ref name="source" scoped="" ref="0x2afe3da90bb0"/>
        <function-ref name="address" scoped="" ref="0x2afe3da90d40"/>
        <function-ref name="destination" scoped="" ref="0x2afe3da8f020"/>
        <function-ref name="setSource" scoped="" ref="0x2afe3da8f1b0"/>
        <function-ref name="setDestination" scoped="" ref="0x2afe3da8f340"/>
        <function-ref name="type" scoped="" ref="0x2afe3da8f4d0"/>
        <function-ref name="setType" scoped="" ref="0x2afe3da8f660"/>
        <function-ref name="isForMe" scoped="" ref="0x2afe3da8f7f0"/>
        <function-ref name="setGroup" scoped="" ref="0x2afe3da8f980"/>
        <function-ref name="localGroup" scoped="" ref="0x2afe3da8fb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2afe3da936b0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2afe3da936b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2afe3c2ad1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2afe3da93a30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x2afe3da85020" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2afe3da85020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afe3da853a0"/>
        <function-ref name="isSet" scoped="" ref="0x2afe3da85530"/>
        <function-ref name="cancel" scoped="" ref="0x2afe3da856c0"/>
        <function-ref name="set" scoped="" ref="0x2afe3da85850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x2afe3da85d30" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x2afe3da85d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afe3da83980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2afe3da810f0" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2afe3da810f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2afe3da81470"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2afe3da81600"/>
        <function-ref name="led1On" scoped="" ref="0x2afe3da81790"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2afe3da81920"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2afe3da81ab0"/>
        <function-ref name="get" scoped="" ref="0x2afe3da81c40"/>
        <function-ref name="led1Off" scoped="" ref="0x2afe3da81dd0"/>
        <function-ref name="led2Off" scoped="" ref="0x2afe3da804d0"/>
        <function-ref name="set" scoped="" ref="0x2afe3da80020"/>
        <function-ref name="led0On" scoped="" ref="0x2afe3da801b0"/>
        <function-ref name="led2On" scoped="" ref="0x2afe3da80340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x2afe3da82060" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x2afe3da82060"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c55c0"/>
            <typename><typedef-ref name="TMilli" ref="0x2afe3c4c5930"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afe3da82c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSend32khz" ref="0x2afe3da24c10" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x2afe3da24c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3da23a40"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3da204a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3da20020"/>
        <function-ref name="cancel" scoped="" ref="0x2afe3da22350"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3da22860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2afe3da19020" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2afe3da19020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2afe3da193a0"/>
        <function-ref name="source" scoped="" ref="0x2afe3da19530"/>
        <function-ref name="address" scoped="" ref="0x2afe3da196c0"/>
        <function-ref name="destination" scoped="" ref="0x2afe3da19850"/>
        <function-ref name="setSource" scoped="" ref="0x2afe3da199e0"/>
        <function-ref name="setDestination" scoped="" ref="0x2afe3da19b70"/>
        <function-ref name="type" scoped="" ref="0x2afe3da19d00"/>
        <function-ref name="setType" scoped="" ref="0x2afe3da18020"/>
        <function-ref name="isForMe" scoped="" ref="0x2afe3da181b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2afe3da18340"/>
        <function-ref name="localGroup" scoped="" ref="0x2afe3da184d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacket32khz" ref="0x2afe3da18b90" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x2afe3da18b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x2afe3da17990"/>
        <function-ref name="eventTime" scoped="" ref="0x2afe3da16020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSnoop" ref="0x2afe3da8e550" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSnoop" scoped="" ref="0x2afe3da8e550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2afe3da8e9d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStampMilli" ref="0x2afe3da88270" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2afe3da88270"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c55c0"/>
            <typename><typedef-ref name="TMilli" ref="0x2afe3c4c5930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2afe3da87800"/>
        <function-ref name="clear" scoped="" ref="0x2afe3da86020"/>
        <function-ref name="isValid" scoped="" ref="0x2afe3da870d0"/>
        <function-ref name="set" scoped="" ref="0x2afe3da86750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2afe3db96020" loc="49:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2afe3db96020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3db963a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3db96530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3db966c0"/>
        <function-ref name="cancel" scoped="" ref="0x2afe3db96850"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3db969e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2afe3db96c30" loc="50:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2afe3db96c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3db95020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2afe3db951b0"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3db95340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3db954d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2afe3db95660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2afe3db958b0" loc="51:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2afe3db958b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2afe3db95c30"/>
        <function-ref name="source" scoped="" ref="0x2afe3db95dc0"/>
        <function-ref name="address" scoped="" ref="0x2afe3db93020"/>
        <function-ref name="destination" scoped="" ref="0x2afe3db931b0"/>
        <function-ref name="setSource" scoped="" ref="0x2afe3db93340"/>
        <function-ref name="setDestination" scoped="" ref="0x2afe3db934d0"/>
        <function-ref name="type" scoped="" ref="0x2afe3db93660"/>
        <function-ref name="setType" scoped="" ref="0x2afe3db937f0"/>
        <function-ref name="isForMe" scoped="" ref="0x2afe3db93980"/>
        <function-ref name="setGroup" scoped="" ref="0x2afe3db93b10"/>
        <function-ref name="localGroup" scoped="" ref="0x2afe3db93ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2afe3db92020" loc="52:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2afe3db92020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2afe3db923a0"/>
        <function-ref name="noAck" scoped="" ref="0x2afe3db92530"/>
        <function-ref name="wasAcked" scoped="" ref="0x2afe3db926c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2afe3e59dcb0" loc="49:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2afe3e59dcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3e59c0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3e59c230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3e59c3c0"/>
        <function-ref name="cancel" scoped="" ref="0x2afe3e59c550"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3e59c6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2afe3e59c930" loc="50:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2afe3e59c930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3e59ccb0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2afe3e59ce40"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3e59b020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3e59b1b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2afe3e59b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2afe3e59b590" loc="51:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2afe3e59b590"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2afe3e59b910"/>
        <function-ref name="source" scoped="" ref="0x2afe3e59baa0"/>
        <function-ref name="address" scoped="" ref="0x2afe3e59bc30"/>
        <function-ref name="destination" scoped="" ref="0x2afe3e59bdc0"/>
        <function-ref name="setSource" scoped="" ref="0x2afe3e59a020"/>
        <function-ref name="setDestination" scoped="" ref="0x2afe3e59a1b0"/>
        <function-ref name="type" scoped="" ref="0x2afe3e59a340"/>
        <function-ref name="setType" scoped="" ref="0x2afe3e59a4d0"/>
        <function-ref name="isForMe" scoped="" ref="0x2afe3e59a660"/>
        <function-ref name="setGroup" scoped="" ref="0x2afe3e59a7f0"/>
        <function-ref name="localGroup" scoped="" ref="0x2afe3e59a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2afe3e59ac10" loc="52:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2afe3e59ac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2afe3e599020"/>
        <function-ref name="noAck" scoped="" ref="0x2afe3e5991b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2afe3e599340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2afe3e646660" loc="44:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2afe3e646660"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3e6469e0"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3e646b70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3e646d00"/>
        <function-ref name="cancel" scoped="" ref="0x2afe3e644020"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3e6441b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2afe3e644460" loc="46:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2afe3e644460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3e6447e0"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3e644970"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3e644b00"/>
        <function-ref name="cancel" scoped="" ref="0x2afe3e644c90"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3e644e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2afe3e6430e0" loc="47:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2afe3e6430e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2afe3e643460"/>
        <function-ref name="source" scoped="" ref="0x2afe3e6435f0"/>
        <function-ref name="address" scoped="" ref="0x2afe3e643780"/>
        <function-ref name="destination" scoped="" ref="0x2afe3e643910"/>
        <function-ref name="setSource" scoped="" ref="0x2afe3e643aa0"/>
        <function-ref name="setDestination" scoped="" ref="0x2afe3e643c30"/>
        <function-ref name="type" scoped="" ref="0x2afe3e643dc0"/>
        <function-ref name="setType" scoped="" ref="0x2afe3e642020"/>
        <function-ref name="isForMe" scoped="" ref="0x2afe3e6421b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2afe3e642340"/>
        <function-ref name="localGroup" scoped="" ref="0x2afe3e6424d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2afe3daf6940" loc="43:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2afe3daf6940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3daf6cc0"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3daf6e50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3daf2020"/>
        <function-ref name="cancel" scoped="" ref="0x2afe3daf21b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3daf2340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2afe3db28400" loc="48:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2afe3db28400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2afe3c2ad1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3db287a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3db28930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3db28ac0"/>
        <function-ref name="cancel" scoped="" ref="0x2afe3db28c50"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3db28de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2afe3db294b0" loc="46:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2afe3db294b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3db29850"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3db299e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3db29b70"/>
        <function-ref name="cancel" scoped="" ref="0x2afe3db29d00"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3db28020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2afe3db26720" loc="50:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2afe3db26720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3db26aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2afe3db26c30"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3db26dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3db25020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2afe3db251b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x2afe3db25480" loc="169:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x2afe3db25480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2afe3db25800"/>
        <function-ref name="runTask" scoped="" ref="0x2afe3db25990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x2afe3db25c60" loc="126:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x2afe3db25c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2afe3db24020"/>
        <function-ref name="runTask" scoped="" ref="0x2afe3db241b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2afe3db27060" loc="49:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2afe3db27060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2afe3db273e0"/>
        <function-ref name="source" scoped="" ref="0x2afe3db27570"/>
        <function-ref name="address" scoped="" ref="0x2afe3db27700"/>
        <function-ref name="destination" scoped="" ref="0x2afe3db27890"/>
        <function-ref name="setSource" scoped="" ref="0x2afe3db27a20"/>
        <function-ref name="setDestination" scoped="" ref="0x2afe3db27bb0"/>
        <function-ref name="type" scoped="" ref="0x2afe3db27d40"/>
        <function-ref name="setType" scoped="" ref="0x2afe3db26020"/>
        <function-ref name="isForMe" scoped="" ref="0x2afe3db261b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2afe3db26340"/>
        <function-ref name="localGroup" scoped="" ref="0x2afe3db264d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2afe3db8e830" loc="48:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.LocalTime32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2afe3db8e830"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afe3db8d4c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2afe3db8db30" loc="49:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.LocalTime32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2afe3db8db30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afe3db8c970"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afe3db8a340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afe3db8ce30"/>
        <function-ref name="overflow" scoped="" ref="0x2afe3db8a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2afe3db89e60" loc="20:/home/zdenial/tinyos/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2afe3db89e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c55c0"/>
            <typename><typedef-ref name="TMilli" ref="0x2afe3c4c5930"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afe3db86ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2afe3db77cc0" loc="49:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2afe3db77cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3db760a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3db76230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3db763c0"/>
        <function-ref name="cancel" scoped="" ref="0x2afe3db76550"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3db766e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2afe3db76930" loc="50:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2afe3db76930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3db76cb0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2afe3db76e40"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3db75020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3db751b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2afe3db75340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2afe3db75590" loc="51:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2afe3db75590"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2afe3db75910"/>
        <function-ref name="source" scoped="" ref="0x2afe3db75aa0"/>
        <function-ref name="address" scoped="" ref="0x2afe3db75c30"/>
        <function-ref name="destination" scoped="" ref="0x2afe3db75dc0"/>
        <function-ref name="setSource" scoped="" ref="0x2afe3db74020"/>
        <function-ref name="setDestination" scoped="" ref="0x2afe3db741b0"/>
        <function-ref name="type" scoped="" ref="0x2afe3db74340"/>
        <function-ref name="setType" scoped="" ref="0x2afe3db744d0"/>
        <function-ref name="isForMe" scoped="" ref="0x2afe3db74660"/>
        <function-ref name="setGroup" scoped="" ref="0x2afe3db747f0"/>
        <function-ref name="localGroup" scoped="" ref="0x2afe3db74980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2afe3db74c10" loc="52:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2afe3db74c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2afe3db73020"/>
        <function-ref name="noAck" scoped="" ref="0x2afe3db731b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2afe3db73340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2afe3e5f9cb0" loc="49:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2afe3e5f9cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3e5f80a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3e5f8230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3e5f83c0"/>
        <function-ref name="cancel" scoped="" ref="0x2afe3e5f8550"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3e5f86e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2afe3e5f8930" loc="50:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2afe3e5f8930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3e5f8cb0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2afe3e5f8e40"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3e5f7020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3e5f71b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2afe3e5f7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2afe3e5f7590" loc="51:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2afe3e5f7590"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2afe3e5f7910"/>
        <function-ref name="source" scoped="" ref="0x2afe3e5f7aa0"/>
        <function-ref name="address" scoped="" ref="0x2afe3e5f7c30"/>
        <function-ref name="destination" scoped="" ref="0x2afe3e5f7dc0"/>
        <function-ref name="setSource" scoped="" ref="0x2afe3e5f6020"/>
        <function-ref name="setDestination" scoped="" ref="0x2afe3e5f61b0"/>
        <function-ref name="type" scoped="" ref="0x2afe3e5f6340"/>
        <function-ref name="setType" scoped="" ref="0x2afe3e5f64d0"/>
        <function-ref name="isForMe" scoped="" ref="0x2afe3e5f6660"/>
        <function-ref name="setGroup" scoped="" ref="0x2afe3e5f67f0"/>
        <function-ref name="localGroup" scoped="" ref="0x2afe3e5f6980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2afe3e5f6c10" loc="52:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2afe3e5f6c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2afe3e5f4020"/>
        <function-ref name="noAck" scoped="" ref="0x2afe3e5f41b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2afe3e5f4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2afe3e699e30" loc="44:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2afe3e699e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3e6971e0"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3e697370"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3e697500"/>
        <function-ref name="cancel" scoped="" ref="0x2afe3e697690"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3e697820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2afe3e697ad0" loc="46:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2afe3e697ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3e697e50"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3e696020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3e6961b0"/>
        <function-ref name="cancel" scoped="" ref="0x2afe3e696340"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3e6964d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2afe3e696720" loc="47:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2afe3e696720"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2afe3e696aa0"/>
        <function-ref name="source" scoped="" ref="0x2afe3e696c30"/>
        <function-ref name="address" scoped="" ref="0x2afe3e696dc0"/>
        <function-ref name="destination" scoped="" ref="0x2afe3e695020"/>
        <function-ref name="setSource" scoped="" ref="0x2afe3e6951b0"/>
        <function-ref name="setDestination" scoped="" ref="0x2afe3e695340"/>
        <function-ref name="type" scoped="" ref="0x2afe3e6954d0"/>
        <function-ref name="setType" scoped="" ref="0x2afe3e695660"/>
        <function-ref name="isForMe" scoped="" ref="0x2afe3e6957f0"/>
        <function-ref name="setGroup" scoped="" ref="0x2afe3e695980"/>
        <function-ref name="localGroup" scoped="" ref="0x2afe3e695b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2afe3db6add0" loc="46:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.JoinReqRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2afe3db6add0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3db69180"/>
        <function-ref name="payloadLength" scoped="" ref="0x2afe3db69310"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3db694a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3db69630"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2afe3db697c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2afe3db6a800" loc="45:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.JoinReqRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2afe3db6a800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2afe3db6ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2afe3db69a10" loc="47:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.JoinReqRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2afe3db69a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2afe3db69d90"/>
        <function-ref name="source" scoped="" ref="0x2afe3db68020"/>
        <function-ref name="address" scoped="" ref="0x2afe3db681b0"/>
        <function-ref name="destination" scoped="" ref="0x2afe3db68340"/>
        <function-ref name="setSource" scoped="" ref="0x2afe3db684d0"/>
        <function-ref name="setDestination" scoped="" ref="0x2afe3db68660"/>
        <function-ref name="type" scoped="" ref="0x2afe3db687f0"/>
        <function-ref name="setType" scoped="" ref="0x2afe3db68980"/>
        <function-ref name="isForMe" scoped="" ref="0x2afe3db68b10"/>
        <function-ref name="setGroup" scoped="" ref="0x2afe3db68ca0"/>
        <function-ref name="localGroup" scoped="" ref="0x2afe3db68e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2afe3db65530" loc="49:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2afe3db65530"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3db658b0"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3db65a40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3db65bd0"/>
        <function-ref name="cancel" scoped="" ref="0x2afe3db65d60"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3db64020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2afe3db64270" loc="50:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2afe3db64270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3db645f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2afe3db64780"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3db64910"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3db64aa0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2afe3db64c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2afe3db64e80" loc="51:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2afe3db64e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2afe3db63220"/>
        <function-ref name="source" scoped="" ref="0x2afe3db633b0"/>
        <function-ref name="address" scoped="" ref="0x2afe3db63540"/>
        <function-ref name="destination" scoped="" ref="0x2afe3db636d0"/>
        <function-ref name="setSource" scoped="" ref="0x2afe3db63860"/>
        <function-ref name="setDestination" scoped="" ref="0x2afe3db639f0"/>
        <function-ref name="type" scoped="" ref="0x2afe3db63b80"/>
        <function-ref name="setType" scoped="" ref="0x2afe3db63d10"/>
        <function-ref name="isForMe" scoped="" ref="0x2afe3db62020"/>
        <function-ref name="setGroup" scoped="" ref="0x2afe3db621b0"/>
        <function-ref name="localGroup" scoped="" ref="0x2afe3db62340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2afe3db625d0" loc="52:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2afe3db625d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2afe3db62950"/>
        <function-ref name="noAck" scoped="" ref="0x2afe3db62ae0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2afe3db62c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2afe3e67a140" loc="49:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2afe3e67a140"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3e67a4c0"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3e67a650"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3e67a7e0"/>
        <function-ref name="cancel" scoped="" ref="0x2afe3e67a970"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3e67ab00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2afe3e67ad50" loc="50:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2afe3e67ad50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3e679100"/>
        <function-ref name="payloadLength" scoped="" ref="0x2afe3e679290"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3e679420"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3e6795b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2afe3e679740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2afe3e679990" loc="51:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2afe3e679990"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2afe3e679d10"/>
        <function-ref name="source" scoped="" ref="0x2afe3e678020"/>
        <function-ref name="address" scoped="" ref="0x2afe3e6781b0"/>
        <function-ref name="destination" scoped="" ref="0x2afe3e678340"/>
        <function-ref name="setSource" scoped="" ref="0x2afe3e6784d0"/>
        <function-ref name="setDestination" scoped="" ref="0x2afe3e678660"/>
        <function-ref name="type" scoped="" ref="0x2afe3e6787f0"/>
        <function-ref name="setType" scoped="" ref="0x2afe3e678980"/>
        <function-ref name="isForMe" scoped="" ref="0x2afe3e678b10"/>
        <function-ref name="setGroup" scoped="" ref="0x2afe3e678ca0"/>
        <function-ref name="localGroup" scoped="" ref="0x2afe3e678e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2afe3e677120" loc="52:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2afe3e677120"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2afe3e6774a0"/>
        <function-ref name="noAck" scoped="" ref="0x2afe3e677630"/>
        <function-ref name="wasAcked" scoped="" ref="0x2afe3e6777c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2afe3e66d390" loc="44:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2afe3e66d390"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3e66d710"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3e66d8a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3e66da30"/>
        <function-ref name="cancel" scoped="" ref="0x2afe3e66dbc0"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3e66dd50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2afe3e66c060" loc="46:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2afe3e66c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3e66c3e0"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3e66c570"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3e66c700"/>
        <function-ref name="cancel" scoped="" ref="0x2afe3e66c890"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3e66ca20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2afe3e66cc70" loc="47:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2afe3e66cc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2afe3e66a020"/>
        <function-ref name="source" scoped="" ref="0x2afe3e66a1b0"/>
        <function-ref name="address" scoped="" ref="0x2afe3e66a340"/>
        <function-ref name="destination" scoped="" ref="0x2afe3e66a4d0"/>
        <function-ref name="setSource" scoped="" ref="0x2afe3e66a660"/>
        <function-ref name="setDestination" scoped="" ref="0x2afe3e66a7f0"/>
        <function-ref name="type" scoped="" ref="0x2afe3e66a980"/>
        <function-ref name="setType" scoped="" ref="0x2afe3e66ab10"/>
        <function-ref name="isForMe" scoped="" ref="0x2afe3e66aca0"/>
        <function-ref name="setGroup" scoped="" ref="0x2afe3e66ae30"/>
        <function-ref name="localGroup" scoped="" ref="0x2afe3e669020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2afe3db5f710" loc="46:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.JoinAnsRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2afe3db5f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3db5fa90"/>
        <function-ref name="payloadLength" scoped="" ref="0x2afe3db5fc20"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3db5fdb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3db5d020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2afe3db5d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2afe3db5f140" loc="45:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.JoinAnsRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2afe3db5f140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2afe3db5f4c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2afe3db5d400" loc="47:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.JoinAnsRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2afe3db5d400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2afe3db5d780"/>
        <function-ref name="source" scoped="" ref="0x2afe3db5d910"/>
        <function-ref name="address" scoped="" ref="0x2afe3db5daa0"/>
        <function-ref name="destination" scoped="" ref="0x2afe3db5dc30"/>
        <function-ref name="setSource" scoped="" ref="0x2afe3db5ddc0"/>
        <function-ref name="setDestination" scoped="" ref="0x2afe3db5c020"/>
        <function-ref name="type" scoped="" ref="0x2afe3db5c1b0"/>
        <function-ref name="setType" scoped="" ref="0x2afe3db5c340"/>
        <function-ref name="isForMe" scoped="" ref="0x2afe3db5c4d0"/>
        <function-ref name="setGroup" scoped="" ref="0x2afe3db5c660"/>
        <function-ref name="localGroup" scoped="" ref="0x2afe3db5c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2afe3db5ae60" loc="49:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2afe3db5ae60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3db59210"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3db593a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3db59530"/>
        <function-ref name="cancel" scoped="" ref="0x2afe3db596c0"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3db59850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2afe3db59aa0" loc="50:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2afe3db59aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3db59e20"/>
        <function-ref name="payloadLength" scoped="" ref="0x2afe3db58020"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3db581b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3db58340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2afe3db584d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2afe3db58720" loc="51:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2afe3db58720"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2afe3db58aa0"/>
        <function-ref name="source" scoped="" ref="0x2afe3db58c30"/>
        <function-ref name="address" scoped="" ref="0x2afe3db58dc0"/>
        <function-ref name="destination" scoped="" ref="0x2afe3db57020"/>
        <function-ref name="setSource" scoped="" ref="0x2afe3db571b0"/>
        <function-ref name="setDestination" scoped="" ref="0x2afe3db57340"/>
        <function-ref name="type" scoped="" ref="0x2afe3db574d0"/>
        <function-ref name="setType" scoped="" ref="0x2afe3db57660"/>
        <function-ref name="isForMe" scoped="" ref="0x2afe3db577f0"/>
        <function-ref name="setGroup" scoped="" ref="0x2afe3db57980"/>
        <function-ref name="localGroup" scoped="" ref="0x2afe3db57b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2afe3db57da0" loc="52:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2afe3db57da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2afe3dbd9180"/>
        <function-ref name="noAck" scoped="" ref="0x2afe3dbd9310"/>
        <function-ref name="wasAcked" scoped="" ref="0x2afe3dbd94a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2afe3e64f4c0" loc="49:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2afe3e64f4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3e64f840"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3e64f9d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3e64fb60"/>
        <function-ref name="cancel" scoped="" ref="0x2afe3e64fcf0"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3e64fe80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2afe3e64e0f0" loc="50:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2afe3e64e0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3e64e470"/>
        <function-ref name="payloadLength" scoped="" ref="0x2afe3e64e600"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3e64e790"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3e64e920"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2afe3e64eab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2afe3e64ed00" loc="51:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2afe3e64ed00"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2afe3e64d0a0"/>
        <function-ref name="source" scoped="" ref="0x2afe3e64d230"/>
        <function-ref name="address" scoped="" ref="0x2afe3e64d3c0"/>
        <function-ref name="destination" scoped="" ref="0x2afe3e64d550"/>
        <function-ref name="setSource" scoped="" ref="0x2afe3e64d6e0"/>
        <function-ref name="setDestination" scoped="" ref="0x2afe3e64d870"/>
        <function-ref name="type" scoped="" ref="0x2afe3e64da00"/>
        <function-ref name="setType" scoped="" ref="0x2afe3e64db90"/>
        <function-ref name="isForMe" scoped="" ref="0x2afe3e64dd20"/>
        <function-ref name="setGroup" scoped="" ref="0x2afe3e64c020"/>
        <function-ref name="localGroup" scoped="" ref="0x2afe3e64c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2afe3e64c440" loc="52:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2afe3e64c440"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2afe3e64c7c0"/>
        <function-ref name="noAck" scoped="" ref="0x2afe3e64c950"/>
        <function-ref name="wasAcked" scoped="" ref="0x2afe3e64cae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2afe3e6f1640" loc="44:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.DataSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2afe3e6f1640"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3e6f19c0"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3e6f1b50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3e6f1ce0"/>
        <function-ref name="cancel" scoped="" ref="0x2afe3e6f1e70"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3e6f0030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2afe3e6f02e0" loc="46:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.DataSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2afe3e6f02e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afe3e6f0660"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3e6f07f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3e6f0980"/>
        <function-ref name="cancel" scoped="" ref="0x2afe3e6f0b10"/>
        <function-ref name="sendDone" scoped="" ref="0x2afe3e6f0ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2afe3e6ef020" loc="47:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.DataSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2afe3e6ef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2afe3e6ef3a0"/>
        <function-ref name="source" scoped="" ref="0x2afe3e6ef530"/>
        <function-ref name="address" scoped="" ref="0x2afe3e6ef6c0"/>
        <function-ref name="destination" scoped="" ref="0x2afe3e6ef850"/>
        <function-ref name="setSource" scoped="" ref="0x2afe3e6ef9e0"/>
        <function-ref name="setDestination" scoped="" ref="0x2afe3e6efb70"/>
        <function-ref name="type" scoped="" ref="0x2afe3e6efd00"/>
        <function-ref name="setType" scoped="" ref="0x2afe3e6ee020"/>
        <function-ref name="isForMe" scoped="" ref="0x2afe3e6ee1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2afe3e6ee340"/>
        <function-ref name="localGroup" scoped="" ref="0x2afe3e6ee4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlotScheduler" ref="0x2afe3dbd5240" loc="4:SlotSchedulerC.nc">
      <component-ref qname="SlotSchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SlotScheduler" scoped="" ref="0x2afe3dbd5240"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlotScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="slotStarted" scoped="" ref="0x2afe3dbd55c0"/>
        <function-ref name="getScheduledSlot" scoped="" ref="0x2afe3dbd5750"/>
        <function-ref name="syncEpochTime" scoped="" ref="0x2afe3dbd58e0"/>
        <function-ref name="slotEnded" scoped="" ref="0x2afe3dbd5a70"/>
        <function-ref name="start" scoped="" ref="0x2afe3dbd5c00"/>
        <function-ref name="getEpochTime" scoped="" ref="0x2afe3dbd5d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EndSlotTimer" ref="0x2afe3dbc6670" loc="22:SlotSchedulerP.nc">
      <component-ref qname="SlotSchedulerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EndSlotTimer" scoped="" ref="0x2afe3dbc6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afe3dbc2c40"/>
        <function-ref name="fired" scoped="" ref="0x2afe3dbc31e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2afe3dbc2020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2afe3dbc3ae0"/>
        <function-ref name="getdt" scoped="" ref="0x2afe3dbc1590"/>
        <function-ref name="gett0" scoped="" ref="0x2afe3dbc1110"/>
        <function-ref name="isRunning" scoped="" ref="0x2afe3dbc3660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2afe3dbc5390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2afe3dbc2630"/>
        <function-ref name="startOneShot" scoped="" ref="0x2afe3dbc5860"/>
        <function-ref name="stop" scoped="" ref="0x2afe3dbc5d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartSlotTimer" ref="0x2afe3dbcb020" loc="21:SlotSchedulerP.nc">
      <component-ref qname="SlotSchedulerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartSlotTimer" scoped="" ref="0x2afe3dbcb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afe3dbc7630"/>
        <function-ref name="fired" scoped="" ref="0x2afe3dbcaa60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2afe3dbc8920"/>
        <function-ref name="isOneShot" scoped="" ref="0x2afe3dbc84a0"/>
        <function-ref name="getdt" scoped="" ref="0x2afe3dbc6020"/>
        <function-ref name="gett0" scoped="" ref="0x2afe3dbc7ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x2afe3dbc8020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2afe3dbcbc10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2afe3dbc7020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2afe3dbca110"/>
        <function-ref name="stop" scoped="" ref="0x2afe3dbca5e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EpochTimer" ref="0x2afe3dbd19e0" loc="20:SlotSchedulerP.nc">
      <component-ref qname="SlotSchedulerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EpochTimer" scoped="" ref="0x2afe3dbd19e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afe3dbcc020"/>
        <function-ref name="fired" scoped="" ref="0x2afe3dbcf510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2afe3dbcd300"/>
        <function-ref name="isOneShot" scoped="" ref="0x2afe3dbcfe10"/>
        <function-ref name="getdt" scoped="" ref="0x2afe3dbcc920"/>
        <function-ref name="gett0" scoped="" ref="0x2afe3dbcc4a0"/>
        <function-ref name="isRunning" scoped="" ref="0x2afe3dbcf990"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2afe3dbd0670"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2afe3dbcd910"/>
        <function-ref name="startOneShot" scoped="" ref="0x2afe3dbd0b40"/>
        <function-ref name="stop" scoped="" ref="0x2afe3dbcf090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlotScheduler" ref="0x2afe3dbd4960" loc="17:SlotSchedulerP.nc">
      <component-ref qname="SlotSchedulerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SlotScheduler" scoped="" ref="0x2afe3dbd4960"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlotScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="slotStarted" scoped="" ref="0x2afe3dbd4ce0"/>
        <function-ref name="getScheduledSlot" scoped="" ref="0x2afe3dbd4e70"/>
        <function-ref name="syncEpochTime" scoped="" ref="0x2afe3dbd1030"/>
        <function-ref name="slotEnded" scoped="" ref="0x2afe3dbd11c0"/>
        <function-ref name="start" scoped="" ref="0x2afe3dbd1350"/>
        <function-ref name="getEpochTime" scoped="" ref="0x2afe3dbd14e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer32khz" ref="0x2afe3dbaa680" loc="3:Timer32C.nc">
      <component-ref qname="SlotSchedulerC.EpochTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer32khz" scoped="" ref="0x2afe3dbaa680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afe3dbf8c40"/>
        <function-ref name="fired" scoped="" ref="0x2afe3dbf91e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2afe3dbf8020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2afe3dbf9ae0"/>
        <function-ref name="getdt" scoped="" ref="0x2afe3dbf6590"/>
        <function-ref name="gett0" scoped="" ref="0x2afe3dbf6110"/>
        <function-ref name="isRunning" scoped="" ref="0x2afe3dbf9660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2afe3dbfa390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2afe3dbf8630"/>
        <function-ref name="startOneShot" scoped="" ref="0x2afe3dbfa860"/>
        <function-ref name="stop" scoped="" ref="0x2afe3dbfad30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer32khz" ref="0x2afe3dba1020" loc="3:Timer32P.nc">
      <component-ref qname="Timer32P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer32khz" scoped="" ref="0x2afe3dba1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afe3db9d630"/>
        <function-ref name="fired" scoped="" ref="0x2afe3dba0a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2afe3db9e920"/>
        <function-ref name="isOneShot" scoped="" ref="0x2afe3db9e4a0"/>
        <function-ref name="getdt" scoped="" ref="0x2afe3db9c020"/>
        <function-ref name="gett0" scoped="" ref="0x2afe3db9dab0"/>
        <function-ref name="isRunning" scoped="" ref="0x2afe3db9e020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2afe3dba1c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2afe3db9d020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2afe3dba0110"/>
        <function-ref name="stop" scoped="" ref="0x2afe3dba05e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2afe3db9aa00" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="Timer32P.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2afe3db9aa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afe3dc1b2a0"/>
        <function-ref name="fired" scoped="" ref="0x2afe3db982a0"/>
        <function-ref name="startAt" scoped="" ref="0x2afe3db98c20"/>
        <function-ref name="isRunning" scoped="" ref="0x2afe3db98760"/>
        <function-ref name="getAlarm" scoped="" ref="0x2afe3dc1b760"/>
        <function-ref name="start" scoped="" ref="0x2afe3db99890"/>
        <function-ref name="stop" scoped="" ref="0x2afe3db99da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afe3db9a1b0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="Timer32P.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afe3db9a1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afe3db9a530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2afe3e6d34f0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2afe3e6d34f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afe3e6d1db0"/>
        <function-ref name="fired" scoped="" ref="0x2afe3e6d2da0"/>
        <function-ref name="startAt" scoped="" ref="0x2afe3e6d1760"/>
        <function-ref name="isRunning" scoped="" ref="0x2afe3e6d12a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2afe3e6d02a0"/>
        <function-ref name="start" scoped="" ref="0x2afe3e6d23d0"/>
        <function-ref name="stop" scoped="" ref="0x2afe3e6d28e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afe3e6d5c40" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afe3e6d5c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afe3e6d3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x2afe3e6bbda0" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2afe3e6bbda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afe3e6ba180"/>
        <function-ref name="setEvent" scoped="" ref="0x2afe3e6ba310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2afe3e6ba4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2afe3e6ba630"/>
        <function-ref name="fired" scoped="" ref="0x2afe3e6ba7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x2afe3e6bd450" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2afe3e6bd450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3e6bd7d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2afe3e6bd960"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afe3e6bdaf0"/>
        <function-ref name="get" scoped="" ref="0x2afe3e6bdc80"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afe3e6bde10"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afe3e6bc020"/>
        <function-ref name="getMode" scoped="" ref="0x2afe3e6bc1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afe3e6bc340"/>
        <function-ref name="overflow" scoped="" ref="0x2afe3e6bc4d0"/>
        <function-ref name="setMode" scoped="" ref="0x2afe3e6bc660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2afe3e6bc7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x2afe3e6bca80" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2afe3e6bca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2afe3e6bce00"/>
        <function-ref name="getControl" scoped="" ref="0x2afe3e6bb020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afe3e6bb1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2afe3e6bb340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2afe3e6bb4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afe3e6bb660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2afe3e6bb7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2afe3e6bb980"/>
        <function-ref name="setControl" scoped="" ref="0x2afe3e6bbb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x2afe3e6b1a80" loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2afe3e6b1a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afe3e6b1e00"/>
        <function-ref name="setEvent" scoped="" ref="0x2afe3e6b0020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2afe3e6b01b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2afe3e6b0340"/>
        <function-ref name="fired" scoped="" ref="0x2afe3e6b04d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2afe3e6b3190" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2afe3e6b3190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3e6b3510"/>
        <function-ref name="setClockSource" scoped="" ref="0x2afe3e6b36a0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afe3e6b3830"/>
        <function-ref name="get" scoped="" ref="0x2afe3e6b39c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afe3e6b3b50"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afe3e6b3ce0"/>
        <function-ref name="getMode" scoped="" ref="0x2afe3e6b3e70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afe3e6b2030"/>
        <function-ref name="overflow" scoped="" ref="0x2afe3e6b21c0"/>
        <function-ref name="setMode" scoped="" ref="0x2afe3e6b2350"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2afe3e6b24e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2afe3e6b7020" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2afe3e6b7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afe3e6b4870"/>
        <function-ref name="fired" scoped="" ref="0x2afe3e6b6840"/>
        <function-ref name="startAt" scoped="" ref="0x2afe3e6b4220"/>
        <function-ref name="isRunning" scoped="" ref="0x2afe3e6b6d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x2afe3e6b4d30"/>
        <function-ref name="start" scoped="" ref="0x2afe3e6b7e30"/>
        <function-ref name="stop" scoped="" ref="0x2afe3e6b6380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afe3e6b8660" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afe3e6b8660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afe3e6b89e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x2afe3e6b2770" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2afe3e6b2770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2afe3e6b2af0"/>
        <function-ref name="getControl" scoped="" ref="0x2afe3e6b2c80"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afe3e6b2e10"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2afe3e6b1020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2afe3e6b11b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afe3e6b1340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2afe3e6b14d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2afe3e6b1660"/>
        <function-ref name="setControl" scoped="" ref="0x2afe3e6b17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2afe3e6ce890" loc="61:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2afe3e6ce890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afe3e6ca0d0"/>
        <function-ref name="fired" scoped="" ref="0x2afe3e6cb0d0"/>
        <function-ref name="startAt" scoped="" ref="0x2afe3e6cba50"/>
        <function-ref name="isRunning" scoped="" ref="0x2afe3e6cb590"/>
        <function-ref name="getAlarm" scoped="" ref="0x2afe3e6ca590"/>
        <function-ref name="start" scoped="" ref="0x2afe3e6cd6e0"/>
        <function-ref name="stop" scoped="" ref="0x2afe3e6cdbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2afe3e6c70a0" loc="73:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x2afe3e6c70a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afe3e6c4b30"/>
        <function-ref name="fired" scoped="" ref="0x2afe3e6c59f0"/>
        <function-ref name="startAt" scoped="" ref="0x2afe3e6c44e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2afe3e6c4020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2afe3e6c3020"/>
        <function-ref name="start" scoped="" ref="0x2afe3e6c5020"/>
        <function-ref name="stop" scoped="" ref="0x2afe3e6c5530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2afe3e6cac00" loc="68:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2afe3e6cac00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afe3e6c9a80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afe3e6c84e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afe3e6c8020"/>
        <function-ref name="overflow" scoped="" ref="0x2afe3e6c89a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2afe3dc0fcc0" loc="74:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="Timer32P.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x2afe3dc0fcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2afe3dc0e0a0"/>
        <function-ref name="runTask" scoped="" ref="0x2afe3dc0e230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2afe3dc13b10" loc="49:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="Timer32P.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2afe3dc13b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afe3dc0f390"/>
        <function-ref name="fired" scoped="" ref="0x2afe3dc11360"/>
        <function-ref name="startAt" scoped="" ref="0x2afe3dc11ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x2afe3dc11820"/>
        <function-ref name="getAlarm" scoped="" ref="0x2afe3dc0f850"/>
        <function-ref name="start" scoped="" ref="0x2afe3dc12970"/>
        <function-ref name="stop" scoped="" ref="0x2afe3dc12e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2afe3dc18470" loc="48:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="Timer32P.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2afe3dc18470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afe3dc14a20"/>
        <function-ref name="fired" scoped="" ref="0x2afe3dc16020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2afe3dc16da0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2afe3dc16920"/>
        <function-ref name="getdt" scoped="" ref="0x2afe3dc134a0"/>
        <function-ref name="gett0" scoped="" ref="0x2afe3dc13020"/>
        <function-ref name="isRunning" scoped="" ref="0x2afe3dc164a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2afe3dc17090"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2afe3dc14410"/>
        <function-ref name="startOneShot" scoped="" ref="0x2afe3dc17560"/>
        <function-ref name="stop" scoped="" ref="0x2afe3dc17a30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2afe3dc00650" loc="71:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="Timer32P.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x2afe3dc00650"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2afe3dc009d0"/>
        <function-ref name="runTask" scoped="" ref="0x2afe3dc00b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2afe3dc053b0" loc="49:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="Timer32P.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x2afe3dc053b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afe3dc01870"/>
        <function-ref name="fired" scoped="" ref="0x2afe3dc04e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2afe3dc02c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x2afe3dc02780"/>
        <function-ref name="getdt" scoped="" ref="0x2afe3dc001e0"/>
        <function-ref name="gett0" scoped="" ref="0x2afe3dc01cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x2afe3dc02300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2afe3dc04020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2afe3dc01260"/>
        <function-ref name="startOneShot" scoped="" ref="0x2afe3dc044f0"/>
        <function-ref name="stop" scoped="" ref="0x2afe3dc049c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2afe3dc0cd70" loc="48:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="Timer32P.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2afe3dc0cd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afe3dc06470"/>
        <function-ref name="fired" scoped="" ref="0x2afe3dc0a9b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2afe3dc087c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2afe3dc08320"/>
        <function-ref name="getdt" scoped="" ref="0x2afe3dc06db0"/>
        <function-ref name="gett0" scoped="" ref="0x2afe3dc06910"/>
        <function-ref name="isRunning" scoped="" ref="0x2afe3dc0ae50"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2afe3dc0b9a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2afe3dc08df0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2afe3dc0a020"/>
        <function-ref name="stop" scoped="" ref="0x2afe3dc0a510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer32khz" ref="0x2afe3dbf40f0" loc="3:Timer32C.nc">
      <component-ref qname="SlotSchedulerC.StartSlotTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer32khz" scoped="" ref="0x2afe3dbf40f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afe3dbf0630"/>
        <function-ref name="fired" scoped="" ref="0x2afe3dbf3b70"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2afe3dbf2920"/>
        <function-ref name="isOneShot" scoped="" ref="0x2afe3dbf24a0"/>
        <function-ref name="getdt" scoped="" ref="0x2afe3dbef020"/>
        <function-ref name="gett0" scoped="" ref="0x2afe3dbf0ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x2afe3dbf2020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2afe3dbf4ce0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2afe3dbf0020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2afe3dbf3220"/>
        <function-ref name="stop" scoped="" ref="0x2afe3dbf36f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer32khz" ref="0x2afe3dbeeb40" loc="3:Timer32C.nc">
      <component-ref qname="SlotSchedulerC.EndSlotTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer32khz" scoped="" ref="0x2afe3dbeeb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afe3c4c5d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2afe3c4c4180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afe3dbe9110"/>
        <function-ref name="fired" scoped="" ref="0x2afe3dbec5b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2afe3dbeb4a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2afe3dbeb020"/>
        <function-ref name="getdt" scoped="" ref="0x2afe3dbe9a10"/>
        <function-ref name="gett0" scoped="" ref="0x2afe3dbe9590"/>
        <function-ref name="isRunning" scoped="" ref="0x2afe3dbeca30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2afe3dbed750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2afe3dbebab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2afe3dbedc20"/>
        <function-ref name="stop" scoped="" ref="0x2afe3dbec130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2afe3dbe4c20" loc="46:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.DataRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2afe3dbe4c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afe3dbe3020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2afe3dbe31b0"/>
        <function-ref name="getPayload" scoped="" ref="0x2afe3dbe3340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afe3dbe34d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2afe3dbe3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2afe3dbe4650" loc="45:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.DataRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2afe3dbe4650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2afe3dbe49d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2afe3dbe38b0" loc="47:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.DataRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2afe3dbe38b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2afe3dbe3c30"/>
        <function-ref name="source" scoped="" ref="0x2afe3dbe3dc0"/>
        <function-ref name="address" scoped="" ref="0x2afe3dbe2020"/>
        <function-ref name="destination" scoped="" ref="0x2afe3dbe21b0"/>
        <function-ref name="setSource" scoped="" ref="0x2afe3dbe2340"/>
        <function-ref name="setDestination" scoped="" ref="0x2afe3dbe24d0"/>
        <function-ref name="type" scoped="" ref="0x2afe3dbe2660"/>
        <function-ref name="setType" scoped="" ref="0x2afe3dbe27f0"/>
        <function-ref name="isForMe" scoped="" ref="0x2afe3dbe2980"/>
        <function-ref name="setGroup" scoped="" ref="0x2afe3dbe2b10"/>
        <function-ref name="localGroup" scoped="" ref="0x2afe3dbe2ca0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="AMSend" loc="58:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2afe3c2b1a60" loc="80:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2afe3c2ad970"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2afe3c2b1110" loc="80:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2afe3c2ad970"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2afe3c2b1490" loc="80:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2afe3c2b17c0" loc="80:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2afe3c2cc620" loc="135:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2afe3c2cc020" loc="135:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2afe3c2cc350" loc="135:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2afe3c2cb6d0" loc="123:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2afe3c2cf2a0" loc="96:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2afe3c2cf020" loc="96:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2afe3c2ce7f0" loc="110:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2afe3c2ce210" loc="110:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2afe3c2ce560" loc="110:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/zdenial/tinyos/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/zdenial/tinyos/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2afe3c2bbd40" loc="60:/home/zdenial/tinyos/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/zdenial/tinyos/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x2afe3c2b60b0" loc="113:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2afe3c2b7e00" loc="113:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x2afe3c2b45c0" loc="138:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2afe3c2b4340" loc="138:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2afe3c2b7420" loc="104:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2afe3c2b6900" loc="130:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/zdenial/tinyos/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2afe3c2c76e0" loc="78:/home/zdenial/tinyos/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
              <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2afe3c2b9d20" loc="78:/home/zdenial/tinyos/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x2afe3c2c70d0" loc="78:/home/zdenial/tinyos/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2afe3c2c7400" loc="78:/home/zdenial/tinyos/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/home/zdenial/tinyos/tos/interfaces/Init.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2afe3c2d8420" loc="62:/home/zdenial/tinyos/tos/interfaces/Init.nc">
        <documentation loc="53:/home/zdenial/tinyos/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x2afe3c30b420" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x2afe3c30d700" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x2afe3c30cce0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x2afe3c30d020" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x2afe3c30de70" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x2afe3c30f0e0" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x2afe3c30f7c0" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x2afe3c30c5c0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/zdenial/tinyos/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/home/zdenial/tinyos/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2afe3beceb70" loc="62:/home/zdenial/tinyos/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/zdenial/tinyos/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2afe3be86c00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x2afe3c35f020" loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x2afe3c360cc0" loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x2afe3c363390" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2afe3c304ec0"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x2afe3c303940"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x2afe3c35f890" loc="57:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x2afe3c35e7b0" loc="59:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x2afe3c360560" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x2afe3c35e020" loc="58:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x2afe3c363b30" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x2afe3c362350" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x2afe3c362da0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2afe3c304ec0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x2afe3c303940"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2afe3c362b20" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2afe3c304ec0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x2afe3c303940"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x2afe3c3740e0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x2afe3c371630" loc="79:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x2afe3c3713b0" loc="79:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2afe3c3702a0" loc="86:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="81:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2afe3c370020" loc="86:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2afe3c372be0" loc="68:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="65:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2afe3c3723e0" loc="63:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x2afe3c374a90" loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x2afe3c374810" loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x2afe3c3593e0" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x2afe3c359d60" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2afe3c359ae0" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x2afe3c357790" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x2afe3c357510" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x2afe3c3562a0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x2afe3c356020" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2afe3c356990" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2afe3c347a80" loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x2afe3c344350" loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x2afe3c3440d0" loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x2afe3c3461f0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2afe3c34dcb0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x2afe3c346930" loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2afe3c34ac10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x2afe3c347390" loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2afe3c34a4d0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2afe3c348350" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x2afe3c348c60" loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2afe3c3489e0" loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x2afe3c344d60" loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x2afe3c344ae0" loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2afe3c3909f0" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/home/zdenial/tinyos/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2afe3c2182b0" loc="76:/home/zdenial/tinyos/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/home/zdenial/tinyos/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/zdenial/tinyos/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/zdenial/tinyos/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2afe3c00c420" loc="52:/home/zdenial/tinyos/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/zdenial/tinyos/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2afe3bdc8020" loc="57:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2afe3bdc7020" loc="72:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2afe3bdc8790" loc="65:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/zdenial/tinyos/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2afe3bdda020" loc="67:/home/zdenial/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2afe3bdda870" loc="75:/home/zdenial/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/zdenial/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TimeSyncAMSend" loc="44:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2afe3c4c8020" loc="44:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <interfacedef-ref qname="TimeSyncAMSend"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2afe3c4c8020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2afe3c4c8260" loc="44:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <interfacedef-ref qname="TimeSyncAMSend"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2afe3c4c8260"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="send" ref="0x2afe3c4c7990" loc="64:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="46:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; This command sends a regular message just like &#60;tt>AMSend.send&#60;/tt>, but&#10; it also performs sender-receiver time synchronization.</short>
          <long>&#10; This command sends a regular message just like &#60;tt>AMSend.send&#60;/tt>, but&#10; it also performs sender-receiver time synchronization. The &#60;tt>event_time&#60;/tt>&#10; parameter holds the time of some event as expressed in the local clock of&#10; the sender. The receiver can obtain the time of this event (expressed in its&#10; own local time) via the &#60;tt>TimeSyncPacket&#60;/tt> interface.&#10;&#10; @param addr         address to which to send the packet&#10; @param msg          the packet&#10; @param len          the length of the data in the packet payload&#10; @param event_time&#9;  the synchronization point to be transfered with the message&#10; @return             SUCCESS if the request to send succeeded and a&#10;                     sendDone will be signaled later, EBUSY if the&#10;                     abstraction cannot send now but will be able to&#10;                     later, or FAIL if the communication layer is not&#10;                     in a state that can send (e.g., off).&#10; @see sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2afe3c2ad970"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2afe3c4c8260"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2afe3c4c8b30" loc="64:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2afe3c2ad970"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2afe3c4c7020" loc="64:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2afe3c4c7350" loc="64:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </variable>
          <variable name="event_time" ref="0x2afe3c4c76e0" loc="64:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2afe3c4c8260"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2afe3c4ea020" loc="114:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="105:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2afe3c4eb990" loc="114:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2afe3c4ebcc0" loc="114:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2afe3c4eb120" loc="103:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="95:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2afe3c4ed7d0" loc="80:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="66:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the&#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a&#10; sendFailed event, and never a sendSucceeded event.&#10;&#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2afe3c4ed550" loc="80:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2afe3c4ec790" loc="93:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="82:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; Signaled in response to an accepted send request.</short>
          <long>&#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2afe3c4ec1b0" loc="93:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2afe3c4ec500" loc="93:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TimeSyncPacket" loc="37:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x2afe3c4e4210" loc="37:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
          <interfacedef-ref qname="TimeSyncPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2afe3c4e4210"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2afe3c4e4450" loc="37:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
          <interfacedef-ref qname="TimeSyncPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2afe3c4e4450"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="isValid" ref="0x2afe3c4e3020" loc="48:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
          <short>&#10; Returns TRUE if the value returned by &#60;tt>getTime&#60;/tt> can be trusted.</short>
          <long>&#10; Returns TRUE if the value returned by &#60;tt>getTime&#60;/tt> can be trusted.&#10; Under certain circumstances the received message cannot be properly&#10; time stamped, so the sender-receiver synchronization cannot be finished&#10; on the receiver side. In this case, this command returns FALSE.&#10; This command MUST BE called only on the receiver side and only for&#10; messages transmitted via the TimeSyncSend interface. It is recommended&#10; that this command be called from the receive event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2afe3c4e4d50" loc="48:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="eventTime" ref="0x2afe3c4e3c50" loc="58:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
        <documentation loc="50:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
          <short>&#10; This command should be called by the receiver of a message.</short>
          <long>&#10; This command should be called by the receiver of a message. The time&#10; of the synchronization event is returned as expressed in the local&#10; clock of the caller. This command MUST BE called only on the receiver&#10; side and only for messages transmitted via the TimeSyncSend interface.&#10; It is recommended that this command be called from the receive event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2afe3c4e4450"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2afe3c4e39d0" loc="58:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x2afe3c4cc390" loc="65:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2afe3c4cc110" loc="65:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x2afe3c4d0410" loc="46:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2afe3c4d6da0" loc="46:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x2afe3c4d0180" loc="46:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x2afe3c4cd350" loc="59:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2afe3c4cd0d0" loc="59:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x2afe3c4cf830" loc="53:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2afe3c4cf210" loc="53:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x2afe3c4cf5a0" loc="53:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x2afe3c4cb390" loc="71:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2afe3c4cb110" loc="71:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x2afe3c4d7840" loc="177:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2afe3c2ad590"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2afe3c4d75c0" loc="177:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x2afe3c4b9440" loc="88:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x2afe3c2ad970"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2afe3c4b91c0" loc="88:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x2afe3c4bb8a0" loc="68:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x2afe3c2ad970"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2afe3c4ba390" loc="78:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x2afe3c2ad970"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2afe3c4ba110" loc="78:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2afe3c4b5dc0" loc="121:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2afe3c2ad970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2afe3c4b57e0" loc="121:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2afe3c4b5b30" loc="121:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2afe3c2ad970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2afe3c4b7880" loc="103:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2afe3c2ad970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2afe3c4b72a0" loc="103:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2afe3c4b75f0" loc="103:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2afe3c2ad970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x2afe3c4b22e0" loc="147:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2afe3c2ad1b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2afe3c4b2060" loc="147:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x2afe3c4d8680" loc="162:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2afe3c2ad1b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2afe3c4d80d0" loc="162:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x2afe3c4d83f0" loc="162:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2afe3c2ad1b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2afe3c4b30b0" loc="136:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2afe3c4b4e00" loc="136:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x2afe3c4d5d00" loc="187:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2afe3c2ad590"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2afe3c4d5720" loc="187:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2afe3c4d5a70" loc="187:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2afe3c2ad590"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x2afe3c4d3b50" loc="195:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2afe3c2ad590"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlotScheduler" loc="1:SlotScheduler.nc">
      <function event="" provided="0" name="slotStarted" ref="0x2afe3c500970" loc="6:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="slotId" ref="0x2afe3c5006f0" loc="6:SlotScheduler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduledSlot" ref="0x2afe3c500020" loc="5:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="syncEpochTime" ref="0x2afe3c4da020" loc="3:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reference_time" ref="0x2afe3c4dbd70" loc="3:SlotScheduler.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="slotEnded" ref="0x2afe3c4ff350" loc="7:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="slotId" ref="0x2afe3c4ff0d0" loc="7:SlotScheduler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2afe3c4db620" loc="2:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="epoch_time" ref="0x2afe3c4db020" loc="2:SlotScheduler.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
            </type-int>
          </variable>
          <variable name="firstSlot" ref="0x2afe3c4db390" loc="2:SlotScheduler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getEpochTime" ref="0x2afe3c4da770" loc="4:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/home/zdenial/tinyos/tos/interfaces/StdControl.nc">
      <documentation loc="72:/home/zdenial/tinyos/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2afe3c540830" loc="95:/home/zdenial/tinyos/tos/interfaces/StdControl.nc">
        <documentation loc="88:/home/zdenial/tinyos/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2afe3c569070" loc="105:/home/zdenial/tinyos/tos/interfaces/StdControl.nc">
        <documentation loc="97:/home/zdenial/tinyos/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:/home/zdenial/tinyos/tos/lib/printf/Putchar.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TINYOS_OS_DIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0x2afe3c560610" loc="49:/home/zdenial/tinyos/tos/lib/printf/Putchar.nc">
        <documentation loc="46:/home/zdenial/tinyos/tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x2afe3c560390" loc="49:/home/zdenial/tinyos/tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2afe3c567a40" loc="46:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2afe3c5677c0" loc="46:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2afe3c5638c0" loc="56:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2afe3c5632d0" loc="56:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x2afe3c563630" loc="56:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2afe3c57b2f0" loc="48:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2afe3c57ecd0" loc="48:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2afe3c57b060" loc="48:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x2afe3c576020" loc="79:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="74:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2afe3c579ce0" loc="79:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2afe3c576df0" loc="90:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="81:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2afe3c576820" loc="90:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2afe3c576b60" loc="90:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x2afe3c578bc0" loc="65:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="59:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x2afe3c574720" loc="99:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="92:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2afe3c575dc0" loc="99:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2afe3c574130" loc="99:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2afe3c574480" loc="99:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x2afe3c579510" loc="72:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2afe3c57abb0" loc="57:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="50:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2afe3c57a280" loc="57:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2afe3c57a5c0" loc="57:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2afe3c57a910" loc="57:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/zdenial/tinyos/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x2afe3c5c47f0" loc="53:/home/zdenial/tinyos/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/zdenial/tinyos/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2afe3c5c3190" loc="61:/home/zdenial/tinyos/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x2afe3c5c0230" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2afe3c5bd920"/>
              <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x2afe3c5bdd40"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2afe3c5c6020" loc="120:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x2afe3c5c8020" loc="97:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2afe3c5c9540" loc="88:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2afe3c5c8810" loc="102:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2afe3c5c6a80" loc="128:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/zdenial/tinyos/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/zdenial/tinyos/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x2afe3c5e5840" loc="65:/home/zdenial/tinyos/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/zdenial/tinyos/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x2afe3c5e5020" loc="59:/home/zdenial/tinyos/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x2afe3c5dd2e0" loc="54:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2afe3c5dd060" loc="54:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x2afe3c5e08a0" loc="49:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x2afe3c610af0" loc="213:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x2afe3c5ef790" loc="143:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x2afe3c5fc390" loc="50:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2afe3c56d7a0"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x2afe3c56b020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2afe3c5fc110" loc="50:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2afe3c56d7a0"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x2afe3c56b020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x2afe3c5f27b0" loc="123:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x2afe3c5f9880" loc="70:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2afe3c5926f0"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x2afe3c591020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2afe3c5f9600" loc="70:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2afe3c5926f0"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x2afe3c591020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x2afe3c615e70" loc="180:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x2afe3c611480" loc="197:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x2afe3c5fbe00" loc="65:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2afe3c56a670"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x2afe3c56ae00"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x2afe3c5f80e0" loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2afe3c5926f0"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x2afe3c591020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x2afe3c5f5dc0" loc="97:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x2afe3c5f5b40" loc="97:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x2afe3c5f5420" loc="95:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x2afe3c615740" loc="179:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x2afe3c5fb610" loc="60:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2afe3c56a670"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x2afe3c56ae00"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2afe3c5fb390" loc="60:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2afe3c56a670"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x2afe3c56ae00"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x2afe3c5f7270" loc="85:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x2afe3c6135d0" loc="181:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x2afe3c5f7c50" loc="90:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x2afe3c5f79d0" loc="90:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x2afe3c5f3730" loc="113:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x2afe3c5f2020" loc="118:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x2afe3c616840" loc="177:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x2afe3c5ed790" loc="163:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x2afe3c5f07e0" loc="133:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x2afe3c615020" loc="178:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x2afe3c5ee020" loc="148:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x2afe3c613cf0" loc="182:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x2afe3c5f45f0" loc="103:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x2afe3c57c730"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x2afe3c56fe50"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x2afe3c6124c0" loc="187:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x2afe3c610350" loc="207:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x2afe3c5f8a80" loc="80:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x2afe3c5f8800" loc="80:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x2afe3c60e4d0" loc="224:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2afe3c60e250" loc="224:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x2afe3c5fcb70" loc="55:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2afe3c56d7a0"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x2afe3c56b020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x2afe3c5f0020" loc="128:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x2afe3c5ee770" loc="153:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x2afe3c616020" loc="174:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2afe3c5bd920"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x2afe3c5bdd40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x2afe3c5ebcf0" loc="174:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2afe3c5bd920"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x2afe3c5bdd40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x2afe3c5eb2a0" loc="168:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x2afe3c5a48d0"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x2afe3c5a4cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x2afe3c5eb020" loc="168:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x2afe3c5a48d0"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x2afe3c5a4cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x2afe3c60ed90" loc="231:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x2afe3c612cb0" loc="192:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x2afe3c5f4e00" loc="108:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x2afe3c611be0" loc="202:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x2afe3c5ed020" loc="158:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x2afe3c5ef020" loc="138:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2afe3c607410" loc="57:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2afe3c607410"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2afe3c607650" loc="57:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2afe3c607650"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2afe3c606020" loc="64:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2afe3c607650"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2afe3c605120" loc="76:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2afe3c6068a0" loc="71:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2afe3c605880" loc="82:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x2afe3c629020" loc="61:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x2afe3c6297d0" loc="67:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x2afe3c628020" loc="72:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x2afe3c627020" loc="83:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x2afe3c6267d0" loc="100:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2afe3c624020" loc="117:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x2afe3c6287b0" loc="77:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2afe3c624b90" loc="134:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2afe3c624910" loc="134:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x2afe3c62b850" loc="56:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x2afe3c627800" loc="89:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x2afe3c626020" loc="94:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/zdenial/tinyos/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/zdenial/tinyos/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2afe3c674390" loc="95:/home/zdenial/tinyos/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/zdenial/tinyos/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2afe3c674be0" loc="105:/home/zdenial/tinyos/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/zdenial/tinyos/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2afe3c68d7c0" loc="78:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2afe3c68c020" loc="80:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x2afe3c6b7b10" loc="110:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2afe3c6b7890" loc="110:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2afe3c68f020" loc="58:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2afe3c68b020" loc="87:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x2afe3c6b6490" loc="117:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2afe3c68c760" loc="85:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2afe3c68d020" loc="73:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x2afe3c68a770" loc="99:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x2afe3c68f7c0" loc="66:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2afe3c6900e0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x2afe3c68b7a0" loc="92:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x2afe3c6b7020" loc="101:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x2afe3c68a020" loc="94:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2afe3c690810" loc="53:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2afe3c942020" loc="44:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2afe3c942750" loc="45:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2afe3c9430e0" loc="42:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2afe3c9415e0" loc="47:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2afe3c9437e0" loc="43:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2afe3c942e70" loc="46:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2afe3c9452b0" loc="40:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2afe3c945980" loc="41:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/zdenial/tinyos/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/zdenial/tinyos/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x2afe3c9d3460" loc="90:/home/zdenial/tinyos/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/zdenial/tinyos/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x2afe3c9d3cc0" loc="98:/home/zdenial/tinyos/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/zdenial/tinyos/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2afe3c9c0a40" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2afe3c9e1e00" loc="56:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x2afe3c9de020" loc="73:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2afe3c9e1570" loc="46:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2afe3c9e06d0" loc="65:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2afe3c9de950" loc="81:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x2afe3ca0f020" loc="79:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2afe3c9da090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2afe3c9d4d20" loc="79:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2afe3c9da090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x2afe3c9d6020" loc="53:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x2afe3c9d6b20" loc="62:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2afe3c9da090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2afe3c9d68a0" loc="62:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2afe3c9da090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2afe3c9d4470" loc="70:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x2afe3c9da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/home/zdenial/tinyos/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/home/zdenial/tinyos/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x2afe3ca59770" loc="62:/home/zdenial/tinyos/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/home/zdenial/tinyos/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2afe3cabd7a0" loc="65:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2afe3cabd520" loc="65:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x2afe3cabc840" loc="78:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2afe3cabc5c0" loc="78:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2afe3cab8d30" loc="126:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2afe3cab8730" loc="126:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2afe3cab8a60" loc="126:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2afe3cabbda0" loc="106:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x2afe3cabace0" loc="94:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2afe3caba720" loc="94:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2afe3cabaa50" loc="94:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x2afe3cab22e0" loc="59:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2afe3cab2060" loc="59:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x2afe3cab1510" loc="71:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2afe3cab1290" loc="71:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x2afe3caaf680" loc="85:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2afe3caaf400" loc="85:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/zdenial/tinyos/tos/interfaces/Send.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2afe3cae3970" loc="75:/home/zdenial/tinyos/tos/interfaces/Send.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2afe3cae33b0" loc="75:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2afe3cae36e0" loc="75:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2afe3cadd160" loc="125:/home/zdenial/tinyos/tos/interfaces/Send.nc">
        <documentation loc="115:/home/zdenial/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2afe3cadeae0" loc="125:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2afe3cadee10" loc="125:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2afe3cade270" loc="112:/home/zdenial/tinyos/tos/interfaces/Send.nc">
        <documentation loc="102:/home/zdenial/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2afe3cae1c90" loc="89:/home/zdenial/tinyos/tos/interfaces/Send.nc">
        <documentation loc="77:/home/zdenial/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2afe3cae1a10" loc="89:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2afe3cae0360" loc="100:/home/zdenial/tinyos/tos/interfaces/Send.nc">
        <documentation loc="91:/home/zdenial/tinyos/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2afe3cae2d10" loc="100:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2afe3cae00d0" loc="100:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x2afe3cb3e670" loc="31:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2afe3cb3e060" loc="31:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x2afe3cb3e3e0" loc="31:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x2afe3cb41820" loc="15:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x2afe3cb406d0" loc="23:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2afe3cb400d0" loc="23:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x2afe3cb40440" loc="23:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/home/zdenial/tinyos/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x2afe3cb63960" loc="54:/home/zdenial/tinyos/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/home/zdenial/tinyos/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x2afe3cb631f0" loc="49:/home/zdenial/tinyos/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/home/zdenial/tinyos/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x2afe3cb34c30" loc="56:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x2afe3cb6a0e0" loc="72:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x2afe3cb69d00" loc="94:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2afe3cb69a80" loc="94:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x2afe3cb6a960" loc="79:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x2afe3cb6b7e0" loc="65:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2afe3cb6b560" loc="65:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x2afe3cb685b0" loc="100:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x2afe3cb69270" loc="85:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x2afe3cb31780" loc="71:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x2afe3cb300e0" loc="81:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x2afe3cb35d90" loc="62:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x2afe3cb35b10" loc="62:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x2afe3cb30c60" loc="91:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2afe3cb309e0" loc="91:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x2afe3cb2e8f0" loc="62:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x2afe3cb2d5b0" loc="69:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2afe3cb2d330" loc="69:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x2afe3cb2c0b0" loc="80:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2afe3cb2de00" loc="80:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x2afe3ccac7a0" loc="35:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2afe3ccac7a0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2afe3ccac9e0" loc="35:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2afe3ccac9e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x2afe3cca8840" loc="63:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2afe3ccac9e0"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2afe3cca85c0" loc="63:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x2afe3cca59d0" loc="70:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2afe3cca5750" loc="70:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x2afe3cca95f0" loc="49:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2afe3cca9370" loc="49:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2afe3cca4d00" loc="78:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2afe3ccac9e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2afe3cca4710" loc="78:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2afe3cca4a70" loc="78:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2afe3ccac9e0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x2afe3cce1e30" loc="65:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2afe3cce1810" loc="65:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x2afe3cce1ba0" loc="65:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x2afe3ccde020" loc="71:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2afe3cce0d70" loc="71:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x2afe3cce1020" loc="57:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x2afe3cce2560" loc="52:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x2afe3cce22e0" loc="52:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x2afe3cd00430" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2afe3cd001b0" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x2afe3cd03720" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2afe3cd034a0" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x2afe3cd05dc0" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x2afe3cd05b40" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x2afe3cd052a0" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x2afe3cd05020" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x2afe3cd04880" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x2afe3cd04600" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x2afe3cd025e0" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2afe3cd02360" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/home/zdenial/tinyos/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x2afe3ccfb630" loc="59:/home/zdenial/tinyos/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/home/zdenial/tinyos/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2afe3c2ad970"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x2afe3ccfb020" loc="59:/home/zdenial/tinyos/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2afe3c2ad970"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2afe3ccfb3a0" loc="59:/home/zdenial/tinyos/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x2afe3ccc70c0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2afe3ccc8aa0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x2afe3ccc8df0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x2afe3ccc36d0" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2afe3ccc30d0" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x2afe3ccc3440" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x2afe3ccc7ba0" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x2afe3b6ea110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2afe3ccc7920" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x2afe3ccc5600" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2afe3ccc5380" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x2afe3ccc82a0" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2afe3ccc8020" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x2afe3ccc6720" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2afe3ccc64a0" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/home/zdenial/tinyos/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x2afe3cd080b0" loc="47:/home/zdenial/tinyos/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2afe3ccc9de0" loc="47:/home/zdenial/tinyos/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2afe3cd1e360" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2afe3cd28d40" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x2afe3cd1e0d0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2afe3cd1d6a0" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x2afe3cd1be70" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2afe3cd1b060" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x2afe3cd1b8a0" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2afe3cd1bbd0" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2afe3cd1c840" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2afe3cd1c260" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2afe3cd1c5b0" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x2afe3cd1edf0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x2afe3cd1eb70" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/home/zdenial/tinyos/tos/interfaces/Random.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x2afe3cd160e0" loc="52:/home/zdenial/tinyos/tos/interfaces/Random.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x2afe3cd20870" loc="46:/home/zdenial/tinyos/tos/interfaces/Random.nc">
        <documentation loc="42:/home/zdenial/tinyos/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x2afe3cd102e0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2afe3cd10020" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x2afe3cd12710" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x2afe3c271ea0"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x2afe3c26ec70"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2afe3cd12410" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x2afe3cd0f620" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:16" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x2afe3c26d7c0"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x2afe3c26b660"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2afe3cd0f320" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x2afe3cd24070" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x2afe3cd220e0" loc="97:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x2afe3cd238f0" loc="90:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x2afe3cd27730" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x2afe3cd257e0" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x2afe3cd248e0" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x2afe3cd23120" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x2afe3cd25020" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:/home/zdenial/tinyos/tos/interfaces/State.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x2afe3cd53d00" loc="71:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <documentation loc="68:/home/zdenial/tinyos/tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x2afe3cd0b350" loc="56:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <documentation loc="53:/home/zdenial/tinyos/tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x2afe3cd53530" loc="66:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x2afe3cd532b0" loc="66:/home/zdenial/tinyos/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x2afe3cd0bac0" loc="61:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x2afe3cd0c020" loc="45:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <documentation loc="40:/home/zdenial/tinyos/tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x2afe3cd14c90" loc="45:/home/zdenial/tinyos/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x2afe3cd0cad0" loc="51:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <documentation loc="47:/home/zdenial/tinyos/tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x2afe3cd0c850" loc="51:/home/zdenial/tinyos/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x2afe3cd8c870" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x2afe3cd8c290" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x2afe3cd8c5e0" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x2afe3cd8d1f0" loc="93:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x2afe3cd8e880" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x2afe3cd8e210" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x2afe3cd8e5f0" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x2afe3cd94c10" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2afe3cd94990" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x2afe3cd8da70" loc="98:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x2afe3cd91730" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x2afe3cd914b0" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x2afe3cd93d30" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2afe3cd93ab0" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x2afe3cd8aae0" loc="117:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x2afe3cd8f9c0" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x2afe3cd8f740" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x2afe3cd8a2b0" loc="112:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x2afe3cd924d0" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x2afe3ccdc360"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x2afe3ccdcac0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x2afe3cd92cc0" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x2afe3cd941f0" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2afe3cd93390" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x2afe3cd8f020" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/home/zdenial/tinyos/tos/interfaces/Read.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x2afe3cd884b0" loc="49:/home/zdenial/tinyos/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2afe3cd884b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x2afe3cd88d70" loc="55:/home/zdenial/tinyos/tos/interfaces/Read.nc">
        <documentation loc="50:/home/zdenial/tinyos/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2afe3cd85ae0" loc="63:/home/zdenial/tinyos/tos/interfaces/Read.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2afe3cd884b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2afe3cd85530" loc="63:/home/zdenial/tinyos/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x2afe3cd85850" loc="63:/home/zdenial/tinyos/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2afe3cd884b0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2afe3cda6c10" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2afe3c272090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2afe3cda6990" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2afe3cda5710" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2afe3c272090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2afe3cda5490" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:/home/zdenial/tinyos/tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:/home/zdenial/tinyos/tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x2afe3cd7bc60" loc="48:/home/zdenial/tinyos/tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:/home/zdenial/tinyos/tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x2afe3ccdc360"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x2afe3ccdcac0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2afe3cdc2020" loc="56:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2afe3cdc2020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2afe3cdc2260" loc="56:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2afe3cdc2260"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2afe3cdbee00" loc="109:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2afe3cdc2260"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2afe3cdc0e40" loc="78:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2afe3cdbe460" loc="103:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2afe3cdc2260"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2afe3cdc2260"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2afe3cdbfe60" loc="103:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2afe3cdc2260"/></type-var>
          </variable>
          <variable name="dt" ref="0x2afe3cdbe1d0" loc="103:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2afe3cdc2260"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2afe3cdbf640" loc="88:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2afe3cdbd620" loc="116:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2afe3cdc2260"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2afe3cdc2dc0" loc="66:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2afe3cdc2260"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2afe3cdc2b40" loc="66:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2afe3cdc2260"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2afe3cdc0680" loc="73:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x2afe3cdae560" loc="50:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x2afe3c2ad970"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x2afe3cdad4f0" loc="60:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x2afe3cdaed40" loc="55:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2afe3c2ad590"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x2afe3cdb0cd0" loc="45:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2afe3c2ad590"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2afe3c2ad970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x2afe3cdb06f0" loc="45:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2afe3c2ad590"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2afe3cdb0a40" loc="45:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2afe3c2ad970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x2afe3cda1e50" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2afe3c272090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2afe3cdabe80" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2afe3c272090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2afe3cdab020" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2afe3cdab890" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2afe3cdabbe0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2afe3cda8610" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2afe3c272090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2afe3cdaa770" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2afe3cda8020" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2afe3cda8370" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2afe3cdb2c30" loc="68:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2afe3cdb2470" loc="61:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x2afe3cdb3ce0" loc="54:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x2afe3cdb3420" loc="53:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x2afe3cf52030" loc="54:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2afe3cf511f0" loc="66:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2afe3cf529d0" loc="61:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2afe3cf52750" loc="61:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x2afe3cf547a0" loc="53:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2afe3cf83020" loc="52:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2afe3cf82ac0" loc="72:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2afe3cf847c0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x2afe3cf822a0" loc="67:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x2afe3cf82020" loc="67:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x2afe3cf84020" loc="42:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x2afe3cf83820" loc="59:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x2afe3d0c32b0" loc="24:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x2afe3d0c3b00" loc="31:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x2afe3d0c2390" loc="39:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x2afe3d0f4b60" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2afe3d0f4580" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2afe3d0f48d0" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x2afe3d0eedd0" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2afe3d0ee490" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2afe3d0ee7e0" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2afe3d0eeb30" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2afe3d0f06b0" loc="82:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2afe3c272090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2afe3d0f00d0" loc="82:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2afe3d0f0420" loc="82:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x2afe3d0f5730" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2afe3c272090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2afe3d0f5150" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2afe3d0f54a0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2afe3d0f12c0" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2afe3d0f2930" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2afe3d0f2c80" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2afe3d0f1020" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2afe3d0d4cf0" loc="70:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2afe3d0d4380" loc="70:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2afe3d0d4710" loc="70:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2afe3d0d4a50" loc="70:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2afe3d0d03c0" loc="82:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2afe3d0d16a0" loc="82:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2afe3d0d1a30" loc="82:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2afe3d0d1d70" loc="82:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2afe3d0d0110" loc="83:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/home/zdenial/tinyos/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x2afe3d0d8c90" loc="45:/home/zdenial/tinyos/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/home/zdenial/tinyos/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x2afe3d0d8a10" loc="45:/home/zdenial/tinyos/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x2afe3d1a1120" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><union-ref ref="0x2afe3c5a48d0"/>
              <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x2afe3c5a4cf0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x2afe3d1a9d70" loc="62:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2afe3d1a9af0" loc="62:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x2afe3d1a52a0" loc="74:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2afe3d1a5020" loc="74:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x2afe3d1a6610" loc="68:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2afe3d1a5d30" loc="81:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2afe3d1a5ab0" loc="81:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableOwnAddress" ref="0x2afe3d2129d0" loc="80:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x2afe3d224420" loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x2afe3d219620" loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2afe3d2193a0" loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x2afe3d22daf0" loc="11:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x2afe3d216c50" loc="71:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x2afe3d21e5e0" loc="49:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x2afe3d225540" loc="28:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x2afe3d2232d0" loc="34:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x2afe3d227500" loc="25:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x2afe3d227280" loc="25:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x2afe3d229a10" loc="21:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x2afe3d220070" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x2afe3d217550" loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x2afe3d212270" loc="78:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x2afe3d21ac30" loc="61:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x2afe3d20d350" loc="91:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x2afe3d20a9d0" loc="100:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x2afe3d22c980" loc="14:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x2afe3d2228b0" loc="38:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x2afe3d21f1f0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x2afe3d227dc0" loc="27:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x2afe3d22f8c0" loc="7:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x2afe3d21a460" loc="58:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2afe3d21a1e0" loc="58:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x2afe3d22f190" loc="6:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x2afe3d2164d0" loc="69:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x2afe3d211190" loc="81:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x2afe3d20cb00" loc="94:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x2afe3d20a270" loc="97:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x2afe3d215b90" loc="74:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x2afe3d2118c0" loc="83:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x2afe3d219db0" loc="65:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x2afe3d20f390" loc="87:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x2afe3d22b0e0" loc="15:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x2afe3d21d7e0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x2afe3d2107b0" loc="86:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x2afe3d214ac0" loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x2afe3d21fde0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x2afe3d21fb60" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x2afe3d20b2d0" loc="95:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x2afe3d21ba60" loc="57:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x2afe3d215420" loc="72:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x2afe3d22d390" loc="8:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2afe3c5a98d0"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x2afe3c5a9cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x2afe3d22d110" loc="8:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2afe3c5a98d0"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x2afe3c5a9cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x2afe3d222190" loc="37:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x2afe3d2292a0" loc="19:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2afe3d229020" loc="19:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x2afe3d2209d0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2afe3d220750" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x2afe3d20fb60" loc="90:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x2afe3d228b50" loc="24:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x2afe3d22b850" loc="18:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x2afe3d21b2a0" loc="54:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x2afe3d21b020" loc="54:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afe3b6eb520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x2afe3d22c270" loc="12:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x2afe3d210020" loc="84:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x2afe3d214350" loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x2afe3d217cc0" loc="68:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x2afe3d21d020" loc="50:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x2afe3d21ed30" loc="50:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x2afe3d2239f0" loc="35:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x2afe3d225c80" loc="29:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x2afe3d20ba40" loc="96:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x2afe3d2283c0" loc="22:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2afe3d228140" loc="22:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x2afe3d20db10" loc="92:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x2afe3d224b50" loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x2afe3d20c350" loc="93:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:/home/zdenial/tinyos/tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:/home/zdenial/tinyos/tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2afe3d4b2620" loc="13:/home/zdenial/tinyos/tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2afe3d4b23a0" loc="13:/home/zdenial/tinyos/tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2afe3d49ebc0" loc="10:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x2afe3d49e280" loc="10:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x2afe3d49e5f0" loc="10:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2afe3d49e920" loc="10:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2afe3d49d960" loc="11:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2afe3d49d3a0" loc="11:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2afe3d49d6d0" loc="11:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2afe3d4ee730" loc="59:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2afe3d4ee730"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2afe3d4ee970" loc="59:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2afe3d4ee970"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x2afe3d4ea4d0" loc="66:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2afe3d4ee970"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2afe3d4ea250" loc="66:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2afe3d4ee970"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x2afe3d4f15e0" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2afe3d52f9e0" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x2afe3d52f020" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x2afe3d52f750" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x2afe3d5307f0" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x2afe3d530020" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2afe3d534d40" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x2afe3d5462a0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afe3b6eb160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2afe3d546020" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x2afe3d5472a0" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2afe3d547020" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2afe3d5432a0" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2afe3d543020" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2afe3d5442a0" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2afe3d544020" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afe3c2bf3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2afe3c2bea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/zdenial/tinyos/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2afe3d6c4910" loc="53:/home/zdenial/tinyos/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2afe3d6c4910"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2afe3d6c1270" loc="61:/home/zdenial/tinyos/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2afe3d73d020" loc="53:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2afe3d73d020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2afe3d737c50" loc="136:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2afe3d73b5b0" loc="83:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2afe3d739360" loc="114:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2afe3d73ad60" loc="114:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2afe3d7390d0" loc="114:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2afe3d73a5b0" loc="98:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2afe3d736ca0" loc="151:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2afe3d736420" loc="144:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2afe3d73bd90" loc="92:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afe3bdc0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2afe3d73db90" loc="64:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2afe3d73d910" loc="64:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2afe3d7372f0" loc="129:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2afe3d739d00" loc="129:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2afe3d737060" loc="129:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2afe3d73c680" loc="73:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2afe3d73c400" loc="73:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afe3b6eb920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2afe3d73ce80" loc="78:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/home/zdenial/tinyos/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x2afe3d849600" loc="53:/home/zdenial/tinyos/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2afe3d849600"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x2afe3d8452a0" loc="64:/home/zdenial/tinyos/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afe3bdcf980"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2afe3d849600"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x2afe3d845020" loc="64:/home/zdenial/tinyos/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2afe3d849600"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
