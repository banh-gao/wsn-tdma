<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="9:TestC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b9a8a5d19a0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b9a8a57ccd0"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b9a8a57ccd0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b9a8a7c9590"/></to>
    </wire>
    <wire loc="10:TestC.nc">
      <from><interface-ref name="TDMALinkControl" scoped="" ref="0x2b9a8a5cc580"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b9a8a625590"/></to>
    </wire>
    <wire loc="61:TDMALinkC.nc">
      <from><interface-ref name="Control" scoped="" ref="0x2b9a8a625590"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b9a8a7fd6e0"/></to>
    </wire>
    <wire loc="11:TestC.nc">
      <from><interface-ref name="TDMALinkSnd" scoped="" ref="0x2b9a8a5e11a0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b9a8a803ae0"/></to>
    </wire>
    <wire loc="58:TDMALinkC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b9a8a803ae0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b9a8a7fc610"/></to>
    </wire>
    <wire loc="12:TestC.nc">
      <from><interface-ref name="TDMALinkRcv" scoped="" ref="0x2b9a8a5dcb50"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b9a8a803490"/></to>
    </wire>
    <wire loc="55:TDMALinkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b9a8a803490"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b9a8bf419f0"/></to>
    </wire>
    <wire loc="15:TestC.nc">
      <from><interface-ref name="DataTimer" scoped="" ref="0x2b9a8a5eb240"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2b9a8bf358b0"/></to>
    </wire>
    <wire loc="9:Timer32C.nc">
      <from><interface-ref name="Timer32khz" scoped="" ref="0x2b9a8bf358b0"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2b9a8beda020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:TestC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b9a8a5ec7e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b9a8afdd120"/></to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b9a8afdd120"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b9a8b044020"/></to>
    </wire>
    <wire loc="104:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b9a8a621210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9a8bc50dd0"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b9a8a621210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9a8bbe8b70"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b9a8a621210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9a8bb8e750"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b9a8a621210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9a8bbab080"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b9a8a621210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9a8ba2a130"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b9a8a621210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9a8b96d620"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b9a8a621210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9a8b83f820"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b9a8a621210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9a8b1827e0"/></to>
    </wire>
    <wire loc="103:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b9a8a621210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9a8c6f0a40"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b9a8a621210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9a8b4b3020"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b9a8a621210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9a8b0b7d60"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b9a8a621210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9a8ae72e60"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b9a8a621210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9a8adfb780"/></to>
    </wire>
    <wire loc="103:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b9a8a621210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9a8c4daca0"/></to>
    </wire>
    <wire loc="45:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b9a8a621210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9a8a8a1c80"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b9a8a7c9c00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b9a8a0e13a0"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b9a8a0e13a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b9a8a537140"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b9a8a7e76c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9a8a6200f0"/></to>
    </wire>
    <wire loc="48:/home/zdenial/tinyos/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b9a8a6200f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9a8a61c360"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b9a8a7e7dc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b9a8a621210"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x2b9a8a61ca70"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x2b9a8a61d910"/></to>
    </wire>
    <wire loc="46:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x2b9a8a61d910"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9a8a63e850"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b9a8a61b190"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9a8a6354a0"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x2b9a8a61b870"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9a8acb6c40"/></to>
    </wire>
    <wire loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b9a8a63e850"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9a8a66a7e0"/></to>
    </wire>
    <wire loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x2b9a8a658de0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x2b9a8a669020"/></to>
    </wire>
    <wire loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2b9a8a28e080"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2b9a8a668360"/></to>
    </wire>
    <wire loc="113:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x2b9a8a6ab5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b9a8a7796d0"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x2b9a8a6bc020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b9a8a772b30"/></to>
    </wire>
    <wire loc="108:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x2b9a8a6a2700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b9a8a758160"/></to>
    </wire>
    <wire loc="149:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x2b9a8a6cea20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b9a8a77ecb0"/></to>
    </wire>
    <wire loc="107:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x2b9a8a6a9aa0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b9a8a759480"/></to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x2b9a8a6d4020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b9a8a77e020"/></to>
    </wire>
    <wire loc="170:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x2b9a8a6caa20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b9a8a78dcb0"/></to>
    </wire>
    <wire loc="154:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x2b9a8a6b75a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b9a8a79e220"/></to>
    </wire>
    <wire loc="99:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x2b9a8a6adb10"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b9a8a7169d0"/></to>
    </wire>
    <wire loc="135:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x2b9a8a6d0a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b9a8a7672f0"/></to>
    </wire>
    <wire loc="134:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x2b9a8a6b23e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b9a8a768610"/></to>
    </wire>
    <wire loc="133:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x2b9a8a6bb5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b9a8a769220"/></to>
    </wire>
    <wire loc="115:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x2b9a8a6a1700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b9a8a7777a0"/></to>
    </wire>
    <wire loc="156:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x2b9a8a6cda20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b9a8a79b2f0"/></to>
    </wire>
    <wire loc="140:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x2b9a8a6babe0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b9a8a7886d0"/></to>
    </wire>
    <wire loc="114:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x2b9a8a6a4890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b9a8a778ac0"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x2b9a8a69b060"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b9a8a701c80"/></to>
    </wire>
    <wire loc="155:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x2b9a8a6d4da0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b9a8a79d610"/></to>
    </wire>
    <wire loc="106:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x2b9a8a6910c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b9a8a75b020"/></to>
    </wire>
    <wire loc="161:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x2b9a8a6b6a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b9a8a7966d0"/></to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x2b9a8a6c0690"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b9a8a761a90"/></to>
    </wire>
    <wire loc="142:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x2b9a8a6cfa20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b9a8a7857a0"/></to>
    </wire>
    <wire loc="100:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x2b9a8a6a5cf0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b9a8a762de0"/></to>
    </wire>
    <wire loc="141:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x2b9a8a6b11f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b9a8a787ac0"/></to>
    </wire>
    <wire loc="163:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x2b9a8a6cca20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b9a8a7947a0"/></to>
    </wire>
    <wire loc="147:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x2b9a8a6b80c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b9a8a780b30"/></to>
    </wire>
    <wire loc="120:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x2b9a8a6be6c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b9a8a6f9c80"/></to>
    </wire>
    <wire loc="162:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x2b9a8a6d3b80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b9a8a795ac0"/></to>
    </wire>
    <wire loc="128:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x2b9a8a6d1a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b9a8a76fcb0"/></to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x2b9a8a6d2a20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b9a8a78d020"/></to>
    </wire>
    <wire loc="127:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x2b9a8a6b3570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b9a8a76f020"/></to>
    </wire>
    <wire loc="168:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x2b9a8a6b4020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b9a8a78fb30"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x2b9a8a6fec20"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b9a8a6fe5b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x2b9a8a6fd2f0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x2b9a8a7adaa0"/></to>
    </wire>
    <wire loc="96:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x2b9a8a6fd940"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x2b9a8a7aa260"/></to>
    </wire>
    <wire loc="102:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b9a8a760930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b9a8a701c80"/></to>
    </wire>
    <wire loc="103:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b9a8a75e020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b9a8a6fe5b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b9a8a757020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b9a8a701c80"/></to>
    </wire>
    <wire loc="110:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b9a8a7567a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b9a8a6fe5b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b9a8a776610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b9a8a701c80"/></to>
    </wire>
    <wire loc="117:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b9a8a775c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b9a8a6fe5b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x2b9a8a71bc20"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b9a8a71b5b0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x2b9a8a71a2f0"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x2b9a8a7aa9f0"/></to>
    </wire>
    <wire loc="123:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x2b9a8a71a940"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x2b9a8a7a9240"/></to>
    </wire>
    <wire loc="129:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b9a8a76eb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b9a8a6f9c80"/></to>
    </wire>
    <wire loc="130:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b9a8a76c2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b9a8a71b5b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b9a8a78c160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b9a8a6f9c80"/></to>
    </wire>
    <wire loc="137:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b9a8a78b7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b9a8a71b5b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b9a8a784610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b9a8a6f9c80"/></to>
    </wire>
    <wire loc="144:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b9a8a783c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b9a8a71b5b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b9a8a77db40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b9a8a6f9c80"/></to>
    </wire>
    <wire loc="151:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b9a8a77b2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b9a8a71b5b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b9a8a79a160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b9a8a6f9c80"/></to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b9a8a7997a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b9a8a71b5b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b9a8a793610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b9a8a6f9c80"/></to>
    </wire>
    <wire loc="165:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b9a8a792c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b9a8a71b5b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b9a8a7b1b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b9a8a6f9c80"/></to>
    </wire>
    <wire loc="172:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b9a8a7af2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b9a8a71b5b0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2b9a8a0771d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9a8a535040"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2b9a8a5325d0"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2b9a8a1512d0"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b9a8bf419f0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b9a8afdf210"/>
      <arguments>
        <value cst="I:133">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b9a8a5c71b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="19:TDMALinkC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b9a8a7fa990"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b9a8afdd120"/></to>
    </wire>
    <wire loc="20:TDMALinkC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x2b9a8a81b470"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b9a8afe1020"/></to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b9a8afe1020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b9a8b001680"/></to>
    </wire>
    <wire loc="21:TDMALinkC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b9a8a813880"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b9a8bca9020"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b9a8bca9020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b9a8bca4080"/></to>
    </wire>
    <wire loc="25:TDMALinkC.nc">
      <from><interface-ref name="TSPacket" scoped="" ref="0x2b9a8a82cde0"/></from>
      <to><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x2b9a8bda1c50"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x2b9a8bda1c50"/></from>
      <to><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x2b9a8bd88b90"/></to>
    </wire>
    <wire loc="26:TDMALinkC.nc">
      <from><interface-ref name="SyncSnd" scoped="" ref="0x2b9a8a81a290"/></from>
      <to><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x2b9a8bda5aa0"/>
      <arguments>
        <value cst="I:130">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:TDMALinkC.nc">
      <from><interface-ref name="SyncRcv" scoped="" ref="0x2b9a8a8080b0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b9a8bdaa5c0"/>
      <arguments>
        <value cst="I:130">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:TDMALinkC.nc">
      <from><interface-ref name="JoinReqRandom" scoped="" ref="0x2b9a8a827ca0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b9a8bbb1a20"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b9a8bbb1a20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b9a8bbaaa20"/></to>
    </wire>
    <wire loc="33:TDMALinkC.nc">
      <from><interface-ref name="JoinReqDelayTimer" scoped="" ref="0x2b9a8a82a710"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2b9a8bee3680"/></to>
    </wire>
    <wire loc="9:Timer32C.nc">
      <from><interface-ref name="Timer32khz" scoped="" ref="0x2b9a8bee3680"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2b9a8beda020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="37:TDMALinkC.nc">
      <from><interface-ref name="JoinReqSnd" scoped="" ref="0x2b9a8a823a70"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b9a8bf2cb30"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b9a8bf2cb30"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b9a8ca453b0"/></to>
    </wire>
    <wire loc="38:TDMALinkC.nc">
      <from><interface-ref name="JoinReqRcv" scoped="" ref="0x2b9a8a822820"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b9a8bf1f800"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b9a8bf1f800"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b9a8afdf210"/>
      <arguments>
        <value cst="I:131">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b9a8a5c71b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:TDMALinkC.nc">
      <from><interface-ref name="JoinAnsSnd" scoped="" ref="0x2b9a8a821020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b9a8bf1a530"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b9a8bf1a530"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b9a8ca1b920"/></to>
    </wire>
    <wire loc="43:TDMALinkC.nc">
      <from><interface-ref name="JoinAnsRcv" scoped="" ref="0x2b9a8a821d30"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b9a8bf14140"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b9a8bf14140"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b9a8afdf210"/>
      <arguments>
        <value cst="I:132">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b9a8a5c71b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:TDMALinkC.nc">
      <from><interface-ref name="DataSnd" scoped="" ref="0x2b9a8a820400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b9a8bf0e020"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b9a8bf0e020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b9a8caa0140"/></to>
    </wire>
    <wire loc="51:TDMALinkC.nc">
      <from><interface-ref name="SlotScheduler" scoped="" ref="0x2b9a8a841d40"/></from>
      <to><interface-ref name="SlotScheduler" scoped="" ref="0x2b9a8bf44bc0"/></to>
    </wire>
    <wire loc="12:SlotSchedulerC.nc">
      <from><interface-ref name="SlotScheduler" scoped="" ref="0x2b9a8bf44bc0"/></from>
      <to><interface-ref name="SlotScheduler" scoped="" ref="0x2b9a8ca7ede0"/></to>
    </wire>
    <wire loc="42:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b9a8a8a5e20"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b9a8a8a14f0"/></to>
    </wire>
    <wire loc="48:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="UartControl" scoped="" ref="0x2b9a8a8a2020"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b9a8a8a36a0"/></to>
    </wire>
    <wire loc="17:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b9a8a8a36a0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b9a8adcc7a0"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2b9a8a89ebd0"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2b9a8a8b9e10"/></to>
    </wire>
    <wire loc="14:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2b9a8a8b9e10"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2b9a8adce060"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x2b9a8adfc430"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x2b9a8a89b7f0"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2b9a8adce060"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2b9a8a924850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="13:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b9a8a8b1e10"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b9a8adcf0c0"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b9a8adcf0c0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b9a8a9251d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2b9a8adce800"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2b9a8adc9080"/></to>
    </wire>
    <wire loc="19:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b9a8adc96f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9a8add2c00"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b9a8add2c00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9a8a92e8d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b9a8add08f0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b9a8c0dfc70"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b9a8c0dfc70"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b9a8ad262c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2b9a8a922a40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2b9a8adce800"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9a8c0d8d70"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9a8a928450"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x2b9a8a923690"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9a8c0df020"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b9a8c0df020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9a8ad27020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x2b9a8a920020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b9a8c0d85d0"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b9a8c0d85d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2b9a8ad281d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9a8a928450"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9a8a9d1dc0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2b9a8a924850"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2b9a8a9ce890"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b9a8a9251d0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b9a8a9cf6d0"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b9a8a92e8d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9a8a9d1020"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2b9a8a9cc020"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2b9a8a922a40"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x2b9a8a9cd230"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x2b9a8a923690"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x2b9a8a9c7290"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x2b9a8a920020"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x2b9a8a9cc690"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b9a8a9ea8b0"/></to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b9a8a9ea8b0"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x2b9a8a9e0020"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b9a8a9c7c90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b9a8ac8c9a0"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b9a8ac8c9a0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2b9a8ac869d0"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b9a8a9c5dd0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b9a8ac8b970"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b9a8ac8b970"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b9a8aca32a0"/></to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b9a8a9e43b0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2b9a8a9dcdc0"/></to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2b9a8a9ea080"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2b9a8a9e3710"/></to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x2b9a8a9ff860"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x2b9a8aad03f0"/></to>
    </wire>
    <wire loc="539:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x2b9a8aad03f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8abc6100"/></to>
    </wire>
    <wire loc="92:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x2b9a8a9d9800"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x2b9a8aace3f0"/></to>
    </wire>
    <wire loc="540:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x2b9a8aace3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8abc2d10"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x2b9a8a9fd800"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x2b9a8aacc3f0"/></to>
    </wire>
    <wire loc="541:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x2b9a8aacc3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8abbd740"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x2b9a8a9fb800"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x2b9a8aafc3f0"/></to>
    </wire>
    <wire loc="543:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x2b9a8aafc3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8ab89740"/></to>
    </wire>
    <wire loc="95:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x2b9a8a9f9800"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x2b9a8aaca3f0"/></to>
    </wire>
    <wire loc="542:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x2b9a8aaca3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8ab8ed10"/></to>
    </wire>
    <wire loc="442:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x2b9a8aa72cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8ab43d10"/></to>
    </wire>
    <wire loc="455:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x2b9a8aa90cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8ab7e740"/></to>
    </wire>
    <wire loc="531:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x2b9a8aade3d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8ab70740"/></to>
    </wire>
    <wire loc="551:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x2b9a8aaee3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8abf8d10"/></to>
    </wire>
    <wire loc="532:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x2b9a8aadc3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8ab6b100"/></to>
    </wire>
    <wire loc="460:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x2b9a8aa8ccc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8ab75d10"/></to>
    </wire>
    <wire loc="473:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x2b9a8aaa8020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8abb1740"/></to>
    </wire>
    <wire loc="486:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x2b9a8aac7020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8abef100"/></to>
    </wire>
    <wire loc="497:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x2b9a8aab7020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8ac01740"/></to>
    </wire>
    <wire loc="535:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x2b9a8aad63f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8ab98740"/></to>
    </wire>
    <wire loc="545:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x2b9a8aafa3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8abddd10"/></to>
    </wire>
    <wire loc="557:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x2b9a8aae53f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8abf3740"/></to>
    </wire>
    <wire loc="445:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x2b9a8aa6ccc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8ab34d10"/></to>
    </wire>
    <wire loc="536:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x2b9a8aad43f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8ab92100"/></to>
    </wire>
    <wire loc="450:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x2b9a8aa68cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8ab60100"/></to>
    </wire>
    <wire loc="463:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x2b9a8aa86cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8ab9dd10"/></to>
    </wire>
    <wire loc="476:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x2b9a8aaa2020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8aba2740"/></to>
    </wire>
    <wire loc="489:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x2b9a8aac1020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8abe1100"/></to>
    </wire>
    <wire loc="500:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x2b9a8aab0020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8abf3740"/></to>
    </wire>
    <wire loc="440:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x2b9a8aa76cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8ab4c740"/></to>
    </wire>
    <wire loc="453:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x2b9a8aa94cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8ab52260"/></to>
    </wire>
    <wire loc="466:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x2b9a8aa80cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8ab8ed10"/></to>
    </wire>
    <wire loc="530:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x2b9a8aae03f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8ab70740"/></to>
    </wire>
    <wire loc="548:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x2b9a8aaf43e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8ac07d10"/></to>
    </wire>
    <wire loc="555:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x2b9a8aae73e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8abf3740"/></to>
    </wire>
    <wire loc="471:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x2b9a8aaadcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8ab843f0"/></to>
    </wire>
    <wire loc="484:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x2b9a8aa98020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8abc2d10"/></to>
    </wire>
    <wire loc="495:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x2b9a8aabb020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8ac0b100"/></to>
    </wire>
    <wire loc="549:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x2b9a8aaf23e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8ac01740"/></to>
    </wire>
    <wire loc="538:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x2b9a8aad23e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8abcb740"/></to>
    </wire>
    <wire loc="443:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x2b9a8aa70cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8ab3d740"/></to>
    </wire>
    <wire loc="456:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x2b9a8aa8ecc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8ab79100"/></to>
    </wire>
    <wire loc="493:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x2b9a8aabf020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8abddd10"/></to>
    </wire>
    <wire loc="461:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x2b9a8aa8acc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8ab70740"/></to>
    </wire>
    <wire loc="474:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x2b9a8aaa6020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8abac100"/></to>
    </wire>
    <wire loc="487:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x2b9a8aac5020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8abebd10"/></to>
    </wire>
    <wire loc="498:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x2b9a8aab4020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8abfc100"/></to>
    </wire>
    <wire loc="438:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x2b9a8aa7ce10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8ab203f0"/></to>
    </wire>
    <wire loc="451:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x2b9a8aa66cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8ab5cd10"/></to>
    </wire>
    <wire loc="464:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x2b9a8aa84cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8ab98740"/></to>
    </wire>
    <wire loc="477:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x2b9a8aaa0020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8abd4100"/></to>
    </wire>
    <wire loc="546:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x2b9a8aaf83e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8abd8740"/></to>
    </wire>
    <wire loc="552:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x2b9a8aaeb3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8abf3740"/></to>
    </wire>
    <wire loc="482:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x2b9a8aa9c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8abcb740"/></to>
    </wire>
    <wire loc="441:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x2b9a8aa74cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8ab47100"/></to>
    </wire>
    <wire loc="454:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x2b9a8aa92cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8ab4dd10"/></to>
    </wire>
    <wire loc="467:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x2b9a8aaafcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8ab89740"/></to>
    </wire>
    <wire loc="550:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x2b9a8aaf03e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8abfc100"/></to>
    </wire>
    <wire loc="472:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x2b9a8aaaa020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8abb6e00"/></to>
    </wire>
    <wire loc="485:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x2b9a8aac9020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8abbd740"/></to>
    </wire>
    <wire loc="496:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x2b9a8aab9020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8ac07d10"/></to>
    </wire>
    <wire loc="444:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x2b9a8aa6ecc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8ab38100"/></to>
    </wire>
    <wire loc="494:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x2b9a8aabd020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8abd8740"/></to>
    </wire>
    <wire loc="449:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x2b9a8aa6acc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8ab65740"/></to>
    </wire>
    <wire loc="462:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x2b9a8aa88cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8ab6b100"/></to>
    </wire>
    <wire loc="475:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x2b9a8aaa4020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8aba7d10"/></to>
    </wire>
    <wire loc="488:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x2b9a8aac3020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8abe6740"/></to>
    </wire>
    <wire loc="499:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x2b9a8aab2020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8abf8d10"/></to>
    </wire>
    <wire loc="439:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x2b9a8aa78cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8ab1ce00"/></to>
    </wire>
    <wire loc="452:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x2b9a8aa96cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8ab57740"/></to>
    </wire>
    <wire loc="465:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x2b9a8aa82cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8ab92100"/></to>
    </wire>
    <wire loc="478:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x2b9a8aa9e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8abd0d10"/></to>
    </wire>
    <wire loc="534:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x2b9a8aad83d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8ab9dd10"/></to>
    </wire>
    <wire loc="547:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x2b9a8aaf63e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8ac0b100"/></to>
    </wire>
    <wire loc="533:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x2b9a8aada3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8ab9dd10"/></to>
    </wire>
    <wire loc="483:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x2b9a8aa9a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8abc6100"/></to>
    </wire>
    <wire loc="554:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x2b9a8aae93e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8abf8d10"/></to>
    </wire>
    <wire loc="558:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x2b9a8ab173f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8abe1100"/></to>
    </wire>
    <wire loc="529:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x2b9a8aae2060"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9a8ab75d10"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2b9a8ac869d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b9a8ac7fb80"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b9a8acadc50"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2b9a8a6be6c0"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b9a8acb6c40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9a8aca6c40"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b9a8ac9b910"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x2b9a8acba360"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b9a8acba360"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b9a8acb3710"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b9a8aca1b10"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x2b9a8acb96a0"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b9a8acb96a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b9a8acda1d0"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b9a8aca0e30"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x2b9a8acb79c0"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b9a8acb79c0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b9a8acd6d70"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b9a8acde930"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x2b9a8aac7020"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b9a8acd9480"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x2b9a8aac5020"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b9a8acd4020"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x2b9a8aac3020"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b9a8c0debe0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b9a8a9ea8b0"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9a8c0de440"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9a8ad26ad0"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9a8ad26ad0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9a8ad87400"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9a8ad258a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9a8c0d8d70"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b9a8ad262c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b9a8ad88020"/></to>
    </wire>
    <wire loc="106:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b9a8ad88020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b9a8c4d53a0"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x2b9a8ad281d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2b9a8ad22b60"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b9a8ad27020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9a8ad89210"/></to>
    </wire>
    <wire loc="105:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b9a8ad89210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9a8c4d6540"/></to>
    </wire>
    <wire loc="108:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9a8ad87400"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9a8c4d48b0"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x2b9a8ad21c20"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b9a8a9e43b0"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9a8ad87cd0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9a8ad258a0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9a8ad0fa90"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9a8ad87400"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b9a8adab9d0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b9a8ad887a0"/></to>
    </wire>
    <wire loc="107:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b9a8ad887a0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b9a8c4d5b20"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2b9a8adc0b20"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2b9a8a9ea080"/></to>
    </wire>
    <wire loc="109:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9a8c4d3210"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9a8ad87cd0"/></to>
    </wire>
    <wire loc="111:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b9a8c4d39d0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2b9a8c4d9330"/></to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b9a8c4d1c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9a8a0771d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2b9a8c53e3a0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2b9a8adc0b20"/></to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b9a8c53eb00"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b9a8adab400"/></to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b9a8c53d0f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b9a8adab9d0"/></to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9a8c53dd00"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9a8ada9720"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x2b9a8adfbde0"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x2b9a8adfc430"/></to>
    </wire>
    <wire loc="44:/home/zdenial/tinyos/tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b9a8adf1020"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b9a8a57ccd0"/></to>
    </wire>
    <wire loc="47:/home/zdenial/tinyos/tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x2b9a8adf1740"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b9a8ade9320"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b9a8ade9320"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b9a8ae6f4e0"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b9a8ae6f4e0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b9a8ae9f2f0"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b9a8ade8370"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b9a8ae12b40"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b9a8ade6020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b9a8ae76720"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b9a8ade7530"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b9a8ae799e0"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b9a8ae159f0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b9a8ae75400"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b9a8ade6c90"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b9a8ae77020"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b9a8ae72e60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9a8aea2c30"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b9a8ae6b940"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b9a8ae1b490"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b9a8ae75d90"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b9a8ae6d020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b9a8ae74a50"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b9a8ae6e4c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b9a8ae6b020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x2b9a8aff46c0"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b9a8ae6d020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b9a8afd9830"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b9a8ae6e4c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b9a8afd9110"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x2b9a8afd8760"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b9a8ae6b020"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b9a8ae9c8e0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b9a8ae6b940"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b9a8afd6590"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b9a8ae6b940"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b9a8afcdc80"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b9a8ae6b940"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b9a8afd70e0"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b9a8ae955c0"/></to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x2b9a8afd79d0"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x2b9a8ae99130"/></to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x2b9a8ae8f8e0"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x2b9a8afd2b70"/></to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x2b9a8ae8e060"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b9a8a8a36a0"/></to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b9a8afcfca0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b9a8a8b1e10"/></to>
    </wire>
    <wire loc="332:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x2b9a8af03e40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9a8a0771d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x2b9a8aeb4d10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9a8a0771d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x2b9a8af06400"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9a8a0771d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x2b9a8aeff0c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9a8a0771d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x2b9a8afd5c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9a8a0771d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x2b9a8afd4480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9a8a0771d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b9a8b001680"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b9a8b026340"/></to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b9a8afe0050"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b9a8b0007f0"/></to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b9a8b0007f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b9a8bcd1da0"/></to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b9a8afdfdf0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b9a8b046880"/></to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b9a8b046880"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b9a8bccec00"/></to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b9a8afde450"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b9a8b043760"/></to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b9a8b043760"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b9a8bccc8f0"/></to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b9a8b0199e0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b9a8b9c5550"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b9a8b9c5550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b9a8ba27a80"/></to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b9a8b00d8a0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b9a8b038bb0"/></to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b9a8b038bb0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b9a8b067700"/></to>
    </wire>
    <wire loc="81:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b9a8afdf210"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b9a8b047b20"/></to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b9a8b047b20"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b9a8bcce020"/></to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b9a8afdc800"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b9a8b041810"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b9a8b041810"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b9a8b068670"/></to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b9a8b044020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b9a8bccd2d0"/></to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b9a8b018af0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b9a8b9c2660"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b9a8b9c2660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b9a8ba23af0"/></to>
    </wire>
    <wire loc="97:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b9a8b026340"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b9a8bc44b80"/></to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2b9a8b02fd40"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2b9a8bcca830"/></to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2b9a8b02c500"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2b9a8bccbb50"/></to>
    </wire>
    <wire loc="92:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b9a8b03a970"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b9a8b069740"/></to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b9a8b069740"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b9a8b9cb670"/></to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b9a8b067700"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b9a8bc44080"/></to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b9a8b068670"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2b9a8b9c86e0"/></to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b9a8b02e790"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b9a8b0662e0"/></to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b9a8b0662e0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b9a8bca9020"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b9a8b036a80"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b9a8b067080"/></to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b9a8b067080"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b9a8b9c7a70"/></to>
    </wire>
    <wire loc="97:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x2b9a8bcc10f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9a8b025430"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b9a8bcc9860"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x2b9a8b06a350"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x2b9a8b06a350"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x2b9a8bc34ca0"/></to>
    </wire>
    <wire loc="99:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b9a8bcc7690"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x2b9a8b0690f0"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x2b9a8b0690f0"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x2b9a8bc33a50"/></to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b9a8bcc34d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b9a8b7b9b30"/></to>
    </wire>
    <wire loc="102:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b9a8bcc7ce0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b9a8b9cb670"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b9a8b9cb670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b9a8b9bcd20"/></to>
    </wire>
    <wire loc="103:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b9a8bcc6b70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b9a8b9c70c0"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b9a8b9c70c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b9a8ba28640"/></to>
    </wire>
    <wire loc="104:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2b9a8bcc5610"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2b9a8b0bd550"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2b9a8b0bd550"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2b9a8b0ff1a0"/></to>
    </wire>
    <wire loc="106:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x2b9a8bcc21f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2b9a8b061990"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2b9a8b061990"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2b9a8b05a020"/></to>
    </wire>
    <wire loc="109:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b9a8bcc1d30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b9a8ac8b970"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b9a8bc44b80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x2b9a8bc41d90"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b9a8b9c7a70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b9a8ba27020"/></to>
    </wire>
    <wire loc="97:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x2b9a8bc34ca0"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x2b9a8bc29a20"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b9a8bc44080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b9a8bc3d2d0"/></to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x2b9a8b06ce70"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b9a8bc345f0"/></to>
    </wire>
    <wire loc="92:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b9a8bc345f0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x2b9a8bc29370"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b9a8b9c86e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2b9a8b9b9c50"/></to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b9a8b025430"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9a8bc36cb0"/></to>
    </wire>
    <wire loc="96:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b9a8bc36cb0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9a8bc2b7b0"/></to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x2b9a8b06c160"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b9a8bc35960"/></to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b9a8bc35960"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x2b9a8bc2a4d0"/></to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x2b9a8b06b560"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x2b9a8bc32170"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x2b9a8bc32170"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x2b9a8bc27020"/></to>
    </wire>
    <wire loc="98:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x2b9a8bc33a50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x2b9a8bc28840"/></to>
    </wire>
    <wire loc="98:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2b9a8bc41d90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b9a8b0659f0"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b9a8b0659f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b9a8b05d690"/></to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b9a8bc316b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b9a8bb93220"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b9a8bb93220"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b9a8bb91a20"/></to>
    </wire>
    <wire loc="102:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b9a8bb92020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b9a8bcaa2a0"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b9a8bcaa2a0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b9a8bca73b0"/></to>
    </wire>
    <wire loc="103:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b9a8bca9d70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b9a8bc48cf0"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b9a8bc48cf0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b9a8bc42860"/></to>
    </wire>
    <wire loc="104:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b9a8bc42860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b9a8b062600"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b9a8b062600"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b9a8b05c2e0"/></to>
    </wire>
    <wire loc="107:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b9a8bc31020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b9a8bc45980"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b9a8bc45980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b9a8bc41690"/></to>
    </wire>
    <wire loc="108:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b9a8bc41690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b9a8bbefaa0"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b9a8bbefaa0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b9a8bbebe30"/></to>
    </wire>
    <wire loc="109:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b9a8bbec950"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b9a8b061300"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b9a8b061300"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b9a8b9717c0"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b9a8b9717c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b9a8b96b020"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b9a8b05ae60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9a8b0cb020"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b9a8b0cb020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9a8b100470"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x2b9a8b0513f0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x2b9a8b0c94b0"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x2b9a8b0c94b0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x2b9a8b0fd020"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2b9a8b0586f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b9a8b84a6d0"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2b9a8b0586f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b9a8b9745c0"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b9a8b9745c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b9a8b96dca0"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b9a8b84a6d0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b9a8b83d020"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x2b9a8b0492a0"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x2b9a8b847020"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x2b9a8b847020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b9a8b83d8c0"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x2b9a8b050060"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2b9a8b847cb0"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2b9a8b847cb0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2b9a8b83c650"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b9a8b048e20"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b9a8b9cb670"/></to>
    </wire>
    <wire loc="73:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b9a8b08a430"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b9a8b9c70c0"/></to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b9a8b050e80"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b9a8bbb1a20"/></to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x2b9a8b085bc0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b9a8bbb3aa0"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b9a8bbb3aa0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b9a8b4b7280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b9a8b04f670"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b9a8ac8b970"/></to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x2b9a8b0805d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9a8a0771d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x2b9a8b081660"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9a8a0771d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x2b9a8b082730"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9a8a0771d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x2b9a8b0b8890"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x2b9a8b0fc500"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x2b9a8b0f0790"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x2b9a8b17f220"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x2b9a8b17f220"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x2b9a8b1792e0"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2b9a8b0ef9d0"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2b9a8b27a370"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2b9a8b27a370"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b9a8b26d1b0"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2b9a8b0edce0"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x2b9a8b277ce0"/></to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2b9a8b277ce0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b9a8b2b0710"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x2b9a8b0eb020"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x2b9a8b274380"/></to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x2b9a8b274380"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b9a8b2a7d70"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x2b9a8b0e6c00"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x2b9a8b291210"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x2b9a8b291210"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x2b9a8b3caa30"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2b9a8b11fb60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9a8b710e20"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b9a8b710e20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9a8b42c960"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2b9a8b11ebb0"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x2b9a8b70c7b0"/></to>
    </wire>
    <wire loc="132:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2b9a8b70c7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b9a8b1203b0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x2b9a8b70bae0"/></to>
    </wire>
    <wire loc="135:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b9a8b70bae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b9a8b11f440"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x2b9a8b70ead0"/></to>
    </wire>
    <wire loc="130:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b9a8b70ead0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b9a8b120ae0"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x2b9a8b70a160"/></to>
    </wire>
    <wire loc="136:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b9a8b70a160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b9a8b124420"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x2b9a8b769870"/></to>
    </wire>
    <wire loc="154:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b9a8b769870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b9a8b124cd0"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x2b9a8b766880"/></to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b9a8b766880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b9a8b0e05d0"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x2b9a8b7650a0"/></to>
    </wire>
    <wire loc="159:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b9a8b7650a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b9a8b126020"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x2b9a8b76de50"/></to>
    </wire>
    <wire loc="147:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b9a8b76de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b9a8b1268f0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x2b9a8b76c670"/></to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b9a8b76c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2b9a8b127e20"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x2b9a8b758500"/></to>
    </wire>
    <wire loc="184:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2b9a8b758500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9a8b4268c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b9a8b1274a0"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x2b9a8b759ce0"/></to>
    </wire>
    <wire loc="183:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b9a8b759ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9a8b4268c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b9a8b1231e0"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x2b9a8b76ae50"/></to>
    </wire>
    <wire loc="153:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b9a8b76ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2b9a8b123a80"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x2b9a8b76ce50"/></to>
    </wire>
    <wire loc="149:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2b9a8b76ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b9a8b1213c0"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x2b9a8b76be50"/></to>
    </wire>
    <wire loc="151:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b9a8b76be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x2b9a8b11c880"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9a8b746a80"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b9a8b746a80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9a8b42c960"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x2b9a8b11da10"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9a8b7809e0"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b9a8b7809e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9a8b42c960"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b9a8b0e1390"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b9a8b7b9b30"/></to>
    </wire>
    <wire loc="100:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2b9a8b0f8970"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2b9a8b7b8d30"/></to>
    </wire>
    <wire loc="23:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2b9a8b7b8d30"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2b9a8b805310"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x2b9a8b1112f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9a8a0771d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x2b9a8b112410"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9a8a0771d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b9a8b1827e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9a8b17aa20"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b9a8b17aa20"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9a8c5e38e0"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x2b9a8b1792e0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b9a8c5e2180"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b9a8c5e38e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9a8c5dba10"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b9a8c5e2180"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b9a8c5d55f0"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b9a8c5dba10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9a8c5bf510"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2b9a8c5cfd20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b9a8c5da2a0"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b9a8c5da2a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b9a8c5bfda0"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b9a8c5d19b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b9a8b1f6020"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b9a8b1f6020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b9a8b1f05f0"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b9a8c5ba020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2b9a8c5c41b0"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b9a8c5c41b0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2b9a8b1a84d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b9a8c5b9760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b9a8c5c38f0"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b9a8c5c38f0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b9a8b1a6280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b9a8c5b8a80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2b9a8c5c2c10"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b9a8c5c2c10"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2b9a8b1a5ba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b9a8b1a84d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2b9a8a6be6c0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b9a8b1a6280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x2b9a8a6bc020"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b9a8b1a5ba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x2b9a8a6b3570"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b9a8b1a84d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2b9a8a6be6c0"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b9a8b1a6280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x2b9a8a6babe0"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b9a8b1a5ba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x2b9a8a6b11f0"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b9a8b1a84d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2b9a8a6be6c0"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b9a8b1a6280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x2b9a8a6b80c0"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b9a8b1a5ba0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x2b9a8a6d4020"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b9a8b1a84d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2b9a8a6be6c0"/></to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b9a8b1a6280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x2b9a8a6b75a0"/></to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b9a8b1a5ba0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x2b9a8a6d4da0"/></to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b9a8b1a84d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2b9a8a6be6c0"/></to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b9a8b1a6280"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x2b9a8a6b6a50"/></to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b9a8b1a5ba0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x2b9a8a6d3b80"/></to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b9a8b1a84d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2b9a8a6be6c0"/></to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b9a8b1a6280"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x2b9a8a6b4020"/></to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b9a8b1a5ba0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x2b9a8a6d2a20"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2b9a8b224950"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2b9a8ac869d0"/></to>
    </wire>
    <wire loc="73:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x2b9a8b2796a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b9a8b269d70"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x2b9a8b2789d0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b9a8b2b5b70"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x2b9a8b27b0e0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b9a8b272710"/></to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x2b9a8b275020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b9a8b2ab1b0"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b9a8b271930"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x2b9a8aa72cc0"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b9a8b26c480"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x2b9a8aaa8020"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b9a8b267020"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x2b9a8aa74cc0"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b9a8b2b4de0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x2b9a8aa7ce10"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b9a8b2af930"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x2b9a8aaa0020"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b9a8b2aa480"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x2b9a8aaaa020"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b9a8b2a5020"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x2b9a8aaa2020"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x2b9a8b2e15a0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b9a8b2cd020"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x2b9a8b291e30"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x2b9a8b3baa70"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b9a8b2cdae0"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x2b9a8a6bb5a0"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x2b9a8b2cbda0"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x2b9a8a6d0a20"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x2b9a8b2cac20"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x2b9a8aaaa020"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x2b9a8b3c9610"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x2b9a8b2bbc40"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x2b9a8b2bbc40"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x2b9a8b2fba30"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x2b9a8b411610"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x2b9a8b2bee70"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x2b9a8b2bee70"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x2b9a8b3029d0"/></to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x2b9a8b305bc0"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x2b9a8b2f1bc0"/></to>
    </wire>
    <wire loc="73:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x2b9a8b30cbc0"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x2b9a8b2f8a30"/></to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x2b9a8b30abc0"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x2b9a8b2f6a30"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x2b9a8b2c1d20"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x2b9a8b2fea30"/></to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x2b9a8b307bc0"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x2b9a8b2f3a30"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x2b9a8b30ebc0"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x2b9a8b2faa30"/></to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x2b9a8b304bc0"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x2b9a8b2f0bc0"/></to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x2b9a8b309bc0"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x2b9a8b2f5a30"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x2b9a8b2bcc80"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x2b9a8b2fda30"/></to>
    </wire>
    <wire loc="81:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x2b9a8b306c40"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x2b9a8b2f2bc0"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x2b9a8b30dbc0"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x2b9a8b2f9a30"/></to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x2b9a8b30bbc0"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x2b9a8b2f7a30"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x2b9a8b2c2dc0"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x2b9a8b2ffa30"/></to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x2b9a8b308bc0"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x2b9a8b2f4a30"/></to>
    </wire>
    <wire loc="131:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2b9a8b70c160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b9a8b767880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2b9a8b75f0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2b9a8b7660a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2b9a8b754500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9a8b4268c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b9a8b756500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9a8b4268c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b9a8b70b490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2b9a8b75c880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b9a8b757500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9a8b4268c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2b9a8b762880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2b9a8b7630a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b9a8b70fa90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b9a8b429680"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b9a8b429680"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b9a8b423930"/></to>
    </wire>
    <wire loc="138:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b9a8b70ae00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2b9a8b709490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2b9a8b75bc80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2b9a8b709be0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b9a8b757ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9a8b4268c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2b9a8b75c0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2b9a8b76b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2b9a8b75d0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2b9a8b75f880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2b9a8b75d880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2b9a8b755ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9a8b4268c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b9a8b756ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9a8b4268c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2b9a8b763880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2b9a8b75e0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2b9a8b758ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9a8b4268c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2b9a8b765880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b9a8b754ce0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b9a8b427630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b9a8b70e480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2b9a8b76d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2b9a8b76a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2b9a8b7600a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2b9a8b760880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b9a8b7670a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2b9a8b7082f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2b9a8b76d020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b9a8b70a7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b9a8b759500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2b9a8b755500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9a8b4268c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2b9a8b7620a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2b9a8b75e880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2b9a8b70ce00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2b9a8b7640a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2b9a8b708940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2b9a8b764880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2b9a8b75b0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b9a8b7529b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b9a8b427630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x2b9a8b427630"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b9a8b41fbb0"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x2b9a8b4268c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9a8b41c020"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b41cdb0"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b9a8b42c960"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9a8b420810"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b41bba0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x2b9a8b416020"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b9a8b4bb770"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b9a8b4bb770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b9a8b4b7280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2b9a8b41a400"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9a8b49ac40"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b9a8b49ac40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9a8c6c7e70"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2b9a8b417080"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2b9a8b4998f0"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2b9a8b4998f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2b9a8c6c42c0"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2b9a8b467680"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2b9a8b736020"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2b9a8b736020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2b9a8c6c3440"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b9a8b416df0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b9a8ac8b970"/></to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x2b9a8b462120"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9a8a0771d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b9a8b4b7280"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b9a8b4b3b70"/></to>
    </wire>
    <wire loc="110:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2b9a8c6c3440"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2b9a8b4df850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2b9a8c6c42c0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2b9a8b4e0020"/></to>
    </wire>
    <wire loc="105:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b9a8c6c7e70"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9a8b4e3430"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b9a8c6c5af0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b9a8c6bb5d0"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b9a8c6bb5d0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b9a8b61f2c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2b9a8b4e0020"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2b9a8b53ca10"/></to>
    </wire>
    <wire loc="108:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2b9a8c6c48d0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2b9a8b4e06a0"/></to>
    </wire>
    <wire loc="92:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2b9a8b4e06a0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2b9a8b53b060"/></to>
    </wire>
    <wire loc="111:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2b9a8b4dda40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2b9a8c6c3be0"/></to>
    </wire>
    <wire loc="115:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9a8c6ada80"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9a8b4e26b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x2b9a8b4de690"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9a8c6bc860"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b9a8c6bc860"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9a8b620020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x2b9a8b4dc2a0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b9a8c6b4020"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b9a8c6b4020"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2b9a8b6234d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9a8b4e26b0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9a8b53c250"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2b9a8b4df850"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2b9a8b53bc50"/></to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b9a8b4e3430"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9a8b53d470"/></to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2b9a8b5383e0"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2b9a8b4dda40"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x2b9a8b5395b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x2b9a8b4de690"/></to>
    </wire>
    <wire loc="95:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x2b9a8b533480"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x2b9a8b4dc2a0"/></to>
    </wire>
    <wire loc="98:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x2b9a8b538a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b9a8b529020"/></to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b9a8b529020"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x2b9a8b523c70"/></to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b9a8b533c20"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b9a8ac8b970"/></to>
    </wire>
    <wire loc="102:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x2b9a8b5312f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9a8a0771d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2b9a8b5245e0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x2b9a8b578150"/></to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b9a8b525d10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2b9a8b579780"/></to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x2b9a8b5a8bb0"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x2b9a8aae03f0"/></to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x2b9a8b5a6b20"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x2b9a8aadc3f0"/></to>
    </wire>
    <wire loc="92:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x2b9a8b5a4b20"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x2b9a8aada3f0"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x2b9a8b5a2b20"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x2b9a8aad43f0"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x2b9a8b5a0b20"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x2b9a8aad63f0"/></to>
    </wire>
    <wire loc="14:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x2b9a8b550d10"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x2b9a8b660430"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2b9a8c6b47c0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x2b9a8b6213f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x2b9a8c6b4dd0"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x2b9a8b66d540"/></to>
    </wire>
    <wire loc="11:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x2b9a8b66d540"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x2b9a8b660430"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b9a8c6ba5a0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b9a8b529020"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9a8c6bbd70"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9a8b61fad0"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9a8b61fad0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9a8b615c30"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9a8b61e8a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9a8c6ada80"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b9a8b61f2c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b9a8b616850"/></to>
    </wire>
    <wire loc="106:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b9a8b616850"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b9a8c6eb020"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x2b9a8b6234d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2b9a8b61c060"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b9a8b620020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9a8b617a80"/></to>
    </wire>
    <wire loc="105:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b9a8b617a80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9a8c6ec270"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x2b9a8b6213f0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x2b9a8b61c990"/></to>
    </wire>
    <wire loc="108:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9a8b615c30"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9a8c6ea400"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9a8b614570"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9a8b61e8a0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9a8b61ae50"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9a8b615c30"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x2b9a8b61a060"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b9a8b525d10"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x2b9a8b61a840"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2b9a8b5245e0"/></to>
    </wire>
    <wire loc="107:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b9a8b615020"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b9a8c6eb7a0"/></to>
    </wire>
    <wire loc="109:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9a8c6eacf0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9a8b614570"/></to>
    </wire>
    <wire loc="111:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b9a8c6e9500"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2b9a8c6ef0a0"/></to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b9a8c6e77a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9a8a0771d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x2b9a8b659250"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x2b9a8b523c70"/></to>
    </wire>
    <wire loc="18:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x2b9a8b655d40"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x2b9a8aae03f0"/></to>
    </wire>
    <wire loc="19:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x2b9a8b653cb0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x2b9a8aada3f0"/></to>
    </wire>
    <wire loc="153:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b9a8b79fc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2b9a8b744da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b9a8b73db50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b9a8b79d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2b9a8b796e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2b9a8b79de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2b9a8b7892f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9a8b4268c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b9a8b78b2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9a8b4268c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b9a8b742120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2b9a8b791670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b9a8b78d2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9a8b4268c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2b9a8b73cc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b9a8b7a0c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2b9a8b797670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2b9a8b799e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b9a8b79c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b9a8b745760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b9a8b429680"/></to>
    </wire>
    <wire loc="138:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b9a8b740aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2b9a8b73f120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2b9a8b790a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2b9a8b73f870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b9a8b78dad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9a8b4268c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b9a8b742dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2b9a8b792e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2b9a8b7a0480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b9a8b73c480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b9a8b744750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2b9a8b793e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2b9a8b795670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2b9a8b792670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2b9a8b78aad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9a8b4268c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b9a8b78bad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9a8b4268c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2b9a8b798670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2b9a8b795e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2b9a8b78ead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9a8b4268c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2b9a8b79b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b9a8b789ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b9a8b427630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b9a8b744100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2b9a8b73d370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2b9a8b79f480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2b9a8b797e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b9a8b79ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2b9a8b796670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b9a8b79e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2b9a8b743450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b9a8b79ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2b9a8b73e020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2b9a8b73ecc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2b9a8b78e2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9a8b4268c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b9a8b78fad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9a8b4268c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b9a8b740450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b9a8b78f2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2b9a8b78a2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9a8b4268c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2b9a8b798e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2b9a8b793670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2b9a8b743aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b9a8b742770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2b9a8b79be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2b9a8b73e670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2b9a8b799670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2b9a8b791e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b9a8b7887a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b9a8b427630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b9a8b773c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2b9a8b77eda0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b9a8b776b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b9a8b770670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2b9a8b7cfe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2b9a8b770e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2b9a8b7c22f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9a8b4268c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b9a8b7c52f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9a8b4268c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b9a8b77b120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2b9a8b7cb670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b9a8b7c62f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9a8b4268c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2b9a8b775c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b9a8b774c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2b9a8b7d0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2b9a8b7d3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b9a8b76f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b9a8b77f760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b9a8b429680"/></to>
    </wire>
    <wire loc="138:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b9a8b77aaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2b9a8b779120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2b9a8b7caa70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2b9a8b779870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b9a8b7c6ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9a8b4268c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b9a8b77bdc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2b9a8b7cce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2b9a8b774480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b9a8b775480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b9a8b77e750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2b9a8b7cde50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2b9a8b7ce670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2b9a8b7cc670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2b9a8b7c4ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9a8b4268c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b9a8b7c5ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9a8b4268c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2b9a8b7d2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2b9a8b7cee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2b9a8b7c7ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9a8b4268c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2b9a8b76e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b9a8b7c2ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b9a8b427630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b9a8b77e100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2b9a8b776370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2b9a8b773480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2b9a8b7d0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b9a8b76fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2b9a8b7cf670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b9a8b772670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2b9a8b77c450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b9a8b772e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2b9a8b777020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2b9a8b777cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2b9a8b7c72f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9a8b4268c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b9a8b7c8ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9a8b4268c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b9a8b77a450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b9a8b7c82f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2b9a8b7c42f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9a8b4268c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2b9a8b7d2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2b9a8b7cd670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2b9a8b77caa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b9a8b77b770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2b9a8b76ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2b9a8b777670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2b9a8b7d3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2b9a8b7cbe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b9a8b7c17a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b9a8b427630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x2b9a8b8028c0"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x2b9a8b7f7020"/></to>
    </wire>
    <wire loc="20:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x2b9a8b7f7020"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x2b9a8b7f1210"/></to>
    </wire>
    <wire loc="16:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x2b9a8b7edcb0"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x2b9a8b7dd020"/></to>
    </wire>
    <wire loc="21:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x2b9a8b7dd020"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x2b9a8b7db490"/></to>
    </wire>
    <wire loc="17:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0x2b9a8b7f05b0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b9a8b860a20"/></to>
    </wire>
    <wire loc="18:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x2b9a8b7dd8c0"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0x2b9a8b7de5a0"/></to>
    </wire>
    <wire loc="11:/home/zdenial/tinyos/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0x2b9a8b7de5a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b9a8b85e9e0"/></to>
    </wire>
    <wire loc="18:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x2b9a8b83bb40"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x2b9a8b81b020"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x2b9a8b81b020"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x2b9a8b819d20"/></to>
    </wire>
    <wire loc="19:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x2b9a8b7dbd30"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b9a8b7dd8c0"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b9a8b809260"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x2b9a8b86e890"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x2b9a8b86e890"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b9a8b867060"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b9a8b865190"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x2b9a8a69b060"/></to>
    </wire>
    <wire loc="9:/home/zdenial/tinyos/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b9a8b85dc50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x2b9a8aa94cc0"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x2b9a8b8439f0"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x2b9a8b8a95e0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x2b9a8b845190"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x2b9a8b8a9d70"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x2b9a8b8a87f0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x2b9a8b17f220"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x2b9a8b89c500"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x2b9a8b27b0e0"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2b9a8b895820"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2b9a8b27a370"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x2b9a8b894b40"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x2b9a8b275020"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x2b9a8b89d880"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x2b9a8b2e15a0"/></to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2b9a8b892020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9a8b938c30"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b9a8b938c30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9a8b42c960"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b9a8b892d10"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b9a8b9378f0"/></to>
    </wire>
    <wire loc="125:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b9a8b9378f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b9a8b429680"/></to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b9a8b88f6d0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x2b9a8b9362f0"/></to>
    </wire>
    <wire loc="129:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b9a8b9362f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2b9a8b88fde0"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x2b9a8b934cc0"/></to>
    </wire>
    <wire loc="133:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2b9a8b934cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b9a8b88e530"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x2b9a8b933370"/></to>
    </wire>
    <wire loc="134:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b9a8b933370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b9a8b88ec60"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x2b9a8b932d00"/></to>
    </wire>
    <wire loc="138:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b9a8b932d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b9a8b890e00"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x2b9a8b92cc60"/></to>
    </wire>
    <wire loc="151:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b9a8b92cc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b9a8b891780"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x2b9a8b9807a0"/></to>
    </wire>
    <wire loc="196:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b9a8b9807a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b9a8b427630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b9a8b890550"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b9a8b9182f0"/></to>
    </wire>
    <wire loc="186:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b9a8b9182f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9a8b4268c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b9a8b88d3e0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x2b9a8b92d480"/></to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b9a8b92d480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b9a8b88c5e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x2b9a8b92ae50"/></to>
    </wire>
    <wire loc="155:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b9a8b92ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b9a8b88b020"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x2b9a8b928670"/></to>
    </wire>
    <wire loc="156:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b9a8b928670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2b9a8b88de80"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x2b9a8b9307b0"/></to>
    </wire>
    <wire loc="142:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2b9a8b9307b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2b9a8b8899c0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x2b9a8b916ad0"/></to>
    </wire>
    <wire loc="191:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2b9a8b916ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9a8b4268c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b9a8b88b890"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x2b9a8b9172f0"/></to>
    </wire>
    <wire loc="188:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b9a8b9172f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9a8b4268c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b9a8b889130"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x2b9a8b917ad0"/></to>
    </wire>
    <wire loc="189:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b9a8b917ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9a8b4268c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x2b9a8b884d40"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x2b9a8b974df0"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x2b9a8b974df0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x2b9a8b96c550"/></to>
    </wire>
    <wire loc="98:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b9a8b8a4a00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b9a8b9cb670"/></to>
    </wire>
    <wire loc="99:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b9a8b8a39a0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b9a8b9c70c0"/></to>
    </wire>
    <wire loc="100:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b9a8b8a27c0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b9a8b9c5550"/></to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b9a8b897b30"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b9a8b9be480"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b9a8b9be480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b9a8ba1f8b0"/></to>
    </wire>
    <wire loc="104:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b9a8b8876c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b9a8ac8b970"/></to>
    </wire>
    <wire loc="153:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b9a8b92bc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2b9a8b934020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b9a8b92ec70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2b9a8b921e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2b9a8b928e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2b9a8b9152f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9a8b4268c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2b9a8b91d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2b9a8b92dc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2b9a8b923670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2b9a8b925e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b9a8b927670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2b9a8b931370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2b9a8b91ca70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2b9a8b931ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b9a8b918ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9a8b4268c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b9a8b932060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2b9a8b91ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2b9a8b92c480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b9a8b936940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2b9a8b91fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2b9a8b920670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2b9a8b91e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2b9a8b924670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2b9a8b920e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2b9a8b919ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9a8b4268c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2b9a8b926670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b9a8b915ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b9a8b427630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2b9a8b92e490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2b9a8b92b480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2b9a8b923e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b9a8b927e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2b9a8b921670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b9a8b92a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2b9a8b934670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2b9a8b930160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2b9a8b930e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2b9a8b9192f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9a8b4268c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b9a8b91aad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9a8b4268c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b9a8b9326b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b9a8b91a2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2b9a8b9162f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9a8b4268c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2b9a8b924e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2b9a8b91f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b9a8b9339c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2b9a8b926e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2b9a8b925670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2b9a8b91de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x2b9a8b970020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x2b9a8b96b7c0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b9a8b956150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b9a8ac8b970"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2b9a8b96a020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2b9a8b27a370"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x2b9a8b969380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x2b9a8b2796a0"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x2b9a8b9686b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x2b9a8b2789d0"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x2b9a8b967a50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x2b9a8b291e30"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2b9a8b9666e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9a8bb12d00"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b9a8bb12d00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9a8b42c960"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b9a8b965530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x2b9a8bb64ad0"/></to>
    </wire>
    <wire loc="195:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b9a8bb64ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b9a8b427630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b9a8b964ad0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x2b9a8bb816b0"/></to>
    </wire>
    <wire loc="137:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b9a8bb816b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2b9a8b9643a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x2b9a8bb80370"/></to>
    </wire>
    <wire loc="139:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2b9a8bb80370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b9a8b962330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b9a8b9cb670"/></to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b9a8b9611e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b9a8b9c70c0"/></to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b9a8b95fd70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b9a8b9c5550"/></to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2b9a8b961b90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2b9a8b0bd550"/></to>
    </wire>
    <wire loc="81:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b9a8b95a3e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x2b9a8bb79e50"/></to>
    </wire>
    <wire loc="155:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b9a8bb79e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b9a8b95acb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x2b9a8bb78670"/></to>
    </wire>
    <wire loc="156:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b9a8bb78670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2b9a8b95cb10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x2b9a8bb7f160"/></to>
    </wire>
    <wire loc="141:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2b9a8bb7f160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2b9a8b9586d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x2b9a8bb642f0"/></to>
    </wire>
    <wire loc="192:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2b9a8bb642f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9a8b4268c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b9a8b959590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x2b9a8bb662f0"/></to>
    </wire>
    <wire loc="188:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b9a8bb662f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9a8b4268c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b9a8b959e00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x2b9a8bb66ad0"/></to>
    </wire>
    <wire loc="189:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b9a8bb66ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9a8b4268c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b9a8b957020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b9a8bb68ad0"/></to>
    </wire>
    <wire loc="187:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b9a8bb68ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9a8b4268c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b9a8b9578b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x2b9a8bb10300"/></to>
    </wire>
    <wire loc="129:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b9a8bb10300"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x2b9a8b9b89d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9a8a0771d0"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b9a8ba307c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b9a8b1f6020"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x2b9a8ba1a820"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b9a8ba394e0"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b9a8ba1cb80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b9a8ba94610"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b9a8ba94610"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b9a8bb352b0"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b9a8ba99020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b9a8bb43150"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b9a8ba2a130"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9a8ba66020"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b9a8ba66020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9a8c8029d0"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2b9a8bb3d640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b9a8baab2f0"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b9a8baa6850"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b9a8ba66870"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b9a8ba66870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b9a8c8a65f0"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b9a8bb33690"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b9a8ba85b70"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b9a8ba85b70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b9a8ba7d610"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b9a8c8029d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9a8c890360"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2b9a8c8a0d20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b9a8c801260"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b9a8c801260"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b9a8c890bf0"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b9a8c8a29b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b9a8ba85b70"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b9a8c88ddd0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2b9a8c896020"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b9a8c896020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2b9a8b1a84d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b9a8c88a440"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b9a8c894760"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b9a8c894760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b9a8b1a6280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b9a8c889760"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2b9a8c893a80"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b9a8c893a80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2b9a8b1a5ba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2b9a8ba7ab90"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2b9a8ac869d0"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x2b9a8baa29c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9a8a0771d0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2b9a8bb38a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9a8a0771d0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b9a8bb2b8c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b9a8bb212c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b9a8bb212c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b9a8ba99020"/></to>
    </wire>
    <wire loc="153:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b9a8bb7ac60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2b9a8bb0f020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b9a8bb7ec70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2b9a8bb71e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2b9a8bb78e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b9a8bb0e370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2b9a8bb6c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b9a8bb682f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9a8b4268c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2b9a8bb7dc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b9a8bb7bc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2b9a8bb72670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2b9a8bb74e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b9a8bb77670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b9a8bb11970"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b9a8b429680"/></to>
    </wire>
    <wire loc="138:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b9a8bb81d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2b9a8bb6ba70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2b9a8bb80ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b9a8bb81060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2b9a8bb6de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2b9a8bb7b480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b9a8bb7d480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b9a8bb10950"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2b9a8bb6fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2b9a8bb70670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2b9a8bb6d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2b9a8bb65ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9a8b4268c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2b9a8bb73670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2b9a8bb70e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2b9a8bb69ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9a8b4268c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2b9a8bb76670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2b9a8bb7e490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2b9a8bb7a480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2b9a8bb72e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b9a8bb77e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2b9a8bb71670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b9a8bb79670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2b9a8bb0f670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2b9a8bb7fe00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2b9a8bb692f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9a8b4268c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b9a8bb6aad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9a8b4268c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b9a8bb6a2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2b9a8bb652f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9a8b4268c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2b9a8bb73e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2b9a8bb6f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2b9a8bb0fcc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b9a8bb0e9c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2b9a8bb76e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2b9a8bb7f7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2b9a8bb74670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2b9a8bb6ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b9a8bb637a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b9a8b427630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x2b9a8bbae920"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x2b9a8bbab940"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b9a8bbb59a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9a8bbab080"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b9a8bb8ee60"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b9a8bb92020"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b9a8bb8dae0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b9a8bb8f690"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b9a8bb8f690"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b9a8b4b7280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b9a8bb8c8f0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b9a8bbb1a20"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b9a8bb8b170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b9a8b9c70c0"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x2b9a8bbec200"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x2b9a8bbe8570"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b9a8bbe73f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b9a8bbec950"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b9a8bbe7a70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b9a8b9c70c0"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b9a8bc27d70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b9a8bc316b0"/></to>
    </wire>
    <wire loc="95:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b9a8bc26b10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b9a8bc31020"/></to>
    </wire>
    <wire loc="100:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b9a8bc252f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b9a8b9cb670"/></to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b9a8bc24170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b9a8b9c70c0"/></to>
    </wire>
    <wire loc="102:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b9a8bc24b70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2b9a8bc4f410"/></to>
    </wire>
    <wire loc="184:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x2b9a8bc71db0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9a8a0771d0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x2b9a8bc43800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b9a8bc3f580"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b9a8bc3f580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b9a8b4b7280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b9a8bca4dd0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b9a8bca9d70"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x2b9a8bca3af0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b9a8bce9350"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b9a8bce9350"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b9a8b4b7280"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="DelayTimer" scoped="" ref="0x2b9a8bca1650"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b9a8bce7750"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b9a8bce7750"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b9a8bb212c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b9a8bca29a0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2b9a8b9c86e0"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b9a8bc9ca30"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b9a8b9c70c0"/></to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <from><interface-ref name="send" scoped="" ref="0x2b9a8bc992a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9a8a0771d0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b9a8bdad580"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b9a8b001680"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x2b9a8bd98060"/></from>
      <to><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x2b9a8bd86910"/></to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b9a8bda97e0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b9a8bd8a340"/></to>
    </wire>
    <wire loc="98:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b9a8bda91d0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b9a8bd822c0"/></to>
    </wire>
    <wire loc="95:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b9a8bda6640"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b9a8b038bb0"/></to>
    </wire>
    <wire loc="73:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x2b9a8bd9ee50"/></from>
      <to><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x2b9a8bd8e4d0"/></to>
    </wire>
    <wire loc="97:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b9a8bdaa5c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b9a8bd836b0"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b9a8bda7b20"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b9a8b041810"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x2b9a8bda5aa0"/></from>
      <to><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x2b9a8bd94c10"/></to>
    </wire>
    <wire loc="99:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b9a8bda8470"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b9a8bd89020"/></to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b9a8bd82a00"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b9a8be81020"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b9a8be81020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b9a8c911cb0"/></to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubAMPacket" scoped="" ref="0x2b9a8bd7f6a0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b9a8be808b0"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b9a8be808b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b9a8c90f590"/></to>
    </wire>
    <wire loc="81:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b9a8bd80800"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b9a8be81c30"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b9a8be81c30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b9a8c910930"/></to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b9a8bd7c130"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b9a8b9c5550"/></to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b9a8bd78270"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b9a8b9c2660"/></to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b9a8bd74020"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b9a8b9be480"/></to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b9a8be79b30"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b9a8b1f6020"/></to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x2b9a8bd74d30"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b9a8be7a830"/></to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b9a8bd72060"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b9a8be75e60"/></to>
    </wire>
    <wire loc="26:/home/zdenial/tinyos/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b9a8be75e60"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b9a8ba94610"/></to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b9a8bd710f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b9a8ac8b970"/></to>
    </wire>
    <wire loc="100:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b9a8bd7ee60"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b9a8afdf210"/>
      <arguments>
        <value cst="I:61">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubSnoop" scoped="" ref="0x2b9a8bd7d550"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b9a8afdfdf0"/>
      <arguments>
        <value cst="I:61">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b9a8c911cb0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b9a8c904660"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b9a8c910930"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b9a8afde450"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b9a8c90f590"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b9a8afdd120"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b9a8be7e020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2b9a8c90ec10"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b9a8c90ec10"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b9a8afdc800"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b9a8c903460"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b9a8be62940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b9a8c9020e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b9a8afdd120"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b9a8be62940"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b9a8be974b0"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b9a8be96400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b9a8afe0050"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b9a8be95060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b9a8afdd120"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b9a8be94720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b9a8afde450"/></to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x2b9a8be93480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9a8a0771d0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x2b9a8be93c60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9a8a0771d0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:Timer32P.nc">
      <from><interface-ref name="Timer32khz" scoped="" ref="0x2b9a8beda020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b9a8bec1d70"/></to>
    </wire>
    <wire loc="12:Timer32P.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2b9a8beba3b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b9a8becd470"/></to>
    </wire>
    <wire loc="13:Timer32P.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b9a8bec8b10"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b9a8bed3a00"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b9a8bed3a00"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b9a8c966890"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b9a8bed31b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9a8c96db10"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b9a8c96db10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9a8c9ff660"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2b9a8c95f0a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b9a8c96c4f0"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b9a8c96c4f0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b9a8c9fe020"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b9a8c963c00"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b9a8b1f6020"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b9a8c9fb190"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2b9a8ca05450"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b9a8ca05450"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2b9a8b1a84d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b9a8c9fa770"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b9a8ca04a80"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b9a8ca04a80"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b9a8b1a6280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b9a8c9f9a80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2b9a8ca03da0"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b9a8ca03da0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2b9a8b1a5ba0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x2b9a8bec4cc0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9a8a0771d0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2b9a8beb5650"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9a8a0771d0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b9a8ca453b0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b9a8ca38640"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b9a8bf2b8b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b9a8ca44020"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b9a8ca44020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b9a8afde450"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b9a8bf2a590"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b9a8ca44c30"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b9a8ca44c30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b9a8afdd120"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b9a8bf29c10"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2b9a8ca422b0"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b9a8ca422b0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b9a8afdc800"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b9a8ca372e0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b9a8be62940"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b9a8ca36020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b9a8afdd120"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b9a8bf1fdd0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b9a8afde450"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b9a8bf1ea10"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b9a8afdd120"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b9a8ca1b920"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b9a8ca0db20"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b9a8bf19270"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b9a8ca19590"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b9a8ca19590"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b9a8afde450"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b9a8bf19e80"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b9a8ca18270"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b9a8ca18270"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b9a8afdd120"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b9a8bf175d0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2b9a8ca178f0"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b9a8ca178f0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b9a8afdc800"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b9a8ca0c910"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b9a8be62940"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b9a8cabc590"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b9a8afdd120"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b9a8bf14710"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b9a8afde450"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b9a8bf12400"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b9a8afdd120"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b9a8caa0140"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b9a8ca92390"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b9a8bf0ec30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b9a8caa0d50"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b9a8caa0d50"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b9a8afde450"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b9a8bf0d8b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b9a8ca9f990"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b9a8ca9f990"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b9a8afdd120"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b9a8bf0b020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2b9a8ca9c120"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b9a8ca9c120"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b9a8afdc800"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b9a8ca91060"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b9a8be62940"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b9a8ca91c70"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b9a8afdd120"/></to>
    </wire>
    <wire loc="9:SlotSchedulerC.nc">
      <from><interface-ref name="EpochTimer" scoped="" ref="0x2b9a8ca7c0a0"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2b9a8ca70870"/></to>
    </wire>
    <wire loc="9:Timer32C.nc">
      <from><interface-ref name="Timer32khz" scoped="" ref="0x2b9a8ca70870"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2b9a8beda020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="10:SlotSchedulerC.nc">
      <from><interface-ref name="SlotTimer" scoped="" ref="0x2b9a8ca77570"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2b9a8ca69020"/></to>
    </wire>
    <wire loc="9:Timer32C.nc">
      <from><interface-ref name="Timer32khz" scoped="" ref="0x2b9a8ca69020"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2b9a8beda020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b9a8bf40020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b9a8afde450"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b9a8bf40c30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b9a8afdd120"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="TestP" loc="7:TestP.nc">
      <module/>
    </component>
    <component qname="MainC" loc="56:/home/zdenial/tinyos/tos/system/MainC.nc">
      <documentation loc="45:/home/zdenial/tinyos/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:/home/zdenial/tinyos/tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:/home/zdenial/tinyos/tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:/home/zdenial/tinyos/tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:/home/zdenial/tinyos/tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/zdenial/tinyos/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/zdenial/tinyos/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/zdenial/tinyos/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="TDMALinkC" loc="9:TDMALinkC.nc">
      <configuration/>
    </component>
    <component qname="TDMALinkP" loc="22:TDMALinkP.nc">
      <module/>
    </component>
    <component qname="SerialPrintfC" loc="36:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Kevin Klues&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialPrintfP" loc="36:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
        <short> &#10; </short>
        <long> &#10; @author David Moss&#10; @author Kevin Klues&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="2:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <instance number="0">
        <component-ref qname="Msp430Uart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P.UartP" loc="41(Msp430Uart1P.UartP):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="73:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <documentation loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
        <short>&#10; Implementation of USART1 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART1 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/zdenial/tinyos/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/zdenial/tinyos/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="40(PlatformSerialC.UartC.UsartC):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="89(Msp430UsartShare1P.ArbiterC):/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="52(Msp430UsartShare1P.ArbiterC.Arbiter):/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TelosSerialP" loc="1:/home/zdenial/tinyos/tos/platforms/telosa/TelosSerialP.nc">
      <module/>
    </component>
    <component qname="PutcharC" loc="42:/home/zdenial/tinyos/tos/lib/printf/PutcharC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:/home/zdenial/tinyos/tos/lib/printf/PutcharP.nc">
      <documentation loc="64:/home/zdenial/tinyos/tos/lib/printf/PutcharP.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialStartP" loc="37:/home/zdenial/tinyos/tos/lib/serial/SerialStartP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/lib/serial/SerialStartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Thomas Schmid&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/home/zdenial/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="59:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <documentation loc="49:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="38(HplCC2420InterruptsC.CaptureSFDC):/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="43(HplCC2420InterruptsC.InterruptCCAC):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="43(HplCC2420InterruptsC.InterruptFIFOPC):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):/home/zdenial/tinyos/tos/system/StateC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:/home/zdenial/tinyos/tos/system/StateImplC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:/home/zdenial/tinyos/tos/system/StateImplP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="74:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <documentation loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
        <short>&#10; Implementation of USART0 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART0 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @author: Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10; @version $Revision: 1.8 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="89(Msp430UsartShare0P.ArbiterC):/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="52(Msp430UsartShare0P.ArbiterC.Arbiter):/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="37:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-24 05:32:31 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/home/zdenial/tinyos/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/home/zdenial/tinyos/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="52(BusyWaitMicroC.BusyWaitCounterC):/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a607460"/>
            <typename><typedef-ref name="TMicro" ref="0x2b9a8a6077d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a607460"/>
            <typename><typedef-ref name="TMicro" ref="0x2b9a8a6077d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:/home/zdenial/tinyos/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a5ddbf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9a8a608020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a5ddbf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9a8a608020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a5ddbf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9a8a608020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a5ddbf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9a8a608020"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a5ddbf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9a8a608020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/zdenial/tinyos/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/home/zdenial/tinyos/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):/home/zdenial/tinyos/tos/system/StateC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):/home/zdenial/tinyos/tos/system/StateC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):/home/zdenial/tinyos/tos/system/StateC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkC" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkP" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PacketLinkC.SendStateC" loc="65(PacketLinkC.SendStateC):/home/zdenial/tinyos/tos/system/StateC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkC.DelayTimerC" loc="44(PacketLinkC.DelayTimerC):/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TimeSyncMessageC" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
        <short>&#10; The Active Message layer for the CC2420 radio with timesync support.</short>
        <long>&#10; The Active Message layer for the CC2420 radio with timesync support. This&#10; configuration is just layer above CC2420ActiveMessageC that supports&#10; TimeSyncPacket and TimeSyncAMSend interfaces (TEP 133)&#10;&#10; @author: Miklos Maroti&#10; @author: Brano Kusy (CC2420 port)&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TimeSyncMessageP" loc="37:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <module/>
    </component>
    <component qname="CC2420TimeSyncMessageC.AMSenderC" loc="47(CC2420TimeSyncMessageC.AMSenderC):/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:61">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420TimeSyncMessageC.AMSenderC.SenderC" loc="47(CC2420TimeSyncMessageC.AMSenderC.SenderC):/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b9a8a5c71b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP" loc="43(CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP):/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b9a8a5c71b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420TimeSyncMessageC.LocalTime32khzC" loc="46(CC2420TimeSyncMessageC.LocalTime32khzC):/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/home/zdenial/tinyos/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/home/zdenial/tinyos/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="TDMALinkC.JoinReqDelayTimer" loc="2(TDMALinkC.JoinReqDelayTimer):Timer32C.nc">
      <instance number="0">
        <component-ref qname="Timer32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Timer32P" loc="2:Timer32P.nc">
      <configuration/>
    </component>
    <component qname="Timer32P.Alarm32khz32C" loc="41(Timer32P.Alarm32khz32C):/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Timer32P.Alarm32khz32C.AlarmC" loc="41(Timer32P.Alarm32khz32C.AlarmC):/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(Timer32P.Alarm32khz32C.AlarmC.Msp430Timer):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Timer32P.Alarm32khz32C.Transform" loc="51(Timer32P.Alarm32khz32C.Transform):/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Timer32P.AlarmToTimerC" loc="46(Timer32P.AlarmToTimerC):/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Timer32P.VirtualizeTimerC" loc="46(Timer32P.VirtualizeTimerC):/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TDMALinkC.JoinReqSndC" loc="47(TDMALinkC.JoinReqSndC):/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:131">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.JoinReqSndC.SenderC" loc="47(TDMALinkC.JoinReqSndC.SenderC):/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b9a8a5c71b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.JoinReqSndC.SenderC.AMQueueEntryP" loc="43(TDMALinkC.JoinReqSndC.SenderC.AMQueueEntryP):/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b9a8a5c71b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TDMALinkC.JoinReqRcvC" loc="43(TDMALinkC.JoinReqRcvC):/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:131">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.JoinAnsSndC" loc="47(TDMALinkC.JoinAnsSndC):/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:132">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.JoinAnsSndC.SenderC" loc="47(TDMALinkC.JoinAnsSndC.SenderC):/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b9a8a5c71b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.JoinAnsSndC.SenderC.AMQueueEntryP" loc="43(TDMALinkC.JoinAnsSndC.SenderC.AMQueueEntryP):/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b9a8a5c71b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TDMALinkC.JoinAnsRcvC" loc="43(TDMALinkC.JoinAnsRcvC):/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:132">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.DataSndC" loc="47(TDMALinkC.DataSndC):/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:133">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.DataSndC.SenderC" loc="47(TDMALinkC.DataSndC.SenderC):/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b9a8a5c71b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.DataSndC.SenderC.AMQueueEntryP" loc="43(TDMALinkC.DataSndC.SenderC.AMQueueEntryP):/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b9a8a5c71b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TDMALinkC.SlotSchedulerC" loc="1(TDMALinkC.SlotSchedulerC):SlotSchedulerC.nc">
      <instance number="0">
        <component-ref qname="SlotSchedulerC"/>
        <arguments>
          <value cst="I:20">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:11">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.SlotSchedulerC.SlotSchedulerP" loc="3(TDMALinkC.SlotSchedulerC.SlotSchedulerP):SlotSchedulerP.nc">
      <instance number="0">
        <component-ref qname="SlotSchedulerP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2"></type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TDMALinkC.SlotSchedulerC.EpochTimer" loc="2(TDMALinkC.SlotSchedulerC.EpochTimer):Timer32C.nc">
      <instance number="2">
        <component-ref qname="Timer32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.SlotSchedulerC.SlotTimer" loc="2(TDMALinkC.SlotSchedulerC.SlotTimer):Timer32C.nc">
      <instance number="3">
        <component-ref qname="Timer32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.DataRcvC" loc="43(TDMALinkC.DataRcvC):/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:133">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestC.Timer" loc="2(TestC.Timer):Timer32C.nc">
      <instance number="1">
        <component-ref qname="Timer32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430TimerP" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x2b9a8a6c5230" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x2b9a8a6c55d0" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x2b9a8a6c5980" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x2b9a8a6c5d00" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x2b9a8a6c40d0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x2b9a8a6c4440" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x2b9a8a6c47d0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x2b9a8a6c4b60" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x2b9a8a6c3020" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x2b9a8a718960" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x2b9a8a718d30" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart1C" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x2b9a8ab12890" loc="40:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x2b9a8ab12c40" loc="41:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x2b9a8ab11020" loc="42:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x2b9a8ab113d0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x2b9a8ab11740" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2b9a8ac80ad0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2b9a8ac80ad0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x2b9a8ad455b0" loc="89:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x2b9a8ad385b0" loc="42:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/home/zdenial/tinyos/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x2b9a8ad5cd90" loc="52:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2b9a8b1d79d0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2b9a8b1d79d0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2b9a8b1f2bb0" loc="55:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2b9a8b1f2bb0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2b9a8b1ef3b0" loc="56:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2b9a8b1ef3b0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2b9a8b1ef7a0" loc="57:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2b9a8b1ef7a0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2b9a8b1ee020" loc="58:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2b9a8b1ee020"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2b9a8b1ee3f0" loc="59:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x2b9a8b1eebf0" loc="60:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x2b9a8b1eebf0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2b9a8b1f7dd0" loc="52:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2b9a8b1f7dd0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2b9a8b21c600" loc="53:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2b9a8b21c600"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2b9a8b21c9f0" loc="54:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2b9a8b21c9f0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2b9a8b21b210" loc="55:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2b9a8b21b210"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2b9a8b21b5e0" loc="56:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="GpioCaptureC" loc="38:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:/home/zdenial/tinyos/tos/system/StateC.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="BusyWaitCounterC" loc="52:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b9a8b817400" loc="52:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b9a8b817400"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b9a8b817b90" loc="52:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9a8b817b90"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b9a8ba3ba60" loc="46:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b9a8ba3ba60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmMilli32C" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b9a8ba61cd0" loc="46:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b9a8ba61cd0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b9a8ba9d230" loc="46:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b9a8ba9d230"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2b9a8ba9d560" loc="46:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/zdenial/tinyos/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMSenderC" loc="47:/home/zdenial/tinyos/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2b9a8be08a00" loc="47:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b9a8a5c71b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2b9a8be006b0" loc="47:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b9a8a5c71b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2b9a8bdf6320" loc="43:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b9a8a5c71b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x2b9a8be5ec80" loc="45:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Timer32C" loc="2:Timer32C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMReceiverC" loc="43:/home/zdenial/tinyos/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2b9a8bf24060" loc="43:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b9a8a5c71b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SlotSchedulerC" loc="1:SlotSchedulerC.nc" abstract="">
      <parameters>
        <constant name="slotDuration" ref="0x2b9a8bf09840" loc="1:SlotSchedulerC.nc">
          <component-ref qname="SlotSchedulerC"/>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
          </type-int>
        </constant>
        <constant name="maxSlotId" ref="0x2b9a8bf09bb0" loc="1:SlotSchedulerC.nc">
          <component-ref qname="SlotSchedulerC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SlotSchedulerP" loc="3:SlotSchedulerP.nc" abstract="">
      <parameters>
        <constant name="slotDuration" ref="0x2b9a8bf020d0" loc="3:SlotSchedulerP.nc">
          <component-ref qname="SlotSchedulerP"/>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
          </type-int>
        </constant>
        <constant name="maxSlotId" ref="0x2b9a8bf02440" loc="3:SlotSchedulerP.nc">
          <component-ref qname="SlotSchedulerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="Boot" ref="0x2b9a8a5d19a0" loc="8:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x2b9a8a5d19a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b9a8a5d1d20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataTimer" ref="0x2b9a8a5eb240" loc="13:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DataTimer" scoped="" ref="0x2b9a8a5eb240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9a8a5fc6e0"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8a5eac90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9a8a5fda70"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9a8a5fd5f0"/>
        <function-ref name="getdt" scoped="" ref="0x2b9a8a5fa020"/>
        <function-ref name="gett0" scoped="" ref="0x2b9a8a5fcb60"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9a8a5fd170"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9a8a5ebe30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9a8a5fc0d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9a8a5ea340"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8a5ea810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TDMALinkSnd" ref="0x2b9a8a5e11a0" loc="10:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TDMALinkSnd" scoped="" ref="0x2b9a8a5e11a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8a5e1520"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8a5e16b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8a5e1840"/>
        <function-ref name="cancel" scoped="" ref="0x2b9a8a5e19d0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8a5e1b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TDMALinkControl" ref="0x2b9a8a5cc580" loc="9:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TDMALinkControl" scoped="" ref="0x2b9a8a5cc580"/></type-interface>
      <instance>
        <interfacedef-ref qname="TDMALinkControl"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x2b9a8a5d21b0"/>
        <function-ref name="startDone" scoped="" ref="0x2b9a8a5cca90"/>
        <function-ref name="startSlave" scoped="" ref="0x2b9a8a5ccc20"/>
        <function-ref name="stopDone" scoped="" ref="0x2b9a8a5ccdb0"/>
        <function-ref name="startMaster" scoped="" ref="0x2b9a8a5d2020"/>
        <function-ref name="isMaster" scoped="" ref="0x2b9a8a5cc900"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TDMALinkRcv" ref="0x2b9a8a5dcb50" loc="11:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TDMALinkRcv" scoped="" ref="0x2b9a8a5dcb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9a8a5cb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b9a8a5ec7e0" loc="12:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b9a8a5ec7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b9a8a5ecb60"/>
        <function-ref name="source" scoped="" ref="0x2b9a8a5eccf0"/>
        <function-ref name="address" scoped="" ref="0x2b9a8a5ece80"/>
        <function-ref name="destination" scoped="" ref="0x2b9a8a5e0030"/>
        <function-ref name="setSource" scoped="" ref="0x2b9a8a5e01c0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b9a8a5e0350"/>
        <function-ref name="type" scoped="" ref="0x2b9a8a5e04e0"/>
        <function-ref name="setType" scoped="" ref="0x2b9a8a5e0670"/>
        <function-ref name="isForMe" scoped="" ref="0x2b9a8a5e0800"/>
        <function-ref name="setGroup" scoped="" ref="0x2b9a8a5e0990"/>
        <function-ref name="localGroup" scoped="" ref="0x2b9a8a5e0b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2b9a8a621210" loc="58:/home/zdenial/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x2b9a8a621210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9a8a621590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b9a8a57ccd0" loc="57:/home/zdenial/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x2b9a8a57ccd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b9a8a6240a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9a8a6200f0" loc="42:/home/zdenial/tinyos/tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b9a8a6200f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9a8a620470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x2b9a8a61b190" loc="6:/home/zdenial/tinyos/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x2b9a8a61b190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9a8a61b510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9a8a61c360" loc="4:/home/zdenial/tinyos/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b9a8a61c360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9a8a61c6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x2b9a8a61ca70" loc="5:/home/zdenial/tinyos/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x2b9a8a61ca70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9a8a61cdf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x2b9a8a61b870" loc="7:/home/zdenial/tinyos/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x2b9a8a61b870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9a8a61bbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9a8a6354a0" loc="2:/home/zdenial/tinyos/tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b9a8a6354a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9a8a635820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x2b9a8a61d910" loc="39:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x2b9a8a61d910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9a8a61dc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x2b9a8a658de0" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x2b9a8a658de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x2b9a8a63ac70"/>
        <function-ref name="initTimerB" scoped="" ref="0x2b9a8a63a310"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x2b9a8a63a4a0"/>
        <function-ref name="initTimerA" scoped="" ref="0x2b9a8a63a630"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x2b9a8a63a180"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x2b9a8a63a7c0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x2b9a8a63a950"/>
        <function-ref name="initClocks" scoped="" ref="0x2b9a8a63aae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9a8a63e850" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b9a8a63e850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9a8a63ebd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x2b9a8a669020" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x2b9a8a669020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x2b9a8a668020"/>
        <function-ref name="initTimerB" scoped="" ref="0x2b9a8a669530"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x2b9a8a6696c0"/>
        <function-ref name="initTimerA" scoped="" ref="0x2b9a8a669850"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x2b9a8a6693a0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x2b9a8a6699e0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x2b9a8a669b70"/>
        <function-ref name="initClocks" scoped="" ref="0x2b9a8a669d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2b9a8a668360" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b9a8a668360"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b9a8a6686e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9a8a66a7e0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b9a8a66a7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9a8a66ab60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x2b9a8a6ab5a0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x2b9a8a6ab5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b9a8a6ab920"/>
        <function-ref name="getControl" scoped="" ref="0x2b9a8a6abab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9a8a6abc40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b9a8a6abdd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b9a8a6aa020"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9a8a6aa1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b9a8a6aa340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b9a8a6aa4d0"/>
        <function-ref name="setControl" scoped="" ref="0x2b9a8a6aa660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x2b9a8a6bc020" loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x2b9a8a6bc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b9a8a6bc3a0"/>
        <function-ref name="getControl" scoped="" ref="0x2b9a8a6bc530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9a8a6bc6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b9a8a6bc850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b9a8a6bc9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9a8a6bcb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b9a8a6bcd00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b9a8a6bb020"/>
        <function-ref name="setControl" scoped="" ref="0x2b9a8a6bb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x2b9a8a6a2700" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x2b9a8a6a2700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9a8a6a2a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b9a8a6a2c10"/>
        <function-ref name="captured" scoped="" ref="0x2b9a8a6a2da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9a8a6a1020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9a8a6a11b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b9a8a6a1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x2b9a8a6cea20" loc="68:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x2b9a8a6cea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9a8a6ceda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b9a8a6cd020"/>
        <function-ref name="captured" scoped="" ref="0x2b9a8a6cd1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9a8a6cd340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9a8a6cd4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b9a8a6cd660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x2b9a8a6a9aa0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x2b9a8a6a9aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9a8a6a9e20"/>
        <function-ref name="setEvent" scoped="" ref="0x2b9a8a6a4020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b9a8a6a41b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b9a8a6a4340"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8a6a44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x2b9a8a6d4020" loc="61:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x2b9a8a6d4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9a8a6d43a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2b9a8a6d4530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b9a8a6d46c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b9a8a6d4850"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8a6d49e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x2b9a8a6caa20" loc="71:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x2b9a8a6caa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9a8a6cada0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b9a8a6c9020"/>
        <function-ref name="captured" scoped="" ref="0x2b9a8a6c91b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9a8a6c9340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9a8a6c94d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b9a8a6c9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x2b9a8a6b75a0" loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x2b9a8a6b75a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b9a8a6b7920"/>
        <function-ref name="getControl" scoped="" ref="0x2b9a8a6b7ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9a8a6b7c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b9a8a6b7dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b9a8a6b6020"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9a8a6b61b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b9a8a6b6340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b9a8a6b64d0"/>
        <function-ref name="setControl" scoped="" ref="0x2b9a8a6b6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x2b9a8a6adb10" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x2b9a8a6adb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b9a8a693020"/>
        <function-ref name="getControl" scoped="" ref="0x2b9a8a6931b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9a8a693340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b9a8a6934d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b9a8a693660"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9a8a6937f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b9a8a693980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b9a8a693b10"/>
        <function-ref name="setControl" scoped="" ref="0x2b9a8a693ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x2b9a8a6d0a20" loc="66:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x2b9a8a6d0a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9a8a6d0da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b9a8a6cf020"/>
        <function-ref name="captured" scoped="" ref="0x2b9a8a6cf1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9a8a6cf340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9a8a6cf4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b9a8a6cf660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x2b9a8a6b23e0" loc="59:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x2b9a8a6b23e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9a8a6b2760"/>
        <function-ref name="setEvent" scoped="" ref="0x2b9a8a6b28f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b9a8a6b2a80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b9a8a6b2c10"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8a6b2da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x2b9a8a6bb5a0" loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x2b9a8a6bb5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b9a8a6bba20"/>
        <function-ref name="getControl" scoped="" ref="0x2b9a8a6bbbb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9a8a6bbd40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b9a8a6ba020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b9a8a6ba1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9a8a6ba340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b9a8a6ba4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b9a8a6ba660"/>
        <function-ref name="setControl" scoped="" ref="0x2b9a8a6ba7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x2b9a8a6a1700" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x2b9a8a6a1700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9a8a6a1a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b9a8a6a1c10"/>
        <function-ref name="captured" scoped="" ref="0x2b9a8a6a1da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9a8a6be020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9a8a6be1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b9a8a6be340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x2b9a8a6cda20" loc="69:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x2b9a8a6cda20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9a8a6cdda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b9a8a6cc020"/>
        <function-ref name="captured" scoped="" ref="0x2b9a8a6cc1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9a8a6cc340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9a8a6cc4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b9a8a6cc660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x2b9a8a6babe0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x2b9a8a6babe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b9a8a6b9020"/>
        <function-ref name="getControl" scoped="" ref="0x2b9a8a6b91b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9a8a6b9340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b9a8a6b94d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b9a8a6b9660"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9a8a6b97f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b9a8a6b9980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b9a8a6b9b10"/>
        <function-ref name="setControl" scoped="" ref="0x2b9a8a6b9ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x2b9a8a6a4890" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x2b9a8a6a4890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9a8a6a4c10"/>
        <function-ref name="setEvent" scoped="" ref="0x2b9a8a6a4da0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b9a8a6a3020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b9a8a6a31b0"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8a6a3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x2b9a8a69b060" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x2b9a8a69b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8a69b3e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b9a8a69b570"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9a8a69b700"/>
        <function-ref name="get" scoped="" ref="0x2b9a8a69b890"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9a8a69ba20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9a8a69bbb0"/>
        <function-ref name="getMode" scoped="" ref="0x2b9a8a69bd40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9a8a69a020"/>
        <function-ref name="overflow" scoped="" ref="0x2b9a8a69a1b0"/>
        <function-ref name="setMode" scoped="" ref="0x2b9a8a69a340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b9a8a69a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x2b9a8a6d4da0" loc="62:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x2b9a8a6d4da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9a8a6d3180"/>
        <function-ref name="setEvent" scoped="" ref="0x2b9a8a6d3310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b9a8a6d34a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b9a8a6d3630"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8a6d37c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x2b9a8a6910c0" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x2b9a8a6910c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b9a8a691440"/>
        <function-ref name="getControl" scoped="" ref="0x2b9a8a6915d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9a8a691760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b9a8a6918f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b9a8a691a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9a8a691c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b9a8a691da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b9a8a6ab020"/>
        <function-ref name="setControl" scoped="" ref="0x2b9a8a6ab1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x2b9a8a6b6a50" loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x2b9a8a6b6a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b9a8a6b6dd0"/>
        <function-ref name="getControl" scoped="" ref="0x2b9a8a6b5020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9a8a6b51b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b9a8a6b5340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b9a8a6b54d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9a8a6b5660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b9a8a6b57f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b9a8a6b5980"/>
        <function-ref name="setControl" scoped="" ref="0x2b9a8a6b5b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x2b9a8a6c0690" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x2b9a8a6c0690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9a8a6c0a10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b9a8a6c0ba0"/>
        <function-ref name="captured" scoped="" ref="0x2b9a8a6c0d30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9a8a6a2020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9a8a6a21b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b9a8a6a2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x2b9a8a6cfa20" loc="67:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x2b9a8a6cfa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9a8a6cfda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b9a8a6ce020"/>
        <function-ref name="captured" scoped="" ref="0x2b9a8a6ce1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9a8a6ce340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9a8a6ce4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b9a8a6ce660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x2b9a8a6a5cf0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x2b9a8a6a5cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9a8a6a90a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2b9a8a6a9230"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b9a8a6a93c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b9a8a6a9550"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8a6a96e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x2b9a8a6b11f0" loc="60:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x2b9a8a6b11f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9a8a6b1570"/>
        <function-ref name="setEvent" scoped="" ref="0x2b9a8a6b1700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b9a8a6b1890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b9a8a6b1a20"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8a6b1bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x2b9a8a6cca20" loc="70:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x2b9a8a6cca20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9a8a6ccda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b9a8a6ca020"/>
        <function-ref name="captured" scoped="" ref="0x2b9a8a6ca1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9a8a6ca340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9a8a6ca4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b9a8a6ca660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x2b9a8a6b80c0" loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x2b9a8a6b80c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b9a8a6b8440"/>
        <function-ref name="getControl" scoped="" ref="0x2b9a8a6b85d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9a8a6b8760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b9a8a6b88f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b9a8a6b8a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9a8a6b8c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b9a8a6b8da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b9a8a6b7020"/>
        <function-ref name="setControl" scoped="" ref="0x2b9a8a6b71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x2b9a8a6be6c0" loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x2b9a8a6be6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8a6bea40"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b9a8a6bebd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9a8a6bed60"/>
        <function-ref name="get" scoped="" ref="0x2b9a8a6bd020"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9a8a6bd1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9a8a6bd340"/>
        <function-ref name="getMode" scoped="" ref="0x2b9a8a6bd4d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9a8a6bd660"/>
        <function-ref name="overflow" scoped="" ref="0x2b9a8a6bd7f0"/>
        <function-ref name="setMode" scoped="" ref="0x2b9a8a6bd980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b9a8a6bdb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x2b9a8a6d3b80" loc="63:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x2b9a8a6d3b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9a8a6d2020"/>
        <function-ref name="setEvent" scoped="" ref="0x2b9a8a6d21b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b9a8a6d2340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b9a8a6d24d0"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8a6d2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x2b9a8a6d1a20" loc="65:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x2b9a8a6d1a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9a8a6d1da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b9a8a6d0020"/>
        <function-ref name="captured" scoped="" ref="0x2b9a8a6d01b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9a8a6d0340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9a8a6d04d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b9a8a6d0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x2b9a8a6d2a20" loc="64:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x2b9a8a6d2a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9a8a6d1020"/>
        <function-ref name="setEvent" scoped="" ref="0x2b9a8a6d11b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b9a8a6d1340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b9a8a6d14d0"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8a6d1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x2b9a8a6b3570" loc="58:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x2b9a8a6b3570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9a8a6b38f0"/>
        <function-ref name="setEvent" scoped="" ref="0x2b9a8a6b3a80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b9a8a6b3c10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b9a8a6b3da0"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8a6b2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x2b9a8a6b4020" loc="57:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x2b9a8a6b4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b9a8a6b43a0"/>
        <function-ref name="getControl" scoped="" ref="0x2b9a8a6b4530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9a8a6b46c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b9a8a6b4850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b9a8a6b49e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9a8a6b4b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b9a8a6b4d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b9a8a6b3020"/>
        <function-ref name="setControl" scoped="" ref="0x2b9a8a6b31b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x2b9a8a6fd2f0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x2b9a8a6fd2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9a8a6fd670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x2b9a8a6fec20" loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x2b9a8a6fec20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9a8a6fd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x2b9a8a6fd940" loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x2b9a8a6fd940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9a8a6fdcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x2b9a8a6fe5b0" loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b9a8a6fe5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9a8a6fe950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b9a8a701c80" loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b9a8a701c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8a6ff0a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b9a8a6ff230"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9a8a6ff3c0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8a6ff550"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9a8a6ff6e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9a8a6ff870"/>
        <function-ref name="getMode" scoped="" ref="0x2b9a8a6ffa00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9a8a6ffb90"/>
        <function-ref name="overflow" scoped="" ref="0x2b9a8a6ffd20"/>
        <function-ref name="setMode" scoped="" ref="0x2b9a8a6fe020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b9a8a6fe1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x2b9a8a71a2f0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x2b9a8a71a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9a8a71a670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x2b9a8a71bc20" loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x2b9a8a71bc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9a8a71a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x2b9a8a71a940" loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x2b9a8a71a940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9a8a71acc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x2b9a8a71b5b0" loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b9a8a71b5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9a8a71b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b9a8a6f9c80" loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b9a8a6f9c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8a71c0a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b9a8a71c230"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9a8a71c3c0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8a71c550"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9a8a71c6e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9a8a71c870"/>
        <function-ref name="getMode" scoped="" ref="0x2b9a8a71ca00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9a8a71cb90"/>
        <function-ref name="overflow" scoped="" ref="0x2b9a8a71cd20"/>
        <function-ref name="setMode" scoped="" ref="0x2b9a8a71b020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b9a8a71b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b9a8a761a90" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b9a8a761a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9a8a761e10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b9a8a760020"/>
        <function-ref name="captured" scoped="" ref="0x2b9a8a7601b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9a8a760340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9a8a7604d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b9a8a760660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b9a8a7169d0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b9a8a7169d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b9a8a716d50"/>
        <function-ref name="getControl" scoped="" ref="0x2b9a8a762020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9a8a7621b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b9a8a762340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b9a8a7624d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9a8a762660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b9a8a7627f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b9a8a762980"/>
        <function-ref name="setControl" scoped="" ref="0x2b9a8a762b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b9a8a75e020" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b9a8a75e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9a8a75e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b9a8a762de0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b9a8a762de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9a8a761180"/>
        <function-ref name="setEvent" scoped="" ref="0x2b9a8a761310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b9a8a7614a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b9a8a761630"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8a7617c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b9a8a760930" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b9a8a760930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8a760cb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b9a8a760e40"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9a8a75f020"/>
        <function-ref name="get" scoped="" ref="0x2b9a8a75f1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9a8a75f340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9a8a75f4d0"/>
        <function-ref name="getMode" scoped="" ref="0x2b9a8a75f660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9a8a75f7f0"/>
        <function-ref name="overflow" scoped="" ref="0x2b9a8a75f980"/>
        <function-ref name="setMode" scoped="" ref="0x2b9a8a75fb10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b9a8a75fca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b9a8a758160" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b9a8a758160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9a8a7584e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b9a8a758670"/>
        <function-ref name="captured" scoped="" ref="0x2b9a8a758800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9a8a758990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9a8a758b20"/>
        <function-ref name="setEdge" scoped="" ref="0x2b9a8a758cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b9a8a75b020" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b9a8a75b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b9a8a75b3a0"/>
        <function-ref name="getControl" scoped="" ref="0x2b9a8a75b530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9a8a75b6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b9a8a75b850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b9a8a75b9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9a8a75bb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b9a8a75bd00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b9a8a759020"/>
        <function-ref name="setControl" scoped="" ref="0x2b9a8a7591b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b9a8a7567a0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b9a8a7567a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9a8a756b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b9a8a759480" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b9a8a759480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9a8a759800"/>
        <function-ref name="setEvent" scoped="" ref="0x2b9a8a759990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b9a8a759b20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b9a8a759cb0"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8a759e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b9a8a757020" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b9a8a757020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8a7573a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b9a8a757530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9a8a7576c0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8a757850"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9a8a7579e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9a8a757b70"/>
        <function-ref name="getMode" scoped="" ref="0x2b9a8a757d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9a8a756020"/>
        <function-ref name="overflow" scoped="" ref="0x2b9a8a7561b0"/>
        <function-ref name="setMode" scoped="" ref="0x2b9a8a756340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b9a8a7564d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b9a8a7777a0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b9a8a7777a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9a8a777b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b9a8a777cb0"/>
        <function-ref name="captured" scoped="" ref="0x2b9a8a777e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9a8a776020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9a8a7761b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b9a8a776340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b9a8a7796d0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b9a8a7796d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b9a8a779a50"/>
        <function-ref name="getControl" scoped="" ref="0x2b9a8a779be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9a8a779d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b9a8a778020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b9a8a7781b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9a8a778340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b9a8a7784d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b9a8a778660"/>
        <function-ref name="setControl" scoped="" ref="0x2b9a8a7787f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b9a8a775c50" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b9a8a775c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9a8a774020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b9a8a778ac0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b9a8a778ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9a8a778e40"/>
        <function-ref name="setEvent" scoped="" ref="0x2b9a8a777020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b9a8a7771b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b9a8a777340"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8a7774d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b9a8a776610" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b9a8a776610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8a776990"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b9a8a776b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9a8a776cb0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8a776e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9a8a775020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9a8a7751b0"/>
        <function-ref name="getMode" scoped="" ref="0x2b9a8a775340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9a8a7754d0"/>
        <function-ref name="overflow" scoped="" ref="0x2b9a8a775660"/>
        <function-ref name="setMode" scoped="" ref="0x2b9a8a7757f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b9a8a775980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b9a8a76fcb0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b9a8a76fcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9a8a76e0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b9a8a76e230"/>
        <function-ref name="captured" scoped="" ref="0x2b9a8a76e3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9a8a76e550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9a8a76e6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b9a8a76e870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b9a8a772b30" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b9a8a772b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b9a8a770020"/>
        <function-ref name="getControl" scoped="" ref="0x2b9a8a7701b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9a8a770340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b9a8a7704d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b9a8a770660"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9a8a7707f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b9a8a770980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b9a8a770b10"/>
        <function-ref name="setControl" scoped="" ref="0x2b9a8a770ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b9a8a76c2f0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b9a8a76c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9a8a76c670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b9a8a76f020" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b9a8a76f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9a8a76f3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2b9a8a76f530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b9a8a76f6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b9a8a76f850"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8a76f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b9a8a76eb40" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b9a8a76eb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8a76d020"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b9a8a76d1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9a8a76d340"/>
        <function-ref name="get" scoped="" ref="0x2b9a8a76d4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9a8a76d660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9a8a76d7f0"/>
        <function-ref name="getMode" scoped="" ref="0x2b9a8a76d980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9a8a76db10"/>
        <function-ref name="overflow" scoped="" ref="0x2b9a8a76dca0"/>
        <function-ref name="setMode" scoped="" ref="0x2b9a8a76de30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b9a8a76c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b9a8a7672f0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b9a8a7672f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9a8a767670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b9a8a767800"/>
        <function-ref name="captured" scoped="" ref="0x2b9a8a767990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9a8a767b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9a8a767cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b9a8a767e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b9a8a769220" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b9a8a769220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b9a8a7695a0"/>
        <function-ref name="getControl" scoped="" ref="0x2b9a8a769730"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9a8a7698c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b9a8a769a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b9a8a769be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9a8a769d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b9a8a768020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b9a8a7681b0"/>
        <function-ref name="setControl" scoped="" ref="0x2b9a8a768340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b9a8a78b7a0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b9a8a78b7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9a8a78bb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b9a8a768610" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b9a8a768610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9a8a768990"/>
        <function-ref name="setEvent" scoped="" ref="0x2b9a8a768b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b9a8a768cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b9a8a768e40"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8a767020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b9a8a78c160" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b9a8a78c160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8a78c4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b9a8a78c670"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9a8a78c800"/>
        <function-ref name="get" scoped="" ref="0x2b9a8a78c990"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9a8a78cb20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9a8a78ccb0"/>
        <function-ref name="getMode" scoped="" ref="0x2b9a8a78ce40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9a8a78b020"/>
        <function-ref name="overflow" scoped="" ref="0x2b9a8a78b1b0"/>
        <function-ref name="setMode" scoped="" ref="0x2b9a8a78b340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b9a8a78b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b9a8a7857a0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b9a8a7857a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9a8a785b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b9a8a785cb0"/>
        <function-ref name="captured" scoped="" ref="0x2b9a8a785e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9a8a784020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9a8a7841b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b9a8a784340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b9a8a7886d0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b9a8a7886d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b9a8a788a50"/>
        <function-ref name="getControl" scoped="" ref="0x2b9a8a788be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9a8a788d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b9a8a787020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b9a8a7871b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9a8a787340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b9a8a7874d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b9a8a787660"/>
        <function-ref name="setControl" scoped="" ref="0x2b9a8a7877f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b9a8a783c50" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b9a8a783c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9a8a782020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b9a8a787ac0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b9a8a787ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9a8a787e40"/>
        <function-ref name="setEvent" scoped="" ref="0x2b9a8a785020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b9a8a7851b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b9a8a785340"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8a7854d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b9a8a784610" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b9a8a784610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8a784990"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b9a8a784b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9a8a784cb0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8a784e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9a8a783020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9a8a7831b0"/>
        <function-ref name="getMode" scoped="" ref="0x2b9a8a783340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9a8a7834d0"/>
        <function-ref name="overflow" scoped="" ref="0x2b9a8a783660"/>
        <function-ref name="setMode" scoped="" ref="0x2b9a8a7837f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b9a8a783980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b9a8a77ecb0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b9a8a77ecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9a8a77d0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b9a8a77d230"/>
        <function-ref name="captured" scoped="" ref="0x2b9a8a77d3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9a8a77d550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9a8a77d6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b9a8a77d870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b9a8a780b30" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b9a8a780b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b9a8a77f020"/>
        <function-ref name="getControl" scoped="" ref="0x2b9a8a77f1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9a8a77f340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b9a8a77f4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b9a8a77f660"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9a8a77f7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b9a8a77f980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b9a8a77fb10"/>
        <function-ref name="setControl" scoped="" ref="0x2b9a8a77fca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b9a8a77b2f0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b9a8a77b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9a8a77b670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b9a8a77e020" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b9a8a77e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9a8a77e3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2b9a8a77e530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b9a8a77e6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b9a8a77e850"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8a77e9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b9a8a77db40" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b9a8a77db40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8a77c020"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b9a8a77c1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9a8a77c340"/>
        <function-ref name="get" scoped="" ref="0x2b9a8a77c4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9a8a77c660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9a8a77c7f0"/>
        <function-ref name="getMode" scoped="" ref="0x2b9a8a77c980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9a8a77cb10"/>
        <function-ref name="overflow" scoped="" ref="0x2b9a8a77cca0"/>
        <function-ref name="setMode" scoped="" ref="0x2b9a8a77ce30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b9a8a77b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b9a8a79b2f0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b9a8a79b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9a8a79b670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b9a8a79b800"/>
        <function-ref name="captured" scoped="" ref="0x2b9a8a79b990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9a8a79bb20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9a8a79bcb0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b9a8a79be40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b9a8a79e220" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b9a8a79e220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b9a8a79e5a0"/>
        <function-ref name="getControl" scoped="" ref="0x2b9a8a79e730"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9a8a79e8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b9a8a79ea50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b9a8a79ebe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9a8a79ed70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b9a8a79d020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b9a8a79d1b0"/>
        <function-ref name="setControl" scoped="" ref="0x2b9a8a79d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b9a8a7997a0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b9a8a7997a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9a8a799b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b9a8a79d610" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b9a8a79d610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9a8a79d990"/>
        <function-ref name="setEvent" scoped="" ref="0x2b9a8a79db20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b9a8a79dcb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b9a8a79de40"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8a79b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b9a8a79a160" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b9a8a79a160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8a79a4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b9a8a79a670"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9a8a79a800"/>
        <function-ref name="get" scoped="" ref="0x2b9a8a79a990"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9a8a79ab20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9a8a79acb0"/>
        <function-ref name="getMode" scoped="" ref="0x2b9a8a79ae40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9a8a799020"/>
        <function-ref name="overflow" scoped="" ref="0x2b9a8a7991b0"/>
        <function-ref name="setMode" scoped="" ref="0x2b9a8a799340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b9a8a7994d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b9a8a7947a0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b9a8a7947a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9a8a794b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b9a8a794cb0"/>
        <function-ref name="captured" scoped="" ref="0x2b9a8a794e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9a8a793020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9a8a7931b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b9a8a793340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b9a8a7966d0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b9a8a7966d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b9a8a796a50"/>
        <function-ref name="getControl" scoped="" ref="0x2b9a8a796be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9a8a796d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b9a8a795020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b9a8a7951b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9a8a795340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b9a8a7954d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b9a8a795660"/>
        <function-ref name="setControl" scoped="" ref="0x2b9a8a7957f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b9a8a792c50" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b9a8a792c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9a8a791020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b9a8a795ac0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b9a8a795ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9a8a795e40"/>
        <function-ref name="setEvent" scoped="" ref="0x2b9a8a794020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b9a8a7941b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b9a8a794340"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8a7944d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b9a8a793610" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b9a8a793610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8a793990"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b9a8a793b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9a8a793cb0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8a793e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9a8a792020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9a8a7921b0"/>
        <function-ref name="getMode" scoped="" ref="0x2b9a8a792340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9a8a7924d0"/>
        <function-ref name="overflow" scoped="" ref="0x2b9a8a792660"/>
        <function-ref name="setMode" scoped="" ref="0x2b9a8a7927f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b9a8a792980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b9a8a78dcb0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b9a8a78dcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9a8a7b10a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b9a8a7b1230"/>
        <function-ref name="captured" scoped="" ref="0x2b9a8a7b13c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9a8a7b1550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9a8a7b16e0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b9a8a7b1870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b9a8a78fb30" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b9a8a78fb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b9a8a78e020"/>
        <function-ref name="getControl" scoped="" ref="0x2b9a8a78e1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9a8a78e340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b9a8a78e4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b9a8a78e660"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9a8a78e7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b9a8a78e980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b9a8a78eb10"/>
        <function-ref name="setControl" scoped="" ref="0x2b9a8a78eca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b9a8a7af2f0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b9a8a7af2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9a8a7af670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b9a8a78d020" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b9a8a78d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9a8a78d3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2b9a8a78d530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b9a8a78d6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b9a8a78d850"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8a78d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b9a8a7b1b40" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b9a8a7b1b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8a7b0020"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b9a8a7b01b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9a8a7b0340"/>
        <function-ref name="get" scoped="" ref="0x2b9a8a7b04d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9a8a7b0660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9a8a7b07f0"/>
        <function-ref name="getMode" scoped="" ref="0x2b9a8a7b0980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9a8a7b0b10"/>
        <function-ref name="overflow" scoped="" ref="0x2b9a8a7b0ca0"/>
        <function-ref name="setMode" scoped="" ref="0x2b9a8a7b0e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b9a8a7af020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x2b9a8a7a9240" loc="7:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x2b9a8a7a9240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9a8a7a95c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x2b9a8a7adaa0" loc="4:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x2b9a8a7adaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9a8a7ade20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x2b9a8a7aa260" loc="5:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x2b9a8a7aa260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9a8a7aa5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x2b9a8a7aa9f0" loc="6:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x2b9a8a7aa9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9a8a7aad70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2b9a8a28e080" loc="55:/home/zdenial/tinyos/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b9a8a28e080"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b9a8a28e400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2b9a8a1512d0" loc="51:/home/zdenial/tinyos/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x2b9a8a1512d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b9a8a151650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2b9a8a3267d0" loc="52:/home/zdenial/tinyos/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x2b9a8a3267d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b9a8a326b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x2b9a8a63cb50" loc="39:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x2b9a8a63cb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x2b9a8a7f3b10"/>
        <function-ref name="initTimerB" scoped="" ref="0x2b9a8a7f31b0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x2b9a8a7f3340"/>
        <function-ref name="initTimerA" scoped="" ref="0x2b9a8a7f34d0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x2b9a8a7f3020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x2b9a8a7f3660"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x2b9a8a7f37f0"/>
        <function-ref name="initClocks" scoped="" ref="0x2b9a8a7f3980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2b9a8a7e7dc0" loc="60:/home/zdenial/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x2b9a8a7e7dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9a8a7e6180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b9a8a7c9590" loc="57:/home/zdenial/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x2b9a8a7c9590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b9a8a7c9910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2b9a8a7e76c0" loc="59:/home/zdenial/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x2b9a8a7e76c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9a8a7e7a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2b9a8a7c9c00" loc="58:/home/zdenial/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x2b9a8a7c9c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9a8a7e7020"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b9a8a7e71b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b9a8a7e7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b9a8a0771d0" loc="48:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x2b9a8a0771d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9a8a077550"/>
        <function-ref name="runTask" scoped="" ref="0x2b9a8a0776e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b9a8a0e13a0" loc="47:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x2b9a8a0e13a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9a8a0e1720"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b9a8a0e18b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b9a8a0e1a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b9a8a535040" loc="56:/home/zdenial/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x2b9a8a535040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9a8a5353c0"/>
        <function-ref name="runTask" scoped="" ref="0x2b9a8a535550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2b9a8a5325d0" loc="57:/home/zdenial/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x2b9a8a5325d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b9a8a532950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b9a8a537140" loc="55:/home/zdenial/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x2b9a8a537140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9a8a5374c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b9a8a537650"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b9a8a5377e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b9a8a803ae0" loc="12:TDMALinkC.nc">
      <component-ref qname="TDMALinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b9a8a803ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8a803e60"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8a802020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8a8021b0"/>
        <function-ref name="cancel" scoped="" ref="0x2b9a8a802340"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8a8024d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b9a8a803490" loc="11:TDMALinkC.nc">
      <component-ref qname="TDMALinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b9a8a803490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9a8a803810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b9a8a625590" loc="10:TDMALinkC.nc">
      <component-ref qname="TDMALinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b9a8a625590"/></type-interface>
      <instance>
        <interfacedef-ref qname="TDMALinkControl"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x2b9a8a8031b0"/>
        <function-ref name="startDone" scoped="" ref="0x2b9a8a625aa0"/>
        <function-ref name="startSlave" scoped="" ref="0x2b9a8a625c30"/>
        <function-ref name="stopDone" scoped="" ref="0x2b9a8a625dc0"/>
        <function-ref name="startMaster" scoped="" ref="0x2b9a8a803020"/>
        <function-ref name="isMaster" scoped="" ref="0x2b9a8a625910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0x2b9a8a81b470" loc="29:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMControl" scoped="" ref="0x2b9a8a81b470"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b9a8a81b7f0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b9a8a81b980"/>
        <function-ref name="start" scoped="" ref="0x2b9a8a81bb10"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8a81bca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="JoinAnsRcv" ref="0x2b9a8a821d30" loc="43:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="JoinAnsRcv" scoped="" ref="0x2b9a8a821d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9a8a8200e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b9a8a7fc610" loc="24:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b9a8a7fc610"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8a7fc990"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8a7fcb20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8a7fccb0"/>
        <function-ref name="cancel" scoped="" ref="0x2b9a8a7fce40"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8a7fa020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncSnd" ref="0x2b9a8a81a290" loc="32:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncSnd" scoped="" ref="0x2b9a8a81a290"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8a812090"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8a80a970"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8a80a4f0"/>
        <function-ref name="cancel" scoped="" ref="0x2b9a8a812960"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8a812e70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="JoinReqRandom" ref="0x2b9a8a827ca0" loc="36:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="JoinReqRandom" scoped="" ref="0x2b9a8a827ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b9a8a82a0a0"/>
        <function-ref name="rand32" scoped="" ref="0x2b9a8a82a230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="JoinReqSnd" ref="0x2b9a8a823a70" loc="39:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="JoinReqSnd" scoped="" ref="0x2b9a8a823a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8a823df0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8a822020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8a8221b0"/>
        <function-ref name="cancel" scoped="" ref="0x2b9a8a822340"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8a8224d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="JoinReqDelayTimer" ref="0x2b9a8a82a710" loc="37:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="JoinReqDelayTimer" scoped="" ref="0x2b9a8a82a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9a8a824c40"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8a8251e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9a8a824020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9a8a825ae0"/>
        <function-ref name="getdt" scoped="" ref="0x2b9a8a823590"/>
        <function-ref name="gett0" scoped="" ref="0x2b9a8a823110"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9a8a825660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9a8a828390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9a8a824630"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9a8a828860"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8a828d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataSnd" ref="0x2b9a8a820400" loc="45:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DataSnd" scoped="" ref="0x2b9a8a820400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8a820780"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8a820910"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8a820aa0"/>
        <function-ref name="cancel" scoped="" ref="0x2b9a8a820c30"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8a820dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b9a8a7fa300" loc="25:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b9a8a7fa300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9a8a7fa680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncRcv" ref="0x2b9a8a8080b0" loc="33:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncRcv" scoped="" ref="0x2b9a8a8080b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9a8a808430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b9a8a7fd6e0" loc="23:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b9a8a7fd6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TDMALinkControl"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x2b9a8a7fc340"/>
        <function-ref name="startDone" scoped="" ref="0x2b9a8a7fdbf0"/>
        <function-ref name="startSlave" scoped="" ref="0x2b9a8a7fdd80"/>
        <function-ref name="stopDone" scoped="" ref="0x2b9a8a7fc020"/>
        <function-ref name="startMaster" scoped="" ref="0x2b9a8a7fc1b0"/>
        <function-ref name="isMaster" scoped="" ref="0x2b9a8a7fda60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TSPacket" ref="0x2b9a8a82cde0" loc="34:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TSPacket" scoped="" ref="0x2b9a8a82cde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x2b9a8a82fc60"/>
        <function-ref name="eventTime" scoped="" ref="0x2b9a8a82b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="JoinReqRcv" ref="0x2b9a8a822820" loc="40:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="JoinReqRcv" scoped="" ref="0x2b9a8a822820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9a8a822ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="JoinAnsSnd" ref="0x2b9a8a821020" loc="42:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="JoinAnsSnd" scoped="" ref="0x2b9a8a821020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8a8213a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8a821530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8a8216c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b9a8a821850"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8a8219e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketLink" ref="0x2b9a8a813880" loc="30:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x2b9a8a813880"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b9a8a813c00"/>
        <function-ref name="setRetries" scoped="" ref="0x2b9a8a813d90"/>
        <function-ref name="getRetries" scoped="" ref="0x2b9a8a7f6020"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b9a8a7f61b0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b9a8a7f6340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b9a8a7fa990" loc="28:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b9a8a7fa990"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b9a8a7fad10"/>
        <function-ref name="source" scoped="" ref="0x2b9a8a7f9020"/>
        <function-ref name="address" scoped="" ref="0x2b9a8a7f91b0"/>
        <function-ref name="destination" scoped="" ref="0x2b9a8a7f9340"/>
        <function-ref name="setSource" scoped="" ref="0x2b9a8a7f94d0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b9a8a7f9660"/>
        <function-ref name="type" scoped="" ref="0x2b9a8a7f97f0"/>
        <function-ref name="setType" scoped="" ref="0x2b9a8a7f9980"/>
        <function-ref name="isForMe" scoped="" ref="0x2b9a8a7f9b10"/>
        <function-ref name="setGroup" scoped="" ref="0x2b9a8a7f9ca0"/>
        <function-ref name="localGroup" scoped="" ref="0x2b9a8a7f9e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SlotScheduler" ref="0x2b9a8a841d40" loc="47:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SlotScheduler" scoped="" ref="0x2b9a8a841d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlotScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x2b9a8a81ebd0"/>
        <function-ref name="slotStarted" scoped="" ref="0x2b9a8a81e270"/>
        <function-ref name="getScheduledSlot" scoped="" ref="0x2b9a8a81e400"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9a8a81e590"/>
        <function-ref name="syncEpochTime" scoped="" ref="0x2b9a8a81e720"/>
        <function-ref name="start" scoped="" ref="0x2b9a8a81e8b0"/>
        <function-ref name="slotEnded" scoped="" ref="0x2b9a8a81ea40"/>
        <function-ref name="getEpochTime" scoped="" ref="0x2b9a8a81e0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b9a8a8a5e20" loc="38:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <component-ref qname="SerialPrintfC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2b9a8a8a5e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b9a8a8a71c0"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8a8a7350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0x2b9a8a89b7f0" loc="44:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x2b9a8a89b7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2b9a8a89bb70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartByte" ref="0x2b9a8a89ebd0" loc="39:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x2b9a8a89ebd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8a8a1020"/>
        <function-ref name="receive" scoped="" ref="0x2b9a8a8a11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9a8a8a1c80" loc="43:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b9a8a8a1c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9a8a8a00a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartControl" ref="0x2b9a8a8a2020" loc="38:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartControl" scoped="" ref="0x2b9a8a8a2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b9a8a8a23a0"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8a8a2530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b9a8a8a14f0" loc="42:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2b9a8a8a14f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b9a8a8a1870"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8a8a1a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b9a8a8b9e10" loc="6:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x2b9a8a8b9e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8a8b81c0"/>
        <function-ref name="receive" scoped="" ref="0x2b9a8a8b8350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b9a8a8b1e10" loc="5:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x2b9a8a8b1e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8a8b91c0"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b9a8a8b9350"/>
        <function-ref name="receive" scoped="" ref="0x2b9a8a8b94e0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b9a8a8b9670"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b9a8a8b9800"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b9a8a8b9990"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8a8b9b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b9a8a8a36a0" loc="4:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2b9a8a8a36a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b9a8a8a3a20"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8a8a3bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b9a8add08f0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2b9a8add08f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b9a8add0c70"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b9a8add0e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b9a8adce060" loc="47:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x2b9a8adce060"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8adce3e0"/>
        <function-ref name="receive" scoped="" ref="0x2b9a8adce570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x2b9a8adce800" loc="49:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2b9a8adce800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b9a8adceb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b9a8adcf0c0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x2b9a8adcf0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8adcf440"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b9a8adcf5d0"/>
        <function-ref name="receive" scoped="" ref="0x2b9a8adcf760"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b9a8adcf8f0"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b9a8adcfa80"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b9a8adcfc10"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8adcfda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b9a8add2c00" loc="44:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b9a8add2c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9a8add0020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9a8add01b0"/>
        <function-ref name="request" scoped="" ref="0x2b9a8add0340"/>
        <function-ref name="granted" scoped="" ref="0x2b9a8add04d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9a8add0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x2b9a8a928450" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9a8a928450"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b9a8a9287d0"/>
        <function-ref name="configure" scoped="" ref="0x2b9a8a928960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b9a8a924850" loc="44:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x2b9a8a924850"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8a924bd0"/>
        <function-ref name="receive" scoped="" ref="0x2b9a8a924d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x2b9a8a922a40" loc="47:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2b9a8a922a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b9a8a922dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b9a8a9251d0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x2b9a8a9251d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8a925550"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b9a8a9256e0"/>
        <function-ref name="receive" scoped="" ref="0x2b9a8a925870"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b9a8a925a00"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b9a8a925b90"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b9a8a925d20"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8a924020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x2b9a8a923690" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x2b9a8a923690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9a8a923a10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9a8a923ba0"/>
        <function-ref name="request" scoped="" ref="0x2b9a8a923d30"/>
        <function-ref name="granted" scoped="" ref="0x2b9a8a922020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9a8a9221b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b9a8a92e8d0" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b9a8a92e8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9a8a92ec50"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9a8a92ede0"/>
        <function-ref name="request" scoped="" ref="0x2b9a8a929020"/>
        <function-ref name="granted" scoped="" ref="0x2b9a8a9291b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9a8a929340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x2b9a8a920020" loc="48:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x2b9a8a920020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b9a8a9203a0"/>
        <function-ref name="txDone" scoped="" ref="0x2b9a8a920530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x2b9a8a9d1dc0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9a8a9d1dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b9a8a9cf180"/>
        <function-ref name="configure" scoped="" ref="0x2b9a8a9cf310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b9a8a9ce890" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x2b9a8a9ce890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8a9cec30"/>
        <function-ref name="receive" scoped="" ref="0x2b9a8a9cedc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x2b9a8a9cc020" loc="49:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2b9a8a9cc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b9a8a9cc3c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x2b9a8a9cc690" loc="50:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x2b9a8a9cc690"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b9a8a9cca10"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2b9a8a9ccba0"/>
        <function-ref name="setUctl" scoped="" ref="0x2b9a8a9ccd30"/>
        <function-ref name="enableUart" scoped="" ref="0x2b9a8a9cb020"/>
        <function-ref name="setUrctl" scoped="" ref="0x2b9a8a9cb1b0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b9a8a9cb340"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2b9a8a9cb4d0"/>
        <function-ref name="getUtctl" scoped="" ref="0x2b9a8a9cb660"/>
        <function-ref name="getUrctl" scoped="" ref="0x2b9a8a9cb7f0"/>
        <function-ref name="resetUsart" scoped="" ref="0x2b9a8a9cb980"/>
        <function-ref name="getUmctl" scoped="" ref="0x2b9a8a9cbb10"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b9a8a9cbca0"/>
        <function-ref name="setUtctl" scoped="" ref="0x2b9a8a9cbe30"/>
        <function-ref name="getUbr" scoped="" ref="0x2b9a8a9ca120"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b9a8a9ca2b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x2b9a8a9ca440"/>
        <function-ref name="isUartRx" scoped="" ref="0x2b9a8a9ca5d0"/>
        <function-ref name="isUart" scoped="" ref="0x2b9a8a9ca760"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b9a8a9ca8f0"/>
        <function-ref name="isSpi" scoped="" ref="0x2b9a8a9caa80"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2b9a8a9cac10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b9a8a9cada0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2b9a8a9c9020"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b9a8a9c91b0"/>
        <function-ref name="getMode" scoped="" ref="0x2b9a8a9c9340"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2b9a8a9c96d0"/>
        <function-ref name="clrIntr" scoped="" ref="0x2b9a8a9c9860"/>
        <function-ref name="setUbr" scoped="" ref="0x2b9a8a9c99f0"/>
        <function-ref name="tx" scoped="" ref="0x2b9a8a9c9b80"/>
        <function-ref name="getUctl" scoped="" ref="0x2b9a8a9c9d10"/>
        <function-ref name="disableUart" scoped="" ref="0x2b9a8a9c8020"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b9a8a9c81b0"/>
        <function-ref name="setModeUart" scoped="" ref="0x2b9a8a9c8340"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2b9a8a9c84d0"/>
        <function-ref name="rx" scoped="" ref="0x2b9a8a9c8660"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2b9a8a9c87f0"/>
        <function-ref name="isUartTx" scoped="" ref="0x2b9a8a9c8980"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2b9a8a9c8b10"/>
        <function-ref name="disableSpi" scoped="" ref="0x2b9a8a9c8ca0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2b9a8a9c8e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b9a8a9cf6d0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x2b9a8a9cf6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8a9cfa70"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b9a8a9cfc00"/>
        <function-ref name="receive" scoped="" ref="0x2b9a8a9cfd90"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b9a8a9ce020"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b9a8a9ce1b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b9a8a9ce340"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8a9ce4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b9a8a9c7c90" loc="52:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b9a8a9c7c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9a8a9c6ac0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9a8a9c54e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9a8a9c5020"/>
        <function-ref name="overflow" scoped="" ref="0x2b9a8a9c59a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x2b9a8a9cd230" loc="48:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x2b9a8a9cd230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9a8a9cd5d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9a8a9cd760"/>
        <function-ref name="request" scoped="" ref="0x2b9a8a9cd8f0"/>
        <function-ref name="granted" scoped="" ref="0x2b9a8a9cda80"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9a8a9cdc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b9a8a9d1020" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b9a8a9d1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9a8a9d13c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9a8a9d1550"/>
        <function-ref name="request" scoped="" ref="0x2b9a8a9d16e0"/>
        <function-ref name="granted" scoped="" ref="0x2b9a8a9d1870"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9a8a9d1a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x2b9a8a9c7290" loc="51:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x2b9a8a9c7290"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b9a8a9c7630"/>
        <function-ref name="txDone" scoped="" ref="0x2b9a8a9c77c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b9a8a9c5dd0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b9a8a9c5dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b9a8a9c3180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b9a8a9c3310"/>
        <function-ref name="led1On" scoped="" ref="0x2b9a8a9c34a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b9a8a9c3630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b9a8a9c37c0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8a9c3950"/>
        <function-ref name="led1Off" scoped="" ref="0x2b9a8a9c3ae0"/>
        <function-ref name="led2On" scoped="" ref="0x2b9a8a9c21b0"/>
        <function-ref name="set" scoped="" ref="0x2b9a8a9c3e00"/>
        <function-ref name="led2Off" scoped="" ref="0x2b9a8a9c3c70"/>
        <function-ref name="led0On" scoped="" ref="0x2b9a8a9c2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x2b9a8a9e43b0" loc="78:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b9a8a9e43b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b9a8a9e4730"/>
        <function-ref name="txDone" scoped="" ref="0x2b9a8a9e48c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2b9a8a9ea080" loc="76:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b9a8a9ea080"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b9a8a9ea400"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8a9ea590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x2b9a8a9ea8b0" loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b9a8a9ea8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b9a8a9eac30"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2b9a8a9eadc0"/>
        <function-ref name="setUctl" scoped="" ref="0x2b9a8a9e9020"/>
        <function-ref name="enableUart" scoped="" ref="0x2b9a8a9e91b0"/>
        <function-ref name="setUrctl" scoped="" ref="0x2b9a8a9e9340"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b9a8a9e94d0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2b9a8a9e9660"/>
        <function-ref name="getUtctl" scoped="" ref="0x2b9a8a9e97f0"/>
        <function-ref name="getUrctl" scoped="" ref="0x2b9a8a9e9980"/>
        <function-ref name="resetUsart" scoped="" ref="0x2b9a8a9e9b10"/>
        <function-ref name="getUmctl" scoped="" ref="0x2b9a8a9e9ca0"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b9a8a9e9e30"/>
        <function-ref name="setUtctl" scoped="" ref="0x2b9a8a9e7020"/>
        <function-ref name="getUbr" scoped="" ref="0x2b9a8a9e72b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b9a8a9e7440"/>
        <function-ref name="setUmctl" scoped="" ref="0x2b9a8a9e75d0"/>
        <function-ref name="isUartRx" scoped="" ref="0x2b9a8a9e7760"/>
        <function-ref name="isUart" scoped="" ref="0x2b9a8a9e78f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b9a8a9e7a80"/>
        <function-ref name="isSpi" scoped="" ref="0x2b9a8a9e7c10"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2b9a8a9e7da0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b9a8a9e6020"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2b9a8a9e61b0"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b9a8a9e6340"/>
        <function-ref name="getMode" scoped="" ref="0x2b9a8a9e64d0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2b9a8a9e6860"/>
        <function-ref name="clrIntr" scoped="" ref="0x2b9a8a9e69f0"/>
        <function-ref name="setUbr" scoped="" ref="0x2b9a8a9e6b80"/>
        <function-ref name="tx" scoped="" ref="0x2b9a8a9e6d10"/>
        <function-ref name="getUctl" scoped="" ref="0x2b9a8a9e5020"/>
        <function-ref name="disableUart" scoped="" ref="0x2b9a8a9e51b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b9a8a9e5340"/>
        <function-ref name="setModeUart" scoped="" ref="0x2b9a8a9e54d0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2b9a8a9e5660"/>
        <function-ref name="rx" scoped="" ref="0x2b9a8a9e57f0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2b9a8a9e5980"/>
        <function-ref name="isUartTx" scoped="" ref="0x2b9a8a9e5b10"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2b9a8a9e5ca0"/>
        <function-ref name="disableSpi" scoped="" ref="0x2b9a8a9e5e30"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2b9a8a9e4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x2b9a8a9fd800" loc="80:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x2b9a8a9fd800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8a9fdb80"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8a9fdd10"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8a9fc020"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8a9fc1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8a9fc340"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8a9fc4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8a9fc660"/>
        <function-ref name="get" scoped="" ref="0x2b9a8a9fc7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8a9fc980"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8a9fcb10"/>
        <function-ref name="set" scoped="" ref="0x2b9a8a9fcca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8a9fce30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8a9fb020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8a9fb2b0"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8a9fb440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2b9a8a9dcdc0" loc="76:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2b9a8a9dcdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b9a8a9db180"/>
        <function-ref name="txDone" scoped="" ref="0x2b9a8a9db310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x2b9a8a9fb800" loc="81:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x2b9a8a9fb800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8a9fbb80"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8a9fbd10"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8a9fa020"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8a9fa1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8a9fa340"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8a9fa4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8a9fa660"/>
        <function-ref name="get" scoped="" ref="0x2b9a8a9fa7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8a9fa980"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8a9fab10"/>
        <function-ref name="set" scoped="" ref="0x2b9a8a9faca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8a9fae30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8a9f9020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8a9f92b0"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8a9f9440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x2b9a8a9f9800" loc="82:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x2b9a8a9f9800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8a9f9b80"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8a9f9d10"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8a9f8020"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8a9f81b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8a9f8340"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8a9f84d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8a9f8660"/>
        <function-ref name="get" scoped="" ref="0x2b9a8a9f87f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8a9f8980"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8a9f8b10"/>
        <function-ref name="set" scoped="" ref="0x2b9a8a9f8ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8a9f8e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8a9f7020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8a9f72b0"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8a9f7440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x2b9a8a9e0020" loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x2b9a8a9e0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b9a8a9e03a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2b9a8a9e0530"/>
        <function-ref name="setUctl" scoped="" ref="0x2b9a8a9e06c0"/>
        <function-ref name="enableUart" scoped="" ref="0x2b9a8a9e0850"/>
        <function-ref name="setUrctl" scoped="" ref="0x2b9a8a9e09e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b9a8a9e0b70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2b9a8a9e0d00"/>
        <function-ref name="getUtctl" scoped="" ref="0x2b9a8a9df020"/>
        <function-ref name="getUrctl" scoped="" ref="0x2b9a8a9df1b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x2b9a8a9df340"/>
        <function-ref name="getUmctl" scoped="" ref="0x2b9a8a9df4d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b9a8a9df660"/>
        <function-ref name="setUtctl" scoped="" ref="0x2b9a8a9df7f0"/>
        <function-ref name="getUbr" scoped="" ref="0x2b9a8a9dfa80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b9a8a9dfc10"/>
        <function-ref name="setUmctl" scoped="" ref="0x2b9a8a9dfda0"/>
        <function-ref name="isUartRx" scoped="" ref="0x2b9a8a9de020"/>
        <function-ref name="isUart" scoped="" ref="0x2b9a8a9de1b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b9a8a9de340"/>
        <function-ref name="isSpi" scoped="" ref="0x2b9a8a9de4d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2b9a8a9de660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b9a8a9de7f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2b9a8a9de980"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b9a8a9deb10"/>
        <function-ref name="getMode" scoped="" ref="0x2b9a8a9deca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2b9a8a9dd220"/>
        <function-ref name="clrIntr" scoped="" ref="0x2b9a8a9dd3b0"/>
        <function-ref name="setUbr" scoped="" ref="0x2b9a8a9dd540"/>
        <function-ref name="tx" scoped="" ref="0x2b9a8a9dd6d0"/>
        <function-ref name="getUctl" scoped="" ref="0x2b9a8a9dd860"/>
        <function-ref name="disableUart" scoped="" ref="0x2b9a8a9dd9f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b9a8a9ddb80"/>
        <function-ref name="setModeUart" scoped="" ref="0x2b9a8a9ddd10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2b9a8a9dc020"/>
        <function-ref name="rx" scoped="" ref="0x2b9a8a9dc1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2b9a8a9dc340"/>
        <function-ref name="isUartTx" scoped="" ref="0x2b9a8a9dc4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2b9a8a9dc660"/>
        <function-ref name="disableSpi" scoped="" ref="0x2b9a8a9dc7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2b9a8a9dc980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2b9a8a9e3710" loc="74:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b9a8a9e3710"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b9a8a9e3a90"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8a9e3c20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x2b9a8a9d9800" loc="79:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x2b9a8a9d9800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8a9d9b80"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8a9d9d10"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8a9fe020"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8a9fe1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8a9fe340"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8a9fe4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8a9fe660"/>
        <function-ref name="get" scoped="" ref="0x2b9a8a9fe7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8a9fe980"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8a9feb10"/>
        <function-ref name="set" scoped="" ref="0x2b9a8a9feca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8a9fee30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8a9fd020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8a9fd2b0"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8a9fd440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x2b9a8a9ff860" loc="78:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x2b9a8a9ff860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8a9ffbe0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8a9ffd70"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8a9da020"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8a9da1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8a9da340"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8a9da4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8a9da660"/>
        <function-ref name="get" scoped="" ref="0x2b9a8a9da7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8a9da980"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8a9dab10"/>
        <function-ref name="set" scoped="" ref="0x2b9a8a9daca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8a9dae30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8a9d9020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8a9d92b0"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8a9d9440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x2b9a8aa72cc0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x2b9a8aa72cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aa710a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aa71230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aa713c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aa71550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aa716e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aa71870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aa71a00"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aa71b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aa71d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aa70020"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aa701b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aa70340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aa704d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aa70760"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aa708f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x2b9a8aa90cc0" loc="66:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x2b9a8aa90cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aa8f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aa8f230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aa8f3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aa8f550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aa8f6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aa8f870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aa8fa00"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aa8fb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aa8fd20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aa8e020"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aa8e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aa8e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aa8e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aa8e760"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aa8e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x2b9a8aade3d0" loc="145:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x2b9a8aade3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aade750"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aade8e0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aadea70"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aadec00"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aaded90"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aadd020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aadd1b0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aadd340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aadd4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aadd660"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aadd7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aadd980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aaddb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aaddda0"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aadc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x2b9a8aaee3e0" loc="165:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x2b9a8aaee3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aaee760"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aaee8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aaeea80"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aaeec10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aaeeda0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aaec020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aaec1b0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aaec340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aaec4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aaec660"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aaec7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aaec980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aaecb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aaecda0"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aaeb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x2b9a8aadc3f0" loc="146:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x2b9a8aadc3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aadc770"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aadc900"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aadca90"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aadcc20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aadcdb0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aadb020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aadb1b0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aadb340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aadb4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aadb660"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aadb7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aadb980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aadbb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aadbda0"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aada020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x2b9a8aa8ccc0" loc="71:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x2b9a8aa8ccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aa8b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aa8b230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aa8b3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aa8b550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aa8b6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aa8b870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aa8ba00"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aa8bb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aa8bd20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aa8a020"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aa8a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aa8a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aa8a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aa8a760"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aa8a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x2b9a8aaa8020" loc="84:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x2b9a8aaa8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aaa83a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aaa8530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aaa86c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aaa8850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aaa89e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aaa8b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aaa8d00"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aaa7020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aaa71b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aaa7340"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aaa74d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aaa7660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aaa77f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aaa7a80"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aaa7c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x2b9a8aac7020" loc="97:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x2b9a8aac7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aac73a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aac7530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aac76c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aac7850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aac79e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aac7b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aac7d00"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aac6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aac61b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aac6340"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aac64d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aac6660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aac67f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aac6a80"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aac6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x2b9a8aab7020" loc="108:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x2b9a8aab7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aab73a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aab7530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aab76c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aab7850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aab79e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aab7b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aab7d00"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aab6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aab61b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aab6340"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aab64d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aab6660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aab67f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aab6a80"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aab6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x2b9a8aad63f0" loc="149:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x2b9a8aad63f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aad6770"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aad6900"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aad6a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aad6c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aad6db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aad5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aad51b0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aad5340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aad54d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aad5660"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aad57f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aad5980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aad5b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aad5da0"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aad4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x2b9a8aafa3e0" loc="159:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x2b9a8aafa3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aafa760"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aafa8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aafaa80"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aafac10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aafada0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aaf9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aaf91b0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aaf9340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aaf94d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aaf9660"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aaf97f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aaf9980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aaf9b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aaf9da0"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aaf8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x2b9a8aae53f0" loc="171:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x2b9a8aae53f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aae5770"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aae5900"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aae5a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aae5c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aae5db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aae4020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aae41b0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aae4340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aae44d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aae4660"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aae47f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aae4980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aae4b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aae4da0"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8ab17020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x2b9a8aa6ccc0" loc="56:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x2b9a8aa6ccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aa6b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aa6b230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aa6b3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aa6b550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aa6b6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aa6b870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aa6ba00"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aa6bb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aa6bd20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aa6a020"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aa6a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aa6a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aa6a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aa6a760"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aa6a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x2b9a8aad43f0" loc="150:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x2b9a8aad43f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aad4770"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aad4900"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aad4a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aad4c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aad4db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aad3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aad31b0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aad3340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aad34d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aad3660"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aad37f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aad3980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aad3b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aad3da0"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aad2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x2b9a8aa68cc0" loc="61:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x2b9a8aa68cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aa670a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aa67230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aa673c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aa67550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aa676e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aa67870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aa67a00"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aa67b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aa67d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aa66020"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aa661b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aa66340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aa664d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aa66760"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aa668f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x2b9a8aa86cc0" loc="74:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x2b9a8aa86cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aa850a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aa85230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aa853c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aa85550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aa856e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aa85870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aa85a00"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aa85b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aa85d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aa84020"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aa841b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aa84340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aa844d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aa84760"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aa848f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x2b9a8aaa2020" loc="87:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x2b9a8aaa2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aaa23a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aaa2530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aaa26c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aaa2850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aaa29e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aaa2b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aaa2d00"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aaa1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aaa11b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aaa1340"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aaa14d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aaa1660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aaa17f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aaa1a80"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aaa1c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x2b9a8aac1020" loc="100:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x2b9a8aac1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aac13a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aac1530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aac16c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aac1850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aac19e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aac1b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aac1d00"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aac0020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aac01b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aac0340"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aac04d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aac0660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aac07f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aac0a80"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aac0c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x2b9a8aab0020" loc="111:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x2b9a8aab0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aab03a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aab0530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aab06c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aab0850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aab09e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aab0b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aab0d00"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aae3020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aae31b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aae3340"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aae34d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aae3660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aae37f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aae3a80"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aae3c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x2b9a8aa76cc0" loc="51:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x2b9a8aa76cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aa750a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aa75230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aa753c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aa75550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aa756e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aa75870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aa75a00"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aa75b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aa75d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aa74020"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aa741b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aa74340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aa744d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aa74760"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aa748f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x2b9a8aa94cc0" loc="64:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x2b9a8aa94cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aa93180"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aa93310"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aa934a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aa93630"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aa937c0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aa93950"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aa93ae0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aa93c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aa93e00"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aa92020"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aa921b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aa92340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aa924d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aa92760"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aa928f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x2b9a8aa80cc0" loc="77:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x2b9a8aa80cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aa7e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aa7e230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aa7e3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aa7e550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aa7e6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aa7e870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aa7ea00"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aa7eb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aa7ed20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aaaf020"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aaaf1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aaaf340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aaaf4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aaaf760"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aaaf8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x2b9a8aae03f0" loc="144:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x2b9a8aae03f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aae0770"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aae0900"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aae0a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aae0c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aae0db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aadf020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aadf1b0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aadf340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aadf4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aadf660"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aadf7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aadf980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aadfb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aadfda0"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aade020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x2b9a8aaf43e0" loc="162:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x2b9a8aaf43e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aaf4760"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aaf48f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aaf4a80"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aaf4c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aaf4da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aaf3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aaf31b0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aaf3340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aaf34d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aaf3660"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aaf37f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aaf3980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aaf3b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aaf3da0"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aaf2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x2b9a8aae73e0" loc="169:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x2b9a8aae73e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aae7760"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aae78f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aae7a80"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aae7c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aae7da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aae6020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aae61b0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aae6340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aae64d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aae6660"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aae67f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aae6980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aae6b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aae6da0"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aae5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x2b9a8aacc3f0" loc="155:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x2b9a8aacc3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aacc770"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aacc900"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aacca90"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aaccc20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aaccdb0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aacb020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aacb1b0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aacb340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aacb4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aacb660"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aacb7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aacb980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aacbb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aacbda0"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aaca020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x2b9a8aaadcc0" loc="82:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x2b9a8aaadcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aaac410"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aaac5a0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aaac730"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aaac8c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aaaca50"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aaacbe0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aaacd70"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aaab020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aaab1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aaab340"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aaab4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aaab660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aaab7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aaaba80"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aaabc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x2b9a8aa98020" loc="95:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x2b9a8aa98020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aa983a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aa98530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aa986c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aa98850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aa989e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aa98b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aa98d00"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aa97020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aa971b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aa97340"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aa974d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aa97660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aa977f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aa97a80"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aa97c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x2b9a8aabb020" loc="106:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x2b9a8aabb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aabb3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aabb530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aabb6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aabb850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aabb9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aabbb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aabbd00"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aaba020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aaba1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aaba340"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aaba4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aaba660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aaba7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aabaa80"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aabac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x2b9a8aaf23e0" loc="163:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x2b9a8aaf23e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aaf2760"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aaf28f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aaf2a80"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aaf2c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aaf2da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aaf1020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aaf11b0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aaf1340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aaf14d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aaf1660"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aaf17f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aaf1980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aaf1b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aaf1da0"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aaf0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x2b9a8aad23e0" loc="152:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x2b9a8aad23e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aad2760"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aad28f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aad2a80"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aad2c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aad2da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aad1020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aad11b0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aad1340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aad14d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aad1660"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aad17f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aad1980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aad1b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aad1da0"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aad0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x2b9a8aa70cc0" loc="54:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x2b9a8aa70cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aa6f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aa6f230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aa6f3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aa6f550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aa6f6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aa6f870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aa6fa00"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aa6fb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aa6fd20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aa6e020"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aa6e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aa6e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aa6e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aa6e760"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aa6e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x2b9a8aa8ecc0" loc="67:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x2b9a8aa8ecc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aa8d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aa8d230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aa8d3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aa8d550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aa8d6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aa8d870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aa8da00"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aa8db90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aa8dd20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aa8c020"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aa8c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aa8c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aa8c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aa8c760"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aa8c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x2b9a8aabf020" loc="104:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x2b9a8aabf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aabf3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aabf530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aabf6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aabf850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aabf9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aabfb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aabfd00"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aabe020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aabe1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aabe340"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aabe4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aabe660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aabe7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aabea80"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aabec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x2b9a8aa8acc0" loc="72:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x2b9a8aa8acc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aa890a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aa89230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aa893c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aa89550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aa896e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aa89870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aa89a00"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aa89b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aa89d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aa88020"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aa881b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aa88340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aa884d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aa88760"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aa888f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x2b9a8aaa6020" loc="85:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x2b9a8aaa6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aaa63a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aaa6530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aaa66c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aaa6850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aaa69e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aaa6b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aaa6d00"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aaa5020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aaa51b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aaa5340"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aaa54d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aaa5660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aaa57f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aaa5a80"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aaa5c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x2b9a8aac5020" loc="98:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x2b9a8aac5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aac53a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aac5530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aac56c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aac5850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aac59e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aac5b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aac5d00"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aac4020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aac41b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aac4340"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aac44d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aac4660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aac47f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aac4a80"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aac4c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x2b9a8aab4020" loc="109:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x2b9a8aab4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aab43a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aab4530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aab46c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aab4850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aab49e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aab4b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aab4d00"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aab3020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aab31b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aab3340"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aab34d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aab3660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aab37f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aab3a80"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aab3c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x2b9a8aace3f0" loc="154:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x2b9a8aace3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aace770"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aace900"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aacea90"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aacec20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aacedb0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aacd020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aacd1b0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aacd340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aacd4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aacd660"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aacd7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aacd980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aacdb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aacdda0"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aacc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x2b9a8aa7ce10" loc="49:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x2b9a8aa7ce10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aa791c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aa79350"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aa794e0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aa79670"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aa79800"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aa79990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aa79b20"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aa79cb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aa79e40"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aa78020"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aa781b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aa78340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aa784d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aa78760"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aa788f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x2b9a8aa66cc0" loc="62:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x2b9a8aa66cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aa650a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aa65230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aa653c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aa65550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aa656e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aa65870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aa65a00"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aa65b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aa65d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aa96020"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aa961b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aa96340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aa964d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aa96760"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aa968f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x2b9a8aa84cc0" loc="75:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x2b9a8aa84cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aa830a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aa83230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aa833c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aa83550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aa836e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aa83870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aa83a00"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aa83b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aa83d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aa82020"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aa821b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aa82340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aa824d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aa82760"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aa828f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x2b9a8aaa0020" loc="88:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x2b9a8aaa0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aaa03a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aaa0530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aaa06c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aaa0850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aaa09e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aaa0b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aaa0d00"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aa9f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aa9f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aa9f340"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aa9f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aa9f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aa9f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aa9fa80"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aa9fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x2b9a8aaca3f0" loc="156:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x2b9a8aaca3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aaca770"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aaca900"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aacaa90"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aacac20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aacadb0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aafd020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aafd1b0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aafd340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aafd4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aafd660"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aafd7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aafd980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aafdb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aafdda0"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aafc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x2b9a8aaf83e0" loc="160:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x2b9a8aaf83e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aaf8760"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aaf88f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aaf8a80"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aaf8c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aaf8da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aaf7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aaf71b0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aaf7340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aaf74d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aaf7660"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aaf77f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aaf7980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aaf7b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aaf7da0"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aaf6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x2b9a8aaeb3e0" loc="166:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x2b9a8aaeb3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aaeb760"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aaeb8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aaeba80"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aaebc10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aaebda0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aaea020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aaea1b0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aaea340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aaea4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aaea660"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aaea7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aaea980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aaeab10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aaeada0"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aae9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x2b9a8aa9c020" loc="93:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x2b9a8aa9c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aa9c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aa9c530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aa9c6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aa9c850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aa9c9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aa9cb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aa9cd00"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aa9b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aa9b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aa9b340"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aa9b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aa9b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aa9b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aa9ba80"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aa9bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x2b9a8aafc3f0" loc="157:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x2b9a8aafc3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aafc770"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aafc900"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aafca90"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aafcc20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aafcdb0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aafb020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aafb1b0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aafb340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aafb4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aafb660"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aafb7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aafb980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aafbb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aafbda0"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aafa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x2b9a8aa74cc0" loc="52:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x2b9a8aa74cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aa730a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aa73230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aa733c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aa73550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aa736e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aa73870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aa73a00"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aa73b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aa73d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aa72020"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aa721b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aa72340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aa724d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aa72760"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aa728f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x2b9a8aa92cc0" loc="65:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x2b9a8aa92cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aa910a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aa91230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aa913c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aa91550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aa916e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aa91870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aa91a00"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aa91b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aa91d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aa90020"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aa901b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aa90340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aa904d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aa90760"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aa908f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x2b9a8aaafcc0" loc="78:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x2b9a8aaafcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aaae0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aaae230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aaae3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aaae550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aaae6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aaae870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aaaea00"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aaaeb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aaaed20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aaad020"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aaad1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aaad340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aaad4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aaad760"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aaad8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x2b9a8aad03f0" loc="153:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x2b9a8aad03f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aad0770"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aad0900"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aad0a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aad0c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aad0db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aacf020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aacf1b0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aacf340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aacf4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aacf660"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aacf7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aacf980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aacfb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aacfda0"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aace020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x2b9a8aaf03e0" loc="164:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x2b9a8aaf03e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aaf0760"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aaf08f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aaf0a80"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aaf0c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aaf0da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aaef020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aaef1b0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aaef340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aaef4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aaef660"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aaef7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aaef980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aaefb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aaefda0"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aaee020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x2b9a8aaaa020" loc="83:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x2b9a8aaaa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aaaa3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aaaa530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aaaa6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aaaa850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aaaa9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aaaab70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aaaad00"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aaa9020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aaa91b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aaa9340"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aaa94d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aaa9660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aaa97f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aaa9a80"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aaa9c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x2b9a8aac9020" loc="96:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x2b9a8aac9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aac93a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aac9530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aac96c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aac9850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aac99e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aac9b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aac9d00"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aac8020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aac81b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aac8340"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aac84d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aac8660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aac87f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aac8a80"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aac8c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x2b9a8aab9020" loc="107:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x2b9a8aab9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aab93a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aab9530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aab96c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aab9850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aab99e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aab9b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aab9d00"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aab8020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aab81b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aab8340"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aab84d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aab8660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aab87f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aab8a80"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aab8c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x2b9a8aa6ecc0" loc="55:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x2b9a8aa6ecc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aa6d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aa6d230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aa6d3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aa6d550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aa6d6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aa6d870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aa6da00"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aa6db90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aa6dd20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aa6c020"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aa6c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aa6c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aa6c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aa6c760"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aa6c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x2b9a8aabd020" loc="105:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x2b9a8aabd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aabd3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aabd530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aabd6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aabd850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aabd9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aabdb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aabdd00"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aabc020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aabc1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aabc340"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aabc4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aabc660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aabc7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aabca80"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aabcc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x2b9a8aa6acc0" loc="60:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x2b9a8aa6acc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aa690a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aa69230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aa693c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aa69550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aa696e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aa69870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aa69a00"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aa69b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aa69d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aa68020"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aa681b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aa68340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aa684d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aa68760"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aa688f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x2b9a8aa88cc0" loc="73:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x2b9a8aa88cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aa870a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aa87230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aa873c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aa87550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aa876e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aa87870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aa87a00"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aa87b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aa87d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aa86020"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aa861b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aa86340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aa864d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aa86760"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aa868f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x2b9a8aaa4020" loc="86:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x2b9a8aaa4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aaa43a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aaa4530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aaa46c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aaa4850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aaa49e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aaa4b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aaa4d00"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aaa3020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aaa31b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aaa3340"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aaa34d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aaa3660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aaa37f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aaa3a80"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aaa3c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x2b9a8aac3020" loc="99:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x2b9a8aac3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aac33a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aac3530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aac36c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aac3850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aac39e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aac3b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aac3d00"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aac2020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aac21b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aac2340"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aac24d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aac2660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aac27f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aac2a80"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aac2c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x2b9a8aab2020" loc="110:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x2b9a8aab2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aab23a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aab2530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aab26c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aab2850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aab29e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aab2b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aab2d00"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aab1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aab11b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aab1340"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aab14d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aab1660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aab17f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aab1a80"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aab1c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x2b9a8aa78cc0" loc="50:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x2b9a8aa78cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aa770a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aa77230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aa773c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aa77550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aa776e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aa77870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aa77a00"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aa77b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aa77d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aa76020"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aa761b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aa76340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aa764d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aa76760"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aa768f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x2b9a8aa96cc0" loc="63:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x2b9a8aa96cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aa950a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aa95230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aa953c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aa95550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aa956e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aa95870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aa95a00"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aa95b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aa95d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aa94020"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aa941b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aa94340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aa944d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aa94760"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aa948f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x2b9a8aa82cc0" loc="76:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x2b9a8aa82cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aa810a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aa81230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aa813c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aa81550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aa816e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aa81870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aa81a00"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aa81b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aa81d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aa80020"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aa801b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aa80340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aa804d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aa80760"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aa808f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x2b9a8aa9e020" loc="89:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x2b9a8aa9e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aa9e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aa9e530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aa9e6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aa9e850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aa9e9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aa9eb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aa9ed00"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aa9d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aa9d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aa9d340"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aa9d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aa9d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aa9d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aa9da80"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aa9dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x2b9a8aad83d0" loc="148:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x2b9a8aad83d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aad8750"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aad88e0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aad8a70"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aad8c00"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aad8d90"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aad7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aad71b0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aad7340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aad74d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aad7660"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aad77f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aad7980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aad7b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aad7da0"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aad6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x2b9a8aaf63e0" loc="161:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x2b9a8aaf63e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aaf6760"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aaf68f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aaf6a80"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aaf6c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aaf6da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aaf5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aaf51b0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aaf5340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aaf54d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aaf5660"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aaf57f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aaf5980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aaf5b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aaf5da0"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aaf4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x2b9a8aada3f0" loc="147:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x2b9a8aada3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aada770"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aada900"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aadaa90"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aadac20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aadadb0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aad9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aad91b0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aad9340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aad94d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aad9660"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aad97f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aad9980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aad9b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aad9da0"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aad8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x2b9a8aa9a020" loc="94:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x2b9a8aa9a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aa9a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aa9a530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aa9a6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aa9a850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aa9a9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aa9ab70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aa9ad00"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aa99020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aa991b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aa99340"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aa994d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aa99660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aa997f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aa99a80"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aa99c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x2b9a8aae93e0" loc="168:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x2b9a8aae93e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aae9760"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aae98f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aae9a80"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aae9c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aae9da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aae8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aae81b0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aae8340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aae84d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aae8660"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aae87f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aae8980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aae8b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aae8da0"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aae7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x2b9a8ab173f0" loc="172:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x2b9a8ab173f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8ab17770"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8ab17900"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8ab17a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8ab17c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8ab17db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8ab16020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8ab161b0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8ab16340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8ab164d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8ab16660"/>
        <function-ref name="set" scoped="" ref="0x2b9a8ab167f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8ab16980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8ab16b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8ab16da0"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8ab15020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x2b9a8aae2060" loc="143:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x2b9a8aae2060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aae27e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aae2970"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aae2b00"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aae2c90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aae2e20"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aae1020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aae11b0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aae1340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aae14d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aae1660"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aae17f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aae1980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aae1b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aae1da0"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aae0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9a8ab203f0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9a8ab203f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8ab20770"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8ab20900"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8ab20a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8ab20c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8ab20db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8ab1f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8ab1f1b0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8ab1f340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8ab1f4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8ab1f660"/>
        <function-ref name="set" scoped="" ref="0x2b9a8ab1f7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8ab1f980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8ab1fb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8ab1fda0"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8ab1e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9a8ab1ce00" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9a8ab1ce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8ab1b1c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8ab1b350"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8ab1b4e0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8ab1b670"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8ab1b800"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8ab1b990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8ab1bb20"/>
        <function-ref name="get" scoped="" ref="0x2b9a8ab1bcb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8ab1be40"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8ab1a020"/>
        <function-ref name="set" scoped="" ref="0x2b9a8ab1a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8ab1a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8ab1a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8ab1a760"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8ab1a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9a8ab4c740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9a8ab4c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8ab4cac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8ab4cc50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8ab4cde0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8ab4b020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8ab4b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8ab4b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8ab4b4d0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8ab4b660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8ab4b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8ab4b980"/>
        <function-ref name="set" scoped="" ref="0x2b9a8ab4bb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8ab4bca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8ab4be30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8ab4a120"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8ab4a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9a8ab47100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9a8ab47100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8ab47480"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8ab47610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8ab477a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8ab47930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8ab47ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8ab47c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8ab47de0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8ab46020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8ab461b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8ab46340"/>
        <function-ref name="set" scoped="" ref="0x2b9a8ab464d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8ab46660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8ab467f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8ab46a80"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8ab46c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9a8ab43d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9a8ab43d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8ab420e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8ab42270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8ab42400"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8ab42590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8ab42720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8ab428b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8ab42a40"/>
        <function-ref name="get" scoped="" ref="0x2b9a8ab42bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8ab42d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8ab41020"/>
        <function-ref name="set" scoped="" ref="0x2b9a8ab411b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8ab41340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8ab414d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8ab41760"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8ab418f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9a8ab3d740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9a8ab3d740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8ab3dac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8ab3dc50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8ab3dde0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8ab3c020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8ab3c1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8ab3c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8ab3c4d0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8ab3c660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8ab3c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8ab3c980"/>
        <function-ref name="set" scoped="" ref="0x2b9a8ab3cb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8ab3cca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8ab3ce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8ab3b120"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8ab3b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9a8ab38100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9a8ab38100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8ab38480"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8ab38610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8ab387a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8ab38930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8ab38ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8ab38c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8ab38de0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8ab37020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8ab371b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8ab37340"/>
        <function-ref name="set" scoped="" ref="0x2b9a8ab374d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8ab37660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8ab377f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8ab37a80"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8ab37c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9a8ab34d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9a8ab34d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8ab330e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8ab33270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8ab33400"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8ab33590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8ab33720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8ab338b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8ab33a40"/>
        <function-ref name="get" scoped="" ref="0x2b9a8ab33bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8ab33d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8ab32020"/>
        <function-ref name="set" scoped="" ref="0x2b9a8ab321b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8ab32340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8ab324d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8ab32760"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8ab328f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9a8ab65740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9a8ab65740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8ab65ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8ab65c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8ab65de0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8ab64020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8ab641b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8ab64340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8ab644d0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8ab64660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8ab647f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8ab64980"/>
        <function-ref name="set" scoped="" ref="0x2b9a8ab64b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8ab64ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8ab64e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8ab63120"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8ab632b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9a8ab60100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9a8ab60100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8ab60480"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8ab60610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8ab607a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8ab60930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8ab60ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8ab60c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8ab60de0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8ab5f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8ab5f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8ab5f340"/>
        <function-ref name="set" scoped="" ref="0x2b9a8ab5f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8ab5f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8ab5f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8ab5fa80"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8ab5fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9a8ab5cd10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9a8ab5cd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8ab5b0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8ab5b270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8ab5b400"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8ab5b590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8ab5b720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8ab5b8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8ab5ba40"/>
        <function-ref name="get" scoped="" ref="0x2b9a8ab5bbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8ab5bd60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8ab5a020"/>
        <function-ref name="set" scoped="" ref="0x2b9a8ab5a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8ab5a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8ab5a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8ab5a760"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8ab5a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9a8ab57740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9a8ab57740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8ab57ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8ab57c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8ab57de0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8ab56020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8ab561b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8ab56340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8ab564d0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8ab56660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8ab567f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8ab56980"/>
        <function-ref name="set" scoped="" ref="0x2b9a8ab56b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8ab56ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8ab56e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8ab55120"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8ab552b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9a8ab52260" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9a8ab52260"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8ab525e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8ab52770"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8ab52900"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8ab52a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8ab52c20"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8ab52db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8ab50020"/>
        <function-ref name="get" scoped="" ref="0x2b9a8ab501b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8ab50340"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8ab504d0"/>
        <function-ref name="set" scoped="" ref="0x2b9a8ab50660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8ab507f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8ab50980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8ab50c10"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8ab50da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9a8ab4dd10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9a8ab4dd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8ab820e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8ab82270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8ab82400"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8ab82590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8ab82720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8ab828b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8ab82a40"/>
        <function-ref name="get" scoped="" ref="0x2b9a8ab82bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8ab82d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8ab81020"/>
        <function-ref name="set" scoped="" ref="0x2b9a8ab811b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8ab81340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8ab814d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8ab81760"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8ab818f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9a8ab7e740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9a8ab7e740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8ab7eac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8ab7ec50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8ab7ede0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8ab7d020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8ab7d1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8ab7d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8ab7d4d0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8ab7d660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8ab7d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8ab7d980"/>
        <function-ref name="set" scoped="" ref="0x2b9a8ab7db10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8ab7dca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8ab7de30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8ab7c120"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8ab7c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9a8ab79100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9a8ab79100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8ab79480"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8ab79610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8ab797a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8ab79930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8ab79ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8ab79c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8ab79de0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8ab78020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8ab781b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8ab78340"/>
        <function-ref name="set" scoped="" ref="0x2b9a8ab784d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8ab78660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8ab787f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8ab78a80"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8ab78c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9a8ab75d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9a8ab75d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8ab740e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8ab74270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8ab74400"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8ab74590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8ab74720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8ab748b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8ab74a40"/>
        <function-ref name="get" scoped="" ref="0x2b9a8ab74bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8ab74d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8ab73020"/>
        <function-ref name="set" scoped="" ref="0x2b9a8ab731b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8ab73340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8ab734d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8ab73760"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8ab738f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9a8ab70740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9a8ab70740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8ab70ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8ab70c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8ab70de0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8ab6f020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8ab6f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8ab6f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8ab6f4d0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8ab6f660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8ab6f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8ab6f980"/>
        <function-ref name="set" scoped="" ref="0x2b9a8ab6fb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8ab6fca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8ab6fe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8ab6e120"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8ab6e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9a8ab6b100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9a8ab6b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8ab6b480"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8ab6b610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8ab6b7a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8ab6b930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8ab6bac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8ab6bc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8ab6bde0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8ab6a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8ab6a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8ab6a340"/>
        <function-ref name="set" scoped="" ref="0x2b9a8ab6a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8ab6a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8ab6a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8ab6aa80"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8ab6ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9a8ab9dd10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9a8ab9dd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8ab9c0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8ab9c270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8ab9c400"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8ab9c590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8ab9c720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8ab9c8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8ab9ca40"/>
        <function-ref name="get" scoped="" ref="0x2b9a8ab9cbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8ab9cd60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8ab9b020"/>
        <function-ref name="set" scoped="" ref="0x2b9a8ab9b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8ab9b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8ab9b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8ab9b760"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8ab9b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9a8ab98740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9a8ab98740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8ab98ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8ab98c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8ab98de0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8ab96020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8ab961b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8ab96340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8ab964d0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8ab96660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8ab967f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8ab96980"/>
        <function-ref name="set" scoped="" ref="0x2b9a8ab96b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8ab96ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8ab96e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8ab95120"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8ab952b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9a8ab92100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9a8ab92100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8ab92480"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8ab92610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8ab927a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8ab92930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8ab92ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8ab92c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8ab92de0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8ab91020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8ab911b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8ab91340"/>
        <function-ref name="set" scoped="" ref="0x2b9a8ab914d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8ab91660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8ab917f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8ab91a80"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8ab91c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9a8ab8ed10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9a8ab8ed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8ab8d0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8ab8d270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8ab8d400"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8ab8d590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8ab8d720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8ab8d8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8ab8da40"/>
        <function-ref name="get" scoped="" ref="0x2b9a8ab8dbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8ab8dd60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8ab8c020"/>
        <function-ref name="set" scoped="" ref="0x2b9a8ab8c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8ab8c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8ab8c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8ab8c760"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8ab8c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9a8ab89740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9a8ab89740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8ab89ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8ab89c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8ab89de0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8ab88020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8ab881b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8ab88340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8ab884d0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8ab88660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8ab887f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8ab88980"/>
        <function-ref name="set" scoped="" ref="0x2b9a8ab88b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8ab88ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8ab88e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8ab87120"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8ab872b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9a8ab843f0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9a8ab843f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8ab84770"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8ab84900"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8ab84a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8ab84c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8ab84db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8ab83020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8ab831b0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8ab83340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8ab834d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8ab83660"/>
        <function-ref name="set" scoped="" ref="0x2b9a8ab837f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8ab83980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8ab83b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8ab83da0"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8abb8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9a8abb6e00" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9a8abb6e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8abb51c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8abb5350"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8abb54e0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8abb5670"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8abb5800"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8abb5990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8abb5b20"/>
        <function-ref name="get" scoped="" ref="0x2b9a8abb5cb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8abb5e40"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8abb4020"/>
        <function-ref name="set" scoped="" ref="0x2b9a8abb41b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8abb4340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8abb44d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8abb4760"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8abb48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9a8abb1740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9a8abb1740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8abb1ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8abb1c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8abb1de0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8abb0020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8abb01b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8abb0340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8abb04d0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8abb0660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8abb07f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8abb0980"/>
        <function-ref name="set" scoped="" ref="0x2b9a8abb0b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8abb0ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8abb0e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8abaf120"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8abaf2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9a8abac100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9a8abac100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8abac480"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8abac610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8abac7a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8abac930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8abacac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8abacc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8abacde0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8abab020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8abab1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8abab340"/>
        <function-ref name="set" scoped="" ref="0x2b9a8abab4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8abab660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8abab7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8ababa80"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8ababc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9a8aba7d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9a8aba7d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aba60e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aba6270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aba6400"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aba6590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aba6720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aba68b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aba6a40"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aba6bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aba6d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aba5020"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aba51b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aba5340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aba54d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aba5760"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aba58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9a8aba2740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9a8aba2740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aba2ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aba2c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8aba2de0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aba1020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aba11b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8aba1340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aba14d0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aba1660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8aba17f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8aba1980"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aba1b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8aba1ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8aba1e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8aba0120"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aba02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9a8abd4100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9a8abd4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8abd4480"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8abd4610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8abd47a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8abd4930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8abd4ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8abd4c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8abd4de0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8abd3020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8abd31b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8abd3340"/>
        <function-ref name="set" scoped="" ref="0x2b9a8abd34d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8abd3660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8abd37f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8abd3a80"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8abd3c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9a8abd0d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9a8abd0d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8abcf0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8abcf270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8abcf400"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8abcf590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8abcf720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8abcf8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8abcfa40"/>
        <function-ref name="get" scoped="" ref="0x2b9a8abcfbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8abcfd60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8abce020"/>
        <function-ref name="set" scoped="" ref="0x2b9a8abce1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8abce340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8abce4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8abce760"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8abce8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9a8abcb740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9a8abcb740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8abcbac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8abcbc50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8abcbde0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8abca020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8abca1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8abca340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8abca4d0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8abca660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8abca7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8abca980"/>
        <function-ref name="set" scoped="" ref="0x2b9a8abcab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8abcaca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8abcae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8abc9120"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8abc92b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9a8abc6100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9a8abc6100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8abc6480"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8abc6610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8abc67a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8abc6930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8abc6ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8abc6c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8abc6de0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8abc5020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8abc51b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8abc5340"/>
        <function-ref name="set" scoped="" ref="0x2b9a8abc54d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8abc5660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8abc57f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8abc5a80"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8abc5c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9a8abc2d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9a8abc2d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8abc10e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8abc1270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8abc1400"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8abc1590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8abc1720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8abc18b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8abc1a40"/>
        <function-ref name="get" scoped="" ref="0x2b9a8abc1bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8abc1d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8abc0020"/>
        <function-ref name="set" scoped="" ref="0x2b9a8abc01b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8abc0340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8abc04d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8abc0760"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8abc08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9a8abbd740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9a8abbd740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8abbdac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8abbdc50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8abbdde0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8abbb020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8abbb1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8abbb340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8abbb4d0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8abbb660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8abbb7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8abbb980"/>
        <function-ref name="set" scoped="" ref="0x2b9a8abbbb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8abbbca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8abbbe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8abba120"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8abba2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9a8abef100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9a8abef100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8abef480"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8abef610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8abef7a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8abef930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8abefac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8abefc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8abefde0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8abee020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8abee1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8abee340"/>
        <function-ref name="set" scoped="" ref="0x2b9a8abee4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8abee660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8abee7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8abeea80"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8abeec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9a8abebd10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9a8abebd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8abea0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8abea270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8abea400"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8abea590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8abea720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8abea8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8abeaa40"/>
        <function-ref name="get" scoped="" ref="0x2b9a8abeabd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8abead60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8abe9020"/>
        <function-ref name="set" scoped="" ref="0x2b9a8abe91b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8abe9340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8abe94d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8abe9760"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8abe98f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9a8abe6740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9a8abe6740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8abe6ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8abe6c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8abe6de0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8abe5020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8abe51b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8abe5340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8abe54d0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8abe5660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8abe57f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8abe5980"/>
        <function-ref name="set" scoped="" ref="0x2b9a8abe5b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8abe5ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8abe5e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8abe4120"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8abe42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9a8abe1100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9a8abe1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8abe1480"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8abe1610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8abe17a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8abe1930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8abe1ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8abe1c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8abe1de0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8abe0020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8abe01b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8abe0340"/>
        <function-ref name="set" scoped="" ref="0x2b9a8abe04d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8abe0660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8abe07f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8abe0a80"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8abe0c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9a8abddd10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9a8abddd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8abdc0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8abdc270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8abdc400"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8abdc590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8abdc720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8abdc8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8abdca40"/>
        <function-ref name="get" scoped="" ref="0x2b9a8abdcbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8abdcd60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8abdb020"/>
        <function-ref name="set" scoped="" ref="0x2b9a8abdb1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8abdb340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8abdb4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8abdb760"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8abdb8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9a8abd8740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9a8abd8740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8abd8ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8abd8c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8abd8de0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8abd7020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8abd71b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8abd7340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8abd74d0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8abd7660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8abd77f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8abd7980"/>
        <function-ref name="set" scoped="" ref="0x2b9a8abd7b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8abd7ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8abd7e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8abd6120"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8abd62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9a8ac0b100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9a8ac0b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8ac0b480"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8ac0b610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8ac0b7a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8ac0b930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8ac0bac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8ac0bc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8ac0bde0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8ac0a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8ac0a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8ac0a340"/>
        <function-ref name="set" scoped="" ref="0x2b9a8ac0a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8ac0a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8ac0a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8ac0aa80"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8ac0ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9a8ac07d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9a8ac07d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8ac050e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8ac05270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8ac05400"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8ac05590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8ac05720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8ac058b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8ac05a40"/>
        <function-ref name="get" scoped="" ref="0x2b9a8ac05bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8ac05d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8ac04020"/>
        <function-ref name="set" scoped="" ref="0x2b9a8ac041b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8ac04340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8ac044d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8ac04760"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8ac048f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9a8ac01740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9a8ac01740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8ac01ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8ac01c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8ac01de0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8ac00020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8ac001b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8ac00340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8ac004d0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8ac00660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8ac007f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8ac00980"/>
        <function-ref name="set" scoped="" ref="0x2b9a8ac00b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8ac00ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8ac00e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8abff120"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8abff2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9a8abfc100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9a8abfc100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8abfc480"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8abfc610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8abfc7a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8abfc930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8abfcac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8abfcc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8abfcde0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8abfb020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8abfb1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8abfb340"/>
        <function-ref name="set" scoped="" ref="0x2b9a8abfb4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8abfb660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8abfb7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8abfba80"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8abfbc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9a8abf8d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9a8abf8d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8abf70e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8abf7270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8abf7400"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8abf7590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8abf7720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8abf78b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8abf7a40"/>
        <function-ref name="get" scoped="" ref="0x2b9a8abf7bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8abf7d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8abf6020"/>
        <function-ref name="set" scoped="" ref="0x2b9a8abf61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8abf6340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8abf64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8abf6760"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8abf68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9a8abf3740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9a8abf3740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8abf3ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8abf3c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8abf3de0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8abf2020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8abf21b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8abf2340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8abf24d0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8abf2660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8abf27f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8abf2980"/>
        <function-ref name="set" scoped="" ref="0x2b9a8abf2b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8abf2ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8abf2e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8abf1120"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8abf12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b9a8ac8c9a0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b9a8ac8c9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9a8ac897e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9a8ac871b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9a8ac89ca0"/>
        <function-ref name="overflow" scoped="" ref="0x2b9a8ac87670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x2b9a8ac869d0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2b9a8ac869d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9a8ac83810"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9a8ac821b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9a8ac83cd0"/>
        <function-ref name="overflow" scoped="" ref="0x2b9a8ac82670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2b9a8acadc50" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2b9a8acadc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8acac020"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b9a8acac1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9a8acac340"/>
        <function-ref name="get" scoped="" ref="0x2b9a8acac4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9a8acac660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9a8acac7f0"/>
        <function-ref name="getMode" scoped="" ref="0x2b9a8acac980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9a8acacb10"/>
        <function-ref name="overflow" scoped="" ref="0x2b9a8acacca0"/>
        <function-ref name="setMode" scoped="" ref="0x2b9a8acace30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b9a8acab020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b9a8ac7fb80" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b9a8ac7fb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9a8ac7e9b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9a8acad360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9a8ac7ee70"/>
        <function-ref name="overflow" scoped="" ref="0x2b9a8acad820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b9a8ac8b970" loc="46:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b9a8ac8b970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b9a8ac8bcf0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b9a8ac8be80"/>
        <function-ref name="led1On" scoped="" ref="0x2b9a8aca7030"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b9a8aca71c0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b9a8aca7350"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aca74e0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b9a8aca7670"/>
        <function-ref name="led2Off" scoped="" ref="0x2b9a8aca7cb0"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aca7800"/>
        <function-ref name="led0On" scoped="" ref="0x2b9a8aca7990"/>
        <function-ref name="led2On" scoped="" ref="0x2b9a8aca7b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x2b9a8ac9b910" loc="50:/home/zdenial/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x2b9a8ac9b910"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8ac9bc90"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8ac9be20"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aca1020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aca11b0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aca1340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aca14d0"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aca1660"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aca17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9a8aca6c40" loc="46:/home/zdenial/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b9a8aca6c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9a8aca3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x2b9a8aca1b10" loc="51:/home/zdenial/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x2b9a8aca1b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8aca0020"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8aca01b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8aca0340"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8aca04d0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aca0660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8aca07f0"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aca0980"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8aca0b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b9a8aca32a0" loc="47:/home/zdenial/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b9a8aca32a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b9a8aca3620"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b9a8aca37b0"/>
        <function-ref name="led1On" scoped="" ref="0x2b9a8aca3940"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b9a8aca3ad0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b9a8aca3c60"/>
        <function-ref name="get" scoped="" ref="0x2b9a8aca3df0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b9a8aca2020"/>
        <function-ref name="led2Off" scoped="" ref="0x2b9a8aca2660"/>
        <function-ref name="set" scoped="" ref="0x2b9a8aca21b0"/>
        <function-ref name="led0On" scoped="" ref="0x2b9a8aca2340"/>
        <function-ref name="led2On" scoped="" ref="0x2b9a8aca24d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x2b9a8aca0e30" loc="52:/home/zdenial/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x2b9a8aca0e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8ac9a1e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8ac9a370"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8ac9a500"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8ac9a690"/>
        <function-ref name="get" scoped="" ref="0x2b9a8ac9a820"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8ac9a9b0"/>
        <function-ref name="set" scoped="" ref="0x2b9a8ac9ab40"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8ac9acd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x2b9a8acba360" loc="41:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x2b9a8acba360"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8acba6e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8acba870"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8acbaa00"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8acbab90"/>
        <function-ref name="get" scoped="" ref="0x2b9a8acbad20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8acb9020"/>
        <function-ref name="set" scoped="" ref="0x2b9a8acb91b0"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8acb9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x2b9a8acb96a0" loc="42:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x2b9a8acb96a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8acb9a20"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8acb9bb0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8acb9d40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8acb7020"/>
        <function-ref name="get" scoped="" ref="0x2b9a8acb71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8acb7340"/>
        <function-ref name="set" scoped="" ref="0x2b9a8acb74d0"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8acb7660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x2b9a8acb6c40" loc="44:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b9a8acb6c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9a8acb5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x2b9a8acb79c0" loc="43:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x2b9a8acb79c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8acb7d40"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8acb6020"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8acb61b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8acb6340"/>
        <function-ref name="get" scoped="" ref="0x2b9a8acb64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8acb6660"/>
        <function-ref name="set" scoped="" ref="0x2b9a8acb67f0"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8acb6980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b9a8acde930" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b9a8acde930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8acdecb0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8acdee40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8acdd020"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8acdd1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8acdd340"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8acdd4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8acdd660"/>
        <function-ref name="get" scoped="" ref="0x2b9a8acdd7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8acdd980"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8acddb10"/>
        <function-ref name="set" scoped="" ref="0x2b9a8acddca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8acdde30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8acdc020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8acdc2b0"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8acdc440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b9a8acb3710" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b9a8acb3710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8acb3a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8acb3c20"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8acb3db0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8acde020"/>
        <function-ref name="get" scoped="" ref="0x2b9a8acde1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8acde340"/>
        <function-ref name="set" scoped="" ref="0x2b9a8acde4d0"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8acde660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b9a8acd9480" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b9a8acd9480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8acd9800"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8acd9990"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8acd9b20"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8acd9cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8acd9e40"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8acd8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8acd81b0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8acd8340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8acd84d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8acd8660"/>
        <function-ref name="set" scoped="" ref="0x2b9a8acd87f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8acd8980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8acd8b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8acd8da0"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8acd7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b9a8acda1d0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b9a8acda1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8acda550"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8acda6e0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8acda870"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8acdaa00"/>
        <function-ref name="get" scoped="" ref="0x2b9a8acdab90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8acdad20"/>
        <function-ref name="set" scoped="" ref="0x2b9a8acd9020"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8acd91b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b9a8acd4020" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b9a8acd4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8acd43a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8acd4530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8acd46c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8acd4850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8acd49e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8acd4b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8acd4d00"/>
        <function-ref name="get" scoped="" ref="0x2b9a8acd3020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8acd31b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8acd3340"/>
        <function-ref name="set" scoped="" ref="0x2b9a8acd34d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8acd3660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8acd37f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8acd3a80"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8acd3c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b9a8acd6d70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b9a8acd6d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8acd5180"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8acd5310"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8acd54a0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8acd5630"/>
        <function-ref name="get" scoped="" ref="0x2b9a8acd57c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8acd5950"/>
        <function-ref name="set" scoped="" ref="0x2b9a8acd5ae0"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8acd5c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b9a8c0dfc70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2b9a8c0dfc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b9a8c0de020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b9a8c0de1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b9a8c0d8d70" loc="48:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9a8c0d8d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b9a8c0d7180"/>
        <function-ref name="configure" scoped="" ref="0x2b9a8c0d7310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x2b9a8c0d85d0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b9a8c0d85d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b9a8c0d8950"/>
        <function-ref name="txDone" scoped="" ref="0x2b9a8c0d8ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b9a8c0df020" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b9a8c0df020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9a8c0df3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9a8c0df530"/>
        <function-ref name="request" scoped="" ref="0x2b9a8c0df6c0"/>
        <function-ref name="granted" scoped="" ref="0x2b9a8c0df850"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9a8c0df9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x2b9a8c0debe0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b9a8c0debe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b9a8c0dc020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2b9a8c0dc1b0"/>
        <function-ref name="setUctl" scoped="" ref="0x2b9a8c0dc340"/>
        <function-ref name="enableUart" scoped="" ref="0x2b9a8c0dc4d0"/>
        <function-ref name="setUrctl" scoped="" ref="0x2b9a8c0dc660"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b9a8c0dc7f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2b9a8c0dc980"/>
        <function-ref name="getUtctl" scoped="" ref="0x2b9a8c0dcb10"/>
        <function-ref name="getUrctl" scoped="" ref="0x2b9a8c0dcca0"/>
        <function-ref name="resetUsart" scoped="" ref="0x2b9a8c0dce30"/>
        <function-ref name="getUmctl" scoped="" ref="0x2b9a8c0db020"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b9a8c0db1b0"/>
        <function-ref name="setUtctl" scoped="" ref="0x2b9a8c0db340"/>
        <function-ref name="getUbr" scoped="" ref="0x2b9a8c0db5d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b9a8c0db760"/>
        <function-ref name="setUmctl" scoped="" ref="0x2b9a8c0db8f0"/>
        <function-ref name="isUartRx" scoped="" ref="0x2b9a8c0dba80"/>
        <function-ref name="isUart" scoped="" ref="0x2b9a8c0dbc10"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b9a8c0dbda0"/>
        <function-ref name="isSpi" scoped="" ref="0x2b9a8c0da020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2b9a8c0da1b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b9a8c0da340"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2b9a8c0da4d0"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b9a8c0da660"/>
        <function-ref name="getMode" scoped="" ref="0x2b9a8c0da7f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2b9a8c0dab80"/>
        <function-ref name="clrIntr" scoped="" ref="0x2b9a8c0dad10"/>
        <function-ref name="setUbr" scoped="" ref="0x2b9a8c0d9020"/>
        <function-ref name="tx" scoped="" ref="0x2b9a8c0d91b0"/>
        <function-ref name="getUctl" scoped="" ref="0x2b9a8c0d9340"/>
        <function-ref name="disableUart" scoped="" ref="0x2b9a8c0d94d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b9a8c0d9660"/>
        <function-ref name="setModeUart" scoped="" ref="0x2b9a8c0d97f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2b9a8c0d9980"/>
        <function-ref name="rx" scoped="" ref="0x2b9a8c0d9b10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2b9a8c0d9ca0"/>
        <function-ref name="isUartTx" scoped="" ref="0x2b9a8c0d9e30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2b9a8c0d8020"/>
        <function-ref name="disableSpi" scoped="" ref="0x2b9a8c0d81b0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2b9a8c0d8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b9a8c0de440" loc="44:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9a8c0de440"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b9a8c0de7c0"/>
        <function-ref name="userId" scoped="" ref="0x2b9a8c0de950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b9a8ad262c0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2b9a8ad262c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b9a8ad26640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b9a8ad267d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b9a8ad258a0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9a8ad258a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b9a8ad25c20"/>
        <function-ref name="configure" scoped="" ref="0x2b9a8ad25db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2b9a8ad281d0" loc="40:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2b9a8ad281d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b9a8ad28550"/>
        <function-ref name="txDone" scoped="" ref="0x2b9a8ad286e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b9a8ad27020" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b9a8ad27020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9a8ad273a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9a8ad27530"/>
        <function-ref name="request" scoped="" ref="0x2b9a8ad276c0"/>
        <function-ref name="granted" scoped="" ref="0x2b9a8ad27850"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9a8ad279e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b9a8ad26ad0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9a8ad26ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b9a8ad26e50"/>
        <function-ref name="userId" scoped="" ref="0x2b9a8ad25020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b9a8ad0fa90" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9a8ad0fa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b9a8ad0fe10"/>
        <function-ref name="userId" scoped="" ref="0x2b9a8ad0d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2b9a8ad22b60" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2b9a8ad22b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b9a8ad21020"/>
        <function-ref name="txDone" scoped="" ref="0x2b9a8ad211b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x2b9a8ad0f480" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x2b9a8ad0f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9a8ad0f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x2b9a8ad215b0" loc="40:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x2b9a8ad215b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9a8ad21950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x2b9a8ad21c20" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x2b9a8ad21c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b9a8ad0f020"/>
        <function-ref name="txDone" scoped="" ref="0x2b9a8ad0f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b9a8ad88020" loc="92:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2b9a8ad88020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b9a8ad883c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b9a8ad88550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b9a8ad87cd0" loc="96:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9a8ad87cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b9a8ad860a0"/>
        <function-ref name="configure" scoped="" ref="0x2b9a8ad86230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b9a8ad887a0" loc="93:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b9a8ad887a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9a8ad88b20"/>
        <function-ref name="requested" scoped="" ref="0x2b9a8ad88cb0"/>
        <function-ref name="granted" scoped="" ref="0x2b9a8ad88e40"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9a8ad87020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b9a8ad871b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b9a8ad89210" loc="91:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b9a8ad89210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9a8ad895b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9a8ad89740"/>
        <function-ref name="request" scoped="" ref="0x2b9a8ad898d0"/>
        <function-ref name="granted" scoped="" ref="0x2b9a8ad89a60"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9a8ad89bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b9a8ad87400" loc="94:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9a8ad87400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b9a8ad87780"/>
        <function-ref name="userId" scoped="" ref="0x2b9a8ad87910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9a8c4daca0" loc="44:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b9a8c4daca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9a8c4d90a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2b9a8c4d9330" loc="45:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x2b9a8c4d9330"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b9a8c4d96b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b9a8c4d9840"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b9a8c4d99d0"/>
        <function-ref name="dequeue" scoped="" ref="0x2b9a8c4d9b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b9a8c4d53a0" loc="55:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2b9a8c4d53a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b9a8c4d5740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b9a8c4d58d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b9a8c4d3210" loc="60:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9a8c4d3210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b9a8c4d35b0"/>
        <function-ref name="configure" scoped="" ref="0x2b9a8c4d3740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b9a8c4d39d0" loc="61:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x2b9a8c4d39d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b9a8c4d3d50"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b9a8c4d2020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b9a8c4d21b0"/>
        <function-ref name="dequeue" scoped="" ref="0x2b9a8c4d2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b9a8c4d5b20" loc="56:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b9a8c4d5b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9a8c4d4020"/>
        <function-ref name="requested" scoped="" ref="0x2b9a8c4d41b0"/>
        <function-ref name="granted" scoped="" ref="0x2b9a8c4d4340"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9a8c4d44d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b9a8c4d4660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b9a8c4d2590" loc="62:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b9a8c4d2590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b9a8c4d2910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b9a8c4d2aa0"/>
        <function-ref name="led1On" scoped="" ref="0x2b9a8c4d2c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b9a8c4d2dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b9a8c4d1020"/>
        <function-ref name="get" scoped="" ref="0x2b9a8c4d11b0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b9a8c4d1340"/>
        <function-ref name="led0On" scoped="" ref="0x2b9a8c4d1980"/>
        <function-ref name="set" scoped="" ref="0x2b9a8c4d1660"/>
        <function-ref name="led2On" scoped="" ref="0x2b9a8c4d14d0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b9a8c4d17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b9a8c4d6540" loc="54:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b9a8c4d6540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9a8c4d68e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9a8c4d6a70"/>
        <function-ref name="request" scoped="" ref="0x2b9a8c4d6c00"/>
        <function-ref name="granted" scoped="" ref="0x2b9a8c4d6d90"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9a8c4d5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b9a8c4d48b0" loc="57:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9a8c4d48b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b9a8c4d4c30"/>
        <function-ref name="userId" scoped="" ref="0x2b9a8c4d4dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b9a8c4d1c50" loc="75:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x2b9a8c4d1c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9a8c4d0020"/>
        <function-ref name="runTask" scoped="" ref="0x2b9a8c4d01b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b9a8adab400" loc="72:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b9a8adab400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b9a8adab780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b9a8adab9d0" loc="73:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b9a8adab9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9a8adabd50"/>
        <function-ref name="requested" scoped="" ref="0x2b9a8ada9020"/>
        <function-ref name="granted" scoped="" ref="0x2b9a8ada91b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9a8ada9340"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b9a8ada94d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x2b9a8adc0b20" loc="70:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b9a8adc0b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b9a8adab020"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8adab1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b9a8ada9720" loc="74:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9a8ada9720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b9a8ada9aa0"/>
        <function-ref name="userId" scoped="" ref="0x2b9a8ada9c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b9a8c53eb00" loc="62:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b9a8c53eb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b9a8c53ee80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b9a8c53d0f0" loc="63:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b9a8c53d0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9a8c53d470"/>
        <function-ref name="requested" scoped="" ref="0x2b9a8c53d600"/>
        <function-ref name="granted" scoped="" ref="0x2b9a8c53d790"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9a8c53d920"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b9a8c53dab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x2b9a8c53e3a0" loc="60:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b9a8c53e3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b9a8c53e720"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8c53e8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b9a8c53dd00" loc="64:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9a8c53dd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b9a8c53c0a0"/>
        <function-ref name="userId" scoped="" ref="0x2b9a8c53c230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x2b9a8adc9080" loc="3:/home/zdenial/tinyos/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2b9a8adc9080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b9a8adc9400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b9a8adc96f0" loc="4:/home/zdenial/tinyos/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b9a8adc96f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9a8adc9a70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9a8adc9c00"/>
        <function-ref name="request" scoped="" ref="0x2b9a8adc9d90"/>
        <function-ref name="granted" scoped="" ref="0x2b9a8adc8020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9a8adc81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b9a8adcc7a0" loc="2:/home/zdenial/tinyos/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2b9a8adcc7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b9a8adccb20"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8adcccb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x2b9a8adfc430" loc="43:/home/zdenial/tinyos/tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x2b9a8adfc430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2b9a8adfc7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9a8adfb780" loc="94:/home/zdenial/tinyos/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b9a8adfb780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9a8adfbb00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x2b9a8adfbde0" loc="95:/home/zdenial/tinyos/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x2b9a8adfbde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2b9a8adf8180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2b9a8adf1020" loc="39:/home/zdenial/tinyos/tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x2b9a8adf1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b9a8adf13a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x2b9a8adf1740" loc="40:/home/zdenial/tinyos/tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x2b9a8adf1740"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b9a8adf1ac0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b9a8adf1c50"/>
        <function-ref name="start" scoped="" ref="0x2b9a8adf1de0"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8adf0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b9a8ade9320" loc="46:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2b9a8ade9320"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b9a8ade96a0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b9a8ade9830"/>
        <function-ref name="start" scoped="" ref="0x2b9a8ade99c0"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8ade9b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b9a8ade8370" loc="47:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b9a8ade8370"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b9a8a5c71b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8ade86f0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8ade8880"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8ade8a10"/>
        <function-ref name="cancel" scoped="" ref="0x2b9a8ade8ba0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8ade8d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b9a8ade6020" loc="49:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b9a8ade6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8ade63a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b9a8ade6530"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8ade66c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8ade6850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b9a8ade69e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b9a8ade7530" loc="48:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b9a8ade7530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b9a8a5c71b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9a8ade78b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b9a8ae1b490" loc="53:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b9a8ae1b490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b9a8ae1b810"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b9a8ae1b9a0"/>
        <function-ref name="led1On" scoped="" ref="0x2b9a8ae1bb30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b9a8ae1bcc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b9a8ae1be50"/>
        <function-ref name="get" scoped="" ref="0x2b9a8ae1a020"/>
        <function-ref name="led1Off" scoped="" ref="0x2b9a8ae1a1b0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b9a8ae1a7f0"/>
        <function-ref name="set" scoped="" ref="0x2b9a8ae1a340"/>
        <function-ref name="led0On" scoped="" ref="0x2b9a8ae1a4d0"/>
        <function-ref name="led2On" scoped="" ref="0x2b9a8ae1a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b9a8ae159f0" loc="51:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b9a8ae159f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b9a8ae15d70"/>
        <function-ref name="noAck" scoped="" ref="0x2b9a8ae1b020"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b9a8ae1b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b9a8ade6c90" loc="50:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b9a8ade6c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b9a8ade50a0"/>
        <function-ref name="source" scoped="" ref="0x2b9a8ade5230"/>
        <function-ref name="address" scoped="" ref="0x2b9a8ade53c0"/>
        <function-ref name="destination" scoped="" ref="0x2b9a8ade5550"/>
        <function-ref name="setSource" scoped="" ref="0x2b9a8ade56e0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b9a8ade5870"/>
        <function-ref name="type" scoped="" ref="0x2b9a8ade5a00"/>
        <function-ref name="setType" scoped="" ref="0x2b9a8ade5b90"/>
        <function-ref name="isForMe" scoped="" ref="0x2b9a8ade5d20"/>
        <function-ref name="setGroup" scoped="" ref="0x2b9a8ae1c020"/>
        <function-ref name="localGroup" scoped="" ref="0x2b9a8ae1c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b9a8ae75d90" loc="54:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2b9a8ae75d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8ae74180"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8ae74310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8ae744a0"/>
        <function-ref name="cancel" scoped="" ref="0x2b9a8ae74630"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8ae747c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b9a8ae74a50" loc="55:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2b9a8ae74a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9a8ae74dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b9a8ae12b40" loc="47:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b9a8ae12b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b9a8a5c71b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8ae79020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8ae791b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8ae79340"/>
        <function-ref name="cancel" scoped="" ref="0x2b9a8ae794d0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8ae79660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b9a8ae76720" loc="50:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b9a8ae76720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8ae76aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b9a8ae76c30"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8ae76dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8ae75020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b9a8ae751b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b9a8ae799e0" loc="48:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b9a8ae799e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b9a8a5c71b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9a8ae79d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b9a8ae75400" loc="51:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b9a8ae75400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b9a8ae75780"/>
        <function-ref name="noAck" scoped="" ref="0x2b9a8ae75910"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b9a8ae75aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b9a8ae77020" loc="49:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b9a8ae77020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b9a8ae773a0"/>
        <function-ref name="source" scoped="" ref="0x2b9a8ae77530"/>
        <function-ref name="address" scoped="" ref="0x2b9a8ae776c0"/>
        <function-ref name="destination" scoped="" ref="0x2b9a8ae77850"/>
        <function-ref name="setSource" scoped="" ref="0x2b9a8ae779e0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b9a8ae77b70"/>
        <function-ref name="type" scoped="" ref="0x2b9a8ae77d00"/>
        <function-ref name="setType" scoped="" ref="0x2b9a8ae76020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b9a8ae761b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b9a8ae76340"/>
        <function-ref name="localGroup" scoped="" ref="0x2b9a8ae764d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b9a8ae6f4e0" loc="50:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2b9a8ae6f4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b9a8ae6f860"/>
        <function-ref name="stopDone" scoped="" ref="0x2b9a8ae6f9f0"/>
        <function-ref name="start" scoped="" ref="0x2b9a8ae6fb80"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8ae6fd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b9a8ae6d020" loc="52:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b9a8ae6d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b9a8a5c6d70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8ae6d3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8ae6d530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8ae6d6c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b9a8ae6d850"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8ae6d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9a8ae72e60" loc="49:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b9a8ae72e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9a8ae6f210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b9a8ae6e4c0" loc="51:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b9a8ae6e4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b9a8a5c6d70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9a8ae6e840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b9a8ae6b940" loc="56:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b9a8ae6b940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b9a8ae6bcc0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b9a8ae6be50"/>
        <function-ref name="led1On" scoped="" ref="0x2b9a8ae6a020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b9a8ae6a1b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b9a8ae6a340"/>
        <function-ref name="get" scoped="" ref="0x2b9a8ae6a4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b9a8ae6a660"/>
        <function-ref name="led2Off" scoped="" ref="0x2b9a8ae6aca0"/>
        <function-ref name="set" scoped="" ref="0x2b9a8ae6a7f0"/>
        <function-ref name="led0On" scoped="" ref="0x2b9a8ae6a980"/>
        <function-ref name="led2On" scoped="" ref="0x2b9a8ae6ab10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x2b9a8ae6b020" loc="55:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b9a8ae6b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b9a8a5c6d70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2b9a8ae6b3a0"/>
        <function-ref name="offset" scoped="" ref="0x2b9a8ae6b530"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2b9a8ae6b6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b9a8ae9f2f0" loc="66:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2b9a8ae9f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b9a8ae9f670"/>
        <function-ref name="stopDone" scoped="" ref="0x2b9a8ae9f800"/>
        <function-ref name="start" scoped="" ref="0x2b9a8ae9f990"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8ae9fb20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x2b9a8af03e40" loc="332:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDoneTask" scoped="" ref="0x2b9a8af03e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9a8af021e0"/>
        <function-ref name="runTask" scoped="" ref="0x2b9a8af02370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x2b9a8ae8e060" loc="74:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x2b9a8ae8e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b9a8ae8e3e0"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8ae8e570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x2b9a8aeb4d10" loc="191:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RunTx" scoped="" ref="0x2b9a8aeb4d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9a8aeb30e0"/>
        <function-ref name="runTask" scoped="" ref="0x2b9a8aeb3270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9a8aea2c30" loc="65:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b9a8aea2c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9a8ae9f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x2b9a8ae8bc50" loc="75:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFlush" scoped="" ref="0x2b9a8ae8bc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x2b9a8ae8d020"/>
        <function-ref name="flush" scoped="" ref="0x2b9a8ae8d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x2b9a8af06400" loc="322:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDoneTask" scoped="" ref="0x2b9a8af06400"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9a8af06780"/>
        <function-ref name="runTask" scoped="" ref="0x2b9a8af06910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x2b9a8ae8f8e0" loc="72:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x2b9a8ae8f8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x2b9a8ae8fc60"/>
        <function-ref name="resetSend" scoped="" ref="0x2b9a8ae8fdf0"/>
        <function-ref name="dataReceived" scoped="" ref="0x2b9a8ae9c020"/>
        <function-ref name="resetReceive" scoped="" ref="0x2b9a8ae9c1b0"/>
        <function-ref name="putData" scoped="" ref="0x2b9a8ae9c340"/>
        <function-ref name="putDone" scoped="" ref="0x2b9a8ae9c4d0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x2b9a8ae9c660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b9a8ae9c8e0" loc="73:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b9a8ae9c8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b9a8ae9cc60"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b9a8ae9cdf0"/>
        <function-ref name="led1On" scoped="" ref="0x2b9a8ae94020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b9a8ae941b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b9a8ae94340"/>
        <function-ref name="get" scoped="" ref="0x2b9a8ae944d0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b9a8ae94660"/>
        <function-ref name="led2Off" scoped="" ref="0x2b9a8ae94ca0"/>
        <function-ref name="set" scoped="" ref="0x2b9a8ae947f0"/>
        <function-ref name="led0On" scoped="" ref="0x2b9a8ae94980"/>
        <function-ref name="led2On" scoped="" ref="0x2b9a8ae94b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x2b9a8aeff0c0" loc="341:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x2b9a8aeff0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9a8aeff440"/>
        <function-ref name="runTask" scoped="" ref="0x2b9a8aeff5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x2b9a8ae99130" loc="67:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x2b9a8ae99130"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x2b9a8ae994b0"/>
        <function-ref name="nextByte" scoped="" ref="0x2b9a8ae99640"/>
        <function-ref name="startSend" scoped="" ref="0x2b9a8ae997d0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x2b9a8ae99960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x2b9a8ae955c0" loc="68:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b9a8ae955c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x2b9a8ae95940"/>
        <function-ref name="byteReceived" scoped="" ref="0x2b9a8ae95ad0"/>
        <function-ref name="endPacket" scoped="" ref="0x2b9a8ae95c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x2b9a8afd5c50" loc="275:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveTask" scoped="" ref="0x2b9a8afd5c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9a8afd4020"/>
        <function-ref name="runTask" scoped="" ref="0x2b9a8afd41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b9a8afd9830" loc="51:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b9a8afd9830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b9a8a5c6d70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8afd9bd0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8afd9d60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8afd8020"/>
        <function-ref name="cancel" scoped="" ref="0x2b9a8afd81b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8afd8340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x2b9a8afd4480" loc="158:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalSendDone" scoped="" ref="0x2b9a8afd4480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9a8afd4800"/>
        <function-ref name="runTask" scoped="" ref="0x2b9a8afd4990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b9a8afd9110" loc="50:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b9a8afd9110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b9a8a5c6d70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9a8afd94b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x2b9a8afd8760" loc="54:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketInfo" scoped="" ref="0x2b9a8afd8760"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b9a8a5c6d70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2b9a8afd8b00"/>
        <function-ref name="offset" scoped="" ref="0x2b9a8afd8c90"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2b9a8afd8e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b9a8afd6590" loc="57:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b9a8afd6590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b9a8afd6910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b9a8afd6aa0"/>
        <function-ref name="led1On" scoped="" ref="0x2b9a8afd6c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b9a8afd6dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b9a8afd5020"/>
        <function-ref name="get" scoped="" ref="0x2b9a8afd51b0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b9a8afd5340"/>
        <function-ref name="led2On" scoped="" ref="0x2b9a8afd5980"/>
        <function-ref name="set" scoped="" ref="0x2b9a8afd5660"/>
        <function-ref name="led2Off" scoped="" ref="0x2b9a8afd54d0"/>
        <function-ref name="led0On" scoped="" ref="0x2b9a8afd57f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x2b9a8afd79d0" loc="56:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x2b9a8afd79d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x2b9a8afd7d50"/>
        <function-ref name="nextByte" scoped="" ref="0x2b9a8afd6020"/>
        <function-ref name="startSend" scoped="" ref="0x2b9a8afd61b0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x2b9a8afd6340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x2b9a8afd70e0" loc="55:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b9a8afd70e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x2b9a8afd7460"/>
        <function-ref name="byteReceived" scoped="" ref="0x2b9a8afd75f0"/>
        <function-ref name="endPacket" scoped="" ref="0x2b9a8afd7780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x2b9a8afcfca0" loc="50:/home/zdenial/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x2b9a8afcfca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8afcd0a0"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b9a8afcd230"/>
        <function-ref name="receive" scoped="" ref="0x2b9a8afcd3c0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b9a8afcd550"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b9a8afcd6e0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b9a8afcd870"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8afcda00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x2b9a8afd2b70" loc="48:/home/zdenial/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x2b9a8afd2b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x2b9a8afcf020"/>
        <function-ref name="resetSend" scoped="" ref="0x2b9a8afcf1b0"/>
        <function-ref name="dataReceived" scoped="" ref="0x2b9a8afcf340"/>
        <function-ref name="resetReceive" scoped="" ref="0x2b9a8afcf4d0"/>
        <function-ref name="putData" scoped="" ref="0x2b9a8afcf660"/>
        <function-ref name="putDone" scoped="" ref="0x2b9a8afcf7f0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x2b9a8afcf980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b9a8afcdc80" loc="51:/home/zdenial/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b9a8afcdc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b9a8afcc0a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b9a8afcc230"/>
        <function-ref name="led1On" scoped="" ref="0x2b9a8afcc3c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b9a8afcc550"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b9a8afcc6e0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8afcc870"/>
        <function-ref name="led1Off" scoped="" ref="0x2b9a8afcca00"/>
        <function-ref name="led2Off" scoped="" ref="0x2b9a8afcb1b0"/>
        <function-ref name="set" scoped="" ref="0x2b9a8afccb90"/>
        <function-ref name="led0On" scoped="" ref="0x2b9a8afccd20"/>
        <function-ref name="led2On" scoped="" ref="0x2b9a8afcb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x2b9a8aff46c0" loc="47:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Info" scoped="" ref="0x2b9a8aff46c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2b9a8aff4a40"/>
        <function-ref name="offset" scoped="" ref="0x2b9a8aff4bd0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2b9a8aff4d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b9a8afe1020" loc="61:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2b9a8afe1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b9a8afe13a0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b9a8afe1530"/>
        <function-ref name="start" scoped="" ref="0x2b9a8afe16c0"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8afe1850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b9a8afe0050" loc="63:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b9a8afe0050"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b9a8a5c71b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8afe03d0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8afe0560"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8afe06f0"/>
        <function-ref name="cancel" scoped="" ref="0x2b9a8afe0880"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8afe0a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b9a8afdfdf0" loc="65:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x2b9a8afdfdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b9a8a5c71b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9a8afde1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b9a8afde450" loc="67:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b9a8afde450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8afde7d0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b9a8afde960"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8afdeaf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8afdec80"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b9a8afdee10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2b9a8b0199e0" loc="70:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b9a8b0199e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b9a8b021020"/>
        <function-ref name="clear" scoped="" ref="0x2b9a8b021750"/>
        <function-ref name="isValid" scoped="" ref="0x2b9a8b022890"/>
        <function-ref name="set" scoped="" ref="0x2b9a8b021e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b9a8b00d8a0" loc="72:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2b9a8b00d8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b9a8b00dc20"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b9a8b00ddb0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b9a8b013020"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b9a8b0131b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b9a8afdf210" loc="64:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b9a8afdf210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b9a8a5c71b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9a8afdf590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b9a8afdc800" loc="69:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b9a8afdc800"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b9a8afdcb80"/>
        <function-ref name="noAck" scoped="" ref="0x2b9a8afdcd10"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b9a8b023020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b9a8afdd120" loc="68:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b9a8afdd120"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b9a8afdd4a0"/>
        <function-ref name="source" scoped="" ref="0x2b9a8afdd630"/>
        <function-ref name="address" scoped="" ref="0x2b9a8afdd7c0"/>
        <function-ref name="destination" scoped="" ref="0x2b9a8afdd950"/>
        <function-ref name="setSource" scoped="" ref="0x2b9a8afddae0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b9a8afddc70"/>
        <function-ref name="type" scoped="" ref="0x2b9a8afdde00"/>
        <function-ref name="setType" scoped="" ref="0x2b9a8afdc020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b9a8afdc1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b9a8afdc340"/>
        <function-ref name="localGroup" scoped="" ref="0x2b9a8afdc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b9a8b018af0" loc="71:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b9a8b018af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a5ddbf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9a8a608020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b9a8b0160d0"/>
        <function-ref name="clear" scoped="" ref="0x2b9a8b016800"/>
        <function-ref name="isValid" scoped="" ref="0x2b9a8b017970"/>
        <function-ref name="set" scoped="" ref="0x2b9a8b014020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b9a8b001680" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2b9a8b001680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b9a8b001a00"/>
        <function-ref name="stopDone" scoped="" ref="0x2b9a8b001b90"/>
        <function-ref name="start" scoped="" ref="0x2b9a8b001d20"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8b000020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b9a8b02fd40" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2b9a8b02fd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b9a8a5c71b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b9a8b0380e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b9a8b038270"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b9a8b038400"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b9a8b038590"/>
        <function-ref name="setCca" scoped="" ref="0x2b9a8b038720"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b9a8b0388b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b9a8b02c500" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x2b9a8b02c500"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b9a8a5c71b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b9a8b02c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b9a8b043760" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b9a8b043760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8b043ae0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b9a8b043c70"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8b043e00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8b042020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b9a8b0421b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b9a8b0007f0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b9a8b0007f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b9a8a5c71b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8b000b70"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8b000d00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8b047020"/>
        <function-ref name="cancel" scoped="" ref="0x2b9a8b0471b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8b047340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b9a8b046880" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x2b9a8b046880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b9a8a5c71b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9a8b046c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2b9a8b03a970" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2b9a8b03a970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b9a8b03acf0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b9a8b03ae80"/>
        <function-ref name="getRssi" scoped="" ref="0x2b9a8b041030"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b9a8b0411c0"/>
        <function-ref name="getPower" scoped="" ref="0x2b9a8b041350"/>
        <function-ref name="getLqi" scoped="" ref="0x2b9a8b0414e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b9a8b038bb0" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2b9a8b038bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b9a8b02e020"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b9a8b02e1b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b9a8b02e340"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b9a8b02e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b9a8b047b20" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b9a8b047b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b9a8a5c71b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9a8b046020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b9a8b041810" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b9a8b041810"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b9a8b041b90"/>
        <function-ref name="noAck" scoped="" ref="0x2b9a8b041d20"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b9a8b040020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b9a8b02e790" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x2b9a8b02e790"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b9a8b02eb10"/>
        <function-ref name="setRetries" scoped="" ref="0x2b9a8b02eca0"/>
        <function-ref name="getRetries" scoped="" ref="0x2b9a8b02ee30"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b9a8b02d020"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b9a8b02d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b9a8b044020" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b9a8b044020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b9a8b0443a0"/>
        <function-ref name="source" scoped="" ref="0x2b9a8b044530"/>
        <function-ref name="address" scoped="" ref="0x2b9a8b0446c0"/>
        <function-ref name="destination" scoped="" ref="0x2b9a8b044850"/>
        <function-ref name="setSource" scoped="" ref="0x2b9a8b0449e0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b9a8b044b70"/>
        <function-ref name="type" scoped="" ref="0x2b9a8b044d00"/>
        <function-ref name="setType" scoped="" ref="0x2b9a8b043020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b9a8b0431b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b9a8b043340"/>
        <function-ref name="localGroup" scoped="" ref="0x2b9a8b0434d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b9a8b036a80" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b9a8b036a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b9a8b036e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b9a8b026340" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2b9a8b026340"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b9a8b0266c0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b9a8b026850"/>
        <function-ref name="start" scoped="" ref="0x2b9a8b0269e0"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8b026b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b9a8b067080" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b9a8b067080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b9a8b067400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b9a8b0662e0" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x2b9a8b0662e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b9a8b066660"/>
        <function-ref name="setRetries" scoped="" ref="0x2b9a8b0667f0"/>
        <function-ref name="getRetries" scoped="" ref="0x2b9a8b066980"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b9a8b066b10"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b9a8b066ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2b9a8b069740" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2b9a8b069740"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b9a8b069ac0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b9a8b069c50"/>
        <function-ref name="getRssi" scoped="" ref="0x2b9a8b069de0"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b9a8b068020"/>
        <function-ref name="getPower" scoped="" ref="0x2b9a8b0681b0"/>
        <function-ref name="getLqi" scoped="" ref="0x2b9a8b068340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x2b9a8b06a350" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x2b9a8b06a350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8b06a6d0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8b06a860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8b06a9f0"/>
        <function-ref name="cancel" scoped="" ref="0x2b9a8b06ab80"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8b06ad10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b9a8b067700" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2b9a8b067700"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b9a8b067a80"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b9a8b067c10"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b9a8b067da0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b9a8b066020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x2b9a8b06ce70" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x2b9a8b06ce70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9a8b06b220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b9a8b068670" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b9a8b068670"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b9a8b0689f0"/>
        <function-ref name="noAck" scoped="" ref="0x2b9a8b068b80"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b9a8b068d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b9a8b025430" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b9a8b025430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9a8b0257b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9a8b025940"/>
        <function-ref name="request" scoped="" ref="0x2b9a8b025ad0"/>
        <function-ref name="granted" scoped="" ref="0x2b9a8b025c60"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9a8b025df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2b9a8b06c160" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x2b9a8b06c160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8b06c4e0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8b06c670"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8b06c800"/>
        <function-ref name="cancel" scoped="" ref="0x2b9a8b06c990"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8b06cb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x2b9a8b06b560" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x2b9a8b06b560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8b06b8e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b9a8b06ba70"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8b06bc00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8b06bd90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b9a8b06a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x2b9a8b0690f0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x2b9a8b0690f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9a8b069470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b9a8b0659f0" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2b9a8b0659f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b9a8b065d70"/>
        <function-ref name="stopDone" scoped="" ref="0x2b9a8b062020"/>
        <function-ref name="start" scoped="" ref="0x2b9a8b0621b0"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8b062340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b9a8b061990" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2b9a8b061990"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b9a8b061d10"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b9a8b060020"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b9a8b0601b0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b9a8b060340"/>
        <function-ref name="setCca" scoped="" ref="0x2b9a8b0604d0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b9a8b060660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b9a8b062600" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b9a8b062600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8b062980"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8b062b10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8b062ca0"/>
        <function-ref name="cancel" scoped="" ref="0x2b9a8b062e30"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8b061020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b9a8b061300" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b9a8b061300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9a8b061680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b9a8b05d690" loc="39:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2b9a8b05d690"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b9a8b05da10"/>
        <function-ref name="stopDone" scoped="" ref="0x2b9a8b05dba0"/>
        <function-ref name="start" scoped="" ref="0x2b9a8b05dd30"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8b05c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b9a8b05a020" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2b9a8b05a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b9a8b05a3a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b9a8b05a530"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b9a8b05a6c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b9a8b05a850"/>
        <function-ref name="setCca" scoped="" ref="0x2b9a8b05a9e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b9a8b05ab70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x2b9a8b050060" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x2b9a8b050060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b9a8b0503e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b9a8b050570"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b9a8b050700"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b9a8b050890"/>
        <function-ref name="setCca" scoped="" ref="0x2b9a8b050a20"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b9a8b050bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2b9a8b048e20" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2b9a8b048e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b9a8b0911c0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b9a8b091350"/>
        <function-ref name="getRssi" scoped="" ref="0x2b9a8b0914e0"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b9a8b091670"/>
        <function-ref name="getPower" scoped="" ref="0x2b9a8b091800"/>
        <function-ref name="getLqi" scoped="" ref="0x2b9a8b091990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x2b9a8b0492a0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x2b9a8b0492a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8b049620"/>
        <function-ref name="cancel" scoped="" ref="0x2b9a8b0497b0"/>
        <function-ref name="modify" scoped="" ref="0x2b9a8b049940"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8b049ad0"/>
        <function-ref name="resend" scoped="" ref="0x2b9a8b049c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b9a8b05c2e0" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b9a8b05c2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8b05c660"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8b05c7f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8b05c980"/>
        <function-ref name="cancel" scoped="" ref="0x2b9a8b05cb10"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8b05cca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2b9a8b050e80" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x2b9a8b050e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b9a8b04f220"/>
        <function-ref name="rand32" scoped="" ref="0x2b9a8b04f3b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2b9a8b0586f0" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x2b9a8b0586f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b9a8b058a70"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8b058c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b9a8b08a430" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b9a8b08a430"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8b08a7b0"/>
        <function-ref name="getHeader" scoped="" ref="0x2b9a8b08a940"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b9a8b08aad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x2b9a8b0513f0" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x2b9a8b0513f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2b9a8b051770"/>
        <function-ref name="rfOff" scoped="" ref="0x2b9a8b051900"/>
        <function-ref name="rxOn" scoped="" ref="0x2b9a8b051a90"/>
        <function-ref name="startVReg" scoped="" ref="0x2b9a8b051c20"/>
        <function-ref name="stopVReg" scoped="" ref="0x2b9a8b051db0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2b9a8b058020"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2b9a8b0581b0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2b9a8b058340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b9a8b04f670" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b9a8b04f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b9a8b04f9f0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b9a8b04fb80"/>
        <function-ref name="led1On" scoped="" ref="0x2b9a8b04fd10"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b9a8b048020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b9a8b0481b0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8b048340"/>
        <function-ref name="led1Off" scoped="" ref="0x2b9a8b0484d0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b9a8b048b10"/>
        <function-ref name="set" scoped="" ref="0x2b9a8b048660"/>
        <function-ref name="led0On" scoped="" ref="0x2b9a8b0487f0"/>
        <function-ref name="led2On" scoped="" ref="0x2b9a8b048980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b9a8b05ae60" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b9a8b05ae60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9a8b059210"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9a8b0593a0"/>
        <function-ref name="request" scoped="" ref="0x2b9a8b059530"/>
        <function-ref name="granted" scoped="" ref="0x2b9a8b0596c0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9a8b059850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x2b9a8b085bc0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x2b9a8b085bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b9a8b0890a0"/>
        <function-ref name="toIdle" scoped="" ref="0x2b9a8b089230"/>
        <function-ref name="isState" scoped="" ref="0x2b9a8b0893c0"/>
        <function-ref name="isIdle" scoped="" ref="0x2b9a8b089550"/>
        <function-ref name="requestState" scoped="" ref="0x2b9a8b0896e0"/>
        <function-ref name="forceState" scoped="" ref="0x2b9a8b089870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x2b9a8b0805d0" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x2b9a8b0805d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9a8b080950"/>
        <function-ref name="runTask" scoped="" ref="0x2b9a8b080ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x2b9a8b081660" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x2b9a8b081660"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9a8b0819e0"/>
        <function-ref name="runTask" scoped="" ref="0x2b9a8b081b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x2b9a8b082730" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x2b9a8b082730"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9a8b082ab0"/>
        <function-ref name="runTask" scoped="" ref="0x2b9a8b082c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x2b9a8b0bd550" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x2b9a8b0bd550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2b9a8b0bd8d0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2b9a8b0bda60"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2b9a8b0bdbf0"/>
        <function-ref name="syncDone" scoped="" ref="0x2b9a8b0bdd80"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2b9a8b0ca020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2b9a8b0ca1b0"/>
        <function-ref name="setChannel" scoped="" ref="0x2b9a8b0ca340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2b9a8b0ca4d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2b9a8b0ca660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2b9a8b0ca7f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2b9a8b0ca980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2b9a8b0cab10"/>
        <function-ref name="sync" scoped="" ref="0x2b9a8b0caca0"/>
        <function-ref name="getChannel" scoped="" ref="0x2b9a8b0c9020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2b9a8b0c91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x2b9a8b0b8890" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x2b9a8b0b8890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b0bb4c0"/>
        <function-ref name="readDone" scoped="" ref="0x2b9a8b0bb940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x2b9a8b0c94b0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x2b9a8b0c94b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2b9a8b0c9830"/>
        <function-ref name="rfOff" scoped="" ref="0x2b9a8b0c99c0"/>
        <function-ref name="rxOn" scoped="" ref="0x2b9a8b0c9b50"/>
        <function-ref name="startVReg" scoped="" ref="0x2b9a8b0c9ce0"/>
        <function-ref name="stopVReg" scoped="" ref="0x2b9a8b0c9e70"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2b9a8b0bc030"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2b9a8b0bc1c0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2b9a8b0bc350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b9a8b0cb020" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b9a8b0cb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9a8b0cb3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9a8b0cb530"/>
        <function-ref name="request" scoped="" ref="0x2b9a8b0cb6c0"/>
        <function-ref name="granted" scoped="" ref="0x2b9a8b0cb850"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9a8b0cb9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x2b9a8b0ff1a0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x2b9a8b0ff1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2b9a8b0ff520"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2b9a8b0ff6b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2b9a8b0ff840"/>
        <function-ref name="syncDone" scoped="" ref="0x2b9a8b0ff9d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2b9a8b0ffb60"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2b9a8b0ffcf0"/>
        <function-ref name="setChannel" scoped="" ref="0x2b9a8b0ffe80"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2b9a8b0fe030"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2b9a8b0fe1c0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2b9a8b0fe350"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2b9a8b0fe4e0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2b9a8b0fe670"/>
        <function-ref name="sync" scoped="" ref="0x2b9a8b0fe800"/>
        <function-ref name="getChannel" scoped="" ref="0x2b9a8b0fea90"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2b9a8b0fec20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x2b9a8b1231e0" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2b9a8b1231e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b123560"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b1236f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x2b9a8b0f8970" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2b9a8b0f8970"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x2b9a8b0f8cf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x2b9a8b0f0790" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x2b9a8b0f0790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9a8b0ef020"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8b0f7020"/>
        <function-ref name="startAt" scoped="" ref="0x2b9a8b0f79a0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9a8b0f74e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b9a8b0ef4e0"/>
        <function-ref name="start" scoped="" ref="0x2b9a8b0f95d0"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8b0f9ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x2b9a8b126020" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b9a8b126020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b1263a0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b126530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x2b9a8b0edce0" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x2b9a8b0edce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8b0ec0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8b0ec230"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8b0ec3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8b0ec550"/>
        <function-ref name="get" scoped="" ref="0x2b9a8b0ec6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8b0ec870"/>
        <function-ref name="set" scoped="" ref="0x2b9a8b0eca00"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8b0ecb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x2b9a8b0fc500" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x2b9a8b0fc500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b0fb130"/>
        <function-ref name="readDone" scoped="" ref="0x2b9a8b0fb5b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x2b9a8b1112f0" loc="126:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x2b9a8b1112f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9a8b111670"/>
        <function-ref name="runTask" scoped="" ref="0x2b9a8b111800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x2b9a8b123a80" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2b9a8b123a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b123e00"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b121020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x2b9a8b1213c0" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2b9a8b1213c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b121740"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b1218d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x2b9a8b124cd0" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2b9a8b124cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b0e00a0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b0e0230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2b9a8b0e1390" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b9a8b0e1390"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b9a8b0e1710"/>
        <function-ref name="changed" scoped="" ref="0x2b9a8b0e18a0"/>
        <function-ref name="amGroup" scoped="" ref="0x2b9a8b0e1a30"/>
        <function-ref name="setAddress" scoped="" ref="0x2b9a8b0e1bc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2b9a8b0ef9d0" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x2b9a8b0ef9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8b0efd50"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8b0ed020"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8b0ed1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8b0ed340"/>
        <function-ref name="get" scoped="" ref="0x2b9a8b0ed4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8b0ed660"/>
        <function-ref name="set" scoped="" ref="0x2b9a8b0ed7f0"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8b0ed980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x2b9a8b120ae0" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b9a8b120ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b11f0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x2b9a8b0eb020" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x2b9a8b0eb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8b0eb3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8b0eb530"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8b0eb6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8b0eb850"/>
        <function-ref name="get" scoped="" ref="0x2b9a8b0eb9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8b0ebb70"/>
        <function-ref name="set" scoped="" ref="0x2b9a8b0ebd00"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8b0ea020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9a8b0b7d60" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b9a8b0b7d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9a8b100180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x2b9a8b1268f0" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b9a8b1268f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b126c70"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b126e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x2b9a8b11f440" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2b9a8b11f440"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b11f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2b9a8b11fb60" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x2b9a8b11fb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9a8b11d020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9a8b11d1b0"/>
        <function-ref name="request" scoped="" ref="0x2b9a8b11d340"/>
        <function-ref name="granted" scoped="" ref="0x2b9a8b11d4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9a8b11d660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x2b9a8b11c880" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x2b9a8b11c880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9a8b11cc00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9a8b11cd90"/>
        <function-ref name="request" scoped="" ref="0x2b9a8b11b020"/>
        <function-ref name="granted" scoped="" ref="0x2b9a8b11b1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9a8b11b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x2b9a8b0fd020" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x2b9a8b0fd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2b9a8b0fd3a0"/>
        <function-ref name="rfOff" scoped="" ref="0x2b9a8b0fd530"/>
        <function-ref name="rxOn" scoped="" ref="0x2b9a8b0fd6c0"/>
        <function-ref name="startVReg" scoped="" ref="0x2b9a8b0fd850"/>
        <function-ref name="stopVReg" scoped="" ref="0x2b9a8b0fd9e0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2b9a8b0fdb70"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2b9a8b0fdd00"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2b9a8b0fc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x2b9a8b0e05d0" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2b9a8b0e05d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b0e0950"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b0e0ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x2b9a8b124420" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2b9a8b124420"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b1247a0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b124930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x2b9a8b11ebb0" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2b9a8b11ebb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b120020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b9a8b11b600" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b9a8b11b600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b9a8b11b980"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b9a8b11bb10"/>
        <function-ref name="led1On" scoped="" ref="0x2b9a8b11bca0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b9a8b11be30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b9a8b11a020"/>
        <function-ref name="get" scoped="" ref="0x2b9a8b11a1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b9a8b11a340"/>
        <function-ref name="led2Off" scoped="" ref="0x2b9a8b11a980"/>
        <function-ref name="set" scoped="" ref="0x2b9a8b11a4d0"/>
        <function-ref name="led0On" scoped="" ref="0x2b9a8b11a660"/>
        <function-ref name="led2On" scoped="" ref="0x2b9a8b11a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x2b9a8b112410" loc="125:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x2b9a8b112410"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9a8b112790"/>
        <function-ref name="runTask" scoped="" ref="0x2b9a8b112920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b9a8b100470" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b9a8b100470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9a8b1007f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9a8b100980"/>
        <function-ref name="request" scoped="" ref="0x2b9a8b100b10"/>
        <function-ref name="granted" scoped="" ref="0x2b9a8b100ca0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9a8b100e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x2b9a8b127e20" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2b9a8b127e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b0e51c0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b0e5350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x2b9a8b1274a0" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2b9a8b1274a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b127920"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b127ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x2b9a8b0e6c00" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x2b9a8b0e6c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9a8b0e9020"/>
        <function-ref name="disable" scoped="" ref="0x2b9a8b0e91b0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b9a8b0e9340"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b9a8b0e94d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x2b9a8b11da10" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x2b9a8b11da10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9a8b11dd90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9a8b11c020"/>
        <function-ref name="request" scoped="" ref="0x2b9a8b11c1b0"/>
        <function-ref name="granted" scoped="" ref="0x2b9a8b11c340"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9a8b11c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x2b9a8b1203b0" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2b9a8b1203b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b120730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9a8b1827e0" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b9a8b1827e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9a8b182b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x2b9a8b17f220" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x2b9a8b17f220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9a8b17cb30"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8b17da60"/>
        <function-ref name="startAt" scoped="" ref="0x2b9a8b17c4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9a8b17c020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b9a8b17b020"/>
        <function-ref name="start" scoped="" ref="0x2b9a8b17d090"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8b17d5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9a8b17aa20" loc="42:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b9a8b17aa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9a8b17ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x2b9a8b1792e0" loc="43:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x2b9a8b1792e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9a8b280b30"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8b281ae0"/>
        <function-ref name="startAt" scoped="" ref="0x2b9a8b2804e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9a8b280020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b9a8b27f020"/>
        <function-ref name="start" scoped="" ref="0x2b9a8b281110"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8b281620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b9a8c5e2180" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b9a8c5e2180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9a8c5dfb30"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8c5e19f0"/>
        <function-ref name="startAt" scoped="" ref="0x2b9a8c5df4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9a8c5df020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b9a8c5de020"/>
        <function-ref name="start" scoped="" ref="0x2b9a8c5e1020"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8c5e1530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9a8c5e38e0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b9a8c5e38e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9a8c5e3c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b9a8c5da2a0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b9a8c5da2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9a8c5d8b30"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8c5d9aa0"/>
        <function-ref name="startAt" scoped="" ref="0x2b9a8c5d84e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9a8c5d8020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b9a8c5d7020"/>
        <function-ref name="start" scoped="" ref="0x2b9a8c5d90d0"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8c5d95e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9a8c5dba10" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b9a8c5dba10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9a8c5dbd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x2b9a8c5c2c10" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2b9a8c5c2c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9a8c5c1020"/>
        <function-ref name="setEvent" scoped="" ref="0x2b9a8c5c11b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b9a8c5c1340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b9a8c5c14d0"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8c5c1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x2b9a8c5c41b0" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2b9a8c5c41b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8c5c4530"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b9a8c5c46c0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9a8c5c4850"/>
        <function-ref name="get" scoped="" ref="0x2b9a8c5c49e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9a8c5c4b70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9a8c5c4d00"/>
        <function-ref name="getMode" scoped="" ref="0x2b9a8c5c3020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9a8c5c31b0"/>
        <function-ref name="overflow" scoped="" ref="0x2b9a8c5c3340"/>
        <function-ref name="setMode" scoped="" ref="0x2b9a8c5c34d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b9a8c5c3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x2b9a8c5c38f0" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b9a8c5c38f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b9a8c5c3c70"/>
        <function-ref name="getControl" scoped="" ref="0x2b9a8c5c3e00"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9a8c5c2020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b9a8c5c21b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b9a8c5c2340"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9a8c5c24d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b9a8c5c2660"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b9a8c5c27f0"/>
        <function-ref name="setControl" scoped="" ref="0x2b9a8c5c2980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x2b9a8b1a5ba0" loc="52:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2b9a8b1a5ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9a8b1a3020"/>
        <function-ref name="setEvent" scoped="" ref="0x2b9a8b1a31b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b9a8b1a3340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b9a8b1a34d0"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8b1a3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x2b9a8b1a84d0" loc="50:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2b9a8b1a84d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8b1a8850"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b9a8b1a89e0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9a8b1a8b70"/>
        <function-ref name="get" scoped="" ref="0x2b9a8b1a8d00"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9a8b1a7020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9a8b1a71b0"/>
        <function-ref name="getMode" scoped="" ref="0x2b9a8b1a7340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9a8b1a74d0"/>
        <function-ref name="overflow" scoped="" ref="0x2b9a8b1a7660"/>
        <function-ref name="setMode" scoped="" ref="0x2b9a8b1a77f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b9a8b1a7980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x2b9a8b1a6280" loc="51:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b9a8b1a6280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b9a8b1a6600"/>
        <function-ref name="getControl" scoped="" ref="0x2b9a8b1a6790"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9a8b1a6920"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b9a8b1a6ab0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b9a8b1a6c40"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9a8b1a6dd0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b9a8b1a5020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b9a8b1a51b0"/>
        <function-ref name="setControl" scoped="" ref="0x2b9a8b1a5340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x2b9a8c5b8a80" loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2b9a8c5b8a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9a8c5b8e00"/>
        <function-ref name="setEvent" scoped="" ref="0x2b9a8c5b7020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b9a8c5b71b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b9a8c5b7340"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8c5b74d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2b9a8c5ba020" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2b9a8c5ba020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8c5ba3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b9a8c5ba530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9a8c5ba6c0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8c5ba850"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9a8c5ba9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9a8c5bab70"/>
        <function-ref name="getMode" scoped="" ref="0x2b9a8c5bad00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9a8c5b9020"/>
        <function-ref name="overflow" scoped="" ref="0x2b9a8c5b91b0"/>
        <function-ref name="setMode" scoped="" ref="0x2b9a8c5b9340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b9a8c5b94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b9a8c5bfda0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b9a8c5bfda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9a8c5bb670"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8c5bd610"/>
        <function-ref name="startAt" scoped="" ref="0x2b9a8c5bb020"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9a8c5bdad0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b9a8c5bbb30"/>
        <function-ref name="start" scoped="" ref="0x2b9a8c5bebf0"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8c5bd150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9a8c5bf510" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b9a8c5bf510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9a8c5bf890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x2b9a8c5b9760" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b9a8c5b9760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b9a8c5b9ae0"/>
        <function-ref name="getControl" scoped="" ref="0x2b9a8c5b9c70"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9a8c5b9e00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b9a8c5b8020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b9a8c5b81b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9a8c5b8340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b9a8c5b84d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b9a8c5b8660"/>
        <function-ref name="setControl" scoped="" ref="0x2b9a8c5b87f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b9a8b1f6020" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b9a8b1f6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9a8b1f6e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9a8b1f5800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9a8b1f5340"/>
        <function-ref name="overflow" scoped="" ref="0x2b9a8b1f5cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2b9a8b224950" loc="63:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x2b9a8b224950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9a8b222780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9a8b221150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9a8b222c40"/>
        <function-ref name="overflow" scoped="" ref="0x2b9a8b221610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b9a8b1f05f0" loc="62:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b9a8b1f05f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9a8b225430"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9a8b225db0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9a8b2258f0"/>
        <function-ref name="overflow" scoped="" ref="0x2b9a8b2242a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b9a8c5d55f0" loc="61:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b9a8c5d55f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9a8c5d2e50"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8c5d4e00"/>
        <function-ref name="startAt" scoped="" ref="0x2b9a8c5d2800"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9a8c5d2340"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b9a8c5d1340"/>
        <function-ref name="start" scoped="" ref="0x2b9a8c5d4430"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8c5d4940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2b9a8c5cfd20" loc="73:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x2b9a8c5cfd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9a8c5cb670"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8c5cc550"/>
        <function-ref name="startAt" scoped="" ref="0x2b9a8c5cb020"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9a8c5cca10"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b9a8c5cbb30"/>
        <function-ref name="start" scoped="" ref="0x2b9a8c5cdb60"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8c5cc090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b9a8c5d19b0" loc="68:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b9a8c5d19b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9a8c5d07e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9a8c5cf1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9a8c5d0ca0"/>
        <function-ref name="overflow" scoped="" ref="0x2b9a8c5cf670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x2b9a8b2796a0" loc="44:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x2b9a8b2796a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8b279a20"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8b279bb0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8b279d40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8b278020"/>
        <function-ref name="get" scoped="" ref="0x2b9a8b2781b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8b278340"/>
        <function-ref name="set" scoped="" ref="0x2b9a8b2784d0"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8b278660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x2b9a8b2789d0" loc="45:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x2b9a8b2789d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8b278d50"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8b277020"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8b2771b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8b277340"/>
        <function-ref name="get" scoped="" ref="0x2b9a8b2774d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8b277660"/>
        <function-ref name="set" scoped="" ref="0x2b9a8b2777f0"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8b277980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x2b9a8b277ce0" loc="46:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x2b9a8b277ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8b2760a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8b276230"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8b2763c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8b276550"/>
        <function-ref name="get" scoped="" ref="0x2b9a8b2766e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8b276870"/>
        <function-ref name="set" scoped="" ref="0x2b9a8b276a00"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8b276b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x2b9a8b27a370" loc="43:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x2b9a8b27a370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8b27a6f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8b27a880"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8b27aa10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8b27aba0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8b27ad30"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8b279020"/>
        <function-ref name="set" scoped="" ref="0x2b9a8b2791b0"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8b279340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x2b9a8b274380" loc="48:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x2b9a8b274380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8b274700"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8b274890"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8b274a20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8b274bb0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8b274d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8b273020"/>
        <function-ref name="set" scoped="" ref="0x2b9a8b2731b0"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8b273340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x2b9a8b27b0e0" loc="42:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x2b9a8b27b0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8b27b460"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8b27b5f0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8b27b780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8b27b910"/>
        <function-ref name="get" scoped="" ref="0x2b9a8b27baa0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8b27bc30"/>
        <function-ref name="set" scoped="" ref="0x2b9a8b27bdc0"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8b27a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x2b9a8b275020" loc="47:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x2b9a8b275020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8b2753a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8b275530"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8b2756c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8b275850"/>
        <function-ref name="get" scoped="" ref="0x2b9a8b2759e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8b275b70"/>
        <function-ref name="set" scoped="" ref="0x2b9a8b275d00"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8b274020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b9a8b271930" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b9a8b271930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8b271cb0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8b271e40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8b270020"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8b2701b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8b270340"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8b2704d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8b270660"/>
        <function-ref name="get" scoped="" ref="0x2b9a8b2707f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8b270980"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8b270b10"/>
        <function-ref name="set" scoped="" ref="0x2b9a8b270ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8b270e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8b26f020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8b26f2b0"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8b26f440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b9a8b272710" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b9a8b272710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8b272a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8b272c20"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8b272db0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8b271020"/>
        <function-ref name="get" scoped="" ref="0x2b9a8b2711b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8b271340"/>
        <function-ref name="set" scoped="" ref="0x2b9a8b2714d0"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8b271660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b9a8b26c480" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b9a8b26c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8b26c800"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8b26c990"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8b26cb20"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8b26ccb0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8b26ce40"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8b26b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8b26b1b0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8b26b340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8b26b4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8b26b660"/>
        <function-ref name="set" scoped="" ref="0x2b9a8b26b7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8b26b980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8b26bb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8b26bda0"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8b26a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b9a8b26d1b0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b9a8b26d1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8b26d530"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8b26d6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8b26d850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8b26d9e0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8b26db70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8b26dd00"/>
        <function-ref name="set" scoped="" ref="0x2b9a8b26c020"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8b26c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b9a8b267020" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b9a8b267020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8b2673a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8b267530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8b2676c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8b267850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8b2679e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8b267b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8b267d00"/>
        <function-ref name="get" scoped="" ref="0x2b9a8b2b8020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8b2b81b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8b2b8340"/>
        <function-ref name="set" scoped="" ref="0x2b9a8b2b84d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8b2b8660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8b2b87f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8b2b8a80"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8b2b8c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b9a8b269d70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b9a8b269d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8b268180"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8b268310"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8b2684a0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8b268630"/>
        <function-ref name="get" scoped="" ref="0x2b9a8b2687c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8b268950"/>
        <function-ref name="set" scoped="" ref="0x2b9a8b268ae0"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8b268c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b9a8b2b4de0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b9a8b2b4de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8b2b3180"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8b2b3310"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8b2b34a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8b2b3630"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8b2b37c0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8b2b3950"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8b2b3ae0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8b2b3c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8b2b3e00"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8b2b2020"/>
        <function-ref name="set" scoped="" ref="0x2b9a8b2b21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8b2b2340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8b2b24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8b2b2760"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8b2b28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b9a8b2b5b70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b9a8b2b5b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8b2b4020"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8b2b41b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8b2b4340"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8b2b44d0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8b2b4660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8b2b47f0"/>
        <function-ref name="set" scoped="" ref="0x2b9a8b2b4980"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8b2b4b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b9a8b2af930" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b9a8b2af930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8b2afcb0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8b2afe40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8b2ae020"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8b2ae1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8b2ae340"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8b2ae4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8b2ae660"/>
        <function-ref name="get" scoped="" ref="0x2b9a8b2ae7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8b2ae980"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8b2aeb10"/>
        <function-ref name="set" scoped="" ref="0x2b9a8b2aeca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8b2aee30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8b2ad020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8b2ad2b0"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8b2ad440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b9a8b2b0710" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b9a8b2b0710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8b2b0a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8b2b0c20"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8b2b0db0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8b2af020"/>
        <function-ref name="get" scoped="" ref="0x2b9a8b2af1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8b2af340"/>
        <function-ref name="set" scoped="" ref="0x2b9a8b2af4d0"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8b2af660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b9a8b2aa480" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b9a8b2aa480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8b2aa800"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8b2aa990"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8b2aab20"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8b2aacb0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8b2aae40"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8b2a9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8b2a91b0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8b2a9340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8b2a94d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8b2a9660"/>
        <function-ref name="set" scoped="" ref="0x2b9a8b2a97f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8b2a9980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8b2a9b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8b2a9da0"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8b2a8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b9a8b2ab1b0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b9a8b2ab1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8b2ab530"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8b2ab6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8b2ab850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8b2ab9e0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8b2abb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8b2abd00"/>
        <function-ref name="set" scoped="" ref="0x2b9a8b2aa020"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8b2aa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b9a8b2a5020" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b9a8b2a5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8b2a53a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8b2a5530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8b2a56c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8b2a5850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8b2a59e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8b2a5b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8b2a5d00"/>
        <function-ref name="get" scoped="" ref="0x2b9a8b2a4020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8b2a41b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8b2a4340"/>
        <function-ref name="set" scoped="" ref="0x2b9a8b2a44d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8b2a4660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8b2a47f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8b2a4a80"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8b2a4c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b9a8b2a7d70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b9a8b2a7d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8b2a6180"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8b2a6310"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8b2a64a0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8b2a6630"/>
        <function-ref name="get" scoped="" ref="0x2b9a8b2a67c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8b2a6950"/>
        <function-ref name="set" scoped="" ref="0x2b9a8b2a6ae0"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8b2a6c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x2b9a8b2e15a0" loc="42:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x2b9a8b2e15a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2b9a8b2e1920"/>
        <function-ref name="disable" scoped="" ref="0x2b9a8b2e1ab0"/>
        <function-ref name="captured" scoped="" ref="0x2b9a8b2e1c40"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2b9a8b2e1dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x2b9a8b291210" loc="43:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x2b9a8b291210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9a8b291590"/>
        <function-ref name="disable" scoped="" ref="0x2b9a8b291720"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b9a8b2918b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b9a8b291a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x2b9a8b291e30" loc="44:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x2b9a8b291e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9a8b2901e0"/>
        <function-ref name="disable" scoped="" ref="0x2b9a8b290370"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b9a8b290500"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b9a8b290690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x2b9a8b2cbda0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x2b9a8b2cbda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9a8b2ca180"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b9a8b2ca310"/>
        <function-ref name="captured" scoped="" ref="0x2b9a8b2ca4a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9a8b2ca630"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9a8b2ca7c0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b9a8b2ca950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b9a8b2cd020" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b9a8b2cd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2b9a8b2cd3a0"/>
        <function-ref name="disable" scoped="" ref="0x2b9a8b2cd530"/>
        <function-ref name="captured" scoped="" ref="0x2b9a8b2cd6c0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2b9a8b2cd850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x2b9a8b2cdae0" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b9a8b2cdae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b9a8b2cde60"/>
        <function-ref name="getControl" scoped="" ref="0x2b9a8b2cb020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9a8b2cb1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b9a8b2cb340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b9a8b2cb4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9a8b2cb660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b9a8b2cb7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b9a8b2cb980"/>
        <function-ref name="setControl" scoped="" ref="0x2b9a8b2cbb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x2b9a8b2cac20" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b9a8b2cac20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8b2c9020"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8b2c91b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8b2c9340"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8b2c94d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8b2c9660"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8b2c97f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8b2c9980"/>
        <function-ref name="get" scoped="" ref="0x2b9a8b2c9b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8b2c9ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8b2c9e30"/>
        <function-ref name="set" scoped="" ref="0x2b9a8b2c8020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8b2c81b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8b2c8340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8b2c85d0"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8b2c8760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x2b9a8b2bbc40" loc="46:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x2b9a8b2bbc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8b30e020"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8b30e1b0"/>
        <function-ref name="disable" scoped="" ref="0x2b9a8b30e340"/>
        <function-ref name="edge" scoped="" ref="0x2b9a8b30e4d0"/>
        <function-ref name="enable" scoped="" ref="0x2b9a8b30e660"/>
        <function-ref name="getValue" scoped="" ref="0x2b9a8b30e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x2b9a8b305bc0" loc="58:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x2b9a8b305bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8b304020"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8b3041b0"/>
        <function-ref name="disable" scoped="" ref="0x2b9a8b304340"/>
        <function-ref name="edge" scoped="" ref="0x2b9a8b3044d0"/>
        <function-ref name="enable" scoped="" ref="0x2b9a8b304660"/>
        <function-ref name="getValue" scoped="" ref="0x2b9a8b3047f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x2b9a8b30cbc0" loc="49:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x2b9a8b30cbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8b30b020"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8b30b1b0"/>
        <function-ref name="disable" scoped="" ref="0x2b9a8b30b340"/>
        <function-ref name="edge" scoped="" ref="0x2b9a8b30b4d0"/>
        <function-ref name="enable" scoped="" ref="0x2b9a8b30b660"/>
        <function-ref name="getValue" scoped="" ref="0x2b9a8b30b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x2b9a8b30abc0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x2b9a8b30abc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8b309020"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8b3091b0"/>
        <function-ref name="disable" scoped="" ref="0x2b9a8b309340"/>
        <function-ref name="edge" scoped="" ref="0x2b9a8b3094d0"/>
        <function-ref name="enable" scoped="" ref="0x2b9a8b309660"/>
        <function-ref name="getValue" scoped="" ref="0x2b9a8b3097f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x2b9a8b2c1d20" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x2b9a8b2c1d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8b2bc0e0"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8b2bc270"/>
        <function-ref name="disable" scoped="" ref="0x2b9a8b2bc400"/>
        <function-ref name="edge" scoped="" ref="0x2b9a8b2bc590"/>
        <function-ref name="enable" scoped="" ref="0x2b9a8b2bc720"/>
        <function-ref name="getValue" scoped="" ref="0x2b9a8b2bc8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x2b9a8b307bc0" loc="56:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x2b9a8b307bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8b3060a0"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8b306230"/>
        <function-ref name="disable" scoped="" ref="0x2b9a8b3063c0"/>
        <function-ref name="edge" scoped="" ref="0x2b9a8b306550"/>
        <function-ref name="enable" scoped="" ref="0x2b9a8b3066e0"/>
        <function-ref name="getValue" scoped="" ref="0x2b9a8b306870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x2b9a8b30ebc0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x2b9a8b30ebc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8b30d020"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8b30d1b0"/>
        <function-ref name="disable" scoped="" ref="0x2b9a8b30d340"/>
        <function-ref name="edge" scoped="" ref="0x2b9a8b30d4d0"/>
        <function-ref name="enable" scoped="" ref="0x2b9a8b30d660"/>
        <function-ref name="getValue" scoped="" ref="0x2b9a8b30d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x2b9a8b304bc0" loc="59:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x2b9a8b304bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8b303020"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8b3031b0"/>
        <function-ref name="disable" scoped="" ref="0x2b9a8b303340"/>
        <function-ref name="edge" scoped="" ref="0x2b9a8b3034d0"/>
        <function-ref name="enable" scoped="" ref="0x2b9a8b303660"/>
        <function-ref name="getValue" scoped="" ref="0x2b9a8b3037f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x2b9a8b2bee70" loc="42:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x2b9a8b2bee70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8b2c2220"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8b2c23b0"/>
        <function-ref name="disable" scoped="" ref="0x2b9a8b2c2540"/>
        <function-ref name="edge" scoped="" ref="0x2b9a8b2c26d0"/>
        <function-ref name="enable" scoped="" ref="0x2b9a8b2c2860"/>
        <function-ref name="getValue" scoped="" ref="0x2b9a8b2c29f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x2b9a8b309bc0" loc="54:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x2b9a8b309bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8b308020"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8b3081b0"/>
        <function-ref name="disable" scoped="" ref="0x2b9a8b308340"/>
        <function-ref name="edge" scoped="" ref="0x2b9a8b3084d0"/>
        <function-ref name="enable" scoped="" ref="0x2b9a8b308660"/>
        <function-ref name="getValue" scoped="" ref="0x2b9a8b3087f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x2b9a8b2bcc80" loc="45:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x2b9a8b2bcc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8b2bb0a0"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8b2bb230"/>
        <function-ref name="disable" scoped="" ref="0x2b9a8b2bb3c0"/>
        <function-ref name="edge" scoped="" ref="0x2b9a8b2bb550"/>
        <function-ref name="enable" scoped="" ref="0x2b9a8b2bb6e0"/>
        <function-ref name="getValue" scoped="" ref="0x2b9a8b2bb870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x2b9a8b306c40" loc="57:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x2b9a8b306c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8b305020"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8b3051b0"/>
        <function-ref name="disable" scoped="" ref="0x2b9a8b305340"/>
        <function-ref name="edge" scoped="" ref="0x2b9a8b3054d0"/>
        <function-ref name="enable" scoped="" ref="0x2b9a8b305660"/>
        <function-ref name="getValue" scoped="" ref="0x2b9a8b3057f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x2b9a8b30dbc0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x2b9a8b30dbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8b30c020"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8b30c1b0"/>
        <function-ref name="disable" scoped="" ref="0x2b9a8b30c340"/>
        <function-ref name="edge" scoped="" ref="0x2b9a8b30c4d0"/>
        <function-ref name="enable" scoped="" ref="0x2b9a8b30c660"/>
        <function-ref name="getValue" scoped="" ref="0x2b9a8b30c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x2b9a8b30bbc0" loc="52:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x2b9a8b30bbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8b30a020"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8b30a1b0"/>
        <function-ref name="disable" scoped="" ref="0x2b9a8b30a340"/>
        <function-ref name="edge" scoped="" ref="0x2b9a8b30a4d0"/>
        <function-ref name="enable" scoped="" ref="0x2b9a8b30a660"/>
        <function-ref name="getValue" scoped="" ref="0x2b9a8b30a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x2b9a8b2c2dc0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x2b9a8b2c2dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8b2c1180"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8b2c1310"/>
        <function-ref name="disable" scoped="" ref="0x2b9a8b2c14a0"/>
        <function-ref name="edge" scoped="" ref="0x2b9a8b2c1630"/>
        <function-ref name="enable" scoped="" ref="0x2b9a8b2c17c0"/>
        <function-ref name="getValue" scoped="" ref="0x2b9a8b2c1950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x2b9a8b308bc0" loc="55:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x2b9a8b308bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8b307020"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8b3071b0"/>
        <function-ref name="disable" scoped="" ref="0x2b9a8b307340"/>
        <function-ref name="edge" scoped="" ref="0x2b9a8b3074d0"/>
        <function-ref name="enable" scoped="" ref="0x2b9a8b307660"/>
        <function-ref name="getValue" scoped="" ref="0x2b9a8b3077f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x2b9a8b2fba30" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x2b9a8b2fba30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8b2fbdb0"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8b2fa020"/>
        <function-ref name="disable" scoped="" ref="0x2b9a8b2fa1b0"/>
        <function-ref name="edge" scoped="" ref="0x2b9a8b2fa340"/>
        <function-ref name="enable" scoped="" ref="0x2b9a8b2fa4d0"/>
        <function-ref name="getValue" scoped="" ref="0x2b9a8b2fa660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x2b9a8b2f1bc0" loc="55:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x2b9a8b2f1bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8b2f0020"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8b2f01b0"/>
        <function-ref name="disable" scoped="" ref="0x2b9a8b2f0340"/>
        <function-ref name="edge" scoped="" ref="0x2b9a8b2f04d0"/>
        <function-ref name="enable" scoped="" ref="0x2b9a8b2f0660"/>
        <function-ref name="getValue" scoped="" ref="0x2b9a8b2f07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x2b9a8b2f8a30" loc="46:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x2b9a8b2f8a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8b2f8db0"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8b2f7020"/>
        <function-ref name="disable" scoped="" ref="0x2b9a8b2f71b0"/>
        <function-ref name="edge" scoped="" ref="0x2b9a8b2f7340"/>
        <function-ref name="enable" scoped="" ref="0x2b9a8b2f74d0"/>
        <function-ref name="getValue" scoped="" ref="0x2b9a8b2f7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x2b9a8b2f6a30" loc="50:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x2b9a8b2f6a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8b2f6db0"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8b2f5020"/>
        <function-ref name="disable" scoped="" ref="0x2b9a8b2f51b0"/>
        <function-ref name="edge" scoped="" ref="0x2b9a8b2f5340"/>
        <function-ref name="enable" scoped="" ref="0x2b9a8b2f54d0"/>
        <function-ref name="getValue" scoped="" ref="0x2b9a8b2f5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x2b9a8b2fea30" loc="41:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x2b9a8b2fea30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8b2fedb0"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8b2fd020"/>
        <function-ref name="disable" scoped="" ref="0x2b9a8b2fd1b0"/>
        <function-ref name="edge" scoped="" ref="0x2b9a8b2fd340"/>
        <function-ref name="enable" scoped="" ref="0x2b9a8b2fd4d0"/>
        <function-ref name="getValue" scoped="" ref="0x2b9a8b2fd660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x2b9a8b2f3a30" loc="53:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x2b9a8b2f3a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8b2f2020"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8b2f21b0"/>
        <function-ref name="disable" scoped="" ref="0x2b9a8b2f2340"/>
        <function-ref name="edge" scoped="" ref="0x2b9a8b2f24d0"/>
        <function-ref name="enable" scoped="" ref="0x2b9a8b2f2660"/>
        <function-ref name="getValue" scoped="" ref="0x2b9a8b2f27f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x2b9a8b2faa30" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x2b9a8b2faa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8b2fadb0"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8b2f9020"/>
        <function-ref name="disable" scoped="" ref="0x2b9a8b2f91b0"/>
        <function-ref name="edge" scoped="" ref="0x2b9a8b2f9340"/>
        <function-ref name="enable" scoped="" ref="0x2b9a8b2f94d0"/>
        <function-ref name="getValue" scoped="" ref="0x2b9a8b2f9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x2b9a8b2f0bc0" loc="56:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x2b9a8b2f0bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8b2ef020"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8b2ef1b0"/>
        <function-ref name="disable" scoped="" ref="0x2b9a8b2ef340"/>
        <function-ref name="edge" scoped="" ref="0x2b9a8b2ef4d0"/>
        <function-ref name="enable" scoped="" ref="0x2b9a8b2ef660"/>
        <function-ref name="getValue" scoped="" ref="0x2b9a8b2ef7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x2b9a8b3029d0" loc="39:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x2b9a8b3029d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8b302d50"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8b2ff020"/>
        <function-ref name="disable" scoped="" ref="0x2b9a8b2ff1b0"/>
        <function-ref name="edge" scoped="" ref="0x2b9a8b2ff340"/>
        <function-ref name="enable" scoped="" ref="0x2b9a8b2ff4d0"/>
        <function-ref name="getValue" scoped="" ref="0x2b9a8b2ff660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x2b9a8b2f5a30" loc="51:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x2b9a8b2f5a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8b2f5db0"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8b2f4020"/>
        <function-ref name="disable" scoped="" ref="0x2b9a8b2f41b0"/>
        <function-ref name="edge" scoped="" ref="0x2b9a8b2f4340"/>
        <function-ref name="enable" scoped="" ref="0x2b9a8b2f44d0"/>
        <function-ref name="getValue" scoped="" ref="0x2b9a8b2f4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x2b9a8b2fda30" loc="42:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x2b9a8b2fda30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8b2fddb0"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8b2fb020"/>
        <function-ref name="disable" scoped="" ref="0x2b9a8b2fb1b0"/>
        <function-ref name="edge" scoped="" ref="0x2b9a8b2fb340"/>
        <function-ref name="enable" scoped="" ref="0x2b9a8b2fb4d0"/>
        <function-ref name="getValue" scoped="" ref="0x2b9a8b2fb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x2b9a8b2f2bc0" loc="54:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x2b9a8b2f2bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8b2f1020"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8b2f11b0"/>
        <function-ref name="disable" scoped="" ref="0x2b9a8b2f1340"/>
        <function-ref name="edge" scoped="" ref="0x2b9a8b2f14d0"/>
        <function-ref name="enable" scoped="" ref="0x2b9a8b2f1660"/>
        <function-ref name="getValue" scoped="" ref="0x2b9a8b2f17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x2b9a8b2f9a30" loc="45:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x2b9a8b2f9a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8b2f9db0"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8b2f8020"/>
        <function-ref name="disable" scoped="" ref="0x2b9a8b2f81b0"/>
        <function-ref name="edge" scoped="" ref="0x2b9a8b2f8340"/>
        <function-ref name="enable" scoped="" ref="0x2b9a8b2f84d0"/>
        <function-ref name="getValue" scoped="" ref="0x2b9a8b2f8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x2b9a8b2f7a30" loc="49:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x2b9a8b2f7a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8b2f7db0"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8b2f6020"/>
        <function-ref name="disable" scoped="" ref="0x2b9a8b2f61b0"/>
        <function-ref name="edge" scoped="" ref="0x2b9a8b2f6340"/>
        <function-ref name="enable" scoped="" ref="0x2b9a8b2f64d0"/>
        <function-ref name="getValue" scoped="" ref="0x2b9a8b2f6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x2b9a8b2ffa30" loc="40:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x2b9a8b2ffa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8b2ffdb0"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8b2fe020"/>
        <function-ref name="disable" scoped="" ref="0x2b9a8b2fe1b0"/>
        <function-ref name="edge" scoped="" ref="0x2b9a8b2fe340"/>
        <function-ref name="enable" scoped="" ref="0x2b9a8b2fe4d0"/>
        <function-ref name="getValue" scoped="" ref="0x2b9a8b2fe660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x2b9a8b2f4a30" loc="52:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x2b9a8b2f4a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8b2f4db0"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8b2f3020"/>
        <function-ref name="disable" scoped="" ref="0x2b9a8b2f31b0"/>
        <function-ref name="edge" scoped="" ref="0x2b9a8b2f3340"/>
        <function-ref name="enable" scoped="" ref="0x2b9a8b2f34d0"/>
        <function-ref name="getValue" scoped="" ref="0x2b9a8b2f3660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x2b9a8b3c9610" loc="46:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x2b9a8b3c9610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8b3c9990"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8b3c9b20"/>
        <function-ref name="disable" scoped="" ref="0x2b9a8b3c9cb0"/>
        <function-ref name="edge" scoped="" ref="0x2b9a8b3c9e40"/>
        <function-ref name="enable" scoped="" ref="0x2b9a8b3bb020"/>
        <function-ref name="getValue" scoped="" ref="0x2b9a8b3bb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x2b9a8b3caa30" loc="45:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x2b9a8b3caa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9a8b3cadb0"/>
        <function-ref name="disable" scoped="" ref="0x2b9a8b3c9020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b9a8b3c91b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b9a8b3c9340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x2b9a8b411610" loc="46:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x2b9a8b411610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8b411990"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8b411b20"/>
        <function-ref name="disable" scoped="" ref="0x2b9a8b411cb0"/>
        <function-ref name="edge" scoped="" ref="0x2b9a8b411e40"/>
        <function-ref name="enable" scoped="" ref="0x2b9a8b410020"/>
        <function-ref name="getValue" scoped="" ref="0x2b9a8b4101b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x2b9a8b3baa70" loc="45:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x2b9a8b3baa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9a8b3badf0"/>
        <function-ref name="disable" scoped="" ref="0x2b9a8b411020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b9a8b4111b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b9a8b411340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2b9a8b76ae50" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2b9a8b76ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b769410"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b7695a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2b9a8b70c160" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2b9a8b70c160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b70c4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2b9a8b76de50" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b9a8b76de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b76c210"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b76c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2b9a8b767880" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2b9a8b767880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b767c00"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b767d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2b9a8b75f0a0" loc="86:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2b9a8b75f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b75f420"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b75f5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2b9a8b7660a0" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2b9a8b7660a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b766420"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b7665b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2b9a8b754500" loc="108:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2b9a8b754500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b754880"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b754a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2b9a8b756500" loc="104:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2b9a8b756500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b756880"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b756a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2b9a8b70b490" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2b9a8b70b490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b70b810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2b9a8b75c880" loc="93:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2b9a8b75c880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b75cc00"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b75cd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2b9a8b757500" loc="102:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b9a8b757500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b757880"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b757a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2b9a8b76ce50" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2b9a8b76ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b76b210"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b76b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2b9a8b76be50" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2b9a8b76be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b76a210"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b76a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2b9a8b762880" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2b9a8b762880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b762c00"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b762d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2b9a8b7630a0" loc="79:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2b9a8b7630a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b763420"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b7635b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2b9a8b766880" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2b9a8b766880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b766c00"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b766d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b9a8b70fa90" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b9a8b70fa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b9a8b70fe10"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b9a8b70e020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b9a8b70e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2b9a8b70ae00" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b9a8b70ae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b7091c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2b9a8b709490" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2b9a8b709490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b709910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2b9a8b75bc80" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2b9a8b75bc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b7590a0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b759230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2b9a8b709be0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2b9a8b709be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b708020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2b9a8b757ce0" loc="103:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b9a8b757ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b7560a0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b756230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2b9a8b70a160" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b9a8b70a160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b70a4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2b9a8b75c0a0" loc="92:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2b9a8b75c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b75c420"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b75c5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2b9a8b76b670" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2b9a8b76b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b76b9f0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b76bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2b9a8b76c670" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b9a8b76c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b76c9f0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b76cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2b9a8b70ead0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2b9a8b70ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b70ee50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2b9a8b75d0a0" loc="90:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2b9a8b75d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b75d420"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b75d5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2b9a8b75f880" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2b9a8b75f880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b75fc00"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b75fd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2b9a8b75d880" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2b9a8b75d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b75dc00"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b75dd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2b9a8b755ce0" loc="107:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2b9a8b755ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b7540a0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b754230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2b9a8b756ce0" loc="105:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2b9a8b756ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b7550a0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b755230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2b9a8b763880" loc="80:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2b9a8b763880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b763c00"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b763d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2b9a8b75e0a0" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2b9a8b75e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b75e420"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b75e5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2b9a8b758ce0" loc="101:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2b9a8b758ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b7570a0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b757230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2b9a8b765880" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2b9a8b765880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b765c00"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b765d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2b9a8b754ce0" loc="111:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2b9a8b754ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b9a8b7520a0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b9a8b752230"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b7523c0"/>
        <function-ref name="beginRead" scoped="" ref="0x2b9a8b752550"/>
        <function-ref name="readDone" scoped="" ref="0x2b9a8b7526e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2b9a8b70e480" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2b9a8b70e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b70e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2b9a8b76d670" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2b9a8b76d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b76d9f0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b76db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2b9a8b76a670" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2b9a8b76a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b76a9f0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b76ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2b9a8b7600a0" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2b9a8b7600a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b760420"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b7605b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2b9a8b7650a0" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2b9a8b7650a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b765420"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b7655b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2b9a8b760880" loc="85:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2b9a8b760880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b760c00"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b760d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2b9a8b769870" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2b9a8b769870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b769bf0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b769d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2b9a8b70c7b0" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2b9a8b70c7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b70cb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2b9a8b7670a0" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2b9a8b7670a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b767420"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b7675b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b9a8b710e20" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b9a8b710e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9a8b70f1c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9a8b70f350"/>
        <function-ref name="request" scoped="" ref="0x2b9a8b70f4e0"/>
        <function-ref name="granted" scoped="" ref="0x2b9a8b70f670"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9a8b70f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2b9a8b7082f0" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2b9a8b7082f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b708670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2b9a8b76d020" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2b9a8b76d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b76d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2b9a8b758500" loc="100:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2b9a8b758500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b758880"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b758a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2b9a8b759ce0" loc="99:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2b9a8b759ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b7580a0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b758230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2b9a8b70a7b0" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b9a8b70a7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b70ab30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2b9a8b759500" loc="96:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b9a8b759500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b759880"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b759a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2b9a8b755500" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2b9a8b755500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b755880"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b755a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2b9a8b7620a0" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2b9a8b7620a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b762420"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b7625b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2b9a8b75e880" loc="89:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2b9a8b75e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b75ec00"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b75ed90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2b9a8b70ce00" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2b9a8b70ce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b70b1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2b9a8b70bae0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2b9a8b70bae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b70be60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2b9a8b7640a0" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2b9a8b7640a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b764420"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b7645b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2b9a8b708940" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2b9a8b708940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b708cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2b9a8b764880" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2b9a8b764880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b764c00"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b764d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2b9a8b75b0a0" loc="94:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2b9a8b75b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b75b820"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b75b9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2b9a8b7529b0" loc="112:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2b9a8b7529b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b9a8b752d30"/>
        <function-ref name="writeDone" scoped="" ref="0x2b9a8b751020"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b7511b0"/>
        <function-ref name="beginRead" scoped="" ref="0x2b9a8b751340"/>
        <function-ref name="readDone" scoped="" ref="0x2b9a8b7514d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x2b9a8b427630" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x2b9a8b427630"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b9a8b4279b0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b9a8b427b40"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b427cd0"/>
        <function-ref name="beginRead" scoped="" ref="0x2b9a8b427e60"/>
        <function-ref name="readDone" scoped="" ref="0x2b9a8b426020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b9a8b429680" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b9a8b429680"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b9a8b429a00"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b9a8b429b90"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b9a8b429d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x2b9a8b4268c0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x2b9a8b4268c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b426c40"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b426dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x2b9a8b4256f0" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x2b9a8b4256f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b425a70"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b425c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b9a8b42c960" loc="39:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b9a8b42c960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9a8b42cce0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9a8b42ce70"/>
        <function-ref name="request" scoped="" ref="0x2b9a8b429030"/>
        <function-ref name="granted" scoped="" ref="0x2b9a8b4291c0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9a8b429350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x2b9a8b424510" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x2b9a8b424510"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b424890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x2b9a8b467680" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2b9a8b467680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8b467a00"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8b467b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x2b9a8b41fbb0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x2b9a8b41fbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b9a8b41d020"/>
        <function-ref name="writeDone" scoped="" ref="0x2b9a8b41d1b0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b41d340"/>
        <function-ref name="beginRead" scoped="" ref="0x2b9a8b41d4d0"/>
        <function-ref name="readDone" scoped="" ref="0x2b9a8b41d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b9a8b423930" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b9a8b423930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b9a8b423cb0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b9a8b423e40"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b9a8b420020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x2b9a8b417080" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2b9a8b417080"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b9a8b417400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x2b9a8b416020" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x2b9a8b416020"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b9a8b4163a0"/>
        <function-ref name="toIdle" scoped="" ref="0x2b9a8b416530"/>
        <function-ref name="isState" scoped="" ref="0x2b9a8b4166c0"/>
        <function-ref name="isIdle" scoped="" ref="0x2b9a8b416850"/>
        <function-ref name="requestState" scoped="" ref="0x2b9a8b4169e0"/>
        <function-ref name="forceState" scoped="" ref="0x2b9a8b416b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2b9a8b41a400" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x2b9a8b41a400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9a8b41a780"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9a8b41a910"/>
        <function-ref name="request" scoped="" ref="0x2b9a8b41aaa0"/>
        <function-ref name="granted" scoped="" ref="0x2b9a8b41ac30"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9a8b41adc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x2b9a8b41c020" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x2b9a8b41c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b41c3a0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b41c530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x2b9a8b41cdb0" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x2b9a8b41cdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b41b180"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b41b310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b9a8b416df0" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b9a8b416df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b9a8b4151c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b9a8b415350"/>
        <function-ref name="led1On" scoped="" ref="0x2b9a8b4154e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b9a8b415670"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b9a8b415800"/>
        <function-ref name="get" scoped="" ref="0x2b9a8b415990"/>
        <function-ref name="led1Off" scoped="" ref="0x2b9a8b415b20"/>
        <function-ref name="led2Off" scoped="" ref="0x2b9a8b4681b0"/>
        <function-ref name="set" scoped="" ref="0x2b9a8b415cb0"/>
        <function-ref name="led0On" scoped="" ref="0x2b9a8b415e40"/>
        <function-ref name="led2On" scoped="" ref="0x2b9a8b468020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b9a8b420810" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b9a8b420810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9a8b420b90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9a8b420d20"/>
        <function-ref name="request" scoped="" ref="0x2b9a8b41f020"/>
        <function-ref name="granted" scoped="" ref="0x2b9a8b41f1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9a8b41f340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x2b9a8b462120" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x2b9a8b462120"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9a8b4624a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b9a8b462630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x2b9a8b41bba0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x2b9a8b41bba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b41a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b9a8b4bb770" loc="67:/home/zdenial/tinyos/tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2b9a8b4bb770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b9a8b4bbaf0"/>
        <function-ref name="toIdle" scoped="" ref="0x2b9a8b4bbc80"/>
        <function-ref name="isState" scoped="" ref="0x2b9a8b4bbe10"/>
        <function-ref name="isIdle" scoped="" ref="0x2b9a8b4b4020"/>
        <function-ref name="requestState" scoped="" ref="0x2b9a8b4b41b0"/>
        <function-ref name="forceState" scoped="" ref="0x2b9a8b4b4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b9a8b4b7280" loc="66:/home/zdenial/tinyos/tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2b9a8b4b7280"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b9a8b4b7600"/>
        <function-ref name="toIdle" scoped="" ref="0x2b9a8b4b7790"/>
        <function-ref name="isState" scoped="" ref="0x2b9a8b4b7920"/>
        <function-ref name="isIdle" scoped="" ref="0x2b9a8b4b7ab0"/>
        <function-ref name="requestState" scoped="" ref="0x2b9a8b4b7c40"/>
        <function-ref name="forceState" scoped="" ref="0x2b9a8b4b7dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9a8b4b3020" loc="66:/home/zdenial/tinyos/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b9a8b4b3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9a8b4b33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b9a8b4b3b70" loc="67:/home/zdenial/tinyos/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2b9a8b4b3b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b9a8b4b2020"/>
        <function-ref name="toIdle" scoped="" ref="0x2b9a8b4b21b0"/>
        <function-ref name="isState" scoped="" ref="0x2b9a8b4b2340"/>
        <function-ref name="isIdle" scoped="" ref="0x2b9a8b4b24d0"/>
        <function-ref name="requestState" scoped="" ref="0x2b9a8b4b2660"/>
        <function-ref name="forceState" scoped="" ref="0x2b9a8b4b27f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2b9a8b736020" loc="44:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2b9a8b736020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8b7363a0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8b736530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2b9a8b4998f0" loc="43:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2b9a8b4998f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b9a8b499c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b9a8b49ac40" loc="42:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b9a8b49ac40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9a8b499020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9a8b4991b0"/>
        <function-ref name="request" scoped="" ref="0x2b9a8b499340"/>
        <function-ref name="granted" scoped="" ref="0x2b9a8b4994d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9a8b499660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b9a8c6c5af0" loc="82:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2b9a8c6c5af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b9a8c6c5e70"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b9a8c6c4030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2b9a8c6c3440" loc="87:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2b9a8c6c3440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8c6c37c0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8c6c3950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x2b9a8c6c3be0" loc="89:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2b9a8c6c3be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b9a8c6c2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2b9a8c6c42c0" loc="83:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2b9a8c6c42c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b9a8c6c4640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b9a8c6c7e70" loc="81:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b9a8c6c7e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9a8c6c5220"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9a8c6c53b0"/>
        <function-ref name="request" scoped="" ref="0x2b9a8c6c5540"/>
        <function-ref name="granted" scoped="" ref="0x2b9a8c6c56d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9a8c6c5860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2b9a8c6c48d0" loc="85:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x2b9a8c6c48d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2b9a8c6c4c50"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2b9a8c6c4de0"/>
        <function-ref name="splitRead" scoped="" ref="0x2b9a8c6c3020"/>
        <function-ref name="write" scoped="" ref="0x2b9a8c6c31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x2b9a8b4e26b0" loc="74:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9a8b4e26b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b9a8b4e2a30"/>
        <function-ref name="configure" scoped="" ref="0x2b9a8b4e2bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2b9a8b4df850" loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2b9a8b4df850"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8b4dfbd0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8b4dfd60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x2b9a8b4dda40" loc="80:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2b9a8b4dda40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b9a8b4dddc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2b9a8b4e0020" loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2b9a8b4e0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b9a8b4e03a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x2b9a8b4de690" loc="79:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x2b9a8b4de690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9a8b4dea10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9a8b4deba0"/>
        <function-ref name="request" scoped="" ref="0x2b9a8b4ded30"/>
        <function-ref name="granted" scoped="" ref="0x2b9a8b4dd020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9a8b4dd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b9a8b4e3430" loc="73:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b9a8b4e3430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9a8b4e37b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9a8b4e3940"/>
        <function-ref name="request" scoped="" ref="0x2b9a8b4e3ad0"/>
        <function-ref name="granted" scoped="" ref="0x2b9a8b4e3c60"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9a8b4e3df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2b9a8b4e06a0" loc="76:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x2b9a8b4e06a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2b9a8b4e0a20"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2b9a8b4e0bb0"/>
        <function-ref name="splitRead" scoped="" ref="0x2b9a8b4e0d40"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b4df020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x2b9a8b4dc2a0" loc="81:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x2b9a8b4dc2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b9a8b4dc620"/>
        <function-ref name="txDone" scoped="" ref="0x2b9a8b4dc7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x2b9a8b53c250" loc="76:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9a8b53c250"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b9a8b53c5f0"/>
        <function-ref name="configure" scoped="" ref="0x2b9a8b53c780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2b9a8b53bc50" loc="79:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2b9a8b53bc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8b539020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8b5391b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x2b9a8b5383e0" loc="82:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2b9a8b5383e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b9a8b538780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2b9a8b53ca10" loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2b9a8b53ca10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b9a8b53cd90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x2b9a8b538a50" loc="83:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x2b9a8b538a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b9a8b538dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2b9a8b537020"/>
        <function-ref name="setUctl" scoped="" ref="0x2b9a8b5371b0"/>
        <function-ref name="enableUart" scoped="" ref="0x2b9a8b537340"/>
        <function-ref name="setUrctl" scoped="" ref="0x2b9a8b5374d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b9a8b537660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2b9a8b5377f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x2b9a8b537980"/>
        <function-ref name="getUrctl" scoped="" ref="0x2b9a8b537b10"/>
        <function-ref name="resetUsart" scoped="" ref="0x2b9a8b537ca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x2b9a8b537e30"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b9a8b536020"/>
        <function-ref name="setUtctl" scoped="" ref="0x2b9a8b5361b0"/>
        <function-ref name="getUbr" scoped="" ref="0x2b9a8b536440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b9a8b5365d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x2b9a8b536760"/>
        <function-ref name="isUartRx" scoped="" ref="0x2b9a8b5368f0"/>
        <function-ref name="isUart" scoped="" ref="0x2b9a8b536a80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b9a8b536c10"/>
        <function-ref name="isSpi" scoped="" ref="0x2b9a8b536da0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2b9a8b535020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b9a8b5351b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2b9a8b535340"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b9a8b5354d0"/>
        <function-ref name="getMode" scoped="" ref="0x2b9a8b535660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2b9a8b5359f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x2b9a8b535b80"/>
        <function-ref name="setUbr" scoped="" ref="0x2b9a8b535d10"/>
        <function-ref name="tx" scoped="" ref="0x2b9a8b534020"/>
        <function-ref name="getUctl" scoped="" ref="0x2b9a8b5341b0"/>
        <function-ref name="disableUart" scoped="" ref="0x2b9a8b534340"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b9a8b5344d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x2b9a8b534660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2b9a8b5347f0"/>
        <function-ref name="rx" scoped="" ref="0x2b9a8b534980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2b9a8b534b10"/>
        <function-ref name="isUartTx" scoped="" ref="0x2b9a8b534ca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2b9a8b534e30"/>
        <function-ref name="disableSpi" scoped="" ref="0x2b9a8b533020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2b9a8b5331b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b9a8b533c20" loc="85:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b9a8b533c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b9a8b532020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b9a8b5321b0"/>
        <function-ref name="led1On" scoped="" ref="0x2b9a8b532340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b9a8b5324d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b9a8b532660"/>
        <function-ref name="get" scoped="" ref="0x2b9a8b5327f0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b9a8b532980"/>
        <function-ref name="led2On" scoped="" ref="0x2b9a8b531020"/>
        <function-ref name="set" scoped="" ref="0x2b9a8b532ca0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b9a8b532b10"/>
        <function-ref name="led0On" scoped="" ref="0x2b9a8b532e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x2b9a8b5395b0" loc="81:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x2b9a8b5395b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9a8b539950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9a8b539ae0"/>
        <function-ref name="request" scoped="" ref="0x2b9a8b539c70"/>
        <function-ref name="granted" scoped="" ref="0x2b9a8b539e00"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9a8b538020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b9a8b53d470" loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b9a8b53d470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9a8b53d810"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9a8b53d9a0"/>
        <function-ref name="request" scoped="" ref="0x2b9a8b53db30"/>
        <function-ref name="granted" scoped="" ref="0x2b9a8b53dcc0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9a8b53de50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2b9a8b53b060" loc="78:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x2b9a8b53b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2b9a8b53b3e0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2b9a8b53b570"/>
        <function-ref name="splitRead" scoped="" ref="0x2b9a8b53b700"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b53b890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x2b9a8b533480" loc="84:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x2b9a8b533480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b9a8b533800"/>
        <function-ref name="txDone" scoped="" ref="0x2b9a8b533990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x2b9a8b5312f0" loc="102:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x2b9a8b5312f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9a8b531670"/>
        <function-ref name="runTask" scoped="" ref="0x2b9a8b531800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x2b9a8b5245e0" loc="78:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2b9a8b5245e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9a8b524960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x2b9a8b525d10" loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b9a8b525d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b9a8b5240e0"/>
        <function-ref name="txDone" scoped="" ref="0x2b9a8b524270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x2b9a8b529020" loc="76:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b9a8b529020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b9a8b5293a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2b9a8b529530"/>
        <function-ref name="setUctl" scoped="" ref="0x2b9a8b5296c0"/>
        <function-ref name="enableUart" scoped="" ref="0x2b9a8b529850"/>
        <function-ref name="setUrctl" scoped="" ref="0x2b9a8b5299e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b9a8b529b70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2b9a8b529d00"/>
        <function-ref name="getUtctl" scoped="" ref="0x2b9a8b528020"/>
        <function-ref name="getUrctl" scoped="" ref="0x2b9a8b5281b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x2b9a8b528340"/>
        <function-ref name="getUmctl" scoped="" ref="0x2b9a8b5284d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b9a8b528660"/>
        <function-ref name="setUtctl" scoped="" ref="0x2b9a8b5287f0"/>
        <function-ref name="getUbr" scoped="" ref="0x2b9a8b528a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b9a8b528c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x2b9a8b528da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x2b9a8b527020"/>
        <function-ref name="isUart" scoped="" ref="0x2b9a8b5271b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b9a8b527340"/>
        <function-ref name="isSpi" scoped="" ref="0x2b9a8b5274d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2b9a8b527660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b9a8b5277f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2b9a8b527980"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b9a8b527b10"/>
        <function-ref name="getMode" scoped="" ref="0x2b9a8b527ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2b9a8b526220"/>
        <function-ref name="clrIntr" scoped="" ref="0x2b9a8b5263b0"/>
        <function-ref name="setUbr" scoped="" ref="0x2b9a8b526540"/>
        <function-ref name="tx" scoped="" ref="0x2b9a8b5266d0"/>
        <function-ref name="getUctl" scoped="" ref="0x2b9a8b526860"/>
        <function-ref name="disableUart" scoped="" ref="0x2b9a8b5269f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b9a8b526b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x2b9a8b526d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2b9a8b525020"/>
        <function-ref name="rx" scoped="" ref="0x2b9a8b5251b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2b9a8b525340"/>
        <function-ref name="isUartTx" scoped="" ref="0x2b9a8b5254d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2b9a8b525660"/>
        <function-ref name="disableSpi" scoped="" ref="0x2b9a8b5257f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2b9a8b525980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x2b9a8b5a4b20" loc="82:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x2b9a8b5a4b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8b5a3020"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8b5a31b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8b5a3340"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8b5a34d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8b5a3660"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8b5a37f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8b5a3980"/>
        <function-ref name="get" scoped="" ref="0x2b9a8b5a3b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8b5a3ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8b5a3e30"/>
        <function-ref name="set" scoped="" ref="0x2b9a8b5a2020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8b5a21b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8b5a2340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8b5a25d0"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8b5a2760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2b9a8b579780" loc="76:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2b9a8b579780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b9a8b579b00"/>
        <function-ref name="txDone" scoped="" ref="0x2b9a8b579c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x2b9a8b5a2b20" loc="83:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x2b9a8b5a2b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8b5a1020"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8b5a11b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8b5a1340"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8b5a14d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8b5a1660"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8b5a17f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8b5a1980"/>
        <function-ref name="get" scoped="" ref="0x2b9a8b5a1b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8b5a1ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8b5a1e30"/>
        <function-ref name="set" scoped="" ref="0x2b9a8b5a0020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8b5a01b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8b5a0340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8b5a05d0"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8b5a0760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x2b9a8b5a0b20" loc="84:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x2b9a8b5a0b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8b59f020"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8b59f1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8b59f340"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8b59f4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8b59f660"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8b59f7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8b59f980"/>
        <function-ref name="get" scoped="" ref="0x2b9a8b59fb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8b59fca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8b59fe30"/>
        <function-ref name="set" scoped="" ref="0x2b9a8b59e020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8b59e1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8b59e340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8b59e5d0"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8b59e760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x2b9a8b523c70" loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x2b9a8b523c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b9a8b57d020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2b9a8b57d1b0"/>
        <function-ref name="setUctl" scoped="" ref="0x2b9a8b57d340"/>
        <function-ref name="enableUart" scoped="" ref="0x2b9a8b57d4d0"/>
        <function-ref name="setUrctl" scoped="" ref="0x2b9a8b57d660"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b9a8b57d7f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2b9a8b57d980"/>
        <function-ref name="getUtctl" scoped="" ref="0x2b9a8b57db10"/>
        <function-ref name="getUrctl" scoped="" ref="0x2b9a8b57dca0"/>
        <function-ref name="resetUsart" scoped="" ref="0x2b9a8b57de30"/>
        <function-ref name="getUmctl" scoped="" ref="0x2b9a8b57c020"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b9a8b57c1b0"/>
        <function-ref name="setUtctl" scoped="" ref="0x2b9a8b57c340"/>
        <function-ref name="getUbr" scoped="" ref="0x2b9a8b57c5d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b9a8b57c760"/>
        <function-ref name="setUmctl" scoped="" ref="0x2b9a8b57c8f0"/>
        <function-ref name="isUartRx" scoped="" ref="0x2b9a8b57ca80"/>
        <function-ref name="isUart" scoped="" ref="0x2b9a8b57cc10"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b9a8b57cda0"/>
        <function-ref name="isSpi" scoped="" ref="0x2b9a8b57b020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2b9a8b57b1b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b9a8b57b340"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2b9a8b57b4d0"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b9a8b57b660"/>
        <function-ref name="getMode" scoped="" ref="0x2b9a8b57b7f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2b9a8b57bb80"/>
        <function-ref name="clrIntr" scoped="" ref="0x2b9a8b57bd10"/>
        <function-ref name="setUbr" scoped="" ref="0x2b9a8b57a020"/>
        <function-ref name="tx" scoped="" ref="0x2b9a8b57a1b0"/>
        <function-ref name="getUctl" scoped="" ref="0x2b9a8b57a340"/>
        <function-ref name="disableUart" scoped="" ref="0x2b9a8b57a4d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b9a8b57a660"/>
        <function-ref name="setModeUart" scoped="" ref="0x2b9a8b57a7f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2b9a8b57a980"/>
        <function-ref name="rx" scoped="" ref="0x2b9a8b57ab10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2b9a8b57aca0"/>
        <function-ref name="isUartTx" scoped="" ref="0x2b9a8b57ae30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2b9a8b579020"/>
        <function-ref name="disableSpi" scoped="" ref="0x2b9a8b5791b0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2b9a8b579340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x2b9a8b550d10" loc="79:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x2b9a8b550d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x2b9a8b5770e0"/>
        <function-ref name="getStartByte" scoped="" ref="0x2b9a8b577270"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x2b9a8b577400"/>
        <function-ref name="setMasterMode" scoped="" ref="0x2b9a8b577590"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x2b9a8b577720"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x2b9a8b5778b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x2b9a8b577a40"/>
        <function-ref name="getStopBit" scoped="" ref="0x2b9a8b577bd0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b9a8b577d60"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x2b9a8b576020"/>
        <function-ref name="getData" scoped="" ref="0x2b9a8b5761b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x2b9a8b576340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x2b9a8b5764d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x2b9a8b576760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x2b9a8b5768f0"/>
        <function-ref name="getIV" scoped="" ref="0x2b9a8b576a80"/>
        <function-ref name="enableI2C" scoped="" ref="0x2b9a8b576c10"/>
        <function-ref name="setStartBit" scoped="" ref="0x2b9a8b576da0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x2b9a8b5ac020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x2b9a8b5ac1b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x2b9a8b5ac340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x2b9a8b5ac4d0"/>
        <function-ref name="isI2C" scoped="" ref="0x2b9a8b5ac660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x2b9a8b5ac7f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x2b9a8b5ac980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x2b9a8b5acd10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x2b9a8b5ab020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x2b9a8b5ab1b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x2b9a8b5ab340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x2b9a8b5ab4d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x2b9a8b5ab660"/>
        <function-ref name="disableI2C" scoped="" ref="0x2b9a8b5ab7f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x2b9a8b5ab980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x2b9a8b5abb10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x2b9a8b5abca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x2b9a8b5abe30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x2b9a8b5aa020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x2b9a8b5aa1b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x2b9a8b5aa340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x2b9a8b5aa4d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x2b9a8b5aa660"/>
        <function-ref name="setWordMode" scoped="" ref="0x2b9a8b5aa7f0"/>
        <function-ref name="setData" scoped="" ref="0x2b9a8b5aa980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x2b9a8b5aab10"/>
        <function-ref name="getClockSource" scoped="" ref="0x2b9a8b5aaca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x2b9a8b5aae30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x2b9a8b5a9020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x2b9a8b5a91b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x2b9a8b5a9340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x2b9a8b5a98d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x2b9a8b5a9a60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x2b9a8b5a9bf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x2b9a8b5a9d80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x2b9a8b5a8020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x2b9a8b5a81b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x2b9a8b5a8340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x2b9a8b5a84d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x2b9a8b5a8660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x2b9a8b5a87f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x2b9a8b5a6b20" loc="81:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x2b9a8b5a6b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8b5a5020"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8b5a51b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8b5a5340"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8b5a54d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8b5a5660"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8b5a57f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8b5a5980"/>
        <function-ref name="get" scoped="" ref="0x2b9a8b5a5b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8b5a5ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8b5a5e30"/>
        <function-ref name="set" scoped="" ref="0x2b9a8b5a4020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8b5a41b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8b5a4340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8b5a45d0"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8b5a4760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x2b9a8b578150" loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x2b9a8b578150"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9a8b5784d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x2b9a8b5a8bb0" loc="80:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x2b9a8b5a8bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8b5a7020"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8b5a71b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8b5a7340"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8b5a74d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8b5a7660"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8b5a77f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8b5a7980"/>
        <function-ref name="get" scoped="" ref="0x2b9a8b5a7b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8b5a7ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8b5a7e30"/>
        <function-ref name="set" scoped="" ref="0x2b9a8b5a6020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8b5a61b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8b5a6340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8b5a65d0"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8b5a6760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b9a8c6bb5d0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2b9a8c6bb5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b9a8c6bb950"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b9a8c6bbae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x2b9a8c6b47c0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2b9a8c6b47c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9a8c6b4b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b9a8c6ada80" loc="51:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9a8c6ada80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b9a8c6ade00"/>
        <function-ref name="configure" scoped="" ref="0x2b9a8c6ac020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x2b9a8c6b4dd0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x2b9a8c6b4dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x2b9a8c6b3180"/>
        <function-ref name="getStartByte" scoped="" ref="0x2b9a8c6b3310"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x2b9a8c6b34a0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x2b9a8c6b3630"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x2b9a8c6b37c0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x2b9a8c6b3950"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x2b9a8c6b3ae0"/>
        <function-ref name="getStopBit" scoped="" ref="0x2b9a8c6b3c70"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b9a8c6b3e00"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x2b9a8c6b2020"/>
        <function-ref name="getData" scoped="" ref="0x2b9a8c6b21b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x2b9a8c6b2340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x2b9a8c6b24d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x2b9a8c6b2760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x2b9a8c6b28f0"/>
        <function-ref name="getIV" scoped="" ref="0x2b9a8c6b2a80"/>
        <function-ref name="enableI2C" scoped="" ref="0x2b9a8c6b2c10"/>
        <function-ref name="setStartBit" scoped="" ref="0x2b9a8c6b2da0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x2b9a8c6b1020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x2b9a8c6b11b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x2b9a8c6b1340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x2b9a8c6b14d0"/>
        <function-ref name="isI2C" scoped="" ref="0x2b9a8c6b1660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x2b9a8c6b17f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x2b9a8c6b1980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x2b9a8c6b1d10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x2b9a8c6b0020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x2b9a8c6b01b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x2b9a8c6b0340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x2b9a8c6b04d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x2b9a8c6b0660"/>
        <function-ref name="disableI2C" scoped="" ref="0x2b9a8c6b07f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x2b9a8c6b0980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x2b9a8c6b0b10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x2b9a8c6b0ca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x2b9a8c6b0e30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x2b9a8c6af020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x2b9a8c6af1b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x2b9a8c6af340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x2b9a8c6af4d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x2b9a8c6af660"/>
        <function-ref name="setWordMode" scoped="" ref="0x2b9a8c6af7f0"/>
        <function-ref name="setData" scoped="" ref="0x2b9a8c6af980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x2b9a8c6afb10"/>
        <function-ref name="getClockSource" scoped="" ref="0x2b9a8c6afca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x2b9a8c6afe30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x2b9a8c6ae020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x2b9a8c6ae1b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x2b9a8c6ae340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x2b9a8c6ae8d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x2b9a8c6aea60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x2b9a8c6aebf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x2b9a8c6aed80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x2b9a8c6ad020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x2b9a8c6ad1b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x2b9a8c6ad340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x2b9a8c6ad4d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x2b9a8c6ad660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x2b9a8c6ad7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x2b9a8c6b4020" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b9a8c6b4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b9a8c6b43a0"/>
        <function-ref name="txDone" scoped="" ref="0x2b9a8c6b4530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b9a8c6bc860" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b9a8c6bc860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9a8c6bcbe0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9a8c6bcd70"/>
        <function-ref name="request" scoped="" ref="0x2b9a8c6bb020"/>
        <function-ref name="granted" scoped="" ref="0x2b9a8c6bb1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9a8c6bb340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x2b9a8c6ba5a0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b9a8c6ba5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b9a8c6ba920"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2b9a8c6baab0"/>
        <function-ref name="setUctl" scoped="" ref="0x2b9a8c6bac40"/>
        <function-ref name="enableUart" scoped="" ref="0x2b9a8c6badd0"/>
        <function-ref name="setUrctl" scoped="" ref="0x2b9a8c6b8020"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b9a8c6b81b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2b9a8c6b8340"/>
        <function-ref name="getUtctl" scoped="" ref="0x2b9a8c6b84d0"/>
        <function-ref name="getUrctl" scoped="" ref="0x2b9a8c6b8660"/>
        <function-ref name="resetUsart" scoped="" ref="0x2b9a8c6b87f0"/>
        <function-ref name="getUmctl" scoped="" ref="0x2b9a8c6b8980"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b9a8c6b8b10"/>
        <function-ref name="setUtctl" scoped="" ref="0x2b9a8c6b8ca0"/>
        <function-ref name="getUbr" scoped="" ref="0x2b9a8c6b7020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b9a8c6b71b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x2b9a8c6b7340"/>
        <function-ref name="isUartRx" scoped="" ref="0x2b9a8c6b74d0"/>
        <function-ref name="isUart" scoped="" ref="0x2b9a8c6b7660"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b9a8c6b77f0"/>
        <function-ref name="isSpi" scoped="" ref="0x2b9a8c6b7980"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2b9a8c6b7b10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b9a8c6b7ca0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2b9a8c6b7e30"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b9a8c6b6020"/>
        <function-ref name="getMode" scoped="" ref="0x2b9a8c6b61b0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2b9a8c6b6540"/>
        <function-ref name="clrIntr" scoped="" ref="0x2b9a8c6b66d0"/>
        <function-ref name="setUbr" scoped="" ref="0x2b9a8c6b6860"/>
        <function-ref name="tx" scoped="" ref="0x2b9a8c6b69f0"/>
        <function-ref name="getUctl" scoped="" ref="0x2b9a8c6b6b80"/>
        <function-ref name="disableUart" scoped="" ref="0x2b9a8c6b6d10"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b9a8c6b5020"/>
        <function-ref name="setModeUart" scoped="" ref="0x2b9a8c6b51b0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2b9a8c6b5340"/>
        <function-ref name="rx" scoped="" ref="0x2b9a8c6b54d0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2b9a8c6b5660"/>
        <function-ref name="isUartTx" scoped="" ref="0x2b9a8c6b57f0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2b9a8c6b5980"/>
        <function-ref name="disableSpi" scoped="" ref="0x2b9a8c6b5b10"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2b9a8c6b5ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b9a8c6bbd70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9a8c6bbd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b9a8c6ba180"/>
        <function-ref name="userId" scoped="" ref="0x2b9a8c6ba310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b9a8b61f2c0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2b9a8b61f2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b9a8b61f640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b9a8b61f7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b9a8b61e8a0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9a8b61e8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b9a8b61ec20"/>
        <function-ref name="configure" scoped="" ref="0x2b9a8b61edb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2b9a8b6234d0" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2b9a8b6234d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b9a8b623850"/>
        <function-ref name="txDone" scoped="" ref="0x2b9a8b6239e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b9a8b620020" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b9a8b620020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9a8b6203a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9a8b620530"/>
        <function-ref name="request" scoped="" ref="0x2b9a8b6206c0"/>
        <function-ref name="granted" scoped="" ref="0x2b9a8b620850"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9a8b6209e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x2b9a8b6213f0" loc="40:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x2b9a8b6213f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9a8b621770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b9a8b61fad0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9a8b61fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b9a8b61fe50"/>
        <function-ref name="userId" scoped="" ref="0x2b9a8b61e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b9a8b61ae50" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9a8b61ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b9a8b619210"/>
        <function-ref name="userId" scoped="" ref="0x2b9a8b6193a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2b9a8b61c060" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2b9a8b61c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b9a8b61c400"/>
        <function-ref name="txDone" scoped="" ref="0x2b9a8b61c590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x2b9a8b61a840" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x2b9a8b61a840"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9a8b61abc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x2b9a8b61c990" loc="40:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x2b9a8b61c990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9a8b61cd30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x2b9a8b61a060" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x2b9a8b61a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b9a8b61a3e0"/>
        <function-ref name="txDone" scoped="" ref="0x2b9a8b61a570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b9a8b616850" loc="92:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2b9a8b616850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b9a8b616bf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b9a8b616d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b9a8b614570" loc="96:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9a8b614570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b9a8b614910"/>
        <function-ref name="configure" scoped="" ref="0x2b9a8b614aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b9a8b615020" loc="93:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b9a8b615020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9a8b6153a0"/>
        <function-ref name="requested" scoped="" ref="0x2b9a8b615530"/>
        <function-ref name="granted" scoped="" ref="0x2b9a8b6156c0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9a8b615850"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b9a8b6159e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b9a8b617a80" loc="91:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b9a8b617a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9a8b617e20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9a8b616020"/>
        <function-ref name="request" scoped="" ref="0x2b9a8b6161b0"/>
        <function-ref name="granted" scoped="" ref="0x2b9a8b616340"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9a8b6164d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b9a8b615c30" loc="94:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9a8b615c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b9a8b614020"/>
        <function-ref name="userId" scoped="" ref="0x2b9a8b6141b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9a8c6f0a40" loc="44:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b9a8c6f0a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9a8c6f0dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2b9a8c6ef0a0" loc="45:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x2b9a8c6ef0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b9a8c6ef420"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b9a8c6ef5b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b9a8c6ef740"/>
        <function-ref name="dequeue" scoped="" ref="0x2b9a8c6ef8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b9a8c6eb020" loc="55:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2b9a8c6eb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b9a8c6eb3c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b9a8c6eb550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b9a8c6eacf0" loc="60:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9a8c6eacf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b9a8c6e90e0"/>
        <function-ref name="configure" scoped="" ref="0x2b9a8c6e9270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b9a8c6e9500" loc="61:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x2b9a8c6e9500"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b9a8c6e9880"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b9a8c6e9a10"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b9a8c6e9ba0"/>
        <function-ref name="dequeue" scoped="" ref="0x2b9a8c6e9d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b9a8c6eb7a0" loc="56:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b9a8c6eb7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9a8c6ebb20"/>
        <function-ref name="requested" scoped="" ref="0x2b9a8c6ebcb0"/>
        <function-ref name="granted" scoped="" ref="0x2b9a8c6ebe40"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9a8c6ea020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b9a8c6ea1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b9a8c6e8020" loc="62:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b9a8c6e8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b9a8c6e83a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b9a8c6e8530"/>
        <function-ref name="led1On" scoped="" ref="0x2b9a8c6e86c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b9a8c6e8850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b9a8c6e89e0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8c6e8b70"/>
        <function-ref name="led1Off" scoped="" ref="0x2b9a8c6e8d00"/>
        <function-ref name="led0On" scoped="" ref="0x2b9a8c6e74d0"/>
        <function-ref name="set" scoped="" ref="0x2b9a8c6e71b0"/>
        <function-ref name="led2On" scoped="" ref="0x2b9a8c6e7020"/>
        <function-ref name="led2Off" scoped="" ref="0x2b9a8c6e7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b9a8c6ec270" loc="54:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b9a8c6ec270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9a8c6ec610"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9a8c6ec7a0"/>
        <function-ref name="request" scoped="" ref="0x2b9a8c6ec930"/>
        <function-ref name="granted" scoped="" ref="0x2b9a8c6ecac0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9a8c6ecc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b9a8c6ea400" loc="57:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9a8c6ea400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b9a8c6ea780"/>
        <function-ref name="userId" scoped="" ref="0x2b9a8c6ea910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b9a8c6e77a0" loc="75:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x2b9a8c6e77a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9a8c6e7b20"/>
        <function-ref name="runTask" scoped="" ref="0x2b9a8c6e7cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x2b9a8b66d540" loc="4:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x2b9a8b66d540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x2b9a8b66d8c0"/>
        <function-ref name="getStartByte" scoped="" ref="0x2b9a8b66da50"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x2b9a8b66dbe0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x2b9a8b66dd70"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x2b9a8b66a020"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x2b9a8b66a1b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x2b9a8b66a340"/>
        <function-ref name="getStopBit" scoped="" ref="0x2b9a8b66a4d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b9a8b66a660"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x2b9a8b66a7f0"/>
        <function-ref name="getData" scoped="" ref="0x2b9a8b66a980"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x2b9a8b66ab10"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x2b9a8b66aca0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x2b9a8b669020"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x2b9a8b6691b0"/>
        <function-ref name="getIV" scoped="" ref="0x2b9a8b669340"/>
        <function-ref name="enableI2C" scoped="" ref="0x2b9a8b6694d0"/>
        <function-ref name="setStartBit" scoped="" ref="0x2b9a8b669660"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x2b9a8b6697f0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x2b9a8b669980"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x2b9a8b669b10"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x2b9a8b669ca0"/>
        <function-ref name="isI2C" scoped="" ref="0x2b9a8b669e30"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x2b9a8b668020"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x2b9a8b6681b0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x2b9a8b668540"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x2b9a8b6686d0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x2b9a8b668860"/>
        <function-ref name="disableNoAck" scoped="" ref="0x2b9a8b6689f0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x2b9a8b668b80"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x2b9a8b668d10"/>
        <function-ref name="disableI2C" scoped="" ref="0x2b9a8b667020"/>
        <function-ref name="getShiftClock" scoped="" ref="0x2b9a8b6671b0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x2b9a8b667340"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x2b9a8b6674d0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x2b9a8b667660"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x2b9a8b6677f0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x2b9a8b667980"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x2b9a8b667b10"/>
        <function-ref name="setModeI2C" scoped="" ref="0x2b9a8b667ca0"/>
        <function-ref name="getStartBit" scoped="" ref="0x2b9a8b667e30"/>
        <function-ref name="setWordMode" scoped="" ref="0x2b9a8b666020"/>
        <function-ref name="setData" scoped="" ref="0x2b9a8b6661b0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x2b9a8b666340"/>
        <function-ref name="getClockSource" scoped="" ref="0x2b9a8b6664d0"/>
        <function-ref name="getWordMode" scoped="" ref="0x2b9a8b666660"/>
        <function-ref name="setShiftClock" scoped="" ref="0x2b9a8b6667f0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x2b9a8b666980"/>
        <function-ref name="enableNoAck" scoped="" ref="0x2b9a8b666b10"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x2b9a8b665420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x2b9a8b6655b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x2b9a8b665740"/>
        <function-ref name="setStopBit" scoped="" ref="0x2b9a8b6658d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x2b9a8b665a60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x2b9a8b665bf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x2b9a8b665d80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x2b9a8b664020"/>
        <function-ref name="setStartByte" scoped="" ref="0x2b9a8b6641b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x2b9a8b664340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x2b9a8b659250" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x2b9a8b659250"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b9a8b6595d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2b9a8b659760"/>
        <function-ref name="setUctl" scoped="" ref="0x2b9a8b6598f0"/>
        <function-ref name="enableUart" scoped="" ref="0x2b9a8b659a80"/>
        <function-ref name="setUrctl" scoped="" ref="0x2b9a8b659c10"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b9a8b659da0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2b9a8b658020"/>
        <function-ref name="getUtctl" scoped="" ref="0x2b9a8b6581b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x2b9a8b658340"/>
        <function-ref name="resetUsart" scoped="" ref="0x2b9a8b6584d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x2b9a8b658660"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b9a8b6587f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x2b9a8b658980"/>
        <function-ref name="getUbr" scoped="" ref="0x2b9a8b658c10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b9a8b658da0"/>
        <function-ref name="setUmctl" scoped="" ref="0x2b9a8b657020"/>
        <function-ref name="isUartRx" scoped="" ref="0x2b9a8b6571b0"/>
        <function-ref name="isUart" scoped="" ref="0x2b9a8b657340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b9a8b6574d0"/>
        <function-ref name="isSpi" scoped="" ref="0x2b9a8b657660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2b9a8b6577f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b9a8b657980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2b9a8b657b10"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b9a8b657ca0"/>
        <function-ref name="getMode" scoped="" ref="0x2b9a8b657e30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2b9a8b656220"/>
        <function-ref name="clrIntr" scoped="" ref="0x2b9a8b6563b0"/>
        <function-ref name="setUbr" scoped="" ref="0x2b9a8b656540"/>
        <function-ref name="tx" scoped="" ref="0x2b9a8b6566d0"/>
        <function-ref name="getUctl" scoped="" ref="0x2b9a8b656860"/>
        <function-ref name="disableUart" scoped="" ref="0x2b9a8b6569f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b9a8b656b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x2b9a8b656d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2b9a8b655020"/>
        <function-ref name="rx" scoped="" ref="0x2b9a8b6551b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2b9a8b655340"/>
        <function-ref name="isUartTx" scoped="" ref="0x2b9a8b6554d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2b9a8b655660"/>
        <function-ref name="disableSpi" scoped="" ref="0x2b9a8b6557f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2b9a8b655980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x2b9a8b653cb0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x2b9a8b653cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8b6520a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8b652230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8b6523c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8b652550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8b6526e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8b652870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8b652a00"/>
        <function-ref name="get" scoped="" ref="0x2b9a8b652b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8b652d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8b651020"/>
        <function-ref name="set" scoped="" ref="0x2b9a8b6511b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8b651340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8b6514d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8b651760"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8b6518f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x2b9a8b660430" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x2b9a8b660430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x2b9a8b6607b0"/>
        <function-ref name="getStartByte" scoped="" ref="0x2b9a8b660940"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x2b9a8b660ad0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x2b9a8b660c60"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x2b9a8b660df0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x2b9a8b65f020"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x2b9a8b65f1b0"/>
        <function-ref name="getStopBit" scoped="" ref="0x2b9a8b65f340"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b9a8b65f4d0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x2b9a8b65f660"/>
        <function-ref name="getData" scoped="" ref="0x2b9a8b65f7f0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x2b9a8b65f980"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x2b9a8b65fb10"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x2b9a8b65fda0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x2b9a8b65e020"/>
        <function-ref name="getIV" scoped="" ref="0x2b9a8b65e1b0"/>
        <function-ref name="enableI2C" scoped="" ref="0x2b9a8b65e340"/>
        <function-ref name="setStartBit" scoped="" ref="0x2b9a8b65e4d0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x2b9a8b65e660"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x2b9a8b65e7f0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x2b9a8b65e980"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x2b9a8b65eb10"/>
        <function-ref name="isI2C" scoped="" ref="0x2b9a8b65eca0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x2b9a8b65ee30"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x2b9a8b65d020"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x2b9a8b65d3b0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x2b9a8b65d540"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x2b9a8b65d6d0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x2b9a8b65d860"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x2b9a8b65d9f0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x2b9a8b65db80"/>
        <function-ref name="disableI2C" scoped="" ref="0x2b9a8b65dd10"/>
        <function-ref name="getShiftClock" scoped="" ref="0x2b9a8b65c020"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x2b9a8b65c1b0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x2b9a8b65c340"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x2b9a8b65c4d0"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x2b9a8b65c660"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x2b9a8b65c7f0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x2b9a8b65c980"/>
        <function-ref name="setModeI2C" scoped="" ref="0x2b9a8b65cb10"/>
        <function-ref name="getStartBit" scoped="" ref="0x2b9a8b65cca0"/>
        <function-ref name="setWordMode" scoped="" ref="0x2b9a8b65ce30"/>
        <function-ref name="setData" scoped="" ref="0x2b9a8b65b020"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x2b9a8b65b1b0"/>
        <function-ref name="getClockSource" scoped="" ref="0x2b9a8b65b340"/>
        <function-ref name="getWordMode" scoped="" ref="0x2b9a8b65b4d0"/>
        <function-ref name="setShiftClock" scoped="" ref="0x2b9a8b65b660"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x2b9a8b65b7f0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x2b9a8b65b980"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x2b9a8b65a020"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x2b9a8b65a1b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x2b9a8b65a340"/>
        <function-ref name="setStopBit" scoped="" ref="0x2b9a8b65a4d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x2b9a8b65a660"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x2b9a8b65a7f0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x2b9a8b65a980"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x2b9a8b65ab10"/>
        <function-ref name="setStartByte" scoped="" ref="0x2b9a8b65aca0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x2b9a8b65ae30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x2b9a8b655d40" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x2b9a8b655d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8b6540e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8b654270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8b654400"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8b654590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8b654720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8b6548b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8b654a40"/>
        <function-ref name="get" scoped="" ref="0x2b9a8b654bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8b654d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8b653020"/>
        <function-ref name="set" scoped="" ref="0x2b9a8b6531b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8b653340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8b6534d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8b653760"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8b6538f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2b9a8b79fc60" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2b9a8b79fc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b79e210"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b79e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2b9a8b744da0" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2b9a8b744da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b743180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2b9a8b73db50" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b9a8b73db50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b73c020"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b73c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2b9a8b79d670" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2b9a8b79d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b79d9f0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b79db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2b9a8b796e50" loc="86:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2b9a8b796e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b795210"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b7953a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2b9a8b79de50" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2b9a8b79de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b79c210"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b79c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2b9a8b7892f0" loc="108:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2b9a8b7892f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b789670"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b789800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2b9a8b78b2f0" loc="104:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2b9a8b78b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b78b670"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b78b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2b9a8b742120" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2b9a8b742120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b7424a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2b9a8b791670" loc="93:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2b9a8b791670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b7919f0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b791b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2b9a8b78d2f0" loc="102:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b9a8b78d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b78d670"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b78d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2b9a8b73cc60" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2b9a8b73cc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b7a0020"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b7a01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2b9a8b7a0c60" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2b9a8b7a0c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b79f020"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b79f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2b9a8b797670" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2b9a8b797670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b7979f0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b797b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2b9a8b799e50" loc="79:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2b9a8b799e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b798210"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b7983a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2b9a8b79c670" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2b9a8b79c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b79c9f0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b79cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b9a8b745760" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b9a8b745760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b9a8b745ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b9a8b745c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b9a8b745e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2b9a8b740aa0" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b9a8b740aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b740e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2b9a8b73f120" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2b9a8b73f120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b73f5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2b9a8b790a70" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2b9a8b790a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b790df0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b78f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2b9a8b73f870" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2b9a8b73f870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b73fbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2b9a8b78dad0" loc="103:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b9a8b78dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b78de50"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b78b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2b9a8b742dc0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b9a8b742dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b740180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2b9a8b792e50" loc="92:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2b9a8b792e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b791210"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b7913a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2b9a8b7a0480" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2b9a8b7a0480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b7a0800"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b7a0990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2b9a8b73c480" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b9a8b73c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b73c800"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b73c990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2b9a8b744750" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2b9a8b744750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b744ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2b9a8b793e50" loc="90:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2b9a8b793e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b792210"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b7923a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2b9a8b795670" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2b9a8b795670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b7959f0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b795b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2b9a8b792670" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2b9a8b792670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b7929f0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b792b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2b9a8b78aad0" loc="107:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2b9a8b78aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b78ae50"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b789020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2b9a8b78bad0" loc="105:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2b9a8b78bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b78be50"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b78a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2b9a8b798670" loc="80:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2b9a8b798670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b7989f0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b798b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2b9a8b795e50" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2b9a8b795e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b793210"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b7933a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2b9a8b78ead0" loc="101:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2b9a8b78ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b78ee50"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b78d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2b9a8b79b670" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2b9a8b79b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b79b9f0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b79bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2b9a8b789ad0" loc="111:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2b9a8b789ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b9a8b789e50"/>
        <function-ref name="writeDone" scoped="" ref="0x2b9a8b788020"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b7881b0"/>
        <function-ref name="beginRead" scoped="" ref="0x2b9a8b788340"/>
        <function-ref name="readDone" scoped="" ref="0x2b9a8b7884d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2b9a8b744100" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2b9a8b744100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b744480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2b9a8b73d370" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2b9a8b73d370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b73d6f0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b73d880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2b9a8b79f480" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2b9a8b79f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b79f800"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b79f990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2b9a8b797e50" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2b9a8b797e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b796210"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b7963a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2b9a8b79ce50" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2b9a8b79ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b79b210"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b79b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2b9a8b796670" loc="85:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2b9a8b796670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b7969f0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b796b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2b9a8b79e670" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2b9a8b79e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b79e9f0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b79eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2b9a8b743450" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2b9a8b743450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b7437d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2b9a8b79ee50" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2b9a8b79ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b79d210"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b79d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b9a8b746a80" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b9a8b746a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9a8b746e00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9a8b745020"/>
        <function-ref name="request" scoped="" ref="0x2b9a8b7451b0"/>
        <function-ref name="granted" scoped="" ref="0x2b9a8b745340"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9a8b7454d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2b9a8b73e020" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2b9a8b73e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b73e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2b9a8b73ecc0" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2b9a8b73ecc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b73d0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2b9a8b78e2f0" loc="100:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2b9a8b78e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b78e670"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b78e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2b9a8b78fad0" loc="99:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2b9a8b78fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b78fe50"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b78e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2b9a8b740450" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b9a8b740450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b7407d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2b9a8b78f2f0" loc="96:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b9a8b78f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b78f670"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b78f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2b9a8b78a2f0" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2b9a8b78a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b78a670"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b78a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2b9a8b798e50" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2b9a8b798e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b797210"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b7973a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2b9a8b793670" loc="89:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2b9a8b793670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b7939f0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b793b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2b9a8b743aa0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2b9a8b743aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b743e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2b9a8b742770" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2b9a8b742770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b742af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2b9a8b79be50" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2b9a8b79be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b799210"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b7993a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2b9a8b73e670" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2b9a8b73e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b73e9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2b9a8b799670" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2b9a8b799670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b7999f0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b799b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2b9a8b791e50" loc="94:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2b9a8b791e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b790610"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b7907a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2b9a8b7887a0" loc="112:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2b9a8b7887a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b9a8b788b20"/>
        <function-ref name="writeDone" scoped="" ref="0x2b9a8b788cb0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b788e40"/>
        <function-ref name="beginRead" scoped="" ref="0x2b9a8b787020"/>
        <function-ref name="readDone" scoped="" ref="0x2b9a8b7871b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2b9a8b773c60" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2b9a8b773c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b772210"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b7723a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2b9a8b77eda0" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2b9a8b77eda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b77c180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2b9a8b776b50" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b9a8b776b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b775020"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b7751b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2b9a8b770670" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2b9a8b770670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b7709f0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b770b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2b9a8b7cfe50" loc="86:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2b9a8b7cfe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b7ce210"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b7ce3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2b9a8b770e50" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2b9a8b770e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b76f210"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b76f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2b9a8b7c22f0" loc="108:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2b9a8b7c22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b7c2670"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b7c2800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2b9a8b7c52f0" loc="104:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2b9a8b7c52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b7c5670"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b7c5800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2b9a8b77b120" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2b9a8b77b120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b77b4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2b9a8b7cb670" loc="93:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2b9a8b7cb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b7cb9f0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b7cbb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2b9a8b7c62f0" loc="102:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b9a8b7c62f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b7c6670"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b7c6800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2b9a8b775c60" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2b9a8b775c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b774020"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b7741b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2b9a8b774c60" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2b9a8b774c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b773020"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b7731b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2b9a8b7d0670" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2b9a8b7d0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b7d09f0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b7d0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2b9a8b7d3e50" loc="79:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2b9a8b7d3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b7d2210"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b7d23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2b9a8b76f670" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2b9a8b76f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b76f9f0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b76fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b9a8b77f760" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b9a8b77f760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b9a8b77fae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b9a8b77fc70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b9a8b77fe00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2b9a8b77aaa0" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b9a8b77aaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b77ae20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2b9a8b779120" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2b9a8b779120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b7795a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2b9a8b7caa70" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2b9a8b7caa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b7cadf0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b7c8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2b9a8b779870" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2b9a8b779870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b779bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2b9a8b7c6ad0" loc="103:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b9a8b7c6ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b7c6e50"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b7c5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2b9a8b77bdc0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b9a8b77bdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b77a180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2b9a8b7cce50" loc="92:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2b9a8b7cce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b7cb210"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b7cb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2b9a8b774480" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2b9a8b774480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b774800"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b774990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2b9a8b775480" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b9a8b775480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b775800"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b775990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2b9a8b77e750" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2b9a8b77e750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b77ead0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2b9a8b7cde50" loc="90:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2b9a8b7cde50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b7cc210"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b7cc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2b9a8b7ce670" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2b9a8b7ce670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b7ce9f0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b7ceb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2b9a8b7cc670" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2b9a8b7cc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b7cc9f0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b7ccb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2b9a8b7c4ad0" loc="107:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2b9a8b7c4ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b7c4e50"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b7c2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2b9a8b7c5ad0" loc="105:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2b9a8b7c5ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b7c5e50"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b7c4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2b9a8b7d2670" loc="80:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2b9a8b7d2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b7d29f0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b7d2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2b9a8b7cee50" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2b9a8b7cee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b7cd210"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b7cd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2b9a8b7c7ad0" loc="101:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2b9a8b7c7ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b7c7e50"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b7c6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2b9a8b76e670" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2b9a8b76e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b76e9f0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b76eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2b9a8b7c2ad0" loc="111:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2b9a8b7c2ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b9a8b7c2e50"/>
        <function-ref name="writeDone" scoped="" ref="0x2b9a8b7c1020"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b7c11b0"/>
        <function-ref name="beginRead" scoped="" ref="0x2b9a8b7c1340"/>
        <function-ref name="readDone" scoped="" ref="0x2b9a8b7c14d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2b9a8b77e100" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2b9a8b77e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b77e480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2b9a8b776370" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2b9a8b776370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b7766f0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b776880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2b9a8b773480" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2b9a8b773480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b773800"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b773990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2b9a8b7d0e50" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2b9a8b7d0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b7cf210"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b7cf3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2b9a8b76fe50" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2b9a8b76fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b76e210"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b76e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2b9a8b7cf670" loc="85:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2b9a8b7cf670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b7cf9f0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b7cfb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2b9a8b772670" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2b9a8b772670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b7729f0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b772b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2b9a8b77c450" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2b9a8b77c450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b77c7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2b9a8b772e50" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2b9a8b772e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b770210"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b7703a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b9a8b7809e0" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b9a8b7809e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9a8b780d60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9a8b77f020"/>
        <function-ref name="request" scoped="" ref="0x2b9a8b77f1b0"/>
        <function-ref name="granted" scoped="" ref="0x2b9a8b77f340"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9a8b77f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2b9a8b777020" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2b9a8b777020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b7773a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2b9a8b777cc0" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2b9a8b777cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b7760a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2b9a8b7c72f0" loc="100:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2b9a8b7c72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b7c7670"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b7c7800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2b9a8b7c8ad0" loc="99:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2b9a8b7c8ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b7c8e50"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b7c7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2b9a8b77a450" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b9a8b77a450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b77a7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2b9a8b7c82f0" loc="96:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b9a8b7c82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b7c8670"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b7c8800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2b9a8b7c42f0" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2b9a8b7c42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b7c4670"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b7c4800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2b9a8b7d2e50" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2b9a8b7d2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b7d0210"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b7d03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2b9a8b7cd670" loc="89:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2b9a8b7cd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b7cd9f0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b7cdb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2b9a8b77caa0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2b9a8b77caa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b77ce20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2b9a8b77b770" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2b9a8b77b770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b77baf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2b9a8b76ee50" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2b9a8b76ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b7d3210"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b7d33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2b9a8b777670" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2b9a8b777670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b7779f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2b9a8b7d3670" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2b9a8b7d3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b7d39f0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b7d3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2b9a8b7cbe50" loc="94:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2b9a8b7cbe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b7ca610"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b7ca7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2b9a8b7c17a0" loc="112:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2b9a8b7c17a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b9a8b7c1b20"/>
        <function-ref name="writeDone" scoped="" ref="0x2b9a8b7c1cb0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b7c1e40"/>
        <function-ref name="beginRead" scoped="" ref="0x2b9a8b7c0020"/>
        <function-ref name="readDone" scoped="" ref="0x2b9a8b7c01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x2b9a8b7b9b30" loc="54:/home/zdenial/tinyos/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b9a8b7b9b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b9a8b7b6020"/>
        <function-ref name="changed" scoped="" ref="0x2b9a8b7b61b0"/>
        <function-ref name="amGroup" scoped="" ref="0x2b9a8b7b6340"/>
        <function-ref name="setAddress" scoped="" ref="0x2b9a8b7b64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x2b9a8b7b8d30" loc="13:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2b9a8b7b8d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x2b9a8b7a20e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x2b9a8b805310" loc="5:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2b9a8b805310"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x2b9a8b805690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0x2b9a8b8028c0" loc="8:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x2b9a8b8028c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b802c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x2b9a8b7f7020" loc="8:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x2b9a8b7f7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b7f73a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x2b9a8b7edcb0" loc="14:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x2b9a8b7edcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b7f00a0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b7f0230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0x2b9a8b7f05b0" loc="15:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0x2b9a8b7f05b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b9a8b7f0930"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8b7f0ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x2b9a8b7f1210" loc="11:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x2b9a8b7f1210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b7f1590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x2b9a8b7dd020" loc="8:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x2b9a8b7dd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b7dd3a0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b7dd530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x2b9a8b7dd8c0" loc="11:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x2b9a8b7dd8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8b7ddc40"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8b7dddd0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8b7dc020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8b7dc1b0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8b7dc340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8b7dc4d0"/>
        <function-ref name="set" scoped="" ref="0x2b9a8b7dc660"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8b7dc7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x2b9a8b83bb40" loc="15:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x2b9a8b83bb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a607460"/>
            <typename><typedef-ref name="TMicro" ref="0x2b9a8a6077d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2b9a8b7d6970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x2b9a8b7db490" loc="11:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x2b9a8b7db490"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b7db810"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b7db9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x2b9a8b7dbd30" loc="14:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x2b9a8b7dbd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8b7d80e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8b7d8270"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8b7d8400"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8b7d8590"/>
        <function-ref name="get" scoped="" ref="0x2b9a8b7d8720"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8b7d88b0"/>
        <function-ref name="set" scoped="" ref="0x2b9a8b7d8a40"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8b7d8bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x2b9a8b81b020" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x2b9a8b81b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a607460"/>
            <typename><typedef-ref name="TMicro" ref="0x2b9a8a6077d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2b9a8b81be30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x2b9a8b819d20" loc="54:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x2b9a8b819d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a607460"/>
            <typename><typedef-ref name="TMicro" ref="0x2b9a8a6077d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2b9a8b818b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b9a8b809260" loc="55:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b9a8b809260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a607460"/>
            <typename><typedef-ref name="TMicro" ref="0x2b9a8a6077d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9a8b870090"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9a8b870a10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9a8b870550"/>
        <function-ref name="overflow" scoped="" ref="0x2b9a8b86f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x2b9a8b86e890" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x2b9a8b86e890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a607460"/>
            <typename><typedef-ref name="TMicro" ref="0x2b9a8a6077d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9a8b86b6e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9a8b869090"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9a8b86bba0"/>
        <function-ref name="overflow" scoped="" ref="0x2b9a8b869550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2b9a8b865190" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2b9a8b865190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8b865510"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b9a8b8656a0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9a8b865830"/>
        <function-ref name="get" scoped="" ref="0x2b9a8b8659c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9a8b865b50"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9a8b865ce0"/>
        <function-ref name="getMode" scoped="" ref="0x2b9a8b865e70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9a8b863030"/>
        <function-ref name="overflow" scoped="" ref="0x2b9a8b8631c0"/>
        <function-ref name="setMode" scoped="" ref="0x2b9a8b863350"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b9a8b8634e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b9a8b867060" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b9a8b867060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a607460"/>
            <typename><typedef-ref name="TMicro" ref="0x2b9a8a6077d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9a8b867e70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9a8b866820"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9a8b866360"/>
        <function-ref name="overflow" scoped="" ref="0x2b9a8b866ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0x2b9a8b7de5a0" loc="3:/home/zdenial/tinyos/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0x2b9a8b7de5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8b7de920"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8b7deab0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8b7dec40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8b7dedd0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8b85f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8b85f1b0"/>
        <function-ref name="set" scoped="" ref="0x2b9a8b85f340"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8b85f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b9a8b85dc50" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b9a8b85dc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8b85c020"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8b85c1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9a8b85c340"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8b85c4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8b85c660"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9a8b85c7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8b85c980"/>
        <function-ref name="get" scoped="" ref="0x2b9a8b85cb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9a8b85cca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9a8b85ce30"/>
        <function-ref name="set" scoped="" ref="0x2b9a8b85b020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9a8b85b1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9a8b85b340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9a8b85b5d0"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8b85b760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b9a8b85e9e0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b9a8b85e9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8b85ed60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8b85d020"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8b85d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8b85d340"/>
        <function-ref name="get" scoped="" ref="0x2b9a8b85d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8b85d660"/>
        <function-ref name="set" scoped="" ref="0x2b9a8b85d7f0"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8b85d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b9a8b860a20" loc="14:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2b9a8b860a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b9a8b860da0"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8b856020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b9a8b847cb0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2b9a8b847cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b9a8b8460a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b9a8b846230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b9a8b8463c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b9a8b846550"/>
        <function-ref name="setCca" scoped="" ref="0x2b9a8b8466e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b9a8b846870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x2b9a8b8439f0" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x2b9a8b8439f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b9a8b843d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x2b9a8b847020" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x2b9a8b847020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8b8473a0"/>
        <function-ref name="cancel" scoped="" ref="0x2b9a8b847530"/>
        <function-ref name="modify" scoped="" ref="0x2b9a8b8476c0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8b847850"/>
        <function-ref name="resend" scoped="" ref="0x2b9a8b8479e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b9a8b84a6d0" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2b9a8b84a6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b9a8b84aa50"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8b84abe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x2b9a8b845190" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x2b9a8b845190"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b9a8b845510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b9a8b83c650" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2b9a8b83c650"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b9a8b83c9d0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b9a8b83cb60"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b9a8b83ccf0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b9a8b83ce80"/>
        <function-ref name="setCca" scoped="" ref="0x2b9a8b8a9030"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b9a8b8a91c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2b9a8b8a27c0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b9a8b8a27c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b9a8b8a1d50"/>
        <function-ref name="clear" scoped="" ref="0x2b9a8b89f4c0"/>
        <function-ref name="isValid" scoped="" ref="0x2b9a8b8a1620"/>
        <function-ref name="set" scoped="" ref="0x2b9a8b89fbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x2b9a8b88b020" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2b9a8b88b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b88b3a0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b88b530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x2b9a8b88b890" loc="79:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2b9a8b88b890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b88bc10"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b88bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x2b9a8b8a95e0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x2b9a8b8a95e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b9a8b8a9960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x2b9a8b88e530" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2b9a8b88e530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b88e8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x2b9a8b89d880" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x2b9a8b89d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2b9a8b89dc00"/>
        <function-ref name="disable" scoped="" ref="0x2b9a8b89dd90"/>
        <function-ref name="captured" scoped="" ref="0x2b9a8b89c020"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2b9a8b89c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x2b9a8b8a87f0" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x2b9a8b8a87f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9a8b8a4090"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8b8a6090"/>
        <function-ref name="startAt" scoped="" ref="0x2b9a8b8a6a10"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9a8b8a6550"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b9a8b8a4550"/>
        <function-ref name="start" scoped="" ref="0x2b9a8b8a76a0"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8b8a7bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2b9a8b8a4a00" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2b9a8b8a4a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b9a8b8a4d80"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b9a8b8a3020"/>
        <function-ref name="getRssi" scoped="" ref="0x2b9a8b8a31b0"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b9a8b8a3340"/>
        <function-ref name="getPower" scoped="" ref="0x2b9a8b8a34d0"/>
        <function-ref name="getLqi" scoped="" ref="0x2b9a8b8a3660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x2b9a8b890550" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b9a8b890550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b8908d0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b890a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x2b9a8b890e00" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2b9a8b890e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b88f1c0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b88f350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x2b9a8b884d40" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x2b9a8b884d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9a8b8870e0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2b9a8b887270"/>
        <function-ref name="sfd" scoped="" ref="0x2b9a8b887400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b9a8b83d8c0" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b9a8b83d8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8b83dc40"/>
        <function-ref name="cancel" scoped="" ref="0x2b9a8b83ddd0"/>
        <function-ref name="modify" scoped="" ref="0x2b9a8b83c020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8b83c1b0"/>
        <function-ref name="resend" scoped="" ref="0x2b9a8b83c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x2b9a8b892d10" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b9a8b892d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b9a8b8910e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b9a8b891270"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b9a8b891400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x2b9a8b88ec60" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b9a8b88ec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b88d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2b9a8b895820" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x2b9a8b895820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8b895ba0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8b895d30"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8b894020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8b8941b0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8b894340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8b8944d0"/>
        <function-ref name="set" scoped="" ref="0x2b9a8b894660"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8b8947f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9a8b83f820" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b9a8b83f820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9a8b83fba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b9a8b8a39a0" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b9a8b8a39a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8b8a3d20"/>
        <function-ref name="getHeader" scoped="" ref="0x2b9a8b8a2020"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b9a8b8a21b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x2b9a8b897b30" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b9a8b897b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9a8b89d020"/>
        <function-ref name="isSet" scoped="" ref="0x2b9a8b89d1b0"/>
        <function-ref name="cancel" scoped="" ref="0x2b9a8b89d340"/>
        <function-ref name="set" scoped="" ref="0x2b9a8b89d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x2b9a8b88d3e0" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b9a8b88d3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b88d960"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b88daf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2b9a8b892020" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x2b9a8b892020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9a8b8923a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9a8b892530"/>
        <function-ref name="request" scoped="" ref="0x2b9a8b8926c0"/>
        <function-ref name="granted" scoped="" ref="0x2b9a8b892850"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9a8b8929e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x2b9a8b89c500" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x2b9a8b89c500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8b89c980"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8b89cb10"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8b89cca0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8b89ce30"/>
        <function-ref name="get" scoped="" ref="0x2b9a8b895020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8b8951b0"/>
        <function-ref name="set" scoped="" ref="0x2b9a8b895340"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8b8954d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x2b9a8b889130" loc="80:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2b9a8b889130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b8894b0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b889640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x2b9a8b8899c0" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2b9a8b8899c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b889d40"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b888020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x2b9a8b88f6d0" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2b9a8b88f6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b88fa50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x2b9a8b894b40" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x2b9a8b894b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8b893020"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8b8931b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8b893340"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8b8934d0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8b893660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8b8937f0"/>
        <function-ref name="set" scoped="" ref="0x2b9a8b893980"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8b893b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b9a8b8876c0" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b9a8b8876c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b9a8b887a40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b9a8b887bd0"/>
        <function-ref name="led1On" scoped="" ref="0x2b9a8b887d60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b9a8b886020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b9a8b8861b0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8b886340"/>
        <function-ref name="led1Off" scoped="" ref="0x2b9a8b8864d0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b9a8b886b10"/>
        <function-ref name="set" scoped="" ref="0x2b9a8b886660"/>
        <function-ref name="led0On" scoped="" ref="0x2b9a8b8867f0"/>
        <function-ref name="led2On" scoped="" ref="0x2b9a8b886980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x2b9a8b88c5e0" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2b9a8b88c5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b88c960"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b88caf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b9a8b83d020" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2b9a8b83d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b9a8b83d3a0"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8b83d530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x2b9a8b891780" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2b9a8b891780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b9a8b891b00"/>
        <function-ref name="writeDone" scoped="" ref="0x2b9a8b891c90"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b891e20"/>
        <function-ref name="beginRead" scoped="" ref="0x2b9a8b890020"/>
        <function-ref name="readDone" scoped="" ref="0x2b9a8b8901b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x2b9a8b88fde0" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2b9a8b88fde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b88e180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x2b9a8b88de80" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2b9a8b88de80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b88c220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x2b9a8b8a9d70" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x2b9a8b8a9d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b9a8b8a8180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2b9a8b92bc60" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2b9a8b92bc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b92a210"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b92a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2b9a8b934020" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2b9a8b934020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b9343a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2b9a8b92ec70" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b9a8b92ec70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b92d020"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b92d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2b9a8b928670" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2b9a8b928670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b9289f0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b928b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2b9a8b921e50" loc="86:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2b9a8b921e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b920210"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b9203a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2b9a8b928e50" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2b9a8b928e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b927210"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b9273a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2b9a8b9152f0" loc="108:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2b9a8b9152f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b915670"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b915800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2b9a8b9172f0" loc="104:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2b9a8b9172f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b917670"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b917800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2b9a8b933370" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2b9a8b933370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b9336f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2b9a8b91d670" loc="93:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2b9a8b91d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b91d9f0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b91db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2b9a8b9182f0" loc="102:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b9a8b9182f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b918670"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b918800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2b9a8b92dc60" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2b9a8b92dc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b92c020"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b92c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2b9a8b92cc60" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2b9a8b92cc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b92b020"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b92b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2b9a8b923670" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2b9a8b923670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b9239f0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b923b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2b9a8b925e50" loc="79:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2b9a8b925e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b924210"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b9243a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2b9a8b927670" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2b9a8b927670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b9279f0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b927b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b9a8b9378f0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b9a8b9378f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b9a8b937c70"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b9a8b937e00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b9a8b936020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2b9a8b932d00" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b9a8b932d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b9310a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2b9a8b931370" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2b9a8b931370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b9317f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2b9a8b91ca70" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2b9a8b91ca70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b91cdf0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b91a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2b9a8b931ac0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2b9a8b931ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b931e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2b9a8b918ad0" loc="103:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b9a8b918ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b918e50"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b917020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2b9a8b932060" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b9a8b932060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b9323e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2b9a8b91ee50" loc="92:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2b9a8b91ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b91d210"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b91d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2b9a8b92c480" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2b9a8b92c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b92c800"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b92c990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2b9a8b92d480" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b9a8b92d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b92d800"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b92d990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2b9a8b936940" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2b9a8b936940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b936cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2b9a8b91fe50" loc="90:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2b9a8b91fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b91e210"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b91e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2b9a8b920670" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2b9a8b920670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b9209f0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b920b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2b9a8b91e670" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2b9a8b91e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b91e9f0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b91eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2b9a8b916ad0" loc="107:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2b9a8b916ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b916e50"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b915020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2b9a8b917ad0" loc="105:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2b9a8b917ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b917e50"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b916020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2b9a8b924670" loc="80:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2b9a8b924670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b9249f0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b924b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2b9a8b920e50" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2b9a8b920e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b91f210"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b91f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2b9a8b919ad0" loc="101:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2b9a8b919ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b919e50"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b918020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2b9a8b926670" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2b9a8b926670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b9269f0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b926b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2b9a8b915ad0" loc="111:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2b9a8b915ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b9a8b915e50"/>
        <function-ref name="writeDone" scoped="" ref="0x2b9a8b980020"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b9801b0"/>
        <function-ref name="beginRead" scoped="" ref="0x2b9a8b980340"/>
        <function-ref name="readDone" scoped="" ref="0x2b9a8b9804d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2b9a8b9362f0" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2b9a8b9362f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b936670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2b9a8b92e490" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2b9a8b92e490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b92e810"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b92e9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2b9a8b92b480" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2b9a8b92b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b92b800"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b92b990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2b9a8b923e50" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2b9a8b923e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b921210"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b9213a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2b9a8b927e50" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2b9a8b927e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b926210"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b9263a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2b9a8b921670" loc="85:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2b9a8b921670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b9219f0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b921b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2b9a8b92a670" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2b9a8b92a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b92a9f0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b92ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2b9a8b934670" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2b9a8b934670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b9349f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2b9a8b92ae50" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2b9a8b92ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b928210"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b9283a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b9a8b938c30" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b9a8b938c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9a8b937020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9a8b9371b0"/>
        <function-ref name="request" scoped="" ref="0x2b9a8b937340"/>
        <function-ref name="granted" scoped="" ref="0x2b9a8b9374d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9a8b937660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2b9a8b930160" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2b9a8b930160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b9304e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2b9a8b930e00" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2b9a8b930e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b92e1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2b9a8b9192f0" loc="100:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2b9a8b9192f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b919670"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b919800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2b9a8b91aad0" loc="99:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2b9a8b91aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b91ae50"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b919020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2b9a8b9326b0" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b9a8b9326b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b932a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2b9a8b91a2f0" loc="96:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b9a8b91a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b91a670"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b91a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2b9a8b9162f0" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2b9a8b9162f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b916670"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b916800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2b9a8b924e50" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2b9a8b924e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b923210"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b9233a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2b9a8b91f670" loc="89:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2b9a8b91f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b91f9f0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b91fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2b9a8b934cc0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2b9a8b934cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b9330a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2b9a8b9339c0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2b9a8b9339c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b933d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2b9a8b926e50" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2b9a8b926e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b925210"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b9253a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2b9a8b9307b0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2b9a8b9307b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b930b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2b9a8b925670" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2b9a8b925670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b9259f0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b925b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2b9a8b91de50" loc="94:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2b9a8b91de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b91c610"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b91c7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2b9a8b9807a0" loc="112:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2b9a8b9807a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b9a8b980b20"/>
        <function-ref name="writeDone" scoped="" ref="0x2b9a8b980cb0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b980e40"/>
        <function-ref name="beginRead" scoped="" ref="0x2b9a8b97f020"/>
        <function-ref name="readDone" scoped="" ref="0x2b9a8b97f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x2b9a8b974df0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x2b9a8b974df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9a8b9711c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2b9a8b971350"/>
        <function-ref name="sfd" scoped="" ref="0x2b9a8b9714e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b9a8b9717c0" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b9a8b9717c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9a8b971b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x2b9a8b970020" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x2b9a8b970020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b9a8b9703a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b9a8b9745c0" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2b9a8b9745c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b9a8b974940"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8b974ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x2b9a8b969380" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x2b9a8b969380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8b969700"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8b969890"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8b969a20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8b969bb0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8b969d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8b968020"/>
        <function-ref name="set" scoped="" ref="0x2b9a8b9681b0"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8b968340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x2b9a8b961b90" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x2b9a8b961b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2b9a8b960020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2b9a8b9601b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2b9a8b960340"/>
        <function-ref name="syncDone" scoped="" ref="0x2b9a8b9604d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2b9a8b960660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2b9a8b9607f0"/>
        <function-ref name="setChannel" scoped="" ref="0x2b9a8b960980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2b9a8b960b10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2b9a8b960ca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2b9a8b960e30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2b9a8b95f020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2b9a8b95f1b0"/>
        <function-ref name="sync" scoped="" ref="0x2b9a8b95f340"/>
        <function-ref name="getChannel" scoped="" ref="0x2b9a8b95f5d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2b9a8b95f760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x2b9a8b9b89d0" loc="148:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x2b9a8b9b89d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9a8b9b8d50"/>
        <function-ref name="runTask" scoped="" ref="0x2b9a8b9b7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2b9a8b95fd70" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b9a8b95fd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b9a8b95d330"/>
        <function-ref name="clear" scoped="" ref="0x2b9a8b95da60"/>
        <function-ref name="isValid" scoped="" ref="0x2b9a8b95eba0"/>
        <function-ref name="set" scoped="" ref="0x2b9a8b95c210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x2b9a8b9686b0" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x2b9a8b9686b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8b968a30"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8b968bc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8b968d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8b967020"/>
        <function-ref name="get" scoped="" ref="0x2b9a8b9671b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8b967340"/>
        <function-ref name="set" scoped="" ref="0x2b9a8b9674d0"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8b967660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x2b9a8b95acb0" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2b9a8b95acb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b9590a0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b959230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x2b9a8b959590" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2b9a8b959590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b959910"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b959aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x2b9a8b9586d0" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2b9a8b9586d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b958a50"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b958be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2b9a8b962330" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2b9a8b962330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b9a8b9626b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b9a8b962840"/>
        <function-ref name="getRssi" scoped="" ref="0x2b9a8b9629d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b9a8b962b60"/>
        <function-ref name="getPower" scoped="" ref="0x2b9a8b962cf0"/>
        <function-ref name="getLqi" scoped="" ref="0x2b9a8b962e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x2b9a8b96c550" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x2b9a8b96c550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9a8b96c8d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2b9a8b96ca60"/>
        <function-ref name="sfd" scoped="" ref="0x2b9a8b96cbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x2b9a8b9643a0" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2b9a8b9643a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b964720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2b9a8b96a020" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x2b9a8b96a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9a8b96a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9a8b96a530"/>
        <function-ref name="toggle" scoped="" ref="0x2b9a8b96a6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9a8b96a850"/>
        <function-ref name="get" scoped="" ref="0x2b9a8b96a9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9a8b96ab70"/>
        <function-ref name="set" scoped="" ref="0x2b9a8b96ad00"/>
        <function-ref name="clr" scoped="" ref="0x2b9a8b969020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x2b9a8b957020" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b9a8b957020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b9573a0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b957530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9a8b96d620" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b9a8b96d620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9a8b96d9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b9a8b9611e0" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b9a8b9611e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8b961560"/>
        <function-ref name="getHeader" scoped="" ref="0x2b9a8b9616f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b9a8b961880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b9a8b96b020" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b9a8b96b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9a8b96b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2b9a8b9666e0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x2b9a8b9666e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9a8b966a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9a8b966bf0"/>
        <function-ref name="request" scoped="" ref="0x2b9a8b966d80"/>
        <function-ref name="granted" scoped="" ref="0x2b9a8b965020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9a8b9651b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x2b9a8b959e00" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2b9a8b959e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b9581c0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b958350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x2b9a8b965530" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2b9a8b965530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b9a8b9658b0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b9a8b965a40"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b965bd0"/>
        <function-ref name="beginRead" scoped="" ref="0x2b9a8b965d60"/>
        <function-ref name="readDone" scoped="" ref="0x2b9a8b964020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x2b9a8b9578b0" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2b9a8b9578b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b957e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x2b9a8b96b7c0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x2b9a8b96b7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b9a8b96bb40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b9a8b956150" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b9a8b956150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b9a8b9564d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b9a8b956660"/>
        <function-ref name="led1On" scoped="" ref="0x2b9a8b9567f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b9a8b956980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b9a8b956b10"/>
        <function-ref name="get" scoped="" ref="0x2b9a8b956ca0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b9a8b956e30"/>
        <function-ref name="led2Off" scoped="" ref="0x2b9a8b9554d0"/>
        <function-ref name="set" scoped="" ref="0x2b9a8b955020"/>
        <function-ref name="led0On" scoped="" ref="0x2b9a8b9551b0"/>
        <function-ref name="led2On" scoped="" ref="0x2b9a8b955340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x2b9a8b95a3e0" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2b9a8b95a3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8b95a760"/>
        <function-ref name="write" scoped="" ref="0x2b9a8b95a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x2b9a8b95cb10" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2b9a8b95cb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b95a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x2b9a8b967a50" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x2b9a8b967a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9a8b967dd0"/>
        <function-ref name="disable" scoped="" ref="0x2b9a8b966020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b9a8b9661b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b9a8b966340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x2b9a8b964ad0" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b9a8b964ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8b962020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b9a8b96dca0" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2b9a8b96dca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b9a8b96c0a0"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8b96c230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b9a8b9c7a70" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b9a8b9c7a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b9a8b9c7df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2b9a8b9cb670" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2b9a8b9cb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b9a8b9cb9f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b9a8b9cbb80"/>
        <function-ref name="getRssi" scoped="" ref="0x2b9a8b9cbd10"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b9a8b9c8020"/>
        <function-ref name="getPower" scoped="" ref="0x2b9a8b9c81b0"/>
        <function-ref name="getLqi" scoped="" ref="0x2b9a8b9c8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2b9a8b9c5550" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b9a8b9c5550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b9a8b9c4b00"/>
        <function-ref name="clear" scoped="" ref="0x2b9a8b9c32a0"/>
        <function-ref name="isValid" scoped="" ref="0x2b9a8b9c43d0"/>
        <function-ref name="set" scoped="" ref="0x2b9a8b9c39d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x2b9a8b9c70c0" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b9a8b9c70c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8b9c7440"/>
        <function-ref name="getHeader" scoped="" ref="0x2b9a8b9c75d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b9a8b9c7760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2b9a8b9be480" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b9a8b9be480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9a8b9be800"/>
        <function-ref name="isSet" scoped="" ref="0x2b9a8b9be990"/>
        <function-ref name="cancel" scoped="" ref="0x2b9a8b9beb20"/>
        <function-ref name="set" scoped="" ref="0x2b9a8b9becb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b9a8b9c2660" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b9a8b9c2660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a5ddbf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9a8a608020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b9a8b9c0ce0"/>
        <function-ref name="clear" scoped="" ref="0x2b9a8b9bf460"/>
        <function-ref name="isValid" scoped="" ref="0x2b9a8b9c05b0"/>
        <function-ref name="set" scoped="" ref="0x2b9a8b9bfb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b9a8b9c86e0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2b9a8b9c86e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b9a8b9c8a60"/>
        <function-ref name="noAck" scoped="" ref="0x2b9a8b9c8bf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b9a8b9c8d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b9a8ba27020" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b9a8ba27020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b9a8ba273a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2b9a8b9bcd20" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2b9a8b9bcd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b9a8b9b90e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b9a8b9b9270"/>
        <function-ref name="getRssi" scoped="" ref="0x2b9a8b9b9400"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b9a8b9b9590"/>
        <function-ref name="getPower" scoped="" ref="0x2b9a8b9b9720"/>
        <function-ref name="getLqi" scoped="" ref="0x2b9a8b9b98b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b9a8ba1e4a0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b9a8ba1e4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8ba1e820"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b9a8ba1e9b0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8ba1eb40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8ba1ecd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b9a8ba1ee60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2b9a8ba27a80" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b9a8ba27a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b9a8ba25020"/>
        <function-ref name="clear" scoped="" ref="0x2b9a8ba25750"/>
        <function-ref name="isValid" scoped="" ref="0x2b9a8ba268d0"/>
        <function-ref name="set" scoped="" ref="0x2b9a8ba25e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x2b9a8ba28640" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b9a8ba28640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8ba289c0"/>
        <function-ref name="getHeader" scoped="" ref="0x2b9a8ba28b50"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b9a8ba28ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2b9a8ba1f8b0" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b9a8ba1f8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9a8ba1fc30"/>
        <function-ref name="isSet" scoped="" ref="0x2b9a8ba1fdc0"/>
        <function-ref name="cancel" scoped="" ref="0x2b9a8ba1e020"/>
        <function-ref name="set" scoped="" ref="0x2b9a8ba1e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x2b9a8ba1a820" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x2b9a8ba1a820"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9a8ba1c4c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x2b9a8ba1cb80" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b9a8ba1cb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a5ddbf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9a8a608020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9a8ba1b7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b9a8ba23af0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b9a8ba23af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a5ddbf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9a8a608020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b9a8ba210d0"/>
        <function-ref name="clear" scoped="" ref="0x2b9a8ba21800"/>
        <function-ref name="isValid" scoped="" ref="0x2b9a8ba22970"/>
        <function-ref name="set" scoped="" ref="0x2b9a8ba1f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b9a8b9b9c50" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2b9a8b9b9c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b9a8ba28020"/>
        <function-ref name="noAck" scoped="" ref="0x2b9a8ba281b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b9a8ba28340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b9a8ba394e0" loc="48:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2b9a8ba394e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9a8ba30150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b9a8ba307c0" loc="49:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b9a8ba307c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9a8ba2f620"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9a8ba2e020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9a8ba2fae0"/>
        <function-ref name="overflow" scoped="" ref="0x2b9a8ba2e4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b9a8ba99020" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x2b9a8ba99020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a5ddbf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9a8a608020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9a8ba96630"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8ba98a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9a8ba97920"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9a8ba974a0"/>
        <function-ref name="getdt" scoped="" ref="0x2b9a8ba94020"/>
        <function-ref name="gett0" scoped="" ref="0x2b9a8ba96ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9a8ba97020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9a8ba99c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9a8ba96020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9a8ba98110"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8ba985e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b9a8ba94610" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2b9a8ba94610"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a5ddbf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9a8a608020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9a8ba933d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9a8ba2a130" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b9a8ba2a130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9a8ba2a4b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b9a8ba66870" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b9a8ba66870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a5ddbf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9a8a608020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9a8ba62090"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8ba63090"/>
        <function-ref name="startAt" scoped="" ref="0x2b9a8ba63a10"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9a8ba63550"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b9a8ba62550"/>
        <function-ref name="start" scoped="" ref="0x2b9a8ba646a0"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8ba64bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9a8ba66020" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b9a8ba66020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9a8ba663a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b9a8c801260" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b9a8c801260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9a8c7feb30"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8c800a60"/>
        <function-ref name="startAt" scoped="" ref="0x2b9a8c7fe4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9a8c7fe020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b9a8c7fd020"/>
        <function-ref name="start" scoped="" ref="0x2b9a8c800090"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8c8005a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9a8c8029d0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b9a8c8029d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9a8c802d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x2b9a8c893a80" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2b9a8c893a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9a8c893e00"/>
        <function-ref name="setEvent" scoped="" ref="0x2b9a8c892020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b9a8c8921b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b9a8c892340"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8c8924d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x2b9a8c896020" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2b9a8c896020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8c8963a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b9a8c896530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9a8c8966c0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8c896850"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9a8c8969e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9a8c896b70"/>
        <function-ref name="getMode" scoped="" ref="0x2b9a8c896d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9a8c894020"/>
        <function-ref name="overflow" scoped="" ref="0x2b9a8c8941b0"/>
        <function-ref name="setMode" scoped="" ref="0x2b9a8c894340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b9a8c8944d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x2b9a8c894760" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b9a8c894760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b9a8c894ae0"/>
        <function-ref name="getControl" scoped="" ref="0x2b9a8c894c70"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9a8c894e00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b9a8c893020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b9a8c8931b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9a8c893340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b9a8c8934d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b9a8c893660"/>
        <function-ref name="setControl" scoped="" ref="0x2b9a8c8937f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x2b9a8c889760" loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2b9a8c889760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9a8c889ae0"/>
        <function-ref name="setEvent" scoped="" ref="0x2b9a8c889c70"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b9a8c889e00"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b9a8c888020"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8c8881b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2b9a8c88ddd0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2b9a8c88ddd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8c88b180"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b9a8c88b310"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9a8c88b4a0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8c88b630"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9a8c88b7c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9a8c88b950"/>
        <function-ref name="getMode" scoped="" ref="0x2b9a8c88bae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9a8c88bc70"/>
        <function-ref name="overflow" scoped="" ref="0x2b9a8c88be00"/>
        <function-ref name="setMode" scoped="" ref="0x2b9a8c88a020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b9a8c88a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b9a8c890bf0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b9a8c890bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9a8c88d4e0"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8c88e4e0"/>
        <function-ref name="startAt" scoped="" ref="0x2b9a8c88ee60"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9a8c88e9a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b9a8c88d9a0"/>
        <function-ref name="start" scoped="" ref="0x2b9a8c88fa80"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8c88e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9a8c890360" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b9a8c890360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9a8c8906e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x2b9a8c88a440" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b9a8c88a440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b9a8c88a7c0"/>
        <function-ref name="getControl" scoped="" ref="0x2b9a8c88a950"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9a8c88aae0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b9a8c88ac70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b9a8c88ae00"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9a8c889020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b9a8c8891b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b9a8c889340"/>
        <function-ref name="setControl" scoped="" ref="0x2b9a8c8894d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b9a8ba85b70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b9a8ba85b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a5ddbf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9a8a608020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9a8ba829b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9a8ba80360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9a8ba82e70"/>
        <function-ref name="overflow" scoped="" ref="0x2b9a8ba80820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2b9a8ba7ab90" loc="63:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x2b9a8ba7ab90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9a8ba799d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9a8ba774e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9a8ba77020"/>
        <function-ref name="overflow" scoped="" ref="0x2b9a8ba779a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b9a8ba7d610" loc="62:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b9a8ba7d610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a5ddbf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9a8a608020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9a8ba7b5b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9a8ba7a020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9a8ba7ba70"/>
        <function-ref name="overflow" scoped="" ref="0x2b9a8ba7a4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b9a8c8a65f0" loc="61:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b9a8c8a65f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a5ddbf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9a8a608020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9a8c8a4e50"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8c8a5e00"/>
        <function-ref name="startAt" scoped="" ref="0x2b9a8c8a4800"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9a8c8a4340"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b9a8c8a2340"/>
        <function-ref name="start" scoped="" ref="0x2b9a8c8a5430"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8c8a5940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2b9a8c8a0d20" loc="73:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x2b9a8c8a0d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9a8c89d670"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8c89e550"/>
        <function-ref name="startAt" scoped="" ref="0x2b9a8c89d020"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9a8c89ea10"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b9a8c89db30"/>
        <function-ref name="start" scoped="" ref="0x2b9a8c89fb60"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8c89e090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b9a8c8a29b0" loc="68:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b9a8c8a29b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a5ddbf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9a8a608020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9a8c8a17e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9a8c8a01b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9a8c8a1ca0"/>
        <function-ref name="overflow" scoped="" ref="0x2b9a8c8a0670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2b9a8baa29c0" loc="74:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x2b9a8baa29c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9a8baa2d40"/>
        <function-ref name="runTask" scoped="" ref="0x2b9a8baa1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b9a8baa6850" loc="49:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b9a8baa6850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a5ddbf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9a8a608020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9a8baa2090"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8baa4090"/>
        <function-ref name="startAt" scoped="" ref="0x2b9a8baa4a10"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9a8baa4550"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b9a8baa2550"/>
        <function-ref name="start" scoped="" ref="0x2b9a8baa56a0"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8baa5bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b9a8baab2f0" loc="48:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b9a8baab2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a5ddbf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9a8a608020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9a8baa7870"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8baaae40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9a8baa9c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9a8baa9780"/>
        <function-ref name="getdt" scoped="" ref="0x2b9a8baa61e0"/>
        <function-ref name="gett0" scoped="" ref="0x2b9a8baa7cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9a8baa9300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9a8baaa020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9a8baa7260"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9a8baaa4f0"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8baaa9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2b9a8bb38a00" loc="71:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x2b9a8bb38a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9a8bb38d80"/>
        <function-ref name="runTask" scoped="" ref="0x2b9a8bb37020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2b9a8bb3d640" loc="49:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x2b9a8bb3d640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a5ddbf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9a8a608020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9a8bb39c40"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8bb3b1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9a8bb39020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9a8bb3bae0"/>
        <function-ref name="getdt" scoped="" ref="0x2b9a8bb38590"/>
        <function-ref name="gett0" scoped="" ref="0x2b9a8bb38110"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9a8bb3b660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9a8bb3c390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9a8bb39630"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9a8bb3c860"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8bb3cd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b9a8bb43150" loc="48:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b9a8bb43150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a5ddbf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9a8a608020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9a8bb3f700"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8bb42c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9a8bb40a50"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9a8bb405b0"/>
        <function-ref name="getdt" scoped="" ref="0x2b9a8bb3d090"/>
        <function-ref name="gett0" scoped="" ref="0x2b9a8bb3fba0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9a8bb40110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9a8bb43d60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9a8bb3f0d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9a8bb422a0"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8bb42790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b9a8bb352b0" loc="48:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2b9a8bb352b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a5ddbf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9a8a608020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9a8bb33020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b9a8bb33690" loc="49:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b9a8bb33690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a5ddbf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9a8a608020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9a8bb325b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9a8bb31020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9a8bb32a70"/>
        <function-ref name="overflow" scoped="" ref="0x2b9a8bb314e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b9a8bb2b8c0" loc="45:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b9a8bb2b8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a5ddbf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9a8a608020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9a8bb17cf0"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8bb18320"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9a8bb170d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9a8bb18c20"/>
        <function-ref name="getdt" scoped="" ref="0x2b9a8bb16660"/>
        <function-ref name="gett0" scoped="" ref="0x2b9a8bb161e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9a8bb187a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9a8bb194e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9a8bb176e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9a8bb199b0"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8bb19e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b9a8bb212c0" loc="49:/home/zdenial/tinyos/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x2b9a8bb212c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a5ddbf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9a8a608020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9a8bb1e870"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8bb20e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9a8bb1fc00"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9a8bb1f780"/>
        <function-ref name="getdt" scoped="" ref="0x2b9a8bb1d1e0"/>
        <function-ref name="gett0" scoped="" ref="0x2b9a8bb1ecf0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9a8bb1f300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9a8bb20020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9a8bb1e260"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9a8bb204f0"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8bb209c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2b9a8bb7ac60" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2b9a8bb7ac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8bb79210"/>
        <function-ref name="write" scoped="" ref="0x2b9a8bb793a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2b9a8bb0f020" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2b9a8bb0f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8bb0f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2b9a8bb7ec70" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b9a8bb7ec70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8bb7d020"/>
        <function-ref name="write" scoped="" ref="0x2b9a8bb7d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2b9a8bb78670" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2b9a8bb78670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8bb789f0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8bb78b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2b9a8bb71e50" loc="86:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2b9a8bb71e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8bb70210"/>
        <function-ref name="write" scoped="" ref="0x2b9a8bb703a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2b9a8bb78e50" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2b9a8bb78e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8bb77210"/>
        <function-ref name="write" scoped="" ref="0x2b9a8bb773a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2b9a8bb642f0" loc="108:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2b9a8bb642f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8bb64670"/>
        <function-ref name="write" scoped="" ref="0x2b9a8bb64800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2b9a8bb662f0" loc="104:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2b9a8bb662f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8bb66670"/>
        <function-ref name="write" scoped="" ref="0x2b9a8bb66800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2b9a8bb0e370" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2b9a8bb0e370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8bb0e6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2b9a8bb6c670" loc="93:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2b9a8bb6c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8bb6c9f0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8bb6cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2b9a8bb682f0" loc="102:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b9a8bb682f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8bb68670"/>
        <function-ref name="write" scoped="" ref="0x2b9a8bb68800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2b9a8bb7dc60" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2b9a8bb7dc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8bb7b020"/>
        <function-ref name="write" scoped="" ref="0x2b9a8bb7b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2b9a8bb7bc60" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2b9a8bb7bc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8bb7a020"/>
        <function-ref name="write" scoped="" ref="0x2b9a8bb7a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2b9a8bb72670" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2b9a8bb72670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8bb729f0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8bb72b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2b9a8bb74e50" loc="79:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2b9a8bb74e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8bb73210"/>
        <function-ref name="write" scoped="" ref="0x2b9a8bb733a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2b9a8bb77670" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2b9a8bb77670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8bb779f0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8bb77b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b9a8bb11970" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b9a8bb11970"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b9a8bb11cf0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b9a8bb11e80"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b9a8bb10030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2b9a8bb81d00" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b9a8bb81d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8bb800a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2b9a8bb80370" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2b9a8bb80370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8bb807f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2b9a8bb6ba70" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2b9a8bb6ba70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8bb6bdf0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8bb6a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2b9a8bb80ac0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2b9a8bb80ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8bb80e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2b9a8bb68ad0" loc="103:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b9a8bb68ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8bb68e50"/>
        <function-ref name="write" scoped="" ref="0x2b9a8bb66020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2b9a8bb81060" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b9a8bb81060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8bb813e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2b9a8bb6de50" loc="92:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2b9a8bb6de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8bb6c210"/>
        <function-ref name="write" scoped="" ref="0x2b9a8bb6c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2b9a8bb7b480" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2b9a8bb7b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8bb7b800"/>
        <function-ref name="write" scoped="" ref="0x2b9a8bb7b990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2b9a8bb7d480" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b9a8bb7d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8bb7d800"/>
        <function-ref name="write" scoped="" ref="0x2b9a8bb7d990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2b9a8bb10950" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2b9a8bb10950"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8bb10cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2b9a8bb6fe50" loc="90:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2b9a8bb6fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8bb6d210"/>
        <function-ref name="write" scoped="" ref="0x2b9a8bb6d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2b9a8bb70670" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2b9a8bb70670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8bb709f0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8bb70b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2b9a8bb6d670" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2b9a8bb6d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8bb6d9f0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8bb6db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2b9a8bb65ad0" loc="107:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2b9a8bb65ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8bb65e50"/>
        <function-ref name="write" scoped="" ref="0x2b9a8bb64020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2b9a8bb66ad0" loc="105:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2b9a8bb66ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8bb66e50"/>
        <function-ref name="write" scoped="" ref="0x2b9a8bb65020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2b9a8bb73670" loc="80:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2b9a8bb73670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8bb739f0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8bb73b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2b9a8bb70e50" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2b9a8bb70e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8bb6f210"/>
        <function-ref name="write" scoped="" ref="0x2b9a8bb6f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2b9a8bb69ad0" loc="101:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2b9a8bb69ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8bb69e50"/>
        <function-ref name="write" scoped="" ref="0x2b9a8bb68020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2b9a8bb76670" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2b9a8bb76670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8bb769f0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8bb76b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2b9a8bb64ad0" loc="111:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2b9a8bb64ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b9a8bb64e50"/>
        <function-ref name="writeDone" scoped="" ref="0x2b9a8bb63020"/>
        <function-ref name="write" scoped="" ref="0x2b9a8bb631b0"/>
        <function-ref name="beginRead" scoped="" ref="0x2b9a8bb63340"/>
        <function-ref name="readDone" scoped="" ref="0x2b9a8bb634d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2b9a8bb10300" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2b9a8bb10300"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8bb10680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2b9a8bb7e490" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2b9a8bb7e490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8bb7e810"/>
        <function-ref name="write" scoped="" ref="0x2b9a8bb7e9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2b9a8bb7a480" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2b9a8bb7a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8bb7a800"/>
        <function-ref name="write" scoped="" ref="0x2b9a8bb7a990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2b9a8bb72e50" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2b9a8bb72e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8bb71210"/>
        <function-ref name="write" scoped="" ref="0x2b9a8bb713a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2b9a8bb77e50" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2b9a8bb77e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8bb76210"/>
        <function-ref name="write" scoped="" ref="0x2b9a8bb763a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2b9a8bb71670" loc="85:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2b9a8bb71670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8bb719f0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8bb71b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2b9a8bb79670" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2b9a8bb79670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8bb799f0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8bb79b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2b9a8bb0f670" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2b9a8bb0f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8bb0f9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2b9a8bb79e50" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2b9a8bb79e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8bb78210"/>
        <function-ref name="write" scoped="" ref="0x2b9a8bb783a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b9a8bb12d00" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b9a8bb12d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9a8bb110a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9a8bb11230"/>
        <function-ref name="request" scoped="" ref="0x2b9a8bb113c0"/>
        <function-ref name="granted" scoped="" ref="0x2b9a8bb11550"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9a8bb116e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2b9a8bb7f160" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2b9a8bb7f160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8bb7f4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2b9a8bb7fe00" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2b9a8bb7fe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8bb7e1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2b9a8bb692f0" loc="100:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2b9a8bb692f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8bb69670"/>
        <function-ref name="write" scoped="" ref="0x2b9a8bb69800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2b9a8bb6aad0" loc="99:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2b9a8bb6aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8bb6ae50"/>
        <function-ref name="write" scoped="" ref="0x2b9a8bb69020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2b9a8bb816b0" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b9a8bb816b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8bb81a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2b9a8bb6a2f0" loc="96:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b9a8bb6a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8bb6a670"/>
        <function-ref name="write" scoped="" ref="0x2b9a8bb6a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2b9a8bb652f0" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2b9a8bb652f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8bb65670"/>
        <function-ref name="write" scoped="" ref="0x2b9a8bb65800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2b9a8bb73e50" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2b9a8bb73e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8bb72210"/>
        <function-ref name="write" scoped="" ref="0x2b9a8bb723a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2b9a8bb6f670" loc="89:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2b9a8bb6f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8bb6f9f0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8bb6fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2b9a8bb0fcc0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2b9a8bb0fcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8bb0e0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2b9a8bb0e9c0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2b9a8bb0e9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8bb0ed40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2b9a8bb76e50" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2b9a8bb76e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8bb74210"/>
        <function-ref name="write" scoped="" ref="0x2b9a8bb743a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2b9a8bb7f7b0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2b9a8bb7f7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9a8bb7fb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2b9a8bb74670" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2b9a8bb74670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8bb749f0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8bb74b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2b9a8bb6ce50" loc="94:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2b9a8bb6ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9a8bb6b610"/>
        <function-ref name="write" scoped="" ref="0x2b9a8bb6b7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2b9a8bb637a0" loc="112:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2b9a8bb637a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b9a8bb63b20"/>
        <function-ref name="writeDone" scoped="" ref="0x2b9a8bb63cb0"/>
        <function-ref name="write" scoped="" ref="0x2b9a8bb63e40"/>
        <function-ref name="beginRead" scoped="" ref="0x2b9a8bb62020"/>
        <function-ref name="readDone" scoped="" ref="0x2b9a8bb621b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2b9a8bbb1a20" loc="46:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x2b9a8bbb1a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b9a8bbb1da0"/>
        <function-ref name="rand32" scoped="" ref="0x2b9a8bbaf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2b9a8bbae920" loc="45:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x2b9a8bbae920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9a8bbb1560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9a8bbb59a0" loc="44:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b9a8bbb59a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9a8bbb5d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2b9a8bbaaa20" loc="48:/home/zdenial/tinyos/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x2b9a8bbaaa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b9a8bbaada0"/>
        <function-ref name="rand32" scoped="" ref="0x2b9a8bba8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2b9a8bbab940" loc="47:/home/zdenial/tinyos/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x2b9a8bbab940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9a8bbaa560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9a8bbab080" loc="46:/home/zdenial/tinyos/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b9a8bbab080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9a8bbab400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b9a8bbb3aa0" loc="67:/home/zdenial/tinyos/tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2b9a8bbb3aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b9a8bbb3e20"/>
        <function-ref name="toIdle" scoped="" ref="0x2b9a8bbac020"/>
        <function-ref name="isState" scoped="" ref="0x2b9a8bbac1b0"/>
        <function-ref name="isIdle" scoped="" ref="0x2b9a8bbac340"/>
        <function-ref name="requestState" scoped="" ref="0x2b9a8bbac4d0"/>
        <function-ref name="forceState" scoped="" ref="0x2b9a8bbac660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b9a8bb92020" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2b9a8bb92020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8bb923a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8bb92530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8bb926c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b9a8bb92850"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8bb929e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b9a8bb93220" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b9a8bb93220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8bb935a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8bb93730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8bb938c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b9a8bb93a50"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8bb93be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b9a8bb8ee60" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2b9a8bb8ee60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8bb8d210"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8bb8d3a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8bb8d530"/>
        <function-ref name="cancel" scoped="" ref="0x2b9a8bb8d6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8bb8d850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b9a8bb91a20" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b9a8bb91a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8bb91da0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8bb8e020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8bb8e1b0"/>
        <function-ref name="cancel" scoped="" ref="0x2b9a8bb8e340"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8bb8e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2b9a8bb8c8f0" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x2b9a8bb8c8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b9a8bb8cc70"/>
        <function-ref name="rand32" scoped="" ref="0x2b9a8bb8ce00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9a8bb8e750" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b9a8bb8e750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9a8bb8ead0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b9a8bb8b170" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b9a8bb8b170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8bb8b4f0"/>
        <function-ref name="getHeader" scoped="" ref="0x2b9a8bb8b680"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b9a8bb8b810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x2b9a8bb8dae0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2b9a8bb8dae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b9a8bb8de60"/>
        <function-ref name="toIdle" scoped="" ref="0x2b9a8bb8c020"/>
        <function-ref name="isState" scoped="" ref="0x2b9a8bb8c1b0"/>
        <function-ref name="isIdle" scoped="" ref="0x2b9a8bb8c340"/>
        <function-ref name="requestState" scoped="" ref="0x2b9a8bb8c4d0"/>
        <function-ref name="forceState" scoped="" ref="0x2b9a8bb8c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b9a8bb8f690" loc="67:/home/zdenial/tinyos/tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2b9a8bb8f690"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b9a8bb8fa10"/>
        <function-ref name="toIdle" scoped="" ref="0x2b9a8bb8fba0"/>
        <function-ref name="isState" scoped="" ref="0x2b9a8bb8fd30"/>
        <function-ref name="isIdle" scoped="" ref="0x2b9a8bbf3020"/>
        <function-ref name="requestState" scoped="" ref="0x2b9a8bbf31b0"/>
        <function-ref name="forceState" scoped="" ref="0x2b9a8bbf3340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b9a8bbec950" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2b9a8bbec950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9a8bbeccd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b9a8bbefaa0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b9a8bbefaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9a8bbefe20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x2b9a8bbec200" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x2b9a8bbec200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9a8bbec580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b9a8bbe73f0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2b9a8bbe73f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9a8bbe7770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9a8bbe8b70" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b9a8bbe8b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9a8bbe7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b9a8bbebe30" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b9a8bbebe30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9a8bbe81e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b9a8bbe7a70" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b9a8bbe7a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8bbe7df0"/>
        <function-ref name="getHeader" scoped="" ref="0x2b9a8bbe6020"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b9a8bbe61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x2b9a8bbe8570" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x2b9a8bbe8570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9a8bbe88f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b9a8bc31020" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2b9a8bc31020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9a8bc313a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b9a8bc316b0" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2b9a8bc316b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8bc31a30"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8bc31bc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8bc31d50"/>
        <function-ref name="cancel" scoped="" ref="0x2b9a8bc30020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8bc301b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b9a8bc35960" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b9a8bc35960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8bc35ce0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8bc35e70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8bc34030"/>
        <function-ref name="cancel" scoped="" ref="0x2b9a8bc341c0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8bc34350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x2b9a8bc34ca0" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x2b9a8bc34ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8bc330a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8bc33230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8bc333c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b9a8bc33550"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8bc336e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b9a8bc345f0" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b9a8bc345f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9a8bc34970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b9a8bc36cb0" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b9a8bc36cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9a8bc350a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9a8bc35230"/>
        <function-ref name="request" scoped="" ref="0x2b9a8bc353c0"/>
        <function-ref name="granted" scoped="" ref="0x2b9a8bc35550"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9a8bc356e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x2b9a8bc33a50" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x2b9a8bc33a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9a8bc33dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x2b9a8bc32170" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x2b9a8bc32170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8bc324f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b9a8bc32680"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8bc32810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8bc329a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b9a8bc32b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b9a8bc27d70" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2b9a8bc27d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8bc26180"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8bc26310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8bc264a0"/>
        <function-ref name="cancel" scoped="" ref="0x2b9a8bc26630"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8bc267c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b9a8bc26b10" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2b9a8bc26b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9a8bc25020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x2b9a8bc71db0" loc="184:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x2b9a8bc71db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9a8bc6f180"/>
        <function-ref name="runTask" scoped="" ref="0x2b9a8bc6f310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2b9a8bc252f0" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2b9a8bc252f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b9a8bc25670"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b9a8bc25800"/>
        <function-ref name="getRssi" scoped="" ref="0x2b9a8bc25990"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b9a8bc25b20"/>
        <function-ref name="getPower" scoped="" ref="0x2b9a8bc25cb0"/>
        <function-ref name="getLqi" scoped="" ref="0x2b9a8bc25e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x2b9a8bc29a20" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x2b9a8bc29a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8bc29da0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8bc28020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8bc281b0"/>
        <function-ref name="cancel" scoped="" ref="0x2b9a8bc28340"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8bc284d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b9a8bc24b70" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x2b9a8bc24b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b9a8bc23020"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b9a8bc231b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b9a8bc23340"/>
        <function-ref name="dequeue" scoped="" ref="0x2b9a8bc234d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b9a8bc24170" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b9a8bc24170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8bc244f0"/>
        <function-ref name="getHeader" scoped="" ref="0x2b9a8bc24680"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b9a8bc24810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x2b9a8bc29370" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x2b9a8bc29370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9a8bc296f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b9a8bc2b7b0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b9a8bc2b7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9a8bc2bb30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9a8bc2bcc0"/>
        <function-ref name="request" scoped="" ref="0x2b9a8bc2be50"/>
        <function-ref name="granted" scoped="" ref="0x2b9a8bc2a020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9a8bc2a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2b9a8bc2a4d0" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x2b9a8bc2a4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8bc2a850"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8bc2a9e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8bc2ab70"/>
        <function-ref name="cancel" scoped="" ref="0x2b9a8bc2ad00"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8bc29020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x2b9a8bc28840" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x2b9a8bc28840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9a8bc28bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x2b9a8bc27020" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x2b9a8bc27020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8bc273a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b9a8bc27530"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8bc276c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8bc27850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b9a8bc279e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9a8bc50dd0" loc="44:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b9a8bc50dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9a8bc4f180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2b9a8bc4f410" loc="45:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x2b9a8bc4f410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b9a8bc4f790"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b9a8bc4f920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b9a8bc4fab0"/>
        <function-ref name="dequeue" scoped="" ref="0x2b9a8bc4fc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b9a8bc44b80" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2b9a8bc44b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b9a8bc43020"/>
        <function-ref name="stopDone" scoped="" ref="0x2b9a8bc431b0"/>
        <function-ref name="start" scoped="" ref="0x2b9a8bc43340"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8bc434d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b9a8bc42860" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2b9a8bc42860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8bc42be0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8bc42d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8bc41020"/>
        <function-ref name="cancel" scoped="" ref="0x2b9a8bc411b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8bc41340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b9a8bc41690" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2b9a8bc41690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9a8bc41a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b9a8bc48cf0" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b9a8bc48cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8bc450a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8bc45230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8bc453c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b9a8bc45550"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8bc456e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b9a8bc44080" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2b9a8bc44080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b9a8bc44400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b9a8bc44590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b9a8bc44720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b9a8bc448b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x2b9a8bc43800" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x2b9a8bc43800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b9a8bc43b80"/>
        <function-ref name="toIdle" scoped="" ref="0x2b9a8bc43d10"/>
        <function-ref name="isState" scoped="" ref="0x2b9a8bc42020"/>
        <function-ref name="isIdle" scoped="" ref="0x2b9a8bc421b0"/>
        <function-ref name="requestState" scoped="" ref="0x2b9a8bc42340"/>
        <function-ref name="forceState" scoped="" ref="0x2b9a8bc424d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2b9a8bc41d90" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x2b9a8bc41d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b9a8bc40180"/>
        <function-ref name="stopDone" scoped="" ref="0x2b9a8bc40310"/>
        <function-ref name="start" scoped="" ref="0x2b9a8bc404a0"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8bc40630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b9a8bc45980" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b9a8bc45980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9a8bc45d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b9a8bc3d2d0" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2b9a8bc3d2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b9a8bc3d650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b9a8bc3d7e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b9a8bc3d970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b9a8bc3db00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b9a8bc3f580" loc="67:/home/zdenial/tinyos/tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2b9a8bc3f580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b9a8bc3f900"/>
        <function-ref name="toIdle" scoped="" ref="0x2b9a8bc3fa90"/>
        <function-ref name="isState" scoped="" ref="0x2b9a8bc3fc20"/>
        <function-ref name="isIdle" scoped="" ref="0x2b9a8bc3fdb0"/>
        <function-ref name="requestState" scoped="" ref="0x2b9a8bc3e020"/>
        <function-ref name="forceState" scoped="" ref="0x2b9a8bc3e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b9a8bca9d70" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <component-ref qname="PacketLinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2b9a8bca9d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8bca8180"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8bca8310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8bca84a0"/>
        <function-ref name="cancel" scoped="" ref="0x2b9a8bca8630"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8bca87c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b9a8bcaa2a0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <component-ref qname="PacketLinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b9a8bcaa2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8bcaa620"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8bcaa7b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8bcaa940"/>
        <function-ref name="cancel" scoped="" ref="0x2b9a8bcaaad0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8bcaac60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b9a8bca9020" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <component-ref qname="PacketLinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x2b9a8bca9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b9a8bca93a0"/>
        <function-ref name="setRetries" scoped="" ref="0x2b9a8bca9530"/>
        <function-ref name="getRetries" scoped="" ref="0x2b9a8bca96c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b9a8bca9850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b9a8bca99e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b9a8bca4dd0" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2b9a8bca4dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8bca3180"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8bca3310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8bca34a0"/>
        <function-ref name="cancel" scoped="" ref="0x2b9a8bca3630"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8bca37c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="send" ref="0x2b9a8bc992a0" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="send" scoped="" ref="0x2b9a8bc992a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9a8bc99620"/>
        <function-ref name="runTask" scoped="" ref="0x2b9a8bc997b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelayTimer" ref="0x2b9a8bca1650" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DelayTimer" scoped="" ref="0x2b9a8bca1650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a5ddbf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9a8a608020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9a8bc9dc40"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8bc9f1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9a8bc9d020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9a8bc9fae0"/>
        <function-ref name="getdt" scoped="" ref="0x2b9a8bc9c590"/>
        <function-ref name="gett0" scoped="" ref="0x2b9a8bc9c110"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9a8bc9f660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9a8bca0390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9a8bc9d630"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9a8bca0860"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8bca0d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b9a8bca73b0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b9a8bca73b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8bca7730"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8bca78c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8bca7a50"/>
        <function-ref name="cancel" scoped="" ref="0x2b9a8bca7be0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8bca7d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendState" ref="0x2b9a8bca3af0" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x2b9a8bca3af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b9a8bca3e70"/>
        <function-ref name="toIdle" scoped="" ref="0x2b9a8bca2030"/>
        <function-ref name="isState" scoped="" ref="0x2b9a8bca21c0"/>
        <function-ref name="isIdle" scoped="" ref="0x2b9a8bca2350"/>
        <function-ref name="requestState" scoped="" ref="0x2b9a8bca24e0"/>
        <function-ref name="forceState" scoped="" ref="0x2b9a8bca2670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b9a8bc9ca30" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b9a8bc9ca30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8bc9cdb0"/>
        <function-ref name="getHeader" scoped="" ref="0x2b9a8bc9b020"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b9a8bc9b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x2b9a8bca29a0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b9a8bca29a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b9a8bca2d20"/>
        <function-ref name="noAck" scoped="" ref="0x2b9a8bca1020"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b9a8bca11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b9a8bca4080" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x2b9a8bca4080"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b9a8bca4400"/>
        <function-ref name="setRetries" scoped="" ref="0x2b9a8bca4590"/>
        <function-ref name="getRetries" scoped="" ref="0x2b9a8bca4720"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b9a8bca48b0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b9a8bca4a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b9a8bce9350" loc="67:/home/zdenial/tinyos/tos/system/StateC.nc">
      <component-ref qname="PacketLinkC.SendStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2b9a8bce9350"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b9a8bce96d0"/>
        <function-ref name="toIdle" scoped="" ref="0x2b9a8bce9860"/>
        <function-ref name="isState" scoped="" ref="0x2b9a8bce99f0"/>
        <function-ref name="isIdle" scoped="" ref="0x2b9a8bce9b80"/>
        <function-ref name="requestState" scoped="" ref="0x2b9a8bce9d10"/>
        <function-ref name="forceState" scoped="" ref="0x2b9a8bce8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b9a8bce7750" loc="45:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="PacketLinkC.DelayTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b9a8bce7750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a5ddbf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9a8a608020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9a8bce3c40"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8bce51e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9a8bce3020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9a8bce5ae0"/>
        <function-ref name="getdt" scoped="" ref="0x2b9a8bce2590"/>
        <function-ref name="gett0" scoped="" ref="0x2b9a8bce2110"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9a8bce5660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9a8bce6390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9a8bce3630"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9a8bce6860"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8bce6d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b9a8bcc7690" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2b9a8bcc7690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9a8bcc7a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b9a8bcc9860" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2b9a8bcc9860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8bcc9be0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8bcc9d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8bcc7020"/>
        <function-ref name="cancel" scoped="" ref="0x2b9a8bcc71b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8bcc7340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x2b9a8bcc5610" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x2b9a8bcc5610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2b9a8bcc5990"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2b9a8bcc5b20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2b9a8bcc5cb0"/>
        <function-ref name="syncDone" scoped="" ref="0x2b9a8bcc5e40"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2b9a8bcc4020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2b9a8bcc41b0"/>
        <function-ref name="setChannel" scoped="" ref="0x2b9a8bcc4340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2b9a8bcc44d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2b9a8bcc4660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2b9a8bcc47f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2b9a8bcc4980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2b9a8bcc4b10"/>
        <function-ref name="sync" scoped="" ref="0x2b9a8bcc4ca0"/>
        <function-ref name="getChannel" scoped="" ref="0x2b9a8bcc3020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2b9a8bcc31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b9a8bcca830" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2b9a8bcca830"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b9a8a5c71b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b9a8bccabb0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b9a8bccad40"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b9a8bcc9020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b9a8bcc91b0"/>
        <function-ref name="setCca" scoped="" ref="0x2b9a8bcc9340"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b9a8bcc94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b9a8bccbb50" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x2b9a8bccbb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b9a8a5c71b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b9a8bcca020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x2b9a8bcc21f0" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x2b9a8bcc21f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b9a8bcc2570"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b9a8bcc2700"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b9a8bcc2890"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b9a8bcc2a20"/>
        <function-ref name="setCca" scoped="" ref="0x2b9a8bcc2bb0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b9a8bcc2d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b9a8bccc8f0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b9a8bccc8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8bcccc70"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b9a8bccce00"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8bccb020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8bccb1b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b9a8bccb340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b9a8bcd1da0" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b9a8bcd1da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b9a8a5c71b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8bccf180"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8bccf310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8bccf4a0"/>
        <function-ref name="cancel" scoped="" ref="0x2b9a8bccf630"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8bccf7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b9a8bccec00" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x2b9a8bccec00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b9a8a5c71b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9a8bccd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2b9a8bcc7ce0" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2b9a8bcc7ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b9a8bcc60a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b9a8bcc6230"/>
        <function-ref name="getRssi" scoped="" ref="0x2b9a8bcc63c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b9a8bcc6550"/>
        <function-ref name="getPower" scoped="" ref="0x2b9a8bcc66e0"/>
        <function-ref name="getLqi" scoped="" ref="0x2b9a8bcc6870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2b9a8bcc34d0" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b9a8bcc34d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b9a8bcc3950"/>
        <function-ref name="changed" scoped="" ref="0x2b9a8bcc3ae0"/>
        <function-ref name="amGroup" scoped="" ref="0x2b9a8bcc3c70"/>
        <function-ref name="setAddress" scoped="" ref="0x2b9a8bcc3e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b9a8bcc6b70" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b9a8bcc6b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8bcc5020"/>
        <function-ref name="getHeader" scoped="" ref="0x2b9a8bcc51b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b9a8bcc5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b9a8bcce020" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b9a8bcce020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b9a8a5c71b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9a8bcce3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b9a8bcc1d30" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b9a8bcc1d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b9a8bcc00e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b9a8bcc0270"/>
        <function-ref name="led1On" scoped="" ref="0x2b9a8bcc0400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b9a8bcc0590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b9a8bcc0720"/>
        <function-ref name="get" scoped="" ref="0x2b9a8bcc08b0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b9a8bcc0a40"/>
        <function-ref name="led2Off" scoped="" ref="0x2b9a8bcbf1b0"/>
        <function-ref name="set" scoped="" ref="0x2b9a8bcc0bd0"/>
        <function-ref name="led0On" scoped="" ref="0x2b9a8bcc0d60"/>
        <function-ref name="led2On" scoped="" ref="0x2b9a8bcbf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b9a8bccd2d0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b9a8bccd2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b9a8bccd650"/>
        <function-ref name="source" scoped="" ref="0x2b9a8bccd7e0"/>
        <function-ref name="address" scoped="" ref="0x2b9a8bccd970"/>
        <function-ref name="destination" scoped="" ref="0x2b9a8bccdb00"/>
        <function-ref name="setSource" scoped="" ref="0x2b9a8bccdc90"/>
        <function-ref name="setDestination" scoped="" ref="0x2b9a8bccde20"/>
        <function-ref name="type" scoped="" ref="0x2b9a8bccc020"/>
        <function-ref name="setType" scoped="" ref="0x2b9a8bccc1b0"/>
        <function-ref name="isForMe" scoped="" ref="0x2b9a8bccc340"/>
        <function-ref name="setGroup" scoped="" ref="0x2b9a8bccc4d0"/>
        <function-ref name="localGroup" scoped="" ref="0x2b9a8bccc660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x2b9a8bcc10f0" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x2b9a8bcc10f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9a8bcc1470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9a8bcc1600"/>
        <function-ref name="request" scoped="" ref="0x2b9a8bcc1790"/>
        <function-ref name="granted" scoped="" ref="0x2b9a8bcc1920"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9a8bcc1ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b9a8bdad580" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2b9a8bdad580"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b9a8bdad900"/>
        <function-ref name="stopDone" scoped="" ref="0x2b9a8bdada90"/>
        <function-ref name="start" scoped="" ref="0x2b9a8bdadc20"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8bdaddb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacketMilli" ref="0x2b9a8bd98060" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x2b9a8bd98060"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a5ddbf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9a8a608020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x2b9a8bd98e30"/>
        <function-ref name="eventTime" scoped="" ref="0x2b9a8bd97380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b9a8bda97e0" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b9a8bda97e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8bda9b60"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b9a8bda9cf0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8bda9e80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8bda8030"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b9a8bda81c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b9a8bda91d0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x2b9a8bda91d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b9a8a5c71b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9a8bda9550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b9a8bda6640" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2b9a8bda6640"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b9a8bda69c0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b9a8bda6b50"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b9a8bda6ce0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b9a8bda6e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSendMilli" ref="0x2b9a8bd9ee50" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x2b9a8bd9ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a5ddbf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9a8a608020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b9a8a5c71b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8bd9dc60"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8bd9a590"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8bd9a110"/>
        <function-ref name="cancel" scoped="" ref="0x2b9a8bd9b580"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8bd9ba90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b9a8bdaa5c0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b9a8bdaa5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b9a8a5c71b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9a8bdaa940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b9a8bda7b20" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b9a8bda7b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b9a8bda6020"/>
        <function-ref name="noAck" scoped="" ref="0x2b9a8bda61b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b9a8bda6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSend32khz" ref="0x2b9a8bda5aa0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x2b9a8bda5aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b9a8a5c71b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8bda4890"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8bda11e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8bda2d10"/>
        <function-ref name="cancel" scoped="" ref="0x2b9a8bda21b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8bda26c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b9a8bda8470" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b9a8bda8470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b9a8bda87f0"/>
        <function-ref name="source" scoped="" ref="0x2b9a8bda8980"/>
        <function-ref name="address" scoped="" ref="0x2b9a8bda8b10"/>
        <function-ref name="destination" scoped="" ref="0x2b9a8bda8ca0"/>
        <function-ref name="setSource" scoped="" ref="0x2b9a8bda8e30"/>
        <function-ref name="setDestination" scoped="" ref="0x2b9a8bda7020"/>
        <function-ref name="type" scoped="" ref="0x2b9a8bda71b0"/>
        <function-ref name="setType" scoped="" ref="0x2b9a8bda7340"/>
        <function-ref name="isForMe" scoped="" ref="0x2b9a8bda74d0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b9a8bda7660"/>
        <function-ref name="localGroup" scoped="" ref="0x2b9a8bda77f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacket32khz" ref="0x2b9a8bda1c50" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x2b9a8bda1c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x2b9a8bd9fa40"/>
        <function-ref name="eventTime" scoped="" ref="0x2b9a8bd9e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b9a8bd7ee60" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2b9a8bd7ee60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9a8bd7d210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b9a8bd82a00" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2b9a8bd82a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8bd82d80"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8bd80020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8bd801b0"/>
        <function-ref name="cancel" scoped="" ref="0x2b9a8bd80340"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8bd804d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacketMilli" ref="0x2b9a8bd86910" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x2b9a8bd86910"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a5ddbf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9a8a608020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x2b9a8bd84740"/>
        <function-ref name="eventTime" scoped="" ref="0x2b9a8bd84c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSendMilli" ref="0x2b9a8bd8e4d0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x2b9a8bd8e4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a5ddbf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9a8a608020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8bd8d390"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8bd8cc80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8bd8c800"/>
        <function-ref name="cancel" scoped="" ref="0x2b9a8bd8dc60"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8bd8c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b9a8bd8a340" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b9a8bd8a340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8bd8a6c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b9a8bd8a850"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8bd8a9e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8bd8ab70"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b9a8bd8ad00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b9a8bd822c0" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x2b9a8bd822c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b9a8a5c71b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9a8bd82640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b9a8bd80800" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubPacket" scoped="" ref="0x2b9a8bd80800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8bd80b80"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b9a8bd80d10"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8bd7f020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8bd7f1b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b9a8bd7f340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp32khz" ref="0x2b9a8bd7c130" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b9a8bd7c130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b9a8bd7b750"/>
        <function-ref name="clear" scoped="" ref="0x2b9a8bd7be80"/>
        <function-ref name="isValid" scoped="" ref="0x2b9a8bd7b020"/>
        <function-ref name="set" scoped="" ref="0x2b9a8bd7a5d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMPacket" ref="0x2b9a8bd7f6a0" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubAMPacket" scoped="" ref="0x2b9a8bd7f6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b9a8bd7fa20"/>
        <function-ref name="source" scoped="" ref="0x2b9a8bd7fbb0"/>
        <function-ref name="address" scoped="" ref="0x2b9a8bd7fd40"/>
        <function-ref name="destination" scoped="" ref="0x2b9a8bd7e020"/>
        <function-ref name="setSource" scoped="" ref="0x2b9a8bd7e1b0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b9a8bd7e340"/>
        <function-ref name="type" scoped="" ref="0x2b9a8bd7e4d0"/>
        <function-ref name="setType" scoped="" ref="0x2b9a8bd7e660"/>
        <function-ref name="isForMe" scoped="" ref="0x2b9a8bd7e7f0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b9a8bd7e980"/>
        <function-ref name="localGroup" scoped="" ref="0x2b9a8bd7eb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b9a8bd836b0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b9a8bd836b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b9a8a5c71b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9a8bd83a30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x2b9a8bd74020" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b9a8bd74020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9a8bd743a0"/>
        <function-ref name="isSet" scoped="" ref="0x2b9a8bd74530"/>
        <function-ref name="cancel" scoped="" ref="0x2b9a8bd746c0"/>
        <function-ref name="set" scoped="" ref="0x2b9a8bd74850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x2b9a8bd74d30" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x2b9a8bd74d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9a8bd73980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b9a8bd710f0" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b9a8bd710f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b9a8bd71470"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b9a8bd71600"/>
        <function-ref name="led1On" scoped="" ref="0x2b9a8bd71790"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b9a8bd71920"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b9a8bd71ab0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8bd71c40"/>
        <function-ref name="led1Off" scoped="" ref="0x2b9a8bd71dd0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b9a8bd704d0"/>
        <function-ref name="set" scoped="" ref="0x2b9a8bd70020"/>
        <function-ref name="led0On" scoped="" ref="0x2b9a8bd701b0"/>
        <function-ref name="led2On" scoped="" ref="0x2b9a8bd70340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x2b9a8bd72060" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b9a8bd72060"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a5ddbf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9a8a608020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9a8bd72c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSend32khz" ref="0x2b9a8bd94c10" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x2b9a8bd94c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8bd93a40"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8bd904a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8bd90020"/>
        <function-ref name="cancel" scoped="" ref="0x2b9a8bd91350"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8bd91860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b9a8bd89020" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b9a8bd89020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b9a8bd893a0"/>
        <function-ref name="source" scoped="" ref="0x2b9a8bd89530"/>
        <function-ref name="address" scoped="" ref="0x2b9a8bd896c0"/>
        <function-ref name="destination" scoped="" ref="0x2b9a8bd89850"/>
        <function-ref name="setSource" scoped="" ref="0x2b9a8bd899e0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b9a8bd89b70"/>
        <function-ref name="type" scoped="" ref="0x2b9a8bd89d00"/>
        <function-ref name="setType" scoped="" ref="0x2b9a8bd88020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b9a8bd881b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b9a8bd88340"/>
        <function-ref name="localGroup" scoped="" ref="0x2b9a8bd884d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacket32khz" ref="0x2b9a8bd88b90" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x2b9a8bd88b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x2b9a8bd87990"/>
        <function-ref name="eventTime" scoped="" ref="0x2b9a8bd86020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSnoop" ref="0x2b9a8bd7d550" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSnoop" scoped="" ref="0x2b9a8bd7d550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9a8bd7d9d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStampMilli" ref="0x2b9a8bd78270" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b9a8bd78270"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a5ddbf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9a8a608020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b9a8bd77800"/>
        <function-ref name="clear" scoped="" ref="0x2b9a8bd76020"/>
        <function-ref name="isValid" scoped="" ref="0x2b9a8bd770d0"/>
        <function-ref name="set" scoped="" ref="0x2b9a8bd76750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b9a8be81020" loc="49:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b9a8be81020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8be813a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8be81530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8be816c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b9a8be81850"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8be819e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b9a8be81c30" loc="50:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b9a8be81c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8be80020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b9a8be801b0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8be80340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8be804d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b9a8be80660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b9a8be808b0" loc="51:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b9a8be808b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b9a8be80c30"/>
        <function-ref name="source" scoped="" ref="0x2b9a8be80dc0"/>
        <function-ref name="address" scoped="" ref="0x2b9a8be7f020"/>
        <function-ref name="destination" scoped="" ref="0x2b9a8be7f1b0"/>
        <function-ref name="setSource" scoped="" ref="0x2b9a8be7f340"/>
        <function-ref name="setDestination" scoped="" ref="0x2b9a8be7f4d0"/>
        <function-ref name="type" scoped="" ref="0x2b9a8be7f660"/>
        <function-ref name="setType" scoped="" ref="0x2b9a8be7f7f0"/>
        <function-ref name="isForMe" scoped="" ref="0x2b9a8be7f980"/>
        <function-ref name="setGroup" scoped="" ref="0x2b9a8be7fb10"/>
        <function-ref name="localGroup" scoped="" ref="0x2b9a8be7fca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b9a8be7e020" loc="52:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2b9a8be7e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b9a8be7e3a0"/>
        <function-ref name="noAck" scoped="" ref="0x2b9a8be7e530"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b9a8be7e6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b9a8c911cb0" loc="49:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b9a8c911cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8c9100a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8c910230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8c9103c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b9a8c910550"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8c9106e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b9a8c910930" loc="50:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b9a8c910930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8c910cb0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b9a8c910e40"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8c90f020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8c90f1b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b9a8c90f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b9a8c90f590" loc="51:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b9a8c90f590"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b9a8c90f910"/>
        <function-ref name="source" scoped="" ref="0x2b9a8c90faa0"/>
        <function-ref name="address" scoped="" ref="0x2b9a8c90fc30"/>
        <function-ref name="destination" scoped="" ref="0x2b9a8c90fdc0"/>
        <function-ref name="setSource" scoped="" ref="0x2b9a8c90e020"/>
        <function-ref name="setDestination" scoped="" ref="0x2b9a8c90e1b0"/>
        <function-ref name="type" scoped="" ref="0x2b9a8c90e340"/>
        <function-ref name="setType" scoped="" ref="0x2b9a8c90e4d0"/>
        <function-ref name="isForMe" scoped="" ref="0x2b9a8c90e660"/>
        <function-ref name="setGroup" scoped="" ref="0x2b9a8c90e7f0"/>
        <function-ref name="localGroup" scoped="" ref="0x2b9a8c90e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b9a8c90ec10" loc="52:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2b9a8c90ec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b9a8c90d020"/>
        <function-ref name="noAck" scoped="" ref="0x2b9a8c90d1b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b9a8c90d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b9a8c904660" loc="44:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b9a8c904660"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8c9049e0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8c904b70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8c904d00"/>
        <function-ref name="cancel" scoped="" ref="0x2b9a8c903020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8c9031b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2b9a8c903460" loc="46:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b9a8c903460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8c9037e0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8c903970"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8c903b00"/>
        <function-ref name="cancel" scoped="" ref="0x2b9a8c903c90"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8c903e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b9a8c9020e0" loc="47:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b9a8c9020e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b9a8c902460"/>
        <function-ref name="source" scoped="" ref="0x2b9a8c9025f0"/>
        <function-ref name="address" scoped="" ref="0x2b9a8c902780"/>
        <function-ref name="destination" scoped="" ref="0x2b9a8c902910"/>
        <function-ref name="setSource" scoped="" ref="0x2b9a8c902aa0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b9a8c902c30"/>
        <function-ref name="type" scoped="" ref="0x2b9a8c902dc0"/>
        <function-ref name="setType" scoped="" ref="0x2b9a8c900020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b9a8c9001b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b9a8c900340"/>
        <function-ref name="localGroup" scoped="" ref="0x2b9a8c9004d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b9a8be62940" loc="43:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b9a8be62940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8be62cc0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8be62e50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8be5f020"/>
        <function-ref name="cancel" scoped="" ref="0x2b9a8be5f1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8be5f340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2b9a8be96400" loc="48:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b9a8be96400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b9a8a5c71b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8be967a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8be96930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8be96ac0"/>
        <function-ref name="cancel" scoped="" ref="0x2b9a8be96c50"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8be96de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b9a8be974b0" loc="46:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b9a8be974b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8be97850"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8be979e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8be97b70"/>
        <function-ref name="cancel" scoped="" ref="0x2b9a8be97d00"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8be96020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b9a8be94720" loc="50:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b9a8be94720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8be94aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b9a8be94c30"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8be94dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8be93020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b9a8be931b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x2b9a8be93480" loc="169:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x2b9a8be93480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9a8be93800"/>
        <function-ref name="runTask" scoped="" ref="0x2b9a8be93990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x2b9a8be93c60" loc="126:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x2b9a8be93c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9a8be92020"/>
        <function-ref name="runTask" scoped="" ref="0x2b9a8be921b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b9a8be95060" loc="49:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b9a8be95060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b9a8be953e0"/>
        <function-ref name="source" scoped="" ref="0x2b9a8be95570"/>
        <function-ref name="address" scoped="" ref="0x2b9a8be95700"/>
        <function-ref name="destination" scoped="" ref="0x2b9a8be95890"/>
        <function-ref name="setSource" scoped="" ref="0x2b9a8be95a20"/>
        <function-ref name="setDestination" scoped="" ref="0x2b9a8be95bb0"/>
        <function-ref name="type" scoped="" ref="0x2b9a8be95d40"/>
        <function-ref name="setType" scoped="" ref="0x2b9a8be94020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b9a8be941b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b9a8be94340"/>
        <function-ref name="localGroup" scoped="" ref="0x2b9a8be944d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b9a8be7a830" loc="48:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.LocalTime32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2b9a8be7a830"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9a8be794c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b9a8be79b30" loc="49:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.LocalTime32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b9a8be79b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9a8be77970"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9a8be76340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9a8be77e30"/>
        <function-ref name="overflow" scoped="" ref="0x2b9a8be76800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b9a8be75e60" loc="20:/home/zdenial/tinyos/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2b9a8be75e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a5ddbf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9a8a608020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9a8be72ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer32khz" ref="0x2b9a8bee3680" loc="3:Timer32C.nc">
      <component-ref qname="TDMALinkC.JoinReqDelayTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer32khz" scoped="" ref="0x2b9a8bee3680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9a8bf30c40"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8beae1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9a8bf30020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9a8beaeae0"/>
        <function-ref name="getdt" scoped="" ref="0x2b9a8bf2e590"/>
        <function-ref name="gett0" scoped="" ref="0x2b9a8bf2e110"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9a8beae660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9a8beaf390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9a8bf30630"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9a8beaf860"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8beafd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer32khz" ref="0x2b9a8beda020" loc="3:Timer32P.nc">
      <component-ref qname="Timer32P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer32khz" scoped="" ref="0x2b9a8beda020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9a8bed6630"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8bed9a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9a8bed7920"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9a8bed74a0"/>
        <function-ref name="getdt" scoped="" ref="0x2b9a8bed5020"/>
        <function-ref name="gett0" scoped="" ref="0x2b9a8bed6ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9a8bed7020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9a8bedac10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9a8bed6020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9a8bed9110"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8bed95e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b9a8bed3a00" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="Timer32P.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b9a8bed3a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9a8bed02a0"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8bed12a0"/>
        <function-ref name="startAt" scoped="" ref="0x2b9a8bed1c20"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9a8bed1760"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b9a8bed0760"/>
        <function-ref name="start" scoped="" ref="0x2b9a8bed2890"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8bed2da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9a8bed31b0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="Timer32P.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b9a8bed31b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9a8bed3530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b9a8c96c4f0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b9a8c96c4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9a8c96adb0"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8c96bda0"/>
        <function-ref name="startAt" scoped="" ref="0x2b9a8c96a760"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9a8c96a2a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b9a8c9682a0"/>
        <function-ref name="start" scoped="" ref="0x2b9a8c96b3d0"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8c96b8e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9a8c96db10" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b9a8c96db10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9a8c96c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x2b9a8ca03da0" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2b9a8ca03da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9a8ca01180"/>
        <function-ref name="setEvent" scoped="" ref="0x2b9a8ca01310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b9a8ca014a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b9a8ca01630"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8ca017c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x2b9a8ca05450" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2b9a8ca05450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8ca057d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b9a8ca05960"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9a8ca05af0"/>
        <function-ref name="get" scoped="" ref="0x2b9a8ca05c80"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9a8ca05e10"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9a8ca04020"/>
        <function-ref name="getMode" scoped="" ref="0x2b9a8ca041b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9a8ca04340"/>
        <function-ref name="overflow" scoped="" ref="0x2b9a8ca044d0"/>
        <function-ref name="setMode" scoped="" ref="0x2b9a8ca04660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b9a8ca047f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x2b9a8ca04a80" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b9a8ca04a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b9a8ca04e00"/>
        <function-ref name="getControl" scoped="" ref="0x2b9a8ca03020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9a8ca031b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b9a8ca03340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b9a8ca034d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9a8ca03660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b9a8ca037f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b9a8ca03980"/>
        <function-ref name="setControl" scoped="" ref="0x2b9a8ca03b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x2b9a8c9f9a80" loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2b9a8c9f9a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9a8c9f9e00"/>
        <function-ref name="setEvent" scoped="" ref="0x2b9a8c9f7020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b9a8c9f71b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b9a8c9f7340"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8c9f74d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2b9a8c9fb190" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2b9a8c9fb190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8c9fb510"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b9a8c9fb6a0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9a8c9fb830"/>
        <function-ref name="get" scoped="" ref="0x2b9a8c9fb9c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9a8c9fbb50"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9a8c9fbce0"/>
        <function-ref name="getMode" scoped="" ref="0x2b9a8c9fbe70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9a8c9fa030"/>
        <function-ref name="overflow" scoped="" ref="0x2b9a8c9fa1c0"/>
        <function-ref name="setMode" scoped="" ref="0x2b9a8c9fa350"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b9a8c9fa4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b9a8c9fe020" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b9a8c9fe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9a8c9fc870"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8c9fd840"/>
        <function-ref name="startAt" scoped="" ref="0x2b9a8c9fc220"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9a8c9fdd00"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b9a8c9fcd30"/>
        <function-ref name="start" scoped="" ref="0x2b9a8c9fee30"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8c9fd380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9a8c9ff660" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b9a8c9ff660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9a8c9ff9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x2b9a8c9fa770" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b9a8c9fa770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b9a8c9faaf0"/>
        <function-ref name="getControl" scoped="" ref="0x2b9a8c9fac80"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9a8c9fae10"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b9a8c9f9020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b9a8c9f91b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9a8c9f9340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b9a8c9f94d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b9a8c9f9660"/>
        <function-ref name="setControl" scoped="" ref="0x2b9a8c9f97f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b9a8c966890" loc="61:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b9a8c966890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9a8c9630d0"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8c9640d0"/>
        <function-ref name="startAt" scoped="" ref="0x2b9a8c964a50"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9a8c964590"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b9a8c963590"/>
        <function-ref name="start" scoped="" ref="0x2b9a8c9656e0"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8c965bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2b9a8c95f0a0" loc="73:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x2b9a8c95f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9a8c95db30"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8c95e9f0"/>
        <function-ref name="startAt" scoped="" ref="0x2b9a8c95d4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9a8c95d020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b9a8ca0b020"/>
        <function-ref name="start" scoped="" ref="0x2b9a8c95e020"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8c95e530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b9a8c963c00" loc="68:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b9a8c963c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9a8c961a80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9a8c9604e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9a8c960020"/>
        <function-ref name="overflow" scoped="" ref="0x2b9a8c9609a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2b9a8bec4cc0" loc="74:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="Timer32P.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x2b9a8bec4cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9a8bec30a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b9a8bec3230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b9a8bec8b10" loc="49:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="Timer32P.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b9a8bec8b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9a8bec4390"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8bec6360"/>
        <function-ref name="startAt" scoped="" ref="0x2b9a8bec6ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9a8bec6820"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b9a8bec4850"/>
        <function-ref name="start" scoped="" ref="0x2b9a8bec7970"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8bec7e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b9a8becd470" loc="48:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="Timer32P.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b9a8becd470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9a8bec9a20"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8becb020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9a8becbda0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9a8becb920"/>
        <function-ref name="getdt" scoped="" ref="0x2b9a8bec84a0"/>
        <function-ref name="gett0" scoped="" ref="0x2b9a8bec8020"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9a8becb4a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9a8becc090"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9a8bec9410"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9a8becc560"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8becca30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2b9a8beb5650" loc="71:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="Timer32P.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x2b9a8beb5650"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9a8beb59d0"/>
        <function-ref name="runTask" scoped="" ref="0x2b9a8beb5b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2b9a8beba3b0" loc="49:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="Timer32P.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x2b9a8beba3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9a8beb6870"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8beb9e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9a8beb7c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9a8beb7780"/>
        <function-ref name="getdt" scoped="" ref="0x2b9a8beb51e0"/>
        <function-ref name="gett0" scoped="" ref="0x2b9a8beb6cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9a8beb7300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9a8beb9020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9a8beb6260"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9a8beb94f0"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8beb99c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b9a8bec1d70" loc="48:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="Timer32P.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b9a8bec1d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9a8bebb470"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8bebf9b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9a8bebd7c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9a8bebd320"/>
        <function-ref name="getdt" scoped="" ref="0x2b9a8bebbdb0"/>
        <function-ref name="gett0" scoped="" ref="0x2b9a8bebb910"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9a8bebfe50"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9a8bec09a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9a8bebddf0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9a8bebf020"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8bebf510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b9a8bf2cb30" loc="49:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b9a8bf2cb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8bf2b020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8bf2b1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8bf2b340"/>
        <function-ref name="cancel" scoped="" ref="0x2b9a8bf2b4d0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8bf2b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b9a8bf2b8b0" loc="50:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b9a8bf2b8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8bf2bc30"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b9a8bf2bdc0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8bf2a020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8bf2a1b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b9a8bf2a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b9a8bf2a590" loc="51:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b9a8bf2a590"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b9a8bf2a910"/>
        <function-ref name="source" scoped="" ref="0x2b9a8bf2aaa0"/>
        <function-ref name="address" scoped="" ref="0x2b9a8bf2ac30"/>
        <function-ref name="destination" scoped="" ref="0x2b9a8bf2adc0"/>
        <function-ref name="setSource" scoped="" ref="0x2b9a8bf29020"/>
        <function-ref name="setDestination" scoped="" ref="0x2b9a8bf291b0"/>
        <function-ref name="type" scoped="" ref="0x2b9a8bf29340"/>
        <function-ref name="setType" scoped="" ref="0x2b9a8bf294d0"/>
        <function-ref name="isForMe" scoped="" ref="0x2b9a8bf29660"/>
        <function-ref name="setGroup" scoped="" ref="0x2b9a8bf297f0"/>
        <function-ref name="localGroup" scoped="" ref="0x2b9a8bf29980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b9a8bf29c10" loc="52:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2b9a8bf29c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b9a8bf28020"/>
        <function-ref name="noAck" scoped="" ref="0x2b9a8bf281b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b9a8bf28340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b9a8ca453b0" loc="49:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b9a8ca453b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8ca45730"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8ca458c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8ca45a50"/>
        <function-ref name="cancel" scoped="" ref="0x2b9a8ca45be0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8ca45d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b9a8ca44020" loc="50:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b9a8ca44020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8ca443a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b9a8ca44530"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8ca446c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8ca44850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b9a8ca449e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b9a8ca44c30" loc="51:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b9a8ca44c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b9a8ca43020"/>
        <function-ref name="source" scoped="" ref="0x2b9a8ca431b0"/>
        <function-ref name="address" scoped="" ref="0x2b9a8ca43340"/>
        <function-ref name="destination" scoped="" ref="0x2b9a8ca434d0"/>
        <function-ref name="setSource" scoped="" ref="0x2b9a8ca43660"/>
        <function-ref name="setDestination" scoped="" ref="0x2b9a8ca437f0"/>
        <function-ref name="type" scoped="" ref="0x2b9a8ca43980"/>
        <function-ref name="setType" scoped="" ref="0x2b9a8ca43b10"/>
        <function-ref name="isForMe" scoped="" ref="0x2b9a8ca43ca0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b9a8ca43e30"/>
        <function-ref name="localGroup" scoped="" ref="0x2b9a8ca42020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b9a8ca422b0" loc="52:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2b9a8ca422b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b9a8ca42630"/>
        <function-ref name="noAck" scoped="" ref="0x2b9a8ca427c0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b9a8ca42950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b9a8ca38640" loc="44:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b9a8ca38640"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8ca389c0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8ca38b50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8ca38ce0"/>
        <function-ref name="cancel" scoped="" ref="0x2b9a8ca38e70"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8ca37030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2b9a8ca372e0" loc="46:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b9a8ca372e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8ca37660"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8ca377f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8ca37980"/>
        <function-ref name="cancel" scoped="" ref="0x2b9a8ca37b10"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8ca37ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b9a8ca36020" loc="47:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b9a8ca36020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b9a8ca363a0"/>
        <function-ref name="source" scoped="" ref="0x2b9a8ca36530"/>
        <function-ref name="address" scoped="" ref="0x2b9a8ca366c0"/>
        <function-ref name="destination" scoped="" ref="0x2b9a8ca36850"/>
        <function-ref name="setSource" scoped="" ref="0x2b9a8ca369e0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b9a8ca36b70"/>
        <function-ref name="type" scoped="" ref="0x2b9a8ca36d00"/>
        <function-ref name="setType" scoped="" ref="0x2b9a8ca35020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b9a8ca351b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b9a8ca35340"/>
        <function-ref name="localGroup" scoped="" ref="0x2b9a8ca354d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b9a8bf1fdd0" loc="46:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.JoinReqRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b9a8bf1fdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8bf1e180"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b9a8bf1e310"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8bf1e4a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8bf1e630"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b9a8bf1e7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b9a8bf1f800" loc="45:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.JoinReqRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b9a8bf1f800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9a8bf1fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b9a8bf1ea10" loc="47:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.JoinReqRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b9a8bf1ea10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b9a8bf1ed90"/>
        <function-ref name="source" scoped="" ref="0x2b9a8bf1d020"/>
        <function-ref name="address" scoped="" ref="0x2b9a8bf1d1b0"/>
        <function-ref name="destination" scoped="" ref="0x2b9a8bf1d340"/>
        <function-ref name="setSource" scoped="" ref="0x2b9a8bf1d4d0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b9a8bf1d660"/>
        <function-ref name="type" scoped="" ref="0x2b9a8bf1d7f0"/>
        <function-ref name="setType" scoped="" ref="0x2b9a8bf1d980"/>
        <function-ref name="isForMe" scoped="" ref="0x2b9a8bf1db10"/>
        <function-ref name="setGroup" scoped="" ref="0x2b9a8bf1dca0"/>
        <function-ref name="localGroup" scoped="" ref="0x2b9a8bf1de30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b9a8bf1a530" loc="49:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b9a8bf1a530"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8bf1a8b0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8bf1aa40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8bf1abd0"/>
        <function-ref name="cancel" scoped="" ref="0x2b9a8bf1ad60"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8bf19020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b9a8bf19270" loc="50:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b9a8bf19270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8bf195f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b9a8bf19780"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8bf19910"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8bf19aa0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b9a8bf19c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b9a8bf19e80" loc="51:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b9a8bf19e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b9a8bf18220"/>
        <function-ref name="source" scoped="" ref="0x2b9a8bf183b0"/>
        <function-ref name="address" scoped="" ref="0x2b9a8bf18540"/>
        <function-ref name="destination" scoped="" ref="0x2b9a8bf186d0"/>
        <function-ref name="setSource" scoped="" ref="0x2b9a8bf18860"/>
        <function-ref name="setDestination" scoped="" ref="0x2b9a8bf189f0"/>
        <function-ref name="type" scoped="" ref="0x2b9a8bf18b80"/>
        <function-ref name="setType" scoped="" ref="0x2b9a8bf18d10"/>
        <function-ref name="isForMe" scoped="" ref="0x2b9a8bf17020"/>
        <function-ref name="setGroup" scoped="" ref="0x2b9a8bf171b0"/>
        <function-ref name="localGroup" scoped="" ref="0x2b9a8bf17340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b9a8bf175d0" loc="52:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2b9a8bf175d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b9a8bf17950"/>
        <function-ref name="noAck" scoped="" ref="0x2b9a8bf17ae0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b9a8bf17c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b9a8ca1b920" loc="49:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b9a8ca1b920"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8ca1bca0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8ca1be30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8ca19020"/>
        <function-ref name="cancel" scoped="" ref="0x2b9a8ca191b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8ca19340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b9a8ca19590" loc="50:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b9a8ca19590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8ca19910"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b9a8ca19aa0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8ca19c30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8ca19dc0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b9a8ca18020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b9a8ca18270" loc="51:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b9a8ca18270"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b9a8ca185f0"/>
        <function-ref name="source" scoped="" ref="0x2b9a8ca18780"/>
        <function-ref name="address" scoped="" ref="0x2b9a8ca18910"/>
        <function-ref name="destination" scoped="" ref="0x2b9a8ca18aa0"/>
        <function-ref name="setSource" scoped="" ref="0x2b9a8ca18c30"/>
        <function-ref name="setDestination" scoped="" ref="0x2b9a8ca18dc0"/>
        <function-ref name="type" scoped="" ref="0x2b9a8ca17020"/>
        <function-ref name="setType" scoped="" ref="0x2b9a8ca171b0"/>
        <function-ref name="isForMe" scoped="" ref="0x2b9a8ca17340"/>
        <function-ref name="setGroup" scoped="" ref="0x2b9a8ca174d0"/>
        <function-ref name="localGroup" scoped="" ref="0x2b9a8ca17660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b9a8ca178f0" loc="52:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2b9a8ca178f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b9a8ca17c70"/>
        <function-ref name="noAck" scoped="" ref="0x2b9a8ca17e00"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b9a8ca16020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b9a8ca0db20" loc="44:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b9a8ca0db20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8ca0c020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8ca0c1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8ca0c340"/>
        <function-ref name="cancel" scoped="" ref="0x2b9a8ca0c4d0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8ca0c660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2b9a8ca0c910" loc="46:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b9a8ca0c910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8ca0cc90"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8ca0ce20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8cabc020"/>
        <function-ref name="cancel" scoped="" ref="0x2b9a8cabc1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8cabc340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b9a8cabc590" loc="47:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b9a8cabc590"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b9a8cabc910"/>
        <function-ref name="source" scoped="" ref="0x2b9a8cabcaa0"/>
        <function-ref name="address" scoped="" ref="0x2b9a8cabcc30"/>
        <function-ref name="destination" scoped="" ref="0x2b9a8cabcdc0"/>
        <function-ref name="setSource" scoped="" ref="0x2b9a8cabb020"/>
        <function-ref name="setDestination" scoped="" ref="0x2b9a8cabb1b0"/>
        <function-ref name="type" scoped="" ref="0x2b9a8cabb340"/>
        <function-ref name="setType" scoped="" ref="0x2b9a8cabb4d0"/>
        <function-ref name="isForMe" scoped="" ref="0x2b9a8cabb660"/>
        <function-ref name="setGroup" scoped="" ref="0x2b9a8cabb7f0"/>
        <function-ref name="localGroup" scoped="" ref="0x2b9a8cabb980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b9a8bf14710" loc="46:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.JoinAnsRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b9a8bf14710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8bf14a90"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b9a8bf14c20"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8bf14db0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8bf12020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b9a8bf121b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b9a8bf14140" loc="45:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.JoinAnsRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b9a8bf14140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9a8bf144c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b9a8bf12400" loc="47:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.JoinAnsRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b9a8bf12400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b9a8bf12780"/>
        <function-ref name="source" scoped="" ref="0x2b9a8bf12910"/>
        <function-ref name="address" scoped="" ref="0x2b9a8bf12aa0"/>
        <function-ref name="destination" scoped="" ref="0x2b9a8bf12c30"/>
        <function-ref name="setSource" scoped="" ref="0x2b9a8bf12dc0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b9a8bf11020"/>
        <function-ref name="type" scoped="" ref="0x2b9a8bf111b0"/>
        <function-ref name="setType" scoped="" ref="0x2b9a8bf11340"/>
        <function-ref name="isForMe" scoped="" ref="0x2b9a8bf114d0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b9a8bf11660"/>
        <function-ref name="localGroup" scoped="" ref="0x2b9a8bf117f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b9a8bf0e020" loc="49:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b9a8bf0e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8bf0e3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8bf0e530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8bf0e6c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b9a8bf0e850"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8bf0e9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b9a8bf0ec30" loc="50:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b9a8bf0ec30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8bf0d020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b9a8bf0d1b0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8bf0d340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8bf0d4d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b9a8bf0d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b9a8bf0d8b0" loc="51:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b9a8bf0d8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b9a8bf0dc30"/>
        <function-ref name="source" scoped="" ref="0x2b9a8bf0ddc0"/>
        <function-ref name="address" scoped="" ref="0x2b9a8bf0c020"/>
        <function-ref name="destination" scoped="" ref="0x2b9a8bf0c1b0"/>
        <function-ref name="setSource" scoped="" ref="0x2b9a8bf0c340"/>
        <function-ref name="setDestination" scoped="" ref="0x2b9a8bf0c4d0"/>
        <function-ref name="type" scoped="" ref="0x2b9a8bf0c660"/>
        <function-ref name="setType" scoped="" ref="0x2b9a8bf0c7f0"/>
        <function-ref name="isForMe" scoped="" ref="0x2b9a8bf0c980"/>
        <function-ref name="setGroup" scoped="" ref="0x2b9a8bf0cb10"/>
        <function-ref name="localGroup" scoped="" ref="0x2b9a8bf0cca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b9a8bf0b020" loc="52:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2b9a8bf0b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b9a8bf0b3a0"/>
        <function-ref name="noAck" scoped="" ref="0x2b9a8bf0b530"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b9a8bf0b6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b9a8caa0140" loc="49:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b9a8caa0140"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8caa04c0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8caa0650"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8caa07e0"/>
        <function-ref name="cancel" scoped="" ref="0x2b9a8caa0970"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8caa0b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b9a8caa0d50" loc="50:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b9a8caa0d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8ca9f100"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b9a8ca9f290"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8ca9f420"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8ca9f5b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b9a8ca9f740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b9a8ca9f990" loc="51:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b9a8ca9f990"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b9a8ca9fd10"/>
        <function-ref name="source" scoped="" ref="0x2b9a8ca9d020"/>
        <function-ref name="address" scoped="" ref="0x2b9a8ca9d1b0"/>
        <function-ref name="destination" scoped="" ref="0x2b9a8ca9d340"/>
        <function-ref name="setSource" scoped="" ref="0x2b9a8ca9d4d0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b9a8ca9d660"/>
        <function-ref name="type" scoped="" ref="0x2b9a8ca9d7f0"/>
        <function-ref name="setType" scoped="" ref="0x2b9a8ca9d980"/>
        <function-ref name="isForMe" scoped="" ref="0x2b9a8ca9db10"/>
        <function-ref name="setGroup" scoped="" ref="0x2b9a8ca9dca0"/>
        <function-ref name="localGroup" scoped="" ref="0x2b9a8ca9de30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b9a8ca9c120" loc="52:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2b9a8ca9c120"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b9a8ca9c4a0"/>
        <function-ref name="noAck" scoped="" ref="0x2b9a8ca9c630"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b9a8ca9c7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b9a8ca92390" loc="44:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.DataSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b9a8ca92390"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8ca92710"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8ca928a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8ca92a30"/>
        <function-ref name="cancel" scoped="" ref="0x2b9a8ca92bc0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8ca92d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2b9a8ca91060" loc="46:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.DataSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b9a8ca91060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9a8ca913e0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8ca91570"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8ca91700"/>
        <function-ref name="cancel" scoped="" ref="0x2b9a8ca91890"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9a8ca91a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b9a8ca91c70" loc="47:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.DataSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b9a8ca91c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b9a8ca90020"/>
        <function-ref name="source" scoped="" ref="0x2b9a8ca901b0"/>
        <function-ref name="address" scoped="" ref="0x2b9a8ca90340"/>
        <function-ref name="destination" scoped="" ref="0x2b9a8ca904d0"/>
        <function-ref name="setSource" scoped="" ref="0x2b9a8ca90660"/>
        <function-ref name="setDestination" scoped="" ref="0x2b9a8ca907f0"/>
        <function-ref name="type" scoped="" ref="0x2b9a8ca90980"/>
        <function-ref name="setType" scoped="" ref="0x2b9a8ca90b10"/>
        <function-ref name="isForMe" scoped="" ref="0x2b9a8ca90ca0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b9a8ca90e30"/>
        <function-ref name="localGroup" scoped="" ref="0x2b9a8ca8f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlotScheduler" ref="0x2b9a8bf44bc0" loc="2:SlotSchedulerC.nc">
      <component-ref qname="TDMALinkC.SlotSchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SlotScheduler" scoped="" ref="0x2b9a8bf44bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlotScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="getEpochTime" scoped="" ref="0x2b9a8bf43b10"/>
        <function-ref name="slotStarted" scoped="" ref="0x2b9a8bf431b0"/>
        <function-ref name="getScheduledSlot" scoped="" ref="0x2b9a8bf43340"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9a8bf434d0"/>
        <function-ref name="syncEpochTime" scoped="" ref="0x2b9a8bf43660"/>
        <function-ref name="start" scoped="" ref="0x2b9a8bf437f0"/>
        <function-ref name="slotEnded" scoped="" ref="0x2b9a8bf43980"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8bf43020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EpochTimer" ref="0x2b9a8ca7c0a0" loc="7:SlotSchedulerP.nc">
      <component-ref qname="TDMALinkC.SlotSchedulerC.SlotSchedulerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EpochTimer" scoped="" ref="0x2b9a8ca7c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9a8ca78630"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8ca7bb00"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9a8ca7a920"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9a8ca7a4a0"/>
        <function-ref name="getdt" scoped="" ref="0x2b9a8ca77020"/>
        <function-ref name="gett0" scoped="" ref="0x2b9a8ca78ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9a8ca7a020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9a8ca7cc90"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9a8ca78020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9a8ca7b1b0"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8ca7b680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SlotTimer" ref="0x2b9a8ca77570" loc="8:SlotSchedulerP.nc">
      <component-ref qname="TDMALinkC.SlotSchedulerC.SlotSchedulerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SlotTimer" scoped="" ref="0x2b9a8ca77570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9a8ca73a20"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8ca75020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9a8ca75da0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9a8ca75920"/>
        <function-ref name="getdt" scoped="" ref="0x2b9a8ca724a0"/>
        <function-ref name="gett0" scoped="" ref="0x2b9a8ca72020"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9a8ca754a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9a8ca761b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9a8ca73410"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9a8ca76680"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8ca76b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlotScheduler" ref="0x2b9a8ca7ede0" loc="4:SlotSchedulerP.nc">
      <component-ref qname="TDMALinkC.SlotSchedulerC.SlotSchedulerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SlotScheduler" scoped="" ref="0x2b9a8ca7ede0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlotScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x2b9a8ca7dc70"/>
        <function-ref name="slotStarted" scoped="" ref="0x2b9a8ca7d310"/>
        <function-ref name="getScheduledSlot" scoped="" ref="0x2b9a8ca7d4a0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9a8ca7d630"/>
        <function-ref name="syncEpochTime" scoped="" ref="0x2b9a8ca7d7c0"/>
        <function-ref name="start" scoped="" ref="0x2b9a8ca7d950"/>
        <function-ref name="slotEnded" scoped="" ref="0x2b9a8ca7dae0"/>
        <function-ref name="getEpochTime" scoped="" ref="0x2b9a8ca7d180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer32khz" ref="0x2b9a8ca70870" loc="3:Timer32C.nc">
      <component-ref qname="TDMALinkC.SlotSchedulerC.EpochTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer32khz" scoped="" ref="0x2b9a8ca70870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9a8ca6ccf0"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8ca6e300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9a8ca6c0d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9a8ca6ec00"/>
        <function-ref name="getdt" scoped="" ref="0x2b9a8ca6b660"/>
        <function-ref name="gett0" scoped="" ref="0x2b9a8ca6b1e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9a8ca6e780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9a8ca6f480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9a8ca6c6e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9a8ca6f950"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8ca6fe20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer32khz" ref="0x2b9a8ca69020" loc="3:Timer32C.nc">
      <component-ref qname="TDMALinkC.SlotSchedulerC.SlotTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer32khz" scoped="" ref="0x2b9a8ca69020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9a8ca65630"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8ca68a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9a8ca67920"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9a8ca674a0"/>
        <function-ref name="getdt" scoped="" ref="0x2b9a8ca64020"/>
        <function-ref name="gett0" scoped="" ref="0x2b9a8ca65ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9a8ca67020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9a8ca69c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9a8ca65020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9a8ca68110"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8ca685e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b9a8bf40020" loc="46:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.DataRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b9a8bf40020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9a8bf403a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b9a8bf40530"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9a8bf406c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9a8bf40850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b9a8bf409e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b9a8bf419f0" loc="45:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.DataRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b9a8bf419f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9a8bf41d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b9a8bf40c30" loc="47:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.DataRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b9a8bf40c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b9a8bf3f020"/>
        <function-ref name="source" scoped="" ref="0x2b9a8bf3f1b0"/>
        <function-ref name="address" scoped="" ref="0x2b9a8bf3f340"/>
        <function-ref name="destination" scoped="" ref="0x2b9a8bf3f4d0"/>
        <function-ref name="setSource" scoped="" ref="0x2b9a8bf3f660"/>
        <function-ref name="setDestination" scoped="" ref="0x2b9a8bf3f7f0"/>
        <function-ref name="type" scoped="" ref="0x2b9a8bf3f980"/>
        <function-ref name="setType" scoped="" ref="0x2b9a8bf3fb10"/>
        <function-ref name="isForMe" scoped="" ref="0x2b9a8bf3fca0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b9a8bf3fe30"/>
        <function-ref name="localGroup" scoped="" ref="0x2b9a8bf3e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer32khz" ref="0x2b9a8bf358b0" loc="3:Timer32C.nc">
      <component-ref qname="TestC.Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer32khz" scoped="" ref="0x2b9a8bf358b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9a8a608460"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9a8a607020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9a8bf31cf0"/>
        <function-ref name="fired" scoped="" ref="0x2b9a8bf33310"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9a8bf310d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9a8bf33c10"/>
        <function-ref name="getdt" scoped="" ref="0x2b9a8bfb6660"/>
        <function-ref name="gett0" scoped="" ref="0x2b9a8bfb61e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9a8bf33790"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9a8bf344c0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9a8bf316e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9a8bf34990"/>
        <function-ref name="stop" scoped="" ref="0x2b9a8bf34e60"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Boot" loc="50:/home/zdenial/tinyos/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/zdenial/tinyos/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2b9a8a5d15d0" loc="60:/home/zdenial/tinyos/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/zdenial/tinyos/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b9a8a607dd0" loc="53:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b9a8a607dd0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b9a8a600c10" loc="136:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b9a8a603420" loc="83:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2b9a8a6012b0" loc="114:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b9a8a602bd0" loc="114:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b9a8a601020" loc="114:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2b9a8a602420" loc="98:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2b9a8a5ffc60" loc="151:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2b9a8a5ff3e0" loc="144:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b9a8a603c00" loc="92:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2b9a8a606970" loc="64:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b9a8a6066f0" loc="64:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2b9a8a6002b0" loc="129:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b9a8a601c50" loc="129:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b9a8a600020" loc="129:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2b9a8a6054d0" loc="73:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b9a8a605250" loc="73:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b9a8a605cd0" loc="78:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b9a8a5ca970" loc="80:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b9a8a5c7970"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b9a8a5ca020" loc="80:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b9a8a5c7970"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2b9a8a5ca3a0" loc="80:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b9a8a5ca6d0" loc="80:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b9a8a5e2160" loc="135:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9a8a5e4ae0" loc="135:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b9a8a5e4e10" loc="135:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b9a8a5e4270" loc="123:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b9a8a5e6cd0" loc="96:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9a8a5e6a50" loc="96:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b9a8a5e53a0" loc="110:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9a8a5e7d70" loc="110:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b9a8a5e5110" loc="110:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TDMALinkControl" loc="1:TDMALinkControl.nc">
      <function command="" provided="0" name="isMaster" ref="0x2b9a8a5cd020" loc="5:TDMALinkControl.nc">
        <interfacedef-ref qname="TDMALinkControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startDone" ref="0x2b9a8a5cd960" loc="6:TDMALinkControl.nc">
        <interfacedef-ref qname="TDMALinkControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b9a8a5cd6e0" loc="6:TDMALinkControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startSlave" ref="0x2b9a8a5cf0e0" loc="3:TDMALinkControl.nc">
        <interfacedef-ref qname="TDMALinkControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x2b9a8a5cc2e0" loc="7:TDMALinkControl.nc">
        <interfacedef-ref qname="TDMALinkControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b9a8a5cc060" loc="7:TDMALinkControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startMaster" ref="0x2b9a8a5d3950" loc="2:TDMALinkControl.nc">
        <interfacedef-ref qname="TDMALinkControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b9a8a5cf7d0" loc="4:TDMALinkControl.nc">
        <interfacedef-ref qname="TDMALinkControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/zdenial/tinyos/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2b9a8a5de300" loc="78:/home/zdenial/tinyos/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
              <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9a8a5d0870" loc="78:/home/zdenial/tinyos/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x2b9a8a5d0bc0" loc="78:/home/zdenial/tinyos/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b9a8a5de020" loc="78:/home/zdenial/tinyos/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x2b9a8a5ef040" loc="177:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b9a8a5c7590"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b9a8a5f1d90" loc="177:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x2b9a8a5f8bc0" loc="88:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x2b9a8a5c7970"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b9a8a5f8940" loc="88:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x2b9a8a5db020" loc="68:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x2b9a8a5c7970"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2b9a8a5dbae0" loc="78:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x2b9a8a5c7970"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b9a8a5db860" loc="78:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2b9a8a5f6600" loc="121:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b9a8a5c7970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b9a8a5f6020" loc="121:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b9a8a5f6370" loc="121:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b9a8a5c7970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2b9a8a5f9020" loc="103:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b9a8a5c7970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b9a8a5f79e0" loc="103:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b9a8a5f7d30" loc="103:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b9a8a5c7970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x2b9a8a5f2ae0" loc="147:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b9a8a5c71b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b9a8a5f2860" loc="147:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x2b9a8a5f0e60" loc="162:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b9a8a5c71b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b9a8a5f08b0" loc="162:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x2b9a8a5f0bd0" loc="162:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b9a8a5c71b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2b9a8a5f3890" loc="136:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b9a8a5f3610" loc="136:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x2b9a8a5ed600" loc="187:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b9a8a5c7590"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b9a8a5ed020" loc="187:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2b9a8a5ed370" loc="187:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b9a8a5c7590"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x2b9a8a5ec490" loc="195:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b9a8a5c7590"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/home/zdenial/tinyos/tos/interfaces/Init.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b9a8a624d00" loc="62:/home/zdenial/tinyos/tos/interfaces/Init.nc">
        <documentation loc="53:/home/zdenial/tinyos/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x2b9a8a658b40" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x2b9a8a65ade0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x2b9a8a658420" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x2b9a8a65a700" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x2b9a8a6595a0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x2b9a8a63b900" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x2b9a8a65a020" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x2b9a8a659cc0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/zdenial/tinyos/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/home/zdenial/tinyos/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2b9a8a1e8b70" loc="62:/home/zdenial/tinyos/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/zdenial/tinyos/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2b9a8a1a0c00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x2b9a8a6ae020" loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x2b9a8a6afcc0" loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x2b9a8a690390" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9a8a64f910"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x2b9a8a64e390"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x2b9a8a6ae890" loc="57:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x2b9a8a6ad7b0" loc="59:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x2b9a8a6af560" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x2b9a8a6ad020" loc="58:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x2b9a8a690b30" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x2b9a8a6b0350" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x2b9a8a6b0da0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9a8a64f910"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x2b9a8a64e390"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b9a8a6b0b20" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9a8a64f910"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x2b9a8a64e390"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x2b9a8a6a00e0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x2b9a8a6c1630" loc="79:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x2b9a8a6c13b0" loc="79:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2b9a8a6c02a0" loc="86:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="81:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2b9a8a6c0020" loc="86:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2b9a8a6c2be0" loc="68:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="65:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2b9a8a6c23e0" loc="63:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x2b9a8a6a0a90" loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x2b9a8a6a0810" loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x2b9a8a6a73e0" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x2b9a8a6a7d60" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2b9a8a6a7ae0" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x2b9a8a6a6790" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x2b9a8a6a6510" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x2b9a8a6a52a0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x2b9a8a6a5020" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b9a8a6a5990" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2b9a8a697810" loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x2b9a8a6942a0" loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x2b9a8a694020" loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x2b9a8a695020" loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b9a8a69cab0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x2b9a8a695760" loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2b9a8a6999b0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x2b9a8a697120" loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2b9a8a699270" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b9a8a6980e0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x2b9a8a6989f0" loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2b9a8a698770" loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x2b9a8a694cb0" loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x2b9a8a694a30" loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2b9a8a6e59f0" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/home/zdenial/tinyos/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2b9a8a5322b0" loc="76:/home/zdenial/tinyos/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/home/zdenial/tinyos/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/zdenial/tinyos/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/zdenial/tinyos/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2b9a8a326420" loc="52:/home/zdenial/tinyos/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/zdenial/tinyos/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b9a8a0e2020" loc="57:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2b9a8a0e1020" loc="72:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2b9a8a0e2790" loc="65:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/zdenial/tinyos/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2b9a8a0f4020" loc="67:/home/zdenial/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2b9a8a0f4870" loc="75:/home/zdenial/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/zdenial/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x2b9a8a7f5ab0" loc="113:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b9a8a7f5830" loc="113:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x2b9a8a81b020" loc="138:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b9a8a7f4d30" loc="138:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b9a8a7f8d70" loc="104:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b9a8a7f4350" loc="130:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TimeSyncAMSend" loc="44:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b9a8a7f6bb0" loc="44:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <interfacedef-ref qname="TimeSyncAMSend"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b9a8a7f6bb0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b9a8a7f6df0" loc="44:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <interfacedef-ref qname="TimeSyncAMSend"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9a8a7f6df0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="send" ref="0x2b9a8a810430" loc="64:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="46:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; This command sends a regular message just like &#60;tt>AMSend.send&#60;/tt>, but&#10; it also performs sender-receiver time synchronization.</short>
          <long>&#10; This command sends a regular message just like &#60;tt>AMSend.send&#60;/tt>, but&#10; it also performs sender-receiver time synchronization. The &#60;tt>event_time&#60;/tt>&#10; parameter holds the time of some event as expressed in the local clock of&#10; the sender. The receiver can obtain the time of this event (expressed in its&#10; own local time) via the &#60;tt>TimeSyncPacket&#60;/tt> interface.&#10;&#10; @param addr         address to which to send the packet&#10; @param msg          the packet&#10; @param len          the length of the data in the packet payload&#10; @param event_time&#9;  the synchronization point to be transfered with the message&#10; @return             SUCCESS if the request to send succeeded and a&#10;                     sendDone will be signaled later, EBUSY if the&#10;                     abstraction cannot send now but will be able to&#10;                     later, or FAIL if the communication layer is not&#10;                     in a state that can send (e.g., off).&#10; @see sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b9a8a5c7970"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9a8a7f6df0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b9a8a811710" loc="64:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b9a8a5c7970"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2b9a8a811a90" loc="64:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b9a8a811dc0" loc="64:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </variable>
          <variable name="event_time" ref="0x2b9a8a810180" loc="64:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9a8a7f6df0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b9a8a80cab0" loc="114:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="105:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9a8a80c4b0" loc="114:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b9a8a80c7e0" loc="114:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b9a8a80dbf0" loc="103:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="95:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b9a8a80e2a0" loc="80:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="66:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the&#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a&#10; sendFailed event, and never a sendSucceeded event.&#10;&#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9a8a80e020" loc="80:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b9a8a80d2b0" loc="93:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="82:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; Signaled in response to an accepted send request.</short>
          <long>&#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9a8a80ec40" loc="93:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b9a8a80d020" loc="93:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/home/zdenial/tinyos/tos/interfaces/Random.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x2b9a8a827870" loc="52:/home/zdenial/tinyos/tos/interfaces/Random.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x2b9a8a827070" loc="46:/home/zdenial/tinyos/tos/interfaces/Random.nc">
        <documentation loc="42:/home/zdenial/tinyos/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TimeSyncPacket" loc="37:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x2b9a8a808b90" loc="37:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
          <interfacedef-ref qname="TimeSyncPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b9a8a808b90"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b9a8a808dd0" loc="37:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
          <interfacedef-ref qname="TimeSyncPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9a8a808dd0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="isValid" ref="0x2b9a8a82d980" loc="48:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
          <short>&#10; Returns TRUE if the value returned by &#60;tt>getTime&#60;/tt> can be trusted.</short>
          <long>&#10; Returns TRUE if the value returned by &#60;tt>getTime&#60;/tt> can be trusted.&#10; Under certain circumstances the received message cannot be properly&#10; time stamped, so the sender-receiver synchronization cannot be finished&#10; on the receiver side. In this case, this command returns FALSE.&#10; This command MUST BE called only on the receiver side and only for&#10; messages transmitted via the TimeSyncSend interface. It is recommended&#10; that this command be called from the receive event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9a8a82d700" loc="48:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="eventTime" ref="0x2b9a8a82c5f0" loc="58:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
        <documentation loc="50:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
          <short>&#10; This command should be called by the receiver of a message.</short>
          <long>&#10; This command should be called by the receiver of a message. The time&#10; of the synchronization event is returned as expressed in the local&#10; clock of the caller. This command MUST BE called only on the receiver&#10; side and only for messages transmitted via the TimeSyncSend interface.&#10; It is recommended that this command be called from the receive event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9a8a808dd0"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9a8a82c370" loc="58:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x2b9a8a814040" loc="65:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9a8a816d90" loc="65:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x2b9a8a818020" loc="46:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9a8a7f78b0" loc="46:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x2b9a8a7f7c40" loc="46:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x2b9a8a816020" loc="59:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9a8a817c40" loc="59:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x2b9a8a817410" loc="53:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9a8a818dd0" loc="53:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x2b9a8a817180" loc="53:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x2b9a8a813020" loc="71:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9a8a814d70" loc="71:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlotScheduler" loc="1:SlotScheduler.nc">
      <function command="" provided="0" name="getEpochTime" ref="0x2b9a8a842020" loc="6:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="slotStarted" ref="0x2b9a8a841110" loc="8:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="slotId" ref="0x2b9a8a842e60" loc="8:SlotScheduler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduledSlot" ref="0x2b9a8a842790" loc="7:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b9a8a844720" loc="3:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="syncEpochTime" ref="0x2b9a8a843820" loc="5:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reference_time" ref="0x2b9a8a8435a0" loc="5:SlotScheduler.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b9a8a844020" loc="2:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="epoch_time" ref="0x2b9a8a81f980" loc="2:SlotScheduler.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
            </type-int>
          </variable>
          <variable name="firstSlot" ref="0x2b9a8a81fcf0" loc="2:SlotScheduler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="slotEnded" ref="0x2b9a8a841aa0" loc="9:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="slotId" ref="0x2b9a8a841820" loc="9:SlotScheduler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b9a8a844e10" loc="4:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/home/zdenial/tinyos/tos/interfaces/StdControl.nc">
      <documentation loc="72:/home/zdenial/tinyos/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2b9a8a8a51f0" loc="95:/home/zdenial/tinyos/tos/interfaces/StdControl.nc">
        <documentation loc="88:/home/zdenial/tinyos/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b9a8a8a5a00" loc="105:/home/zdenial/tinyos/tos/interfaces/StdControl.nc">
        <documentation loc="97:/home/zdenial/tinyos/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:/home/zdenial/tinyos/tos/lib/printf/Putchar.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TINYOS_OS_DIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0x2b9a8a89b4a0" loc="49:/home/zdenial/tinyos/tos/lib/printf/Putchar.nc">
        <documentation loc="46:/home/zdenial/tinyos/tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x2b9a8a89b220" loc="49:/home/zdenial/tinyos/tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b9a8a89f400" loc="46:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b9a8a89f180" loc="46:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2b9a8a89e2b0" loc="56:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b9a8a89fc70" loc="56:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x2b9a8a89e020" loc="56:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b9a8a8b7020" loc="48:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b9a8a8ba8f0" loc="48:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b9a8a8bac30" loc="48:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x2b9a8a8b4cc0" loc="79:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="74:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b9a8a8b4a40" loc="79:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2b9a8a8b2ae0" loc="90:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="81:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b9a8a8b2510" loc="90:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b9a8a8b2850" loc="90:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x2b9a8a8b3930" loc="65:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="59:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x2b9a8a8b13b0" loc="99:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="92:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b9a8a8b0a60" loc="99:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b9a8a8b0da0" loc="99:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b9a8a8b1110" loc="99:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x2b9a8a8b4270" loc="72:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b9a8a8b6950" loc="57:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="50:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b9a8a8b6020" loc="57:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b9a8a8b6360" loc="57:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b9a8a8b66b0" loc="57:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/zdenial/tinyos/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x2b9a8a90baf0" loc="53:/home/zdenial/tinyos/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/zdenial/tinyos/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2b9a8a9304e0" loc="61:/home/zdenial/tinyos/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x2b9a8a92d610" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2b9a8a8fde70"/>
              <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x2b9a8a8fb2b0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2b9a8a907350" loc="120:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x2b9a8a909350" loc="97:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2b9a8a90c980" loc="88:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2b9a8a909b40" loc="102:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2b9a8a907db0" loc="128:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/zdenial/tinyos/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/zdenial/tinyos/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x2b9a8a926b70" loc="65:/home/zdenial/tinyos/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/zdenial/tinyos/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x2b9a8a926350" loc="59:/home/zdenial/tinyos/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x2b9a8a91d680" loc="54:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b9a8a91d400" loc="54:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x2b9a8a921c00" loc="49:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x2b9a8a953af0" loc="213:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x2b9a8a931790" loc="143:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x2b9a8a93e530" loc="50:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b9a8a8d4080"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x2b9a8a8d48c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b9a8a93e2b0" loc="50:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b9a8a8d4080"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x2b9a8a8d48c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x2b9a8a933870" loc="123:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x2b9a8a93ba40" loc="70:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b9a8a8cf080"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x2b9a8a8cf8c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b9a8a93b7c0" loc="70:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b9a8a8cf080"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x2b9a8a8cf8c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x2b9a8a958e70" loc="180:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x2b9a8a955480" loc="197:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x2b9a8a93b020" loc="65:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b9a8a8d1020"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x2b9a8a8d17b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x2b9a8a93a270" loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b9a8a8cf080"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x2b9a8a8cf8c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x2b9a8a936020" loc="97:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x2b9a8a937d30" loc="97:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x2b9a8a937610" loc="95:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x2b9a8a958740" loc="179:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x2b9a8a93c780" loc="60:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b9a8a8d1020"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x2b9a8a8d17b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b9a8a93c500" loc="60:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b9a8a8d1020"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x2b9a8a8d17b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x2b9a8a938420" loc="85:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x2b9a8a9575d0" loc="181:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x2b9a8a938e00" loc="90:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x2b9a8a938b80" loc="90:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x2b9a8a935910" loc="113:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x2b9a8a9330e0" loc="118:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x2b9a8a95a840" loc="177:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x2b9a8a95c790" loc="163:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x2b9a8a9327e0" loc="133:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x2b9a8a958020" loc="178:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x2b9a8a95e020" loc="148:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x2b9a8a957cf0" loc="182:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x2b9a8a936800" loc="103:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x2b9a8a8b8dd0"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x2b9a8a8d6680"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x2b9a8a9564c0" loc="187:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x2b9a8a953350" loc="207:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x2b9a8a93ac10" loc="80:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x2b9a8a93a990" loc="80:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x2b9a8a9524d0" loc="224:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b9a8a952250" loc="224:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x2b9a8a93ed10" loc="55:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b9a8a8d4080"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x2b9a8a8d48c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x2b9a8a932020" loc="128:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x2b9a8a95e770" loc="153:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x2b9a8a95a020" loc="174:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2b9a8a8fde70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x2b9a8a8fb2b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x2b9a8a95bcf0" loc="174:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2b9a8a8fde70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x2b9a8a8fb2b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x2b9a8a95b2a0" loc="168:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x2b9a8a8e3020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x2b9a8a8e3440"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x2b9a8a95b020" loc="168:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x2b9a8a8e3020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x2b9a8a8e3440"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x2b9a8a952d90" loc="231:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x2b9a8a956cb0" loc="192:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x2b9a8a935070" loc="108:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x2b9a8a955be0" loc="202:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x2b9a8a95c020" loc="158:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x2b9a8a931020" loc="138:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b9a8a94a410" loc="57:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b9a8a94a410"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b9a8a94a650" loc="57:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9a8a94a650"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b9a8a948020" loc="64:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9a8a94a650"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2b9a8a975120" loc="76:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2b9a8a9488a0" loc="71:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b9a8a975880" loc="82:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x2b9a8a96d020" loc="61:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x2b9a8a96d7d0" loc="67:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x2b9a8a96c020" loc="72:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x2b9a8a96b020" loc="83:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x2b9a8a9697d0" loc="100:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b9a8a968020" loc="117:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x2b9a8a96c7b0" loc="77:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b9a8a968b90" loc="134:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2b9a8a968910" loc="134:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x2b9a8a96e850" loc="56:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x2b9a8a96b800" loc="89:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x2b9a8a969020" loc="94:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/zdenial/tinyos/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/zdenial/tinyos/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2b9a8a9e8390" loc="95:/home/zdenial/tinyos/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/zdenial/tinyos/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b9a8a9e8be0" loc="105:/home/zdenial/tinyos/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/zdenial/tinyos/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2b9a8a9d57c0" loc="78:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2b9a8a9d4020" loc="80:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x2b9a8aa00b10" loc="110:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2b9a8aa00890" loc="110:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2b9a8a9d6020" loc="58:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2b9a8a9d3020" loc="87:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x2b9a8a9ff490" loc="117:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2b9a8a9d4760" loc="85:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b9a8a9d5020" loc="73:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x2b9a8aa01770" loc="99:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x2b9a8a9d67c0" loc="66:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b9a8a9d80e0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x2b9a8a9d37a0" loc="92:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x2b9a8aa00020" loc="101:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x2b9a8aa01020" loc="94:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2b9a8a9d8810" loc="53:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2b9a8ac9d020" loc="44:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2b9a8ac9d750" loc="45:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2b9a8ac9e0e0" loc="42:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2b9a8ac9b5e0" loc="47:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b9a8ac9e7e0" loc="43:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2b9a8ac9de70" loc="46:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b9a8ac9f2b0" loc="40:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2b9a8ac9f980" loc="41:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/zdenial/tinyos/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/zdenial/tinyos/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x2b9a8acf6460" loc="90:/home/zdenial/tinyos/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/zdenial/tinyos/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x2b9a8acf6cc0" loc="98:/home/zdenial/tinyos/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/zdenial/tinyos/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2b9a8ad1fa40" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2b9a8ad3fe00" loc="56:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x2b9a8ad3c020" loc="73:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2b9a8ad3f570" loc="46:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2b9a8ad3d6d0" loc="65:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2b9a8ad3c950" loc="81:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x2b9a8ad31020" loc="79:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b9a8ad38090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b9a8ad32d20" loc="79:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b9a8ad38090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x2b9a8ad33020" loc="53:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x2b9a8ad33b20" loc="62:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b9a8ad38090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b9a8ad338a0" loc="62:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b9a8ad38090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2b9a8ad32470" loc="70:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x2b9a8ad38090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/home/zdenial/tinyos/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/home/zdenial/tinyos/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x2b9a8adbc770" loc="62:/home/zdenial/tinyos/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/home/zdenial/tinyos/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2b9a8ade47a0" loc="65:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9a8ade4520" loc="65:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x2b9a8ade3840" loc="78:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9a8ade35c0" loc="78:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b9a8ae1fd30" loc="126:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9a8ae1f730" loc="126:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b9a8ae1fa60" loc="126:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b9a8ae21da0" loc="106:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x2b9a8ae20ce0" loc="94:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9a8ae20720" loc="94:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b9a8ae20a50" loc="94:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x2b9a8ae19ad0" loc="59:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9a8ae19850" loc="59:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x2b9a8ae17cd0" loc="71:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9a8ae17a50" loc="71:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x2b9a8ae15020" loc="85:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9a8ae18ce0" loc="85:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/zdenial/tinyos/tos/interfaces/Send.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b9a8ae09460" loc="75:/home/zdenial/tinyos/tos/interfaces/Send.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9a8ae0ce70" loc="75:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b9a8ae091d0" loc="75:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b9a8ae06a40" loc="125:/home/zdenial/tinyos/tos/interfaces/Send.nc">
        <documentation loc="115:/home/zdenial/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9a8ae06440" loc="125:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b9a8ae06770" loc="125:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b9a8ae04b80" loc="112:/home/zdenial/tinyos/tos/interfaces/Send.nc">
        <documentation loc="102:/home/zdenial/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b9a8ae08790" loc="89:/home/zdenial/tinyos/tos/interfaces/Send.nc">
        <documentation loc="77:/home/zdenial/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9a8ae08510" loc="89:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b9a8ae05c70" loc="100:/home/zdenial/tinyos/tos/interfaces/Send.nc">
        <documentation loc="91:/home/zdenial/tinyos/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9a8ae05690" loc="100:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b9a8ae059e0" loc="100:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x2b9a8ae67670" loc="31:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9a8ae67060" loc="31:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x2b9a8ae673e0" loc="31:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x2b9a8ae69820" loc="15:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x2b9a8ae686d0" loc="23:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9a8ae680d0" loc="23:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x2b9a8ae68440" loc="23:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/home/zdenial/tinyos/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x2b9a8ae8b960" loc="54:/home/zdenial/tinyos/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/home/zdenial/tinyos/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x2b9a8ae8b1f0" loc="49:/home/zdenial/tinyos/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/home/zdenial/tinyos/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x2b9a8ae9dc30" loc="56:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x2b9a8ae920e0" loc="72:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x2b9a8ae91d00" loc="94:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b9a8ae91a80" loc="94:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x2b9a8ae92960" loc="79:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x2b9a8ae937e0" loc="65:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b9a8ae93560" loc="65:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x2b9a8ae8f5b0" loc="100:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x2b9a8ae91270" loc="85:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x2b9a8ae9b780" loc="71:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x2b9a8ae9a0e0" loc="81:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x2b9a8ae9ed90" loc="62:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x2b9a8ae9eb10" loc="62:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x2b9a8ae9ac60" loc="91:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b9a8ae9a9e0" loc="91:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x2b9a8ae988f0" loc="62:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x2b9a8ae975b0" loc="69:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b9a8ae97330" loc="69:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x2b9a8ae950b0" loc="80:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2b9a8ae97e00" loc="80:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x2b9a8b0237a0" loc="35:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b9a8b0237a0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b9a8b0239e0" loc="35:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9a8b0239e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x2b9a8b01e840" loc="63:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9a8b0239e0"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9a8b01e5c0" loc="63:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x2b9a8b01c9d0" loc="70:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9a8b01c750" loc="70:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x2b9a8b0205f0" loc="49:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9a8b020370" loc="49:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b9a8b01bd00" loc="78:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9a8b0239e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9a8b01b710" loc="78:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2b9a8b01ba70" loc="78:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9a8b0239e0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x2b9a8b010e30" loc="65:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9a8b010810" loc="65:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x2b9a8b010ba0" loc="65:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x2b9a8b00d020" loc="71:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9a8b00ed70" loc="71:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x2b9a8b010020" loc="57:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x2b9a8b011560" loc="52:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x2b9a8b0112e0" loc="52:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x2b9a8b02f430" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9a8b02f1b0" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x2b9a8b032720" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9a8b0324a0" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x2b9a8b034dc0" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x2b9a8b034b40" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x2b9a8b0342a0" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x2b9a8b034020" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x2b9a8b033880" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x2b9a8b033600" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x2b9a8b0305e0" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9a8b030360" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/home/zdenial/tinyos/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x2b9a8b029630" loc="59:/home/zdenial/tinyos/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/home/zdenial/tinyos/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b9a8a5c7970"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x2b9a8b029020" loc="59:/home/zdenial/tinyos/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b9a8a5c7970"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2b9a8b0293a0" loc="59:/home/zdenial/tinyos/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x2b9a8b03e0c0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b9a8b03faa0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x2b9a8b03fdf0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x2b9a8b03a6d0" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b9a8b03a0d0" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x2b9a8b03a440" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x2b9a8b03eba0" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x2b9a89a04110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b9a8b03e920" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x2b9a8b03b600" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b9a8b03b380" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x2b9a8b03f2a0" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b9a8b03f020" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x2b9a8b03d720" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b9a8b03d4a0" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/home/zdenial/tinyos/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x2b9a8b0360b0" loc="47:/home/zdenial/tinyos/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9a8b040de0" loc="47:/home/zdenial/tinyos/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b9a8b04e360" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b9a8b057d40" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x2b9a8b04e0d0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b9a8b04d6a0" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x2b9a8b04ae70" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2b9a8b04a060" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x2b9a8b04a8a0" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b9a8b04abd0" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b9a8b04c840" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b9a8b04c260" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b9a8b04c5b0" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x2b9a8b04edf0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x2b9a8b04eb70" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x2b9a8b08cde0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9a8b08cb20" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x2b9a8b08c320" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x2b9a8a58bea0"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x2b9a8a588c70"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9a8b08c020" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x2b9a8b08a130" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:16" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x2b9a8a5877c0"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x2b9a8a585660"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9a8b08bde0" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x2b9a8b054070" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x2b9a8b0510e0" loc="97:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x2b9a8b0538f0" loc="90:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x2b9a8b056730" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x2b9a8b0557e0" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x2b9a8b0548e0" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x2b9a8b053120" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x2b9a8b055020" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:/home/zdenial/tinyos/tos/interfaces/State.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x2b9a8b0857f0" loc="71:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <documentation loc="68:/home/zdenial/tinyos/tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x2b9a8b087ce0" loc="56:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <documentation loc="53:/home/zdenial/tinyos/tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x2b9a8b085020" loc="66:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x2b9a8b086c40" loc="66:/home/zdenial/tinyos/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x2b9a8b0864a0" loc="61:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x2b9a8b08f9f0" loc="45:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <documentation loc="40:/home/zdenial/tinyos/tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x2b9a8b08f770" loc="45:/home/zdenial/tinyos/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x2b9a8b087500" loc="51:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <documentation loc="47:/home/zdenial/tinyos/tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x2b9a8b087280" loc="51:/home/zdenial/tinyos/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x2b9a8b0be020" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x2b9a8b0c09f0" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x2b9a8b0c0d40" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x2b9a8b0c1960" loc="93:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x2b9a8b0c1020" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x2b9a8b0c2820" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x2b9a8b0c2c00" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x2b9a8b0c72a0" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b9a8b0c7020" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x2b9a8b0c0270" loc="98:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x2b9a8b0c5d70" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x2b9a8b0c5af0" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x2b9a8b0c63e0" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2b9a8b0c6160" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x2b9a8b0bd270" loc="117:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x2b9a8b0c2020" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x2b9a8b0c3c50" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x2b9a8b0bea20" loc="112:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x2b9a8b0c6b60" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x2b9a8b00b360"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x2b9a8b00bac0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x2b9a8b0c5390" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x2b9a8b0c8850" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2b9a8b0c79f0" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x2b9a8b0c3530" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/home/zdenial/tinyos/tos/interfaces/Read.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x2b9a8b0bcc60" loc="49:/home/zdenial/tinyos/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b9a8b0bcc60"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x2b9a8b0b9560" loc="55:/home/zdenial/tinyos/tos/interfaces/Read.nc">
        <documentation loc="50:/home/zdenial/tinyos/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2b9a8b0b82f0" loc="63:/home/zdenial/tinyos/tos/interfaces/Read.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b9a8b0bcc60"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2b9a8b0b9ce0" loc="63:/home/zdenial/tinyos/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x2b9a8b0b8060" loc="63:/home/zdenial/tinyos/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b9a8b0bcc60"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2b9a8b125520" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b9a8a58c090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b9a8b1252a0" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b9a8b124030" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b9a8a58c090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b9a8b125d80" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:/home/zdenial/tinyos/tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:/home/zdenial/tinyos/tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x2b9a8b0f8640" loc="48:/home/zdenial/tinyos/tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:/home/zdenial/tinyos/tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x2b9a8b00b360"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x2b9a8b00bac0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b9a8b0fa8b0" loc="56:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b9a8b0fa8b0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b9a8b0faaf0" loc="56:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9a8b0faaf0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b9a8b0f2800" loc="109:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9a8b0faaf0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b9a8b0f47e0" loc="78:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2b9a8b0f3e10" loc="103:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9a8b0faaf0"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9a8b0faaf0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b9a8b0f3840" loc="103:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9a8b0faaf0"/></type-var>
          </variable>
          <variable name="dt" ref="0x2b9a8b0f3b80" loc="103:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9a8b0faaf0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b9a8b0f3020" loc="88:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2b9a8b0f0020" loc="116:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9a8b0faaf0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b9a8b0f5680" loc="66:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9a8b0faaf0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b9a8b0f5400" loc="66:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9a8b0faaf0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b9a8b0f4020" loc="73:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x2b9a8b0e20e0" loc="50:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x2b9a8a5c7970"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x2b9a8b0e1070" loc="60:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x2b9a8b0e28c0" loc="55:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b9a8a5c7590"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x2b9a8b0e4860" loc="45:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b9a8a5c7590"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b9a8a5c7970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x2b9a8b0e4280" loc="45:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b9a8a5c7590"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2b9a8b0e45d0" loc="45:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b9a8a5c7970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x2b9a8b11e760" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b9a8a58c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2b9a8b0de840" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b9a8a58c090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2b9a8b0e89b0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2b9a8b0de250" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b9a8b0de5a0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b9a8b127020" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b9a8a58c090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2b9a8b0dd150" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2b9a8b0dd9c0" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b9a8b0ddd10" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2b9a8b0e67e0" loc="68:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2b9a8b0e6020" loc="61:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x2b9a8b0e7720" loc="54:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x2b9a8b0eadc0" loc="53:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x2b9a8b2e2030" loc="54:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2b9a8b2e11f0" loc="66:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2b9a8b2e29d0" loc="61:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2b9a8b2e2750" loc="61:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x2b9a8b2e47a0" loc="53:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2b9a8b2bf020" loc="52:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b9a8b2beac0" loc="72:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2b9a8b2c07c0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x2b9a8b2be2a0" loc="67:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x2b9a8b2be020" loc="67:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x2b9a8b2c0020" loc="42:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x2b9a8b2bf820" loc="59:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x2b9a8b4042b0" loc="24:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x2b9a8b404b00" loc="31:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x2b9a8b403390" loc="39:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x2b9a8b434b60" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b9a8b434580" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b9a8b4348d0" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x2b9a8b42edd0" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b9a8b42e490" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b9a8b42e7e0" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b9a8b42eb30" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b9a8b4306b0" loc="82:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b9a8a58c090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b9a8b4300d0" loc="82:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b9a8b430420" loc="82:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x2b9a8b435730" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b9a8a58c090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b9a8b435150" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b9a8b4354a0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2b9a8b4312c0" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b9a8b432930" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b9a8b432c80" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b9a8b431020" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b9a8b414cf0" loc="70:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2b9a8b414380" loc="70:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2b9a8b414710" loc="70:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b9a8b414a50" loc="70:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b9a8b4693c0" loc="82:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2b9a8b46a6a0" loc="82:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2b9a8b46aa30" loc="82:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b9a8b46ad70" loc="82:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b9a8b469110" loc="83:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/home/zdenial/tinyos/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x2b9a8b418c90" loc="45:/home/zdenial/tinyos/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/home/zdenial/tinyos/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x2b9a8b418a10" loc="45:/home/zdenial/tinyos/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x2b9a8b4e5120" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><union-ref ref="0x2b9a8a8e3020"/>
              <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x2b9a8a8e3440"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x2b9a8b4edd70" loc="62:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b9a8b4edaf0" loc="62:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x2b9a8b4e92a0" loc="74:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b9a8b4e9020" loc="74:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x2b9a8b4ea610" loc="68:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b9a8b4e9d30" loc="81:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b9a8b4e9ab0" loc="81:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableOwnAddress" ref="0x2b9a8b5589d0" loc="80:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x2b9a8b56a420" loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x2b9a8b55f620" loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b9a8b55f3a0" loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x2b9a8b573af0" loc="11:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x2b9a8b55cc50" loc="71:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x2b9a8b5645e0" loc="49:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x2b9a8b56b540" loc="28:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x2b9a8b5692d0" loc="34:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x2b9a8b56d500" loc="25:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x2b9a8b56d280" loc="25:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x2b9a8b56fa10" loc="21:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x2b9a8b566070" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x2b9a8b55d550" loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x2b9a8b558270" loc="78:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x2b9a8b560c30" loc="61:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x2b9a8b553350" loc="91:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x2b9a8b5509d0" loc="100:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x2b9a8b572980" loc="14:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x2b9a8b5688b0" loc="38:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x2b9a8b5651f0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x2b9a8b56ddc0" loc="27:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x2b9a8b5758c0" loc="7:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x2b9a8b560460" loc="58:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b9a8b5601e0" loc="58:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x2b9a8b575190" loc="6:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x2b9a8b55c4d0" loc="69:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x2b9a8b557190" loc="81:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x2b9a8b552b00" loc="94:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x2b9a8b550270" loc="97:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x2b9a8b55bb90" loc="74:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x2b9a8b5578c0" loc="83:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x2b9a8b55fdb0" loc="65:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x2b9a8b555390" loc="87:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x2b9a8b5710e0" loc="15:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x2b9a8b5637e0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x2b9a8b5567b0" loc="86:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x2b9a8b55aac0" loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x2b9a8b565de0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x2b9a8b565b60" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x2b9a8b5512d0" loc="95:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x2b9a8b561a60" loc="57:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x2b9a8b55b420" loc="72:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x2b9a8b573390" loc="8:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2b9a8a915b90"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x2b9a8a914020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x2b9a8b573110" loc="8:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2b9a8a915b90"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x2b9a8a914020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x2b9a8b568190" loc="37:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x2b9a8b56f2a0" loc="19:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2b9a8b56f020" loc="19:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x2b9a8b5669d0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b9a8b566750" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x2b9a8b555b60" loc="90:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x2b9a8b56eb50" loc="24:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x2b9a8b571850" loc="18:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x2b9a8b5612a0" loc="54:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x2b9a8b561020" loc="54:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9a89a05520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x2b9a8b572270" loc="12:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x2b9a8b556020" loc="84:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x2b9a8b55a350" loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x2b9a8b55dcc0" loc="68:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x2b9a8b563020" loc="50:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x2b9a8b564d30" loc="50:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x2b9a8b5699f0" loc="35:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x2b9a8b56bc80" loc="29:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x2b9a8b551a40" loc="96:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x2b9a8b56e3c0" loc="22:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2b9a8b56e140" loc="22:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x2b9a8b553b10" loc="92:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x2b9a8b56ab50" loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x2b9a8b552350" loc="93:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:/home/zdenial/tinyos/tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:/home/zdenial/tinyos/tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2b9a8b802620" loc="13:/home/zdenial/tinyos/tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b9a8b8023a0" loc="13:/home/zdenial/tinyos/tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2b9a8b7eebc0" loc="10:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x2b9a8b7ee280" loc="10:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x2b9a8b7ee5f0" loc="10:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b9a8b7ee920" loc="10:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b9a8b7ed960" loc="11:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b9a8b7ed3a0" loc="11:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b9a8b7ed6d0" loc="11:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b9a8b7d7730" loc="59:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b9a8b7d7730"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b9a8b7d7970" loc="59:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9a8b7d7970"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x2b9a8b83b4d0" loc="66:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9a8b7d7970"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b9a8b83b250" loc="66:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9a8b7d7970"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x2b9a8b8435e0" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2b9a8b8849e0" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x2b9a8b884020" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x2b9a8b884750" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x2b9a8b8857f0" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x2b9a8b885020" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2b9a8b888d40" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x2b9a8b89a2a0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9a89a05160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9a8b89a020" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x2b9a8b89b2a0" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9a8a0da090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9a8b89b020" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b9a8b8972a0" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9a8b897020" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b9a8b8982a0" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9a8b898020" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9a8a5d93c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9a8a5d8a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/zdenial/tinyos/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b9a8ba1d910" loc="53:/home/zdenial/tinyos/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b9a8ba1d910"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b9a8ba1a270" loc="61:/home/zdenial/tinyos/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9a89a05920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/home/zdenial/tinyos/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x2b9a8bbb2600" loc="53:/home/zdenial/tinyos/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b9a8bbb2600"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x2b9a8bbae2a0" loc="64:/home/zdenial/tinyos/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9a8a0e9980"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b9a8bbb2600"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x2b9a8bbae020" loc="64:/home/zdenial/tinyos/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b9a8bbb2600"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
