<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="9:TestC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2ad34f5aa9a0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2ad34f555cd0"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2ad34f555cd0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2ad34f7a2590"/></to>
    </wire>
    <wire loc="10:TestC.nc">
      <from><interface-ref name="TDMALink" scoped="" ref="0x2ad34f5a5540"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2ad34f5fe550"/></to>
    </wire>
    <wire loc="61:TDMALinkC.nc">
      <from><interface-ref name="Control" scoped="" ref="0x2ad34f5fe550"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2ad34f7d6640"/></to>
    </wire>
    <wire loc="11:TestC.nc">
      <from><interface-ref name="TDMALinkSnd" scoped="" ref="0x2ad34f5ba1a0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ad34f7dcae0"/></to>
    </wire>
    <wire loc="58:TDMALinkC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ad34f7dcae0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ad34f7d5490"/></to>
    </wire>
    <wire loc="12:TestC.nc">
      <from><interface-ref name="TDMALinkRcv" scoped="" ref="0x2ad34f5b5b50"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ad34f7dc490"/></to>
    </wire>
    <wire loc="55:TDMALinkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ad34f7dc490"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ad350ff4650"/></to>
    </wire>
    <wire loc="15:TestC.nc">
      <from><interface-ref name="DataTimer" scoped="" ref="0x2ad34f5c4240"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2ad350fe7870"/></to>
    </wire>
    <wire loc="9:Timer32C.nc">
      <from><interface-ref name="Timer32khz" scoped="" ref="0x2ad350fe7870"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2ad350f1a020"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:TestC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ad34f5c57e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ad34ffe4120"/></to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ad34ffe4120"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ad350003020"/></to>
    </wire>
    <wire loc="104:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ad34f5fa210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad350d0add0"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ad34f5fa210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad350c28b70"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ad34f5fa210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad350c47750"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ad34f5fa210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad350be9080"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ad34f5fa210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad350ada130"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ad34f5fa210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad3509ad620"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ad34f5fa210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad3508e9820"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ad34f5fa210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad35020f7e0"/></to>
    </wire>
    <wire loc="103:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ad34f5fa210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad3517c0a40"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ad34f5fa210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad3504f3020"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ad34f5fa210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad350146d60"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ad34f5fa210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad34fe73e60"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ad34f5fa210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad34fdfa780"/></to>
    </wire>
    <wire loc="103:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ad34f5fa210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad3514f5ca0"/></to>
    </wire>
    <wire loc="45:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ad34f5fa210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad34f88ac80"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2ad34f7a2c00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2ad34f0ba3a0"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2ad34f0ba3a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2ad34f510140"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2ad34f7c06c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad34f5f90f0"/></to>
    </wire>
    <wire loc="48:/home/zdenial/tinyos/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ad34f5f90f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad34f5f5360"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ad34f7c0dc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2ad34f5fa210"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x2ad34f5f5a70"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x2ad34f5f6910"/></to>
    </wire>
    <wire loc="46:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x2ad34f5f6910"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad34f617850"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2ad34f5f4190"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad34f60e4a0"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x2ad34f5f4870"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad34fcb1c40"/></to>
    </wire>
    <wire loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ad34f617850"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad34f6437e0"/></to>
    </wire>
    <wire loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x2ad34f631de0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x2ad34f642020"/></to>
    </wire>
    <wire loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2ad34f267080"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2ad34f641360"/></to>
    </wire>
    <wire loc="113:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x2ad34f6845a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2ad34f7526d0"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x2ad34f695020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2ad34f74bb30"/></to>
    </wire>
    <wire loc="108:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x2ad34f67b700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2ad34f731160"/></to>
    </wire>
    <wire loc="149:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x2ad34f6a7a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2ad34f757cb0"/></to>
    </wire>
    <wire loc="107:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x2ad34f682aa0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2ad34f732480"/></to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x2ad34f6ad020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2ad34f757020"/></to>
    </wire>
    <wire loc="170:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x2ad34f6a3a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2ad34f766cb0"/></to>
    </wire>
    <wire loc="154:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x2ad34f6905a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2ad34f777220"/></to>
    </wire>
    <wire loc="99:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x2ad34f686b10"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2ad34f6ef9d0"/></to>
    </wire>
    <wire loc="135:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x2ad34f6a9a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2ad34f7402f0"/></to>
    </wire>
    <wire loc="134:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x2ad34f68b3e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2ad34f741610"/></to>
    </wire>
    <wire loc="133:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x2ad34f6945a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2ad34f742220"/></to>
    </wire>
    <wire loc="115:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x2ad34f67a700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2ad34f7507a0"/></to>
    </wire>
    <wire loc="156:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x2ad34f6a6a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2ad34f7742f0"/></to>
    </wire>
    <wire loc="140:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x2ad34f693be0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2ad34f7616d0"/></to>
    </wire>
    <wire loc="114:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x2ad34f67d890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2ad34f751ac0"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x2ad34f674060"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ad34f6dac80"/></to>
    </wire>
    <wire loc="155:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x2ad34f6adda0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2ad34f776610"/></to>
    </wire>
    <wire loc="106:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x2ad34f66a0c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2ad34f734020"/></to>
    </wire>
    <wire loc="161:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x2ad34f68fa50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2ad34f76f6d0"/></to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x2ad34f699690"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2ad34f73aa90"/></to>
    </wire>
    <wire loc="142:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x2ad34f6a8a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2ad34f75e7a0"/></to>
    </wire>
    <wire loc="100:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x2ad34f67ecf0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2ad34f73bde0"/></to>
    </wire>
    <wire loc="141:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x2ad34f68a1f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2ad34f760ac0"/></to>
    </wire>
    <wire loc="163:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x2ad34f6a5a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2ad34f76d7a0"/></to>
    </wire>
    <wire loc="147:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x2ad34f6910c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2ad34f759b30"/></to>
    </wire>
    <wire loc="120:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x2ad34f6976c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ad34f6d2c80"/></to>
    </wire>
    <wire loc="162:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x2ad34f6acb80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2ad34f76eac0"/></to>
    </wire>
    <wire loc="128:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x2ad34f6aaa20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2ad34f748cb0"/></to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x2ad34f6aba20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2ad34f766020"/></to>
    </wire>
    <wire loc="127:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x2ad34f68c570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2ad34f748020"/></to>
    </wire>
    <wire loc="168:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x2ad34f68d020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2ad34f768b30"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x2ad34f6d7c20"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2ad34f6d75b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x2ad34f6d62f0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x2ad34f786aa0"/></to>
    </wire>
    <wire loc="96:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x2ad34f6d6940"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x2ad34f783260"/></to>
    </wire>
    <wire loc="102:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ad34f739930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ad34f6dac80"/></to>
    </wire>
    <wire loc="103:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2ad34f737020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2ad34f6d75b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ad34f730020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ad34f6dac80"/></to>
    </wire>
    <wire loc="110:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2ad34f72f7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2ad34f6d75b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ad34f74f610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ad34f6dac80"/></to>
    </wire>
    <wire loc="117:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2ad34f74ec50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2ad34f6d75b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x2ad34f6f4c20"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2ad34f6f45b0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x2ad34f6f32f0"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x2ad34f7839f0"/></to>
    </wire>
    <wire loc="123:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x2ad34f6f3940"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x2ad34f782240"/></to>
    </wire>
    <wire loc="129:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ad34f747b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ad34f6d2c80"/></to>
    </wire>
    <wire loc="130:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2ad34f7452f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2ad34f6f45b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ad34f765160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ad34f6d2c80"/></to>
    </wire>
    <wire loc="137:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2ad34f7647a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2ad34f6f45b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ad34f75d610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ad34f6d2c80"/></to>
    </wire>
    <wire loc="144:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2ad34f75cc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2ad34f6f45b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ad34f756b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ad34f6d2c80"/></to>
    </wire>
    <wire loc="151:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2ad34f7542f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2ad34f6f45b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ad34f773160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ad34f6d2c80"/></to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2ad34f7727a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2ad34f6f45b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ad34f76c610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ad34f6d2c80"/></to>
    </wire>
    <wire loc="165:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2ad34f76bc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2ad34f6f45b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ad34f78ab40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ad34f6d2c80"/></to>
    </wire>
    <wire loc="172:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2ad34f7882f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2ad34f6f45b0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2ad34f0501d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ad34f50e040"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2ad34f50b5d0"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2ad34f12a2d0"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ad350ff4650"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ad34ffe6210"/>
      <arguments>
        <value cst="I:133">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2ad34f5a01b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="19:TDMALinkC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ad34f7d3800"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ad34ffe4120"/></to>
    </wire>
    <wire loc="20:TDMALinkC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x2ad34f7f4470"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ad34ffe8020"/></to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2ad34ffe8020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ad350008680"/></to>
    </wire>
    <wire loc="21:TDMALinkC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2ad34f7ec880"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2ad350ce9020"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2ad350ce9020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2ad350ce4080"/></to>
    </wire>
    <wire loc="25:TDMALinkC.nc">
      <from><interface-ref name="TSPacket" scoped="" ref="0x2ad34f805de0"/></from>
      <to><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x2ad350ddfc50"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x2ad350ddfc50"/></from>
      <to><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x2ad350e46b90"/></to>
    </wire>
    <wire loc="26:TDMALinkC.nc">
      <from><interface-ref name="SyncSnd" scoped="" ref="0x2ad34f7f3290"/></from>
      <to><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x2ad350de3aa0"/>
      <arguments>
        <value cst="I:130">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:TDMALinkC.nc">
      <from><interface-ref name="SyncRcv" scoped="" ref="0x2ad34f7e10b0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ad350de85c0"/>
      <arguments>
        <value cst="I:130">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:TDMALinkC.nc">
      <from><interface-ref name="JoinReqRandom" scoped="" ref="0x2ad34f800ca0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2ad350befa20"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2ad350befa20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2ad350be7a20"/></to>
    </wire>
    <wire loc="33:TDMALinkC.nc">
      <from><interface-ref name="JoinReqDelayTimer" scoped="" ref="0x2ad34f803710"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2ad350f23680"/></to>
    </wire>
    <wire loc="9:Timer32C.nc">
      <from><interface-ref name="Timer32khz" scoped="" ref="0x2ad350f23680"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2ad350f1a020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="37:TDMALinkC.nc">
      <from><interface-ref name="JoinReqSnd" scoped="" ref="0x2ad34f7fca70"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ad350f6cb30"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ad350f6cb30"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ad351a703b0"/></to>
    </wire>
    <wire loc="38:TDMALinkC.nc">
      <from><interface-ref name="JoinReqRcv" scoped="" ref="0x2ad34f7fb820"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ad350f5f800"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ad350f5f800"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ad34ffe6210"/>
      <arguments>
        <value cst="I:131">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2ad34f5a01b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:TDMALinkC.nc">
      <from><interface-ref name="JoinAnsSnd" scoped="" ref="0x2ad34f7fa020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ad350f5a530"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ad350f5a530"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ad351af6920"/></to>
    </wire>
    <wire loc="43:TDMALinkC.nc">
      <from><interface-ref name="JoinAnsRcv" scoped="" ref="0x2ad34f7fad30"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ad350f53140"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ad350f53140"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ad34ffe6210"/>
      <arguments>
        <value cst="I:132">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2ad34f5a01b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:TDMALinkC.nc">
      <from><interface-ref name="DataSnd" scoped="" ref="0x2ad34f7f9400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ad350f4e020"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ad350f4e020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ad351aca140"/></to>
    </wire>
    <wire loc="51:TDMALinkC.nc">
      <from><interface-ref name="SlotScheduler" scoped="" ref="0x2ad34f81ad40"/></from>
      <to><interface-ref name="SlotScheduler" scoped="" ref="0x2ad350ff7900"/></to>
    </wire>
    <wire loc="13:SlotSchedulerC.nc">
      <from><interface-ref name="SlotScheduler" scoped="" ref="0x2ad350ff7900"/></from>
      <to><interface-ref name="SlotScheduler" scoped="" ref="0x2ad351b5cde0"/></to>
    </wire>
    <wire loc="42:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2ad34f88dd10"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2ad34f88a4f0"/></to>
    </wire>
    <wire loc="48:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="UartControl" scoped="" ref="0x2ad34f88b020"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2ad34f88c6a0"/></to>
    </wire>
    <wire loc="17:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2ad34f88c6a0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2ad34fdcb7a0"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2ad34f887bd0"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2ad34f8a3e10"/></to>
    </wire>
    <wire loc="14:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2ad34f8a3e10"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2ad34fdcd060"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x2ad34fdfb430"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x2ad34f8ae7f0"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2ad34fdcd060"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2ad34f910850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="13:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2ad34f8c6e10"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2ad34fdce0c0"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2ad34fdce0c0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2ad34f9111d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2ad34fdcd800"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2ad34fdc8080"/></to>
    </wire>
    <wire loc="19:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ad34fdc86f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ad34fdd0c00"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ad34fdd0c00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ad34f9198d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2ad34fdcf8f0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2ad351197c70"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2ad351197c70"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2ad34fce52c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2ad34f90ea40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2ad34fdcd800"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad351191d70"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad34f914450"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x2ad34f90f690"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ad351197020"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ad351197020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ad34fce6020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x2ad34f90b020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2ad3511915d0"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2ad3511915d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2ad34fce71d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad34f914450"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad34f9bfdc0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2ad34f910850"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2ad34f9bd890"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2ad34f9111d0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2ad34f9be6d0"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ad34f9198d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ad34f9bf020"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2ad34f9bb020"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2ad34f90ea40"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x2ad34f9bc230"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x2ad34f90f690"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x2ad34f9b6290"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x2ad34f90b020"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x2ad34f9bb690"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x2ad34f9d98b0"/></to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x2ad34f9d98b0"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x2ad34f9cf020"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2ad34f9b6c90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ad34fc879a0"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2ad34fc879a0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2ad34fc819d0"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2ad34f9b4dd0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ad34fc86970"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2ad34fc86970"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ad34fc9d2a0"/></to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2ad34f9d33b0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2ad34f9cbdc0"/></to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2ad34f9d9080"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2ad34f9d2710"/></to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x2ad34f9ee860"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x2ad34fac33f0"/></to>
    </wire>
    <wire loc="539:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x2ad34fac33f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fbbd100"/></to>
    </wire>
    <wire loc="92:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x2ad34f9c8800"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x2ad34fac13f0"/></to>
    </wire>
    <wire loc="540:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x2ad34fac13f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fbb9d10"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x2ad34f9ec800"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x2ad34fabf3f0"/></to>
    </wire>
    <wire loc="541:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x2ad34fabf3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fbb3740"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x2ad34f9ea800"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x2ad34faef3f0"/></to>
    </wire>
    <wire loc="543:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x2ad34faef3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fb7e740"/></to>
    </wire>
    <wire loc="95:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x2ad34f9e8800"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x2ad34fabd3f0"/></to>
    </wire>
    <wire loc="542:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x2ad34fabd3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fb83d10"/></to>
    </wire>
    <wire loc="442:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x2ad34fa63cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fb37d10"/></to>
    </wire>
    <wire loc="455:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x2ad34fa81cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fb73740"/></to>
    </wire>
    <wire loc="531:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x2ad34fad13d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fb65740"/></to>
    </wire>
    <wire loc="551:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x2ad34fae03e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fbefd10"/></to>
    </wire>
    <wire loc="532:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x2ad34facf3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fb60100"/></to>
    </wire>
    <wire loc="460:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x2ad34fa7dcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fb6ad10"/></to>
    </wire>
    <wire loc="473:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x2ad34fa9a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fba7740"/></to>
    </wire>
    <wire loc="486:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x2ad34faba020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fbae100"/></to>
    </wire>
    <wire loc="497:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x2ad34faa9020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fbf8740"/></to>
    </wire>
    <wire loc="535:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x2ad34fac93f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fb8c740"/></to>
    </wire>
    <wire loc="545:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x2ad34faed3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fbd4d10"/></to>
    </wire>
    <wire loc="557:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x2ad34fad83f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fbea740"/></to>
    </wire>
    <wire loc="445:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x2ad34fa5dcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fb29d10"/></to>
    </wire>
    <wire loc="536:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x2ad34fac73f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fb87100"/></to>
    </wire>
    <wire loc="450:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x2ad34fa59cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fb55100"/></to>
    </wire>
    <wire loc="463:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x2ad34fa77cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fb5cd10"/></to>
    </wire>
    <wire loc="476:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x2ad34fa94020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fb98740"/></to>
    </wire>
    <wire loc="489:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x2ad34fab4020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fbd8100"/></to>
    </wire>
    <wire loc="500:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x2ad34faa3020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fbea740"/></to>
    </wire>
    <wire loc="440:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x2ad34fa67cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fb0b740"/></to>
    </wire>
    <wire loc="453:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x2ad34fa85cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fb46260"/></to>
    </wire>
    <wire loc="466:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x2ad34fa70cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fb83d10"/></to>
    </wire>
    <wire loc="530:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x2ad34fad33f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fb65740"/></to>
    </wire>
    <wire loc="548:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x2ad34fae73e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fbfdd10"/></to>
    </wire>
    <wire loc="555:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x2ad34fada3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fbea740"/></to>
    </wire>
    <wire loc="471:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x2ad34fa9fcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fb793f0"/></to>
    </wire>
    <wire loc="484:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x2ad34fa8a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fbb9d10"/></to>
    </wire>
    <wire loc="495:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x2ad34faad020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fbca100"/></to>
    </wire>
    <wire loc="549:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x2ad34fae43e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fbf8740"/></to>
    </wire>
    <wire loc="538:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x2ad34fac53e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fbc2740"/></to>
    </wire>
    <wire loc="443:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x2ad34fa61cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fb32740"/></to>
    </wire>
    <wire loc="456:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x2ad34fa7fcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fb6e100"/></to>
    </wire>
    <wire loc="493:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x2ad34fab2020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fbd4d10"/></to>
    </wire>
    <wire loc="461:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x2ad34fa7bcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fb65740"/></to>
    </wire>
    <wire loc="474:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x2ad34fa98020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fba1100"/></to>
    </wire>
    <wire loc="487:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x2ad34fab8020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fbe2d10"/></to>
    </wire>
    <wire loc="498:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x2ad34faa7020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fbf3100"/></to>
    </wire>
    <wire loc="438:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x2ad34fa6de10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fb143f0"/></to>
    </wire>
    <wire loc="451:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x2ad34fa57cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fb51d10"/></to>
    </wire>
    <wire loc="464:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x2ad34fa74cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fb8c740"/></to>
    </wire>
    <wire loc="477:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x2ad34fa92020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fb93100"/></to>
    </wire>
    <wire loc="546:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x2ad34faeb3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fbcf740"/></to>
    </wire>
    <wire loc="552:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x2ad34fade3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fbea740"/></to>
    </wire>
    <wire loc="482:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x2ad34fa8e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fbc2740"/></to>
    </wire>
    <wire loc="441:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x2ad34fa65cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fb3c100"/></to>
    </wire>
    <wire loc="454:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x2ad34fa83cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fb42d10"/></to>
    </wire>
    <wire loc="467:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x2ad34faa1cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fb7e740"/></to>
    </wire>
    <wire loc="550:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x2ad34fae23e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fbf3100"/></to>
    </wire>
    <wire loc="472:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x2ad34fa9c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fbace00"/></to>
    </wire>
    <wire loc="485:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x2ad34fabc020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fbb3740"/></to>
    </wire>
    <wire loc="496:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x2ad34faab020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fbfdd10"/></to>
    </wire>
    <wire loc="444:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x2ad34fa5fcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fb2d100"/></to>
    </wire>
    <wire loc="494:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x2ad34fab0020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fbcf740"/></to>
    </wire>
    <wire loc="449:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x2ad34fa5bcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fb5a740"/></to>
    </wire>
    <wire loc="462:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x2ad34fa79cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fb60100"/></to>
    </wire>
    <wire loc="475:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x2ad34fa96020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fb9dd10"/></to>
    </wire>
    <wire loc="488:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x2ad34fab6020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fbdd740"/></to>
    </wire>
    <wire loc="499:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x2ad34faa5020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fbefd10"/></to>
    </wire>
    <wire loc="439:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x2ad34fa69cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fb10e00"/></to>
    </wire>
    <wire loc="452:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x2ad34fa87cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fb4c740"/></to>
    </wire>
    <wire loc="465:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x2ad34fa72cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fb87100"/></to>
    </wire>
    <wire loc="478:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x2ad34fa90020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fbc7d10"/></to>
    </wire>
    <wire loc="534:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x2ad34facb3d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fb5cd10"/></to>
    </wire>
    <wire loc="547:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x2ad34fae93e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fbca100"/></to>
    </wire>
    <wire loc="533:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x2ad34facd3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fb5cd10"/></to>
    </wire>
    <wire loc="483:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x2ad34fa8c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fbbd100"/></to>
    </wire>
    <wire loc="554:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x2ad34fadc3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fbefd10"/></to>
    </wire>
    <wire loc="558:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x2ad34fb0a3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fbd8100"/></to>
    </wire>
    <wire loc="529:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x2ad34fad5060"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad34fb6ad10"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2ad34fc819d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ad34fc7ab80"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2ad34fca7c50"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2ad34f6976c0"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ad34fcb1c40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad34fca0c40"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2ad34fc95910"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x2ad34fcb4360"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2ad34fcb4360"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2ad34fcae710"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2ad34fc9bb10"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x2ad34fcb36a0"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2ad34fcb36a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2ad34fcd51d0"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2ad34fc9ae30"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x2ad34fcb29c0"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2ad34fcb29c0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2ad34fcd1d70"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2ad34fcd9930"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x2ad34faba020"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2ad34fcd4480"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x2ad34fab8020"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2ad34fccf020"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x2ad34fab6020"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x2ad351196be0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x2ad34f9d98b0"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad351196440"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad34fce5ad0"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad34fce5ad0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad34fd84400"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad34fce48a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad351191d70"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2ad34fce52c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2ad34fd85020"/></to>
    </wire>
    <wire loc="106:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2ad34fd85020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2ad3514f13a0"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x2ad34fce71d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2ad34fd1db60"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ad34fce6020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ad34fd86210"/></to>
    </wire>
    <wire loc="105:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ad34fd86210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ad3514f2540"/></to>
    </wire>
    <wire loc="108:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad34fd84400"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad35159f8b0"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x2ad34fd1cc20"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2ad34f9d33b0"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad34fd84cd0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad34fce48a0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad34fd0aa90"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad34fd84400"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad34fda89d0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad34fd857a0"/></to>
    </wire>
    <wire loc="107:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad34fd857a0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad3514f1b20"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2ad34fd7fb20"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2ad34f9d9080"/></to>
    </wire>
    <wire loc="109:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad35159e210"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad34fd84cd0"/></to>
    </wire>
    <wire loc="111:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2ad35159e9d0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2ad3514f4330"/></to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2ad35159bc50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ad34f0501d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2ad35156b3a0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2ad34fd7fb20"/></to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x2ad35156bb00"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x2ad34fda8400"/></to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad35156a0f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad34fda89d0"/></to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad35156ad00"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad34fda7720"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x2ad34fdfade0"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x2ad34fdfb430"/></to>
    </wire>
    <wire loc="44:/home/zdenial/tinyos/tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2ad34fdf0020"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2ad34f555cd0"/></to>
    </wire>
    <wire loc="47:/home/zdenial/tinyos/tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x2ad34fdf0740"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ad34fde8320"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2ad34fde8320"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ad34fe704e0"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2ad34fe704e0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ad34fe5e2f0"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ad34fde7370"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ad34fe10b40"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ad34fde5020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ad34fe77720"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ad34fde6530"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ad34fe799e0"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ad34fe149f0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ad34fe76400"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ad34fde5c90"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ad34fe78020"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ad34fe73e60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad34fe61c30"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2ad34fe6c940"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ad34fe1a490"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ad34fe76d90"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ad34fe6e020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2ad34fe75a50"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ad34fe6f4c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x2ad34fe6c020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x2ad34fffb6c0"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2ad34fe6e020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ad34ff98830"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ad34fe6f4c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ad34ff98110"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x2ad34ff97760"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x2ad34fe6c020"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2ad34fe9d8e0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ad34fe6c940"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2ad34ff95590"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ad34fe6c940"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2ad34ffd4c80"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ad34fe6c940"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2ad34ff960e0"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2ad34fe965c0"/></to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x2ad34ff969d0"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x2ad34fe9a130"/></to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x2ad34fe908e0"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x2ad34ffd8b70"/></to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x2ad34fe8f060"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2ad34f88c6a0"/></to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2ad34ffd5ca0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2ad34f8c6e10"/></to>
    </wire>
    <wire loc="332:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x2ad34fec2e40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ad34f0501d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x2ad34feb6d10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ad34f0501d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x2ad34fec5400"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ad34f0501d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x2ad34ff020c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ad34f0501d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x2ad34ff94c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ad34f0501d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x2ad34ff93480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ad34f0501d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2ad350008680"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ad3500ae340"/></to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ad34ffe7050"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ad3500077f0"/></to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ad3500077f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ad350d10da0"/></to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2ad34ffe6df0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2ad350004880"/></to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2ad350004880"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2ad350d0ec00"/></to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ad34ffe5450"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ad350002760"/></to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ad350002760"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ad350d888f0"/></to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2ad3500209e0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2ad350a75550"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2ad350a75550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2ad350a67a80"/></to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2ad3500148a0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2ad3500c0bb0"/></to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2ad3500c0bb0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2ad3500a7700"/></to>
    </wire>
    <wire loc="81:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ad34ffe6210"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ad350006b20"/></to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ad350006b20"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ad350d0e020"/></to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ad34ffe3800"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ad350000810"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ad350000810"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ad3500a8670"/></to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ad350003020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ad350d0d2d0"/></to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ad35001faf0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ad350a71660"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ad350a71660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ad350a63af0"/></to>
    </wire>
    <wire loc="97:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2ad3500ae340"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ad350cfeb80"/></to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2ad3500b8d40"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2ad350d86830"/></to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2ad3500b5500"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2ad350d87b50"/></to>
    </wire>
    <wire loc="92:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2ad3500c3970"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2ad3500a9740"/></to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2ad3500a9740"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2ad350a7b670"/></to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2ad3500a7700"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2ad350cfe080"/></to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ad3500a8670"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2ad350a786e0"/></to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2ad3500b7790"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2ad3500a62e0"/></to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2ad3500a62e0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2ad350ce9020"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2ad3500bfa80"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2ad3500a7080"/></to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2ad3500a7080"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2ad350a76a70"/></to>
    </wire>
    <wire loc="97:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x2ad350d7d0f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ad3500ad430"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ad350d85860"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x2ad3500aa350"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x2ad3500aa350"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x2ad350c74ca0"/></to>
    </wire>
    <wire loc="99:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2ad350d83690"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x2ad3500a90f0"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x2ad3500a90f0"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x2ad350c73a50"/></to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2ad350d7f4d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2ad350860b30"/></to>
    </wire>
    <wire loc="102:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2ad350d83ce0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2ad350a7b670"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2ad350a7b670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2ad350a6cd20"/></to>
    </wire>
    <wire loc="103:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ad350d82b70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ad350a760c0"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ad350a760c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ad350a68640"/></to>
    </wire>
    <wire loc="104:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2ad350d81610"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2ad350149550"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2ad350149550"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2ad35013f1a0"/></to>
    </wire>
    <wire loc="106:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x2ad350d7e1f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2ad3500eb990"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2ad3500eb990"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2ad3500e4020"/></to>
    </wire>
    <wire loc="109:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2ad350d7dd30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ad34fc86970"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2ad350cfeb80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x2ad350cfbd90"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2ad350a76a70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2ad350a67020"/></to>
    </wire>
    <wire loc="97:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x2ad350c74ca0"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x2ad350c69a20"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2ad350cfe080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2ad350cf72d0"/></to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x2ad3500ace70"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ad350c745f0"/></to>
    </wire>
    <wire loc="92:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ad350c745f0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x2ad350c69370"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2ad350a786e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2ad350a69c50"/></to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ad3500ad430"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ad350c76cb0"/></to>
    </wire>
    <wire loc="96:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ad350c76cb0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ad350c6b7b0"/></to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x2ad3500ac160"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ad350c75960"/></to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2ad350c75960"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x2ad350c6a4d0"/></to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x2ad3500ab560"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x2ad350c72170"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x2ad350c72170"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x2ad350c67020"/></to>
    </wire>
    <wire loc="98:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x2ad350c73a50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x2ad350c68840"/></to>
    </wire>
    <wire loc="98:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2ad350cfbd90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ad3500a59f0"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2ad3500a59f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ad3500e6690"/></to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ad350c716b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ad350c4c220"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2ad350c4c220"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ad350c4aa20"/></to>
    </wire>
    <wire loc="102:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ad350c4b020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ad350cea2a0"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2ad350cea2a0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ad350ce73b0"/></to>
    </wire>
    <wire loc="103:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ad350ce9d70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ad350d02cf0"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2ad350d02cf0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2ad350cfc860"/></to>
    </wire>
    <wire loc="104:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ad350cfc860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ad3500a2600"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2ad3500a2600"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ad3500e52e0"/></to>
    </wire>
    <wire loc="107:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2ad350c71020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ad350cff980"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ad350cff980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2ad350cfb690"/></to>
    </wire>
    <wire loc="108:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2ad350cfb690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ad350c2faa0"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ad350c2faa0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ad350c2be30"/></to>
    </wire>
    <wire loc="109:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2ad350c2c950"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ad3500eb300"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ad3500eb300"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ad3509b17c0"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ad3509b17c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ad3509ab020"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ad3500e4e60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ad350157020"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ad350157020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ad350140470"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x2ad3500db3f0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x2ad3501554b0"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x2ad3501554b0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x2ad35013d020"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2ad3500e26f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2ad3508f46d0"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2ad3500e26f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2ad3509b45c0"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2ad3509b45c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2ad3509adca0"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2ad3508f46d0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2ad3508e7020"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x2ad3500d32a0"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x2ad3508f1020"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x2ad3508f1020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ad3508e78c0"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x2ad3500da060"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2ad3508f1cb0"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2ad3508f1cb0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2ad3508e6650"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2ad3500d2e20"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2ad350a7b670"/></to>
    </wire>
    <wire loc="73:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ad3500ca430"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ad350a760c0"/></to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2ad3500dae80"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2ad350befa20"/></to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x2ad35010fbc0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2ad350bf1aa0"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2ad350bf1aa0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2ad3504f7280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2ad3500d9670"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ad34fc86970"/></to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x2ad35010a5d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ad34f0501d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x2ad35010b660"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ad34f0501d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x2ad35010c730"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ad34f0501d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x2ad350144890"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x2ad35013c500"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x2ad35017c790"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x2ad35020c220"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x2ad35020c220"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x2ad3502062e0"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2ad35017b9d0"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2ad35030c370"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2ad35030c370"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2ad3502ff1b0"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2ad350179ce0"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x2ad350309ce0"/></to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2ad350309ce0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2ad3502f0710"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x2ad350177020"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x2ad350306380"/></to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x2ad350306380"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2ad35033ad70"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x2ad350172c00"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x2ad350323210"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x2ad350323210"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x2ad350461a30"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2ad35015fb60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ad3507b5e20"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ad3507b5e20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ad35046c960"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2ad35015ebb0"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x2ad3507b17b0"/></to>
    </wire>
    <wire loc="132:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2ad3507b17b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2ad3501603b0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x2ad3507b0ae0"/></to>
    </wire>
    <wire loc="135:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2ad3507b0ae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2ad35015f440"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x2ad3507b2ad0"/></to>
    </wire>
    <wire loc="130:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2ad3507b2ad0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2ad350160ae0"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x2ad3507af160"/></to>
    </wire>
    <wire loc="136:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2ad3507af160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2ad350164420"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x2ad3507a7870"/></to>
    </wire>
    <wire loc="154:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2ad3507a7870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2ad350164cd0"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x2ad3507a4880"/></to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2ad3507a4880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2ad35016c5d0"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x2ad3507a30a0"/></to>
    </wire>
    <wire loc="159:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2ad3507a30a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2ad350163020"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x2ad3507abe50"/></to>
    </wire>
    <wire loc="147:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2ad3507abe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2ad3501638f0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x2ad3507aa670"/></to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2ad3507aa670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2ad350167e20"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x2ad350796500"/></to>
    </wire>
    <wire loc="184:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2ad350796500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ad3504bf8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2ad3501674a0"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x2ad350797ce0"/></to>
    </wire>
    <wire loc="183:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2ad350797ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ad3504bf8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2ad3501621e0"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x2ad3507a8e50"/></to>
    </wire>
    <wire loc="153:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2ad3507a8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2ad350162a80"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x2ad3507aae50"/></to>
    </wire>
    <wire loc="149:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2ad3507aae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2ad3501613c0"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x2ad3507a9e50"/></to>
    </wire>
    <wire loc="151:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2ad3507a9e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x2ad3501a8880"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ad3507eca80"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ad3507eca80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ad35046c960"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x2ad35015da10"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ad3508269e0"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ad3508269e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ad35046c960"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2ad35016d390"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2ad350860b30"/></to>
    </wire>
    <wire loc="100:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2ad350138970"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2ad35085fd30"/></to>
    </wire>
    <wire loc="23:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2ad35085fd30"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2ad350845310"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x2ad35019c2f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ad34f0501d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x2ad35019e410"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ad34f0501d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ad35020f7e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad350207a20"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ad350207a20"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad35160f8e0"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x2ad3502062e0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ad35160e180"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ad35160f8e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad351608a10"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2ad35160e180"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ad3516015f0"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ad351608a10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad35168a510"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2ad3515fbd20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ad3516072a0"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2ad3516072a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ad35168ada0"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2ad3515fe9b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ad350286020"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2ad350286020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ad3502805f0"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2ad351686020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2ad3515f11b0"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2ad3515f11b0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2ad3502374d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ad351685760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ad3515f08f0"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ad3515f08f0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ad350234280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2ad351683a80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2ad3515efc10"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2ad3515efc10"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2ad350233ba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2ad3502374d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2ad34f6976c0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ad350234280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x2ad34f695020"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2ad350233ba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x2ad34f68c570"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2ad3502374d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2ad34f6976c0"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ad350234280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x2ad34f693be0"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2ad350233ba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x2ad34f68a1f0"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2ad3502374d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2ad34f6976c0"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ad350234280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x2ad34f6910c0"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2ad350233ba0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x2ad34f6ad020"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2ad3502374d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2ad34f6976c0"/></to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ad350234280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x2ad34f6905a0"/></to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2ad350233ba0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x2ad34f6adda0"/></to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2ad3502374d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2ad34f6976c0"/></to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ad350234280"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x2ad34f68fa50"/></to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2ad350233ba0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x2ad34f6acb80"/></to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2ad3502374d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2ad34f6976c0"/></to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ad350234280"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x2ad34f68d020"/></to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2ad350233ba0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x2ad34f6aba20"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2ad3502b4950"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2ad34fc819d0"/></to>
    </wire>
    <wire loc="73:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x2ad35030b6a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2ad3502fbd70"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x2ad35030a9d0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2ad3502f5b70"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x2ad35030d0e0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2ad350304710"/></to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x2ad350307020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2ad3502eb1b0"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2ad350303930"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x2ad34fa63cc0"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2ad3502fe480"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x2ad34fa9a020"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2ad3502f8020"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x2ad34fa65cc0"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2ad3502f4de0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x2ad34fa6de10"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2ad3502ef930"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x2ad34fa92020"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2ad3502ea480"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x2ad34fa9c020"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2ad350338020"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x2ad34fa94020"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x2ad35031f5a0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2ad350360020"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x2ad350323e30"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x2ad350452a70"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ad350360ae0"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x2ad34f6945a0"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x2ad35035fda0"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x2ad34f6a9a20"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x2ad35035ec20"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x2ad34fa9c020"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x2ad350460610"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x2ad35034fc40"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x2ad35034fc40"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x2ad35038fa30"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x2ad350451610"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x2ad350351e70"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x2ad350351e70"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x2ad3503429d0"/></to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x2ad350345bc0"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x2ad350385bc0"/></to>
    </wire>
    <wire loc="73:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x2ad35034cbc0"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x2ad35038ca30"/></to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x2ad35034abc0"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x2ad35038aa30"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x2ad350355d20"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x2ad350391a30"/></to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x2ad350347bc0"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x2ad350387a30"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x2ad35034ebc0"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x2ad35038ea30"/></to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x2ad350344bc0"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x2ad350384bc0"/></to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x2ad350349bc0"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x2ad350389a30"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x2ad350350c80"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x2ad350390a30"/></to>
    </wire>
    <wire loc="81:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x2ad350346c40"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x2ad350386bc0"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x2ad35034dbc0"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x2ad35038da30"/></to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x2ad35034bbc0"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x2ad35038ba30"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x2ad350356dc0"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x2ad350392a30"/></to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x2ad350348bc0"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x2ad350388a30"/></to>
    </wire>
    <wire loc="131:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2ad3507b1160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2ad3507a5880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2ad35079d0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2ad3507a40a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2ad3507f9500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ad3504bf8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2ad350794500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ad3504bf8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2ad3507b0490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2ad35079a880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2ad350795500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ad3504bf8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2ad35079f880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2ad3507a10a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2ad3507b4a90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2ad3504c2680"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2ad3504c2680"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2ad3504bc930"/></to>
    </wire>
    <wire loc="138:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2ad3507afe00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2ad3507ae490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2ad350798c80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2ad3507aebe0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2ad350795ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ad3504bf8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2ad35079a0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2ad3507a9670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2ad35079b0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2ad35079d880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2ad35079b880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2ad350793ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ad3504bf8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2ad350794ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ad3504bf8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2ad3507a1880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2ad35079c0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2ad350796ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ad3504bf8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2ad3507a3880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2ad3507f9ce0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2ad3504c0630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2ad3507b2480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2ad3507ab670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2ad3507a8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2ad35079e0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2ad35079e880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2ad3507a50a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2ad3507ac2f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2ad3507ab020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2ad3507af7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2ad350797500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2ad350793500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ad3504bf8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2ad35079f0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2ad35079c880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2ad3507b1e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2ad3507a20a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2ad3507ac940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2ad3507a2880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2ad3507980a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2ad3507f89b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2ad3504c0630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x2ad3504c0630"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2ad3504b7bb0"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x2ad3504bf8c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ad3504b5020"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504b5db0"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ad35046c960"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ad3504b9810"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504b4ba0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x2ad3504af020"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2ad3504fb770"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2ad3504fb770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2ad3504f7280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2ad3504b2400"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ad350535c40"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ad350535c40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ad3516f2e70"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2ad3504b0080"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2ad3505348f0"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2ad3505348f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2ad3516ef2c0"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2ad3504a7680"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2ad350775020"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2ad350775020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2ad3516ee440"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2ad3504afdf0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ad34fc86970"/></to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x2ad3504a2120"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ad34f0501d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2ad3504f7280"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2ad3504f3b70"/></to>
    </wire>
    <wire loc="110:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2ad3516ee440"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2ad35051f850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2ad3516ef2c0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2ad350520020"/></to>
    </wire>
    <wire loc="105:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ad3516f2e70"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ad350523430"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2ad3516f0af0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2ad3516e55d0"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2ad3516e55d0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2ad3506c02c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2ad350520020"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2ad35057ca10"/></to>
    </wire>
    <wire loc="108:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2ad3516ef8d0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2ad3505206a0"/></to>
    </wire>
    <wire loc="92:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2ad3505206a0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2ad3505d7060"/></to>
    </wire>
    <wire loc="111:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2ad350579a40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2ad3516eebe0"/></to>
    </wire>
    <wire loc="115:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad351782a80"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad3505216b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x2ad35057a690"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ad3516e6860"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ad3516e6860"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ad3506c1020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x2ad3505782a0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2ad3516df020"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2ad3516df020"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2ad3506c34d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad3505216b0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad35057c250"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2ad35051f850"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2ad3505d7c50"/></to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ad350523430"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ad35057d470"/></to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2ad3505d53e0"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2ad350579a40"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x2ad3505d65b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x2ad35057a690"/></to>
    </wire>
    <wire loc="95:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x2ad3505d0480"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x2ad3505782a0"/></to>
    </wire>
    <wire loc="98:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x2ad3505d5a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x2ad3505c6020"/></to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x2ad3505c6020"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x2ad3505c0c70"/></to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2ad3505d0c20"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ad34fc86970"/></to>
    </wire>
    <wire loc="102:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x2ad3505ce2f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ad34f0501d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2ad3505c15e0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x2ad3505b7150"/></to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2ad3505c2d10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2ad3505b9780"/></to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x2ad3505e8bb0"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x2ad34fad33f0"/></to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x2ad3505e6b20"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x2ad34facf3f0"/></to>
    </wire>
    <wire loc="92:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x2ad3505e4b20"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x2ad34facd3f0"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x2ad3505e2b20"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x2ad34fac73f0"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x2ad3505e0b20"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x2ad34fac93f0"/></to>
    </wire>
    <wire loc="14:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x2ad3505edd10"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x2ad3506a0430"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2ad3516df7c0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x2ad3506c23f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x2ad3516dfdd0"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x2ad3506ad540"/></to>
    </wire>
    <wire loc="11:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x2ad3506ad540"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x2ad3506a0430"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x2ad3516e45a0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x2ad3505c6020"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad3516e5d70"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad3506c0ad0"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad3506c0ad0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad3506b6c30"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad3506bf8a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad351782a80"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2ad3506c02c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2ad3506b7850"/></to>
    </wire>
    <wire loc="106:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2ad3506b7850"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2ad3517bc020"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x2ad3506c34d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2ad3506bc060"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ad3506c1020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ad3506b8a80"/></to>
    </wire>
    <wire loc="105:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ad3506b8a80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ad3517bd270"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x2ad3506c23f0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x2ad3506bc990"/></to>
    </wire>
    <wire loc="108:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad3506b6c30"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad3517bb400"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad3506b4570"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad3506bf8a0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad3506bbe50"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad3506b6c30"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x2ad3506bb060"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2ad3505c2d10"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x2ad3506bb840"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2ad3505c15e0"/></to>
    </wire>
    <wire loc="107:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad3506b6020"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad3517bc7a0"/></to>
    </wire>
    <wire loc="109:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad3517bbcf0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad3506b4570"/></to>
    </wire>
    <wire loc="111:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2ad3517b9500"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2ad3517bf0a0"/></to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2ad3517b77a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ad34f0501d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x2ad350699250"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x2ad3505c0c70"/></to>
    </wire>
    <wire loc="18:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x2ad3506f7d40"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x2ad34fad33f0"/></to>
    </wire>
    <wire loc="19:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x2ad3506f5cb0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x2ad34facd3f0"/></to>
    </wire>
    <wire loc="153:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2ad3507dfc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2ad3507eada0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2ad3507e3b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2ad3507dd670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2ad3507d6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2ad3507dde50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2ad3507c92f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ad3504bf8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2ad3507cb2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ad3504bf8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2ad3507e7120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2ad3507d1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2ad3507cc2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ad3504bf8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2ad3507e1c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2ad3507e0c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2ad3507d7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2ad3507d9e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2ad3507dc670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2ad3507eb760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2ad3504c2680"/></to>
    </wire>
    <wire loc="138:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2ad3507e6aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2ad3507e5120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2ad3507d0a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2ad3507e5870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2ad3507ccad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ad3504bf8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2ad3507e7dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2ad3507d2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2ad3507e0480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2ad3507e1480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2ad3507ea750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2ad3507d3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2ad3507d5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2ad3507d2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2ad3507caad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ad3504bf8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2ad3507cbad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ad3504bf8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2ad3507d8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2ad3507d5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2ad3507cead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ad3504bf8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2ad3507da670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2ad3507c9ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2ad3504c0630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2ad3507ea100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2ad3507e3370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2ad3507df480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2ad3507d7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2ad3507dce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2ad3507d6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2ad3507de670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2ad3507e9450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2ad3507dee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2ad3507e4020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2ad3507e4cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2ad3507ce2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ad3504bf8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2ad3507cfad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ad3504bf8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2ad3507e6450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2ad3507cf2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2ad3507ca2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ad3504bf8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2ad3507d8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2ad3507d3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2ad3507e9aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2ad3507e7770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2ad3507dae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2ad3507e4670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2ad3507d9670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2ad3507d1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2ad3507c87a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2ad3504c0630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2ad350819c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2ad350823da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2ad35081cb50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2ad350816670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2ad35080fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2ad350816e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2ad3508022f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ad3504bf8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2ad3508052f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ad3504bf8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2ad350821120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2ad35080a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2ad3508062f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ad3504bf8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2ad35081bc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2ad35081ac60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2ad350810670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2ad350813e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2ad350815670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2ad350824760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2ad3504c2680"/></to>
    </wire>
    <wire loc="138:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2ad350820aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2ad35081f120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2ad350809a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2ad35081f870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2ad350806ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ad3504bf8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2ad350821dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2ad35080ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2ad35081a480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2ad35081b480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2ad350823750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2ad35080de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2ad35080e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2ad35080c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2ad350804ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ad3504bf8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2ad350805ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ad3504bf8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2ad350812670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2ad35080ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2ad350807ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ad3504bf8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2ad350814670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2ad350802ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2ad3504c0630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2ad350823100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2ad35081c370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2ad350819480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2ad350810e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2ad350815e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2ad35080f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2ad350817670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2ad350822450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2ad350817e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2ad35081d020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2ad35081dcc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2ad3508072f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ad3504bf8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2ad350808ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ad3504bf8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2ad350820450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2ad3508082f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2ad3508042f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ad3504bf8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2ad350812e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2ad35080d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2ad350822aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2ad350821770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2ad350814e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2ad35081d670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2ad350813670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2ad35080ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2ad3508017a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2ad3504c0630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x2ad3508428c0"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x2ad350837020"/></to>
    </wire>
    <wire loc="20:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x2ad350837020"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x2ad350831210"/></to>
    </wire>
    <wire loc="16:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x2ad350895cb0"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x2ad350885020"/></to>
    </wire>
    <wire loc="21:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x2ad350885020"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x2ad350882490"/></to>
    </wire>
    <wire loc="17:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0x2ad3508305b0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2ad3508a0a20"/></to>
    </wire>
    <wire loc="18:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x2ad3508858c0"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0x2ad3508865a0"/></to>
    </wire>
    <wire loc="11:/home/zdenial/tinyos/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0x2ad3508865a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2ad35089e9e0"/></to>
    </wire>
    <wire loc="18:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x2ad35087bb40"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x2ad3508c4020"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x2ad3508c4020"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x2ad3508c2d20"/></to>
    </wire>
    <wire loc="19:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x2ad350882d30"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2ad3508858c0"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2ad3508b1260"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x2ad3508ae890"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x2ad3508ae890"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ad3508a7060"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2ad3508a4190"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x2ad34f674060"/></to>
    </wire>
    <wire loc="9:/home/zdenial/tinyos/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2ad35089dc50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x2ad34fa85cc0"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x2ad3508ed9f0"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x2ad3508e55e0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x2ad3508ee190"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x2ad3508e5d70"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x2ad3508e47f0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x2ad35020c220"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x2ad3508d8500"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x2ad35030d0e0"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2ad3508d1820"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2ad35030c370"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x2ad3508d0b40"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x2ad350307020"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x2ad3508d9880"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x2ad35031f5a0"/></to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2ad3508ce020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ad350978c30"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ad350978c30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ad35046c960"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2ad3508ced10"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2ad3509778f0"/></to>
    </wire>
    <wire loc="125:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2ad3509778f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2ad3504c2680"/></to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2ad3508cb6d0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x2ad3509752f0"/></to>
    </wire>
    <wire loc="129:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2ad3509752f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2ad3508cbde0"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x2ad350974cc0"/></to>
    </wire>
    <wire loc="133:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2ad350974cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2ad350938530"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x2ad350973370"/></to>
    </wire>
    <wire loc="134:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2ad350973370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2ad350938c60"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x2ad350972d00"/></to>
    </wire>
    <wire loc="138:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2ad350972d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2ad3508cce00"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x2ad3509d9c60"/></to>
    </wire>
    <wire loc="151:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2ad3509d9c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2ad3508cd780"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x2ad3509c07a0"/></to>
    </wire>
    <wire loc="196:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2ad3509c07a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2ad3504c0630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2ad3508cc550"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2ad3509c52f0"/></to>
    </wire>
    <wire loc="186:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2ad3509c52f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ad3504bf8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2ad3509373e0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x2ad3509da480"/></to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2ad3509da480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2ad3509355e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x2ad3509d6e50"/></to>
    </wire>
    <wire loc="155:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2ad3509d6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2ad350934020"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x2ad3509d5670"/></to>
    </wire>
    <wire loc="156:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2ad3509d5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2ad350937e80"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x2ad35096f7b0"/></to>
    </wire>
    <wire loc="142:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2ad35096f7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2ad3509339c0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x2ad3509c3ad0"/></to>
    </wire>
    <wire loc="191:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2ad3509c3ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ad3504bf8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2ad350934890"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x2ad3509c42f0"/></to>
    </wire>
    <wire loc="188:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2ad3509c42f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ad3504bf8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2ad350933130"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x2ad3509c4ad0"/></to>
    </wire>
    <wire loc="189:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2ad3509c4ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ad3504bf8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x2ad35092ed40"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x2ad3509b4df0"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x2ad3509b4df0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x2ad3509ac550"/></to>
    </wire>
    <wire loc="98:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2ad3508e0a00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2ad350a7b670"/></to>
    </wire>
    <wire loc="99:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ad3508df9a0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ad350a760c0"/></to>
    </wire>
    <wire loc="100:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2ad3508de7c0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2ad350a75550"/></to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2ad3508d2b30"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2ad350a6d480"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2ad350a6d480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2ad350a5f8b0"/></to>
    </wire>
    <wire loc="104:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2ad3509316c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ad34fc86970"/></to>
    </wire>
    <wire loc="153:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2ad3509d8c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2ad350974020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2ad3509dbc70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2ad3509cee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2ad3509d5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2ad3509c12f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ad3504bf8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2ad3509ca670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2ad3509dac60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2ad3509cf670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2ad3509d2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2ad3509d4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2ad350971370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2ad3509c8a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2ad350971ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2ad3509c5ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ad3504bf8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2ad350972060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2ad3509cbe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2ad3509d9480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2ad350975940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2ad3509cce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2ad3509cd670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2ad3509cb670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2ad3509d1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2ad3509cde50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2ad3509c6ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ad3504bf8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2ad3509d3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2ad3509c1ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2ad3504c0630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2ad3509db490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2ad3509d8480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2ad3509cfe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2ad3509d4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2ad3509ce670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2ad3509d6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2ad350974670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2ad35096f160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2ad35096fe00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2ad3509c62f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ad3504bf8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2ad3509c7ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ad3504bf8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2ad3509726b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2ad3509c72f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2ad3509c32f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ad3504bf8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2ad3509d1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2ad3509cc670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2ad3509739c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2ad3509d3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2ad3509d2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2ad3509cae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x2ad3509b0020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x2ad3509ab7c0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2ad350a04150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ad34fc86970"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2ad3509aa020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2ad35030c370"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x2ad3509a9380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x2ad35030b6a0"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x2ad3509a86b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x2ad35030a9d0"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x2ad3509a7a50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x2ad350323e30"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2ad3509a66e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ad350bc7d00"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ad350bc7d00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ad35046c960"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2ad350a12530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x2ad350ba4ad0"/></to>
    </wire>
    <wire loc="195:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2ad350ba4ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2ad3504c0630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2ad350a11ad0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x2ad350bc16b0"/></to>
    </wire>
    <wire loc="137:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2ad350bc16b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2ad350a113a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x2ad350bc0370"/></to>
    </wire>
    <wire loc="139:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2ad350bc0370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2ad350a10330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2ad350a7b670"/></to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ad350a0f1e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ad350a760c0"/></to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2ad350a0dd70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2ad350a75550"/></to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2ad350a0fb90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2ad350149550"/></to>
    </wire>
    <wire loc="81:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2ad350a083e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x2ad350bb9e50"/></to>
    </wire>
    <wire loc="155:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2ad350bb9e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2ad350a08cb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x2ad350bb8670"/></to>
    </wire>
    <wire loc="156:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2ad350bb8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2ad350a09b10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x2ad350bbf160"/></to>
    </wire>
    <wire loc="141:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2ad350bbf160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2ad350a066d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x2ad350ba42f0"/></to>
    </wire>
    <wire loc="192:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2ad350ba42f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ad3504bf8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2ad350a07590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x2ad350ba62f0"/></to>
    </wire>
    <wire loc="188:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2ad350ba62f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ad3504bf8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2ad350a07e00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x2ad350ba6ad0"/></to>
    </wire>
    <wire loc="189:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2ad350ba6ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ad3504bf8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2ad350a05020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2ad350ba7ad0"/></to>
    </wire>
    <wire loc="187:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2ad350ba7ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ad3504bf8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2ad350a058b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x2ad350bc5300"/></to>
    </wire>
    <wire loc="129:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2ad350bc5300"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x2ad3509f89d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ad34f0501d0"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2ad350ae17c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ad350286020"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x2ad350a5a820"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2ad350aea4e0"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x2ad350a5cb80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2ad350ad4610"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2ad350ad4610"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2ad350b752b0"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2ad350ad9020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ad350b83150"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ad350ada130"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad350b17020"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ad350b17020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad3518d59d0"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2ad350b7d640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ad350b5e2f0"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2ad350b59850"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ad350b17870"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2ad350b17870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ad3518cf5f0"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2ad350b73690"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ad350ac5b70"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2ad350ac5b70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ad350abd610"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ad3518d59d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad3518b9360"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2ad3518c9d20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ad3518d4260"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2ad3518d4260"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ad3518b9bf0"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2ad3518cb9b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ad350ac5b70"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2ad3518b5dd0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2ad3518be020"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2ad3518be020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2ad3502374d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ad3518b3440"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ad3518bd760"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ad3518bd760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ad350234280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2ad3518b2760"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2ad3518bca80"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2ad3518bca80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2ad350233ba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2ad350b2cb90"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2ad34fc819d0"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x2ad350b559c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ad34f0501d0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2ad350b78a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ad34f0501d0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ad350b6a8c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2ad350bd62c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2ad350bd62c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2ad350ad9020"/></to>
    </wire>
    <wire loc="153:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2ad350bbac60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2ad350bc4020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2ad350bbec70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2ad350bb1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2ad350bb8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2ad350bc3370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2ad350bac670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2ad350ba72f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ad3504bf8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2ad350bbcc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2ad350bbbc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2ad350bb2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2ad350bb4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2ad350bb7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2ad350bc6970"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2ad3504c2680"/></to>
    </wire>
    <wire loc="138:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2ad350bc1d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2ad350baba70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2ad350bc0ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2ad350bc1060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2ad350bade50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2ad350bbb480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2ad350bbc480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2ad350bc5950"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2ad350baee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2ad350bb0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2ad350bad670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2ad350ba5ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ad3504bf8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2ad350bb3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2ad350bb0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2ad350ba9ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ad3504bf8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2ad350bb5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2ad350bbe490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2ad350bba480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2ad350bb2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2ad350bb7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2ad350bb1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2ad350bb9670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2ad350bc4670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2ad350bbfe00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2ad350ba92f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ad3504bf8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2ad350baaad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ad3504bf8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2ad350baa2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2ad350ba52f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ad3504bf8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2ad350bb3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2ad350bae670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2ad350bc4cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2ad350bc39c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2ad350bb5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2ad350bbf7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2ad350bb4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2ad350bace50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2ad350ba37a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2ad3504c0630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x2ad350bec920"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x2ad350be9940"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ad350bf39a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad350be9080"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ad350c47e60"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2ad350c4b020"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2ad350c46ae0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2ad350c48690"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2ad350c48690"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2ad3504f7280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2ad350c458f0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2ad350befa20"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ad350c44170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ad350a760c0"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x2ad350c2c200"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x2ad350c28570"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2ad350c273f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2ad350c2c950"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ad350c27a70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ad350a760c0"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ad350c67d70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2ad350c716b0"/></to>
    </wire>
    <wire loc="95:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2ad350c66b10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2ad350c71020"/></to>
    </wire>
    <wire loc="100:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2ad350c652f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2ad350a7b670"/></to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ad350c64170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ad350a760c0"/></to>
    </wire>
    <wire loc="102:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2ad350c64b70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2ad350d09410"/></to>
    </wire>
    <wire loc="184:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x2ad350cb0db0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ad34f0501d0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x2ad350cfd800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2ad350cf8580"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2ad350cf8580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2ad3504f7280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ad350ce4dd0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2ad350ce9d70"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x2ad350ce3af0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2ad350d29350"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2ad350d29350"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2ad3504f7280"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="DelayTimer" scoped="" ref="0x2ad350ce1650"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ad350d27750"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ad350d27750"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2ad350bd62c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ad350ce29a0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2ad350a786e0"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ad350cdca30"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ad350a760c0"/></to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <from><interface-ref name="send" scoped="" ref="0x2ad350cd92a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ad34f0501d0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2ad350deb580"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ad350008680"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x2ad350dd6060"/></from>
      <to><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x2ad350e43910"/></to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ad350de77e0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ad350dc8340"/></to>
    </wire>
    <wire loc="98:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2ad350de71d0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2ad350e3f2c0"/></to>
    </wire>
    <wire loc="95:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2ad350de4640"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2ad3500c0bb0"/></to>
    </wire>
    <wire loc="73:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x2ad350ddce50"/></from>
      <to><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x2ad350dcc4d0"/></to>
    </wire>
    <wire loc="97:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ad350de85c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ad350e416b0"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ad350de5b20"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ad350000810"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x2ad350de3aa0"/></from>
      <to><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x2ad350dd2c10"/></to>
    </wire>
    <wire loc="99:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ad350de6470"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ad350dc7020"/></to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ad350e3fa00"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ad350f43020"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ad350f43020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ad3519f4cb0"/></to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubAMPacket" scoped="" ref="0x2ad350e3d6a0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ad350f428b0"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ad350f428b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ad3519f2590"/></to>
    </wire>
    <wire loc="81:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2ad350e3e800"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ad350f43c30"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ad350f43c30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ad3519f3930"/></to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2ad350e3a130"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2ad350a75550"/></to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ad350e36270"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ad350a71660"/></to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2ad350e32020"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2ad350a6d480"/></to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2ad350f3bb30"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ad350286020"/></to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x2ad350e32d30"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2ad350f3c830"/></to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x2ad350e30060"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2ad350f37e60"/></to>
    </wire>
    <wire loc="26:/home/zdenial/tinyos/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2ad350f37e60"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2ad350ad4610"/></to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2ad350e2f0f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ad34fc86970"/></to>
    </wire>
    <wire loc="100:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2ad350e3ce60"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ad34ffe6210"/>
      <arguments>
        <value cst="I:61">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubSnoop" scoped="" ref="0x2ad350e3b550"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2ad34ffe6df0"/>
      <arguments>
        <value cst="I:61">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ad3519f4cb0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ad3519e6660"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ad3519f3930"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ad34ffe5450"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ad3519f2590"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ad34ffe4120"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2ad350f40020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2ad3519f0c10"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2ad3519f0c10"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ad34ffe3800"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2ad3519e5460"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ad350ea2940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ad3519e40e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ad34ffe4120"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2ad350ea2940"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ad350ed74b0"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ad350ed6400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ad34ffe7050"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ad350ed5060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ad34ffe4120"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ad350ed4720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ad34ffe5450"/></to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x2ad350ed3480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ad34f0501d0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x2ad350ed3c60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ad34f0501d0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:Timer32P.nc">
      <from><interface-ref name="Timer32khz" scoped="" ref="0x2ad350f1a020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ad350f84d70"/></to>
    </wire>
    <wire loc="12:Timer32P.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2ad350f7d3b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ad350f0d470"/></to>
    </wire>
    <wire loc="13:Timer32P.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2ad350f08b10"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ad350f13a00"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2ad350f13a00"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ad351a40890"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ad350f131b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad351a47b10"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ad351a47b10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad351a2a660"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2ad351a390a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ad351a464f0"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2ad351a464f0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ad351a29020"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2ad351a3cc00"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ad350286020"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2ad351a25190"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2ad351a2f450"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2ad351a2f450"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2ad3502374d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ad351a24770"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ad351a2ea80"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ad351a2ea80"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ad350234280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2ad351a23a80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2ad351a2dda0"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2ad351a2dda0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2ad350233ba0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x2ad350f87cc0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ad34f0501d0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2ad350f78650"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ad34f0501d0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ad351a703b0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ad351b14640"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ad350f6b8b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ad351a6f020"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ad351a6f020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ad34ffe5450"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ad350f6a590"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ad351a6fc30"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ad351a6fc30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ad34ffe4120"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2ad350f69c10"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2ad351a6d2b0"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2ad351a6d2b0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ad34ffe3800"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2ad351b122e0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ad350ea2940"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ad351b11020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ad34ffe4120"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ad350f5fdd0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ad34ffe5450"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ad350f5ea10"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ad34ffe4120"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ad351af6920"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ad351ae9b20"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ad350f59270"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ad351af5590"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ad351af5590"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ad34ffe5450"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ad350f59e80"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ad351af4270"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ad351af4270"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ad34ffe4120"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2ad350f575d0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2ad351af38f0"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2ad351af38f0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ad34ffe3800"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2ad351ae8910"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ad350ea2940"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ad351ae7590"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ad34ffe4120"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ad350f53710"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ad34ffe5450"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ad350f52400"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ad34ffe4120"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ad351aca140"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ad351abd390"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ad350f4ec30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ad351acad50"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ad351acad50"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ad34ffe5450"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ad350f4d8b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ad351ac9990"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ad351ac9990"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ad34ffe4120"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2ad350f4b020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2ad351ac7120"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2ad351ac7120"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ad34ffe3800"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2ad351b6f060"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ad350ea2940"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ad351b6fc70"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ad34ffe4120"/></to>
    </wire>
    <wire loc="9:SlotSchedulerC.nc">
      <from><interface-ref name="EpochTimer" scoped="" ref="0x2ad351b5a0a0"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2ad351b48220"/></to>
    </wire>
    <wire loc="9:Timer32C.nc">
      <from><interface-ref name="Timer32khz" scoped="" ref="0x2ad351b48220"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2ad350f1a020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="10:SlotSchedulerC.nc">
      <from><interface-ref name="StartSlotTimer" scoped="" ref="0x2ad351b55570"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2ad351b428b0"/></to>
    </wire>
    <wire loc="9:Timer32C.nc">
      <from><interface-ref name="Timer32khz" scoped="" ref="0x2ad351b428b0"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2ad350f1a020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="11:SlotSchedulerC.nc">
      <from><interface-ref name="EndSlotTimer" scoped="" ref="0x2ad351b509f0"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2ad351b3b020"/></to>
    </wire>
    <wire loc="9:Timer32C.nc">
      <from><interface-ref name="Timer32khz" scoped="" ref="0x2ad351b3b020"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2ad350f1a020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ad350ff4c20"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ad34ffe5450"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ad350ff38b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ad34ffe4120"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="TestP" loc="7:TestP.nc">
      <module/>
    </component>
    <component qname="MainC" loc="56:/home/zdenial/tinyos/tos/system/MainC.nc">
      <documentation loc="45:/home/zdenial/tinyos/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:/home/zdenial/tinyos/tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:/home/zdenial/tinyos/tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:/home/zdenial/tinyos/tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:/home/zdenial/tinyos/tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/zdenial/tinyos/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/zdenial/tinyos/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/zdenial/tinyos/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="TDMALinkC" loc="9:TDMALinkC.nc">
      <configuration/>
    </component>
    <component qname="TDMALinkP" loc="21:TDMALinkP.nc">
      <module/>
    </component>
    <component qname="SerialPrintfC" loc="36:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Kevin Klues&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialPrintfP" loc="36:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
        <short> &#10; </short>
        <long> &#10; @author David Moss&#10; @author Kevin Klues&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="2:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <instance number="0">
        <component-ref qname="Msp430Uart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P.UartP" loc="41(Msp430Uart1P.UartP):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="73:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <documentation loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
        <short>&#10; Implementation of USART1 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART1 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/zdenial/tinyos/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/zdenial/tinyos/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="40(PlatformSerialC.UartC.UsartC):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="89(Msp430UsartShare1P.ArbiterC):/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="52(Msp430UsartShare1P.ArbiterC.Arbiter):/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TelosSerialP" loc="1:/home/zdenial/tinyos/tos/platforms/telosa/TelosSerialP.nc">
      <module/>
    </component>
    <component qname="PutcharC" loc="42:/home/zdenial/tinyos/tos/lib/printf/PutcharC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:/home/zdenial/tinyos/tos/lib/printf/PutcharP.nc">
      <documentation loc="64:/home/zdenial/tinyos/tos/lib/printf/PutcharP.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialStartP" loc="37:/home/zdenial/tinyos/tos/lib/serial/SerialStartP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/lib/serial/SerialStartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Thomas Schmid&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/home/zdenial/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="59:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <documentation loc="49:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="38(HplCC2420InterruptsC.CaptureSFDC):/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="43(HplCC2420InterruptsC.InterruptCCAC):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="43(HplCC2420InterruptsC.InterruptFIFOPC):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):/home/zdenial/tinyos/tos/system/StateC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:/home/zdenial/tinyos/tos/system/StateImplC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:/home/zdenial/tinyos/tos/system/StateImplP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="74:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <documentation loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
        <short>&#10; Implementation of USART0 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART0 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @author: Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10; @version $Revision: 1.8 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="89(Msp430UsartShare0P.ArbiterC):/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="52(Msp430UsartShare0P.ArbiterC.Arbiter):/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="37:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-24 05:32:31 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/home/zdenial/tinyos/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/home/zdenial/tinyos/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="52(BusyWaitMicroC.BusyWaitCounterC):/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e0460"/>
            <typename><typedef-ref name="TMicro" ref="0x2ad34f5e07d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e0460"/>
            <typename><typedef-ref name="TMicro" ref="0x2ad34f5e07d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:/home/zdenial/tinyos/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5b6bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad34f5e1020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5b6bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad34f5e1020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5b6bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad34f5e1020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5b6bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad34f5e1020"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5b6bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad34f5e1020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/zdenial/tinyos/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/home/zdenial/tinyos/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):/home/zdenial/tinyos/tos/system/StateC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):/home/zdenial/tinyos/tos/system/StateC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):/home/zdenial/tinyos/tos/system/StateC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkC" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkP" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PacketLinkC.SendStateC" loc="65(PacketLinkC.SendStateC):/home/zdenial/tinyos/tos/system/StateC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkC.DelayTimerC" loc="44(PacketLinkC.DelayTimerC):/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TimeSyncMessageC" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
        <short>&#10; The Active Message layer for the CC2420 radio with timesync support.</short>
        <long>&#10; The Active Message layer for the CC2420 radio with timesync support. This&#10; configuration is just layer above CC2420ActiveMessageC that supports&#10; TimeSyncPacket and TimeSyncAMSend interfaces (TEP 133)&#10;&#10; @author: Miklos Maroti&#10; @author: Brano Kusy (CC2420 port)&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TimeSyncMessageP" loc="37:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <module/>
    </component>
    <component qname="CC2420TimeSyncMessageC.AMSenderC" loc="47(CC2420TimeSyncMessageC.AMSenderC):/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:61">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420TimeSyncMessageC.AMSenderC.SenderC" loc="47(CC2420TimeSyncMessageC.AMSenderC.SenderC):/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2ad34f5a01b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP" loc="43(CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP):/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2ad34f5a01b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420TimeSyncMessageC.LocalTime32khzC" loc="46(CC2420TimeSyncMessageC.LocalTime32khzC):/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/home/zdenial/tinyos/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/home/zdenial/tinyos/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="TDMALinkC.JoinReqDelayTimer" loc="2(TDMALinkC.JoinReqDelayTimer):Timer32C.nc">
      <instance number="0">
        <component-ref qname="Timer32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Timer32P" loc="2:Timer32P.nc">
      <configuration/>
    </component>
    <component qname="Timer32P.Alarm32khz32C" loc="41(Timer32P.Alarm32khz32C):/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Timer32P.Alarm32khz32C.AlarmC" loc="41(Timer32P.Alarm32khz32C.AlarmC):/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(Timer32P.Alarm32khz32C.AlarmC.Msp430Timer):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Timer32P.Alarm32khz32C.Transform" loc="51(Timer32P.Alarm32khz32C.Transform):/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Timer32P.AlarmToTimerC" loc="46(Timer32P.AlarmToTimerC):/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Timer32P.VirtualizeTimerC" loc="46(Timer32P.VirtualizeTimerC):/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
          <value cst="I:5">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TDMALinkC.JoinReqSndC" loc="47(TDMALinkC.JoinReqSndC):/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:131">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.JoinReqSndC.SenderC" loc="47(TDMALinkC.JoinReqSndC.SenderC):/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2ad34f5a01b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.JoinReqSndC.SenderC.AMQueueEntryP" loc="43(TDMALinkC.JoinReqSndC.SenderC.AMQueueEntryP):/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2ad34f5a01b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TDMALinkC.JoinReqRcvC" loc="43(TDMALinkC.JoinReqRcvC):/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:131">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.JoinAnsSndC" loc="47(TDMALinkC.JoinAnsSndC):/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:132">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.JoinAnsSndC.SenderC" loc="47(TDMALinkC.JoinAnsSndC.SenderC):/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2ad34f5a01b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.JoinAnsSndC.SenderC.AMQueueEntryP" loc="43(TDMALinkC.JoinAnsSndC.SenderC.AMQueueEntryP):/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2ad34f5a01b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TDMALinkC.JoinAnsRcvC" loc="43(TDMALinkC.JoinAnsRcvC):/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:132">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.DataSndC" loc="47(TDMALinkC.DataSndC):/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:133">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.DataSndC.SenderC" loc="47(TDMALinkC.DataSndC.SenderC):/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2ad34f5a01b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.DataSndC.SenderC.AMQueueEntryP" loc="43(TDMALinkC.DataSndC.SenderC.AMQueueEntryP):/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2ad34f5a01b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TDMALinkC.SlotSchedulerC" loc="1(TDMALinkC.SlotSchedulerC):SlotSchedulerC.nc">
      <instance number="0">
        <component-ref qname="SlotSchedulerC"/>
        <arguments>
          <value cst="I:3276">
            <type-int cname="long" size="I:4" alignment="I:2"></type-int>
          </value>
          <value cst="I:255">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.SlotSchedulerC.SlotSchedulerP" loc="3(TDMALinkC.SlotSchedulerC.SlotSchedulerP):SlotSchedulerP.nc">
      <instance number="0">
        <component-ref qname="SlotSchedulerP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TDMALinkC.SlotSchedulerC.EpochTimer" loc="2(TDMALinkC.SlotSchedulerC.EpochTimer):Timer32C.nc">
      <instance number="2">
        <component-ref qname="Timer32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.SlotSchedulerC.StartSlotTimer" loc="2(TDMALinkC.SlotSchedulerC.StartSlotTimer):Timer32C.nc">
      <instance number="3">
        <component-ref qname="Timer32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.SlotSchedulerC.EndSlotTimer" loc="2(TDMALinkC.SlotSchedulerC.EndSlotTimer):Timer32C.nc">
      <instance number="4">
        <component-ref qname="Timer32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.DataRcvC" loc="43(TDMALinkC.DataRcvC):/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:133">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestC.Timer" loc="2(TestC.Timer):Timer32C.nc">
      <instance number="1">
        <component-ref qname="Timer32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430TimerP" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x2ad34f69e230" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x2ad34f69e5d0" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x2ad34f69e980" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x2ad34f69ed00" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x2ad34f69d0d0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x2ad34f69d440" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x2ad34f69d7d0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x2ad34f69db60" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x2ad34f69c020" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x2ad34f6f1960" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x2ad34f6f1d30" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart1C" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x2ad34fb05890" loc="40:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x2ad34fb05c40" loc="41:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x2ad34fb04020" loc="42:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x2ad34fb043d0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x2ad34fb04740" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2ad34fc7bad0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2ad34fc7bad0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x2ad34fd045b0" loc="89:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x2ad34fd345b0" loc="42:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/home/zdenial/tinyos/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x2ad34fd58d90" loc="52:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2ad3502699d0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2ad3502699d0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2ad350282bb0" loc="55:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2ad350282bb0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2ad35027f3b0" loc="56:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2ad35027f3b0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2ad35027f7a0" loc="57:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2ad35027f7a0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2ad35027e020" loc="58:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2ad35027e020"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2ad35027e3f0" loc="59:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x2ad35027ebf0" loc="60:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x2ad35027ebf0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2ad3502b0dd0" loc="52:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2ad3502b0dd0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2ad3502ad600" loc="53:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2ad3502ad600"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2ad3502ad9f0" loc="54:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2ad3502ad9f0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2ad3502ac210" loc="55:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2ad3502ac210"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2ad3502ac5e0" loc="56:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="GpioCaptureC" loc="38:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:/home/zdenial/tinyos/tos/system/StateC.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="BusyWaitCounterC" loc="52:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ad3508c0400" loc="52:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ad3508c0400"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2ad3508c0b90" loc="52:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad3508c0b90"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ad350aeca60" loc="46:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ad350aeca60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmMilli32C" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ad350b13cd0" loc="46:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ad350b13cd0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ad350b50230" loc="46:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ad350b50230"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2ad350b50560" loc="46:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/zdenial/tinyos/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMSenderC" loc="47:/home/zdenial/tinyos/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2ad350e47a00" loc="47:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2ad34f5a01b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2ad350ec06b0" loc="47:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2ad34f5a01b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2ad350eb6320" loc="43:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2ad34f5a01b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x2ad350e9ec80" loc="45:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Timer32C" loc="2:Timer32C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMReceiverC" loc="43:/home/zdenial/tinyos/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2ad350f64060" loc="43:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2ad34f5a01b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SlotSchedulerC" loc="1:SlotSchedulerC.nc" abstract="">
      <parameters>
        <constant name="slotDuration" ref="0x2ad350f499f0" loc="1:SlotSchedulerC.nc">
          <component-ref qname="SlotSchedulerC"/>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
          </type-int>
        </constant>
        <constant name="maxSlotId" ref="0x2ad350f49d60" loc="1:SlotSchedulerC.nc">
          <component-ref qname="SlotSchedulerC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SlotSchedulerP" loc="3:SlotSchedulerP.nc" abstract="">
      <parameters>
        <constant name="slotDuration" ref="0x2ad350fc7060" loc="3:SlotSchedulerP.nc">
          <component-ref qname="SlotSchedulerP"/>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
          </type-int>
        </constant>
        <constant name="maxSlotId" ref="0x2ad350fc73d0" loc="3:SlotSchedulerP.nc">
          <component-ref qname="SlotSchedulerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="Boot" ref="0x2ad34f5aa9a0" loc="8:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x2ad34f5aa9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2ad34f5aad20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataTimer" ref="0x2ad34f5c4240" loc="13:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DataTimer" scoped="" ref="0x2ad34f5c4240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad34f5d56e0"/>
        <function-ref name="fired" scoped="" ref="0x2ad34f5c3c90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ad34f5d6a70"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ad34f5d65f0"/>
        <function-ref name="getdt" scoped="" ref="0x2ad34f5d3020"/>
        <function-ref name="gett0" scoped="" ref="0x2ad34f5d5b60"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad34f5d6170"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ad34f5c4e30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ad34f5d50d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ad34f5c3340"/>
        <function-ref name="stop" scoped="" ref="0x2ad34f5c3810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TDMALinkSnd" ref="0x2ad34f5ba1a0" loc="10:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TDMALinkSnd" scoped="" ref="0x2ad34f5ba1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad34f5ba520"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad34f5ba6b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad34f5ba840"/>
        <function-ref name="cancel" scoped="" ref="0x2ad34f5ba9d0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad34f5bab60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TDMALink" ref="0x2ad34f5a5540" loc="9:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TDMALink" scoped="" ref="0x2ad34f5a5540"/></type-interface>
      <instance>
        <interfacedef-ref qname="TDMALink"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x2ad34f5ab1b0"/>
        <function-ref name="startDone" scoped="" ref="0x2ad34f5a5a50"/>
        <function-ref name="startSlave" scoped="" ref="0x2ad34f5a5be0"/>
        <function-ref name="stopDone" scoped="" ref="0x2ad34f5a5d70"/>
        <function-ref name="startMaster" scoped="" ref="0x2ad34f5ab020"/>
        <function-ref name="isMaster" scoped="" ref="0x2ad34f5a58c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TDMALinkRcv" ref="0x2ad34f5b5b50" loc="11:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TDMALinkRcv" scoped="" ref="0x2ad34f5b5b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad34f5a4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2ad34f5c57e0" loc="12:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2ad34f5c57e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ad34f5c5b60"/>
        <function-ref name="source" scoped="" ref="0x2ad34f5c5cf0"/>
        <function-ref name="address" scoped="" ref="0x2ad34f5c5e80"/>
        <function-ref name="destination" scoped="" ref="0x2ad34f5b9030"/>
        <function-ref name="setSource" scoped="" ref="0x2ad34f5b91c0"/>
        <function-ref name="setDestination" scoped="" ref="0x2ad34f5b9350"/>
        <function-ref name="type" scoped="" ref="0x2ad34f5b94e0"/>
        <function-ref name="setType" scoped="" ref="0x2ad34f5b9670"/>
        <function-ref name="isForMe" scoped="" ref="0x2ad34f5b9800"/>
        <function-ref name="setGroup" scoped="" ref="0x2ad34f5b9990"/>
        <function-ref name="localGroup" scoped="" ref="0x2ad34f5b9b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2ad34f5fa210" loc="58:/home/zdenial/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x2ad34f5fa210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad34f5fa590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2ad34f555cd0" loc="57:/home/zdenial/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x2ad34f555cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2ad34f5fd0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad34f5f90f0" loc="42:/home/zdenial/tinyos/tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ad34f5f90f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad34f5f9470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x2ad34f5f4190" loc="6:/home/zdenial/tinyos/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x2ad34f5f4190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad34f5f4510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad34f5f5360" loc="4:/home/zdenial/tinyos/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ad34f5f5360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad34f5f56e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x2ad34f5f5a70" loc="5:/home/zdenial/tinyos/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x2ad34f5f5a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad34f5f5df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x2ad34f5f4870" loc="7:/home/zdenial/tinyos/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x2ad34f5f4870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad34f5f4bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad34f60e4a0" loc="2:/home/zdenial/tinyos/tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ad34f60e4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad34f60e820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x2ad34f5f6910" loc="39:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x2ad34f5f6910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad34f5f6c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x2ad34f631de0" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x2ad34f631de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x2ad34f613c70"/>
        <function-ref name="initTimerB" scoped="" ref="0x2ad34f613310"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x2ad34f6134a0"/>
        <function-ref name="initTimerA" scoped="" ref="0x2ad34f613630"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x2ad34f613180"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x2ad34f6137c0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x2ad34f613950"/>
        <function-ref name="initClocks" scoped="" ref="0x2ad34f613ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad34f617850" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ad34f617850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad34f617bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x2ad34f642020" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x2ad34f642020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x2ad34f641020"/>
        <function-ref name="initTimerB" scoped="" ref="0x2ad34f642530"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x2ad34f6426c0"/>
        <function-ref name="initTimerA" scoped="" ref="0x2ad34f642850"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x2ad34f6423a0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x2ad34f6429e0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x2ad34f642b70"/>
        <function-ref name="initClocks" scoped="" ref="0x2ad34f642d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2ad34f641360" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x2ad34f641360"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2ad34f6416e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad34f6437e0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ad34f6437e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad34f643b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x2ad34f6845a0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x2ad34f6845a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ad34f684920"/>
        <function-ref name="getControl" scoped="" ref="0x2ad34f684ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ad34f684c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ad34f684dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ad34f683020"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ad34f6831b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ad34f683340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ad34f6834d0"/>
        <function-ref name="setControl" scoped="" ref="0x2ad34f683660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x2ad34f695020" loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x2ad34f695020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ad34f6953a0"/>
        <function-ref name="getControl" scoped="" ref="0x2ad34f695530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ad34f6956c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ad34f695850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ad34f6959e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ad34f695b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ad34f695d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ad34f694020"/>
        <function-ref name="setControl" scoped="" ref="0x2ad34f6941b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x2ad34f67b700" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x2ad34f67b700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ad34f67ba80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2ad34f67bc10"/>
        <function-ref name="captured" scoped="" ref="0x2ad34f67bda0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad34f67a020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad34f67a1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2ad34f67a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x2ad34f6a7a20" loc="68:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x2ad34f6a7a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ad34f6a7da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2ad34f6a6020"/>
        <function-ref name="captured" scoped="" ref="0x2ad34f6a61b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad34f6a6340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad34f6a64d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2ad34f6a6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x2ad34f682aa0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x2ad34f682aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ad34f682e20"/>
        <function-ref name="setEvent" scoped="" ref="0x2ad34f67d020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ad34f67d1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ad34f67d340"/>
        <function-ref name="fired" scoped="" ref="0x2ad34f67d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x2ad34f6ad020" loc="61:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x2ad34f6ad020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ad34f6ad3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2ad34f6ad530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ad34f6ad6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ad34f6ad850"/>
        <function-ref name="fired" scoped="" ref="0x2ad34f6ad9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x2ad34f6a3a20" loc="71:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x2ad34f6a3a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ad34f6a3da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2ad34f6a2020"/>
        <function-ref name="captured" scoped="" ref="0x2ad34f6a21b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad34f6a2340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad34f6a24d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2ad34f6a2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x2ad34f6905a0" loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x2ad34f6905a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ad34f690920"/>
        <function-ref name="getControl" scoped="" ref="0x2ad34f690ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ad34f690c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ad34f690dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ad34f68f020"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ad34f68f1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ad34f68f340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ad34f68f4d0"/>
        <function-ref name="setControl" scoped="" ref="0x2ad34f68f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x2ad34f686b10" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x2ad34f686b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ad34f66c020"/>
        <function-ref name="getControl" scoped="" ref="0x2ad34f66c1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ad34f66c340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ad34f66c4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ad34f66c660"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ad34f66c7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ad34f66c980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ad34f66cb10"/>
        <function-ref name="setControl" scoped="" ref="0x2ad34f66cca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x2ad34f6a9a20" loc="66:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x2ad34f6a9a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ad34f6a9da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2ad34f6a8020"/>
        <function-ref name="captured" scoped="" ref="0x2ad34f6a81b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad34f6a8340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad34f6a84d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2ad34f6a8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x2ad34f68b3e0" loc="59:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x2ad34f68b3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ad34f68b760"/>
        <function-ref name="setEvent" scoped="" ref="0x2ad34f68b8f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ad34f68ba80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ad34f68bc10"/>
        <function-ref name="fired" scoped="" ref="0x2ad34f68bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x2ad34f6945a0" loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x2ad34f6945a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ad34f694a20"/>
        <function-ref name="getControl" scoped="" ref="0x2ad34f694bb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ad34f694d40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ad34f693020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ad34f6931b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ad34f693340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ad34f6934d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ad34f693660"/>
        <function-ref name="setControl" scoped="" ref="0x2ad34f6937f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x2ad34f67a700" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x2ad34f67a700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ad34f67aa80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2ad34f67ac10"/>
        <function-ref name="captured" scoped="" ref="0x2ad34f67ada0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad34f697020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad34f6971b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2ad34f697340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x2ad34f6a6a20" loc="69:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x2ad34f6a6a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ad34f6a6da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2ad34f6a5020"/>
        <function-ref name="captured" scoped="" ref="0x2ad34f6a51b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad34f6a5340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad34f6a54d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2ad34f6a5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x2ad34f693be0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x2ad34f693be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ad34f692020"/>
        <function-ref name="getControl" scoped="" ref="0x2ad34f6921b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ad34f692340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ad34f6924d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ad34f692660"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ad34f6927f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ad34f692980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ad34f692b10"/>
        <function-ref name="setControl" scoped="" ref="0x2ad34f692ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x2ad34f67d890" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x2ad34f67d890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ad34f67dc10"/>
        <function-ref name="setEvent" scoped="" ref="0x2ad34f67dda0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ad34f67c020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ad34f67c1b0"/>
        <function-ref name="fired" scoped="" ref="0x2ad34f67c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x2ad34f674060" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x2ad34f674060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad34f6743e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ad34f674570"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ad34f674700"/>
        <function-ref name="get" scoped="" ref="0x2ad34f674890"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ad34f674a20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad34f674bb0"/>
        <function-ref name="getMode" scoped="" ref="0x2ad34f674d40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad34f673020"/>
        <function-ref name="overflow" scoped="" ref="0x2ad34f6731b0"/>
        <function-ref name="setMode" scoped="" ref="0x2ad34f673340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2ad34f6734d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x2ad34f6adda0" loc="62:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x2ad34f6adda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ad34f6ac180"/>
        <function-ref name="setEvent" scoped="" ref="0x2ad34f6ac310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ad34f6ac4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ad34f6ac630"/>
        <function-ref name="fired" scoped="" ref="0x2ad34f6ac7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x2ad34f66a0c0" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x2ad34f66a0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ad34f66a440"/>
        <function-ref name="getControl" scoped="" ref="0x2ad34f66a5d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ad34f66a760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ad34f66a8f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ad34f66aa80"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ad34f66ac10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ad34f66ada0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ad34f684020"/>
        <function-ref name="setControl" scoped="" ref="0x2ad34f6841b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x2ad34f68fa50" loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x2ad34f68fa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ad34f68fdd0"/>
        <function-ref name="getControl" scoped="" ref="0x2ad34f68e020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ad34f68e1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ad34f68e340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ad34f68e4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ad34f68e660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ad34f68e7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ad34f68e980"/>
        <function-ref name="setControl" scoped="" ref="0x2ad34f68eb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x2ad34f699690" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x2ad34f699690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ad34f699a10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2ad34f699ba0"/>
        <function-ref name="captured" scoped="" ref="0x2ad34f699d30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad34f67b020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad34f67b1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2ad34f67b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x2ad34f6a8a20" loc="67:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x2ad34f6a8a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ad34f6a8da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2ad34f6a7020"/>
        <function-ref name="captured" scoped="" ref="0x2ad34f6a71b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad34f6a7340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad34f6a74d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2ad34f6a7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x2ad34f67ecf0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x2ad34f67ecf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ad34f6820a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2ad34f682230"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ad34f6823c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ad34f682550"/>
        <function-ref name="fired" scoped="" ref="0x2ad34f6826e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x2ad34f68a1f0" loc="60:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x2ad34f68a1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ad34f68a570"/>
        <function-ref name="setEvent" scoped="" ref="0x2ad34f68a700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ad34f68a890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ad34f68aa20"/>
        <function-ref name="fired" scoped="" ref="0x2ad34f68abb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x2ad34f6a5a20" loc="70:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x2ad34f6a5a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ad34f6a5da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2ad34f6a3020"/>
        <function-ref name="captured" scoped="" ref="0x2ad34f6a31b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad34f6a3340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad34f6a34d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2ad34f6a3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x2ad34f6910c0" loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x2ad34f6910c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ad34f691440"/>
        <function-ref name="getControl" scoped="" ref="0x2ad34f6915d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ad34f691760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ad34f6918f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ad34f691a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ad34f691c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ad34f691da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ad34f690020"/>
        <function-ref name="setControl" scoped="" ref="0x2ad34f6901b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x2ad34f6976c0" loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x2ad34f6976c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad34f697a40"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ad34f697bd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ad34f697d60"/>
        <function-ref name="get" scoped="" ref="0x2ad34f696020"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ad34f6961b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad34f696340"/>
        <function-ref name="getMode" scoped="" ref="0x2ad34f6964d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad34f696660"/>
        <function-ref name="overflow" scoped="" ref="0x2ad34f6967f0"/>
        <function-ref name="setMode" scoped="" ref="0x2ad34f696980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2ad34f696b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x2ad34f6acb80" loc="63:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x2ad34f6acb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ad34f6ab020"/>
        <function-ref name="setEvent" scoped="" ref="0x2ad34f6ab1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ad34f6ab340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ad34f6ab4d0"/>
        <function-ref name="fired" scoped="" ref="0x2ad34f6ab660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x2ad34f6aaa20" loc="65:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x2ad34f6aaa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ad34f6aada0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2ad34f6a9020"/>
        <function-ref name="captured" scoped="" ref="0x2ad34f6a91b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad34f6a9340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad34f6a94d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2ad34f6a9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x2ad34f6aba20" loc="64:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x2ad34f6aba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ad34f6aa020"/>
        <function-ref name="setEvent" scoped="" ref="0x2ad34f6aa1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ad34f6aa340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ad34f6aa4d0"/>
        <function-ref name="fired" scoped="" ref="0x2ad34f6aa660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x2ad34f68c570" loc="58:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x2ad34f68c570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ad34f68c8f0"/>
        <function-ref name="setEvent" scoped="" ref="0x2ad34f68ca80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ad34f68cc10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ad34f68cda0"/>
        <function-ref name="fired" scoped="" ref="0x2ad34f68b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x2ad34f68d020" loc="57:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x2ad34f68d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ad34f68d3a0"/>
        <function-ref name="getControl" scoped="" ref="0x2ad34f68d530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ad34f68d6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ad34f68d850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ad34f68d9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ad34f68db70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ad34f68dd00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ad34f68c020"/>
        <function-ref name="setControl" scoped="" ref="0x2ad34f68c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x2ad34f6d62f0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x2ad34f6d62f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ad34f6d6670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x2ad34f6d7c20" loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x2ad34f6d7c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ad34f6d6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x2ad34f6d6940" loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x2ad34f6d6940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ad34f6d6cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x2ad34f6d75b0" loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2ad34f6d75b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ad34f6d7950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ad34f6dac80" loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2ad34f6dac80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad34f6d80a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ad34f6d8230"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ad34f6d83c0"/>
        <function-ref name="get" scoped="" ref="0x2ad34f6d8550"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ad34f6d86e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad34f6d8870"/>
        <function-ref name="getMode" scoped="" ref="0x2ad34f6d8a00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad34f6d8b90"/>
        <function-ref name="overflow" scoped="" ref="0x2ad34f6d8d20"/>
        <function-ref name="setMode" scoped="" ref="0x2ad34f6d7020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2ad34f6d71b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x2ad34f6f32f0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x2ad34f6f32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ad34f6f3670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x2ad34f6f4c20" loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x2ad34f6f4c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ad34f6f3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x2ad34f6f3940" loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x2ad34f6f3940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ad34f6f3cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x2ad34f6f45b0" loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2ad34f6f45b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ad34f6f4950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ad34f6d2c80" loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2ad34f6d2c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad34f6f50a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ad34f6f5230"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ad34f6f53c0"/>
        <function-ref name="get" scoped="" ref="0x2ad34f6f5550"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ad34f6f56e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad34f6f5870"/>
        <function-ref name="getMode" scoped="" ref="0x2ad34f6f5a00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad34f6f5b90"/>
        <function-ref name="overflow" scoped="" ref="0x2ad34f6f5d20"/>
        <function-ref name="setMode" scoped="" ref="0x2ad34f6f4020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2ad34f6f41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2ad34f73aa90" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2ad34f73aa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ad34f73ae10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2ad34f739020"/>
        <function-ref name="captured" scoped="" ref="0x2ad34f7391b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad34f739340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad34f7394d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2ad34f739660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2ad34f6ef9d0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2ad34f6ef9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ad34f6efd50"/>
        <function-ref name="getControl" scoped="" ref="0x2ad34f73b020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ad34f73b1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ad34f73b340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ad34f73b4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ad34f73b660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ad34f73b7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ad34f73b980"/>
        <function-ref name="setControl" scoped="" ref="0x2ad34f73bb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2ad34f737020" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2ad34f737020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ad34f7373a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2ad34f73bde0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2ad34f73bde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ad34f73a180"/>
        <function-ref name="setEvent" scoped="" ref="0x2ad34f73a310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ad34f73a4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ad34f73a630"/>
        <function-ref name="fired" scoped="" ref="0x2ad34f73a7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2ad34f739930" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2ad34f739930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad34f739cb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ad34f739e40"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ad34f738020"/>
        <function-ref name="get" scoped="" ref="0x2ad34f7381b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ad34f738340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad34f7384d0"/>
        <function-ref name="getMode" scoped="" ref="0x2ad34f738660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad34f7387f0"/>
        <function-ref name="overflow" scoped="" ref="0x2ad34f738980"/>
        <function-ref name="setMode" scoped="" ref="0x2ad34f738b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2ad34f738ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2ad34f731160" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2ad34f731160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ad34f7314e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2ad34f731670"/>
        <function-ref name="captured" scoped="" ref="0x2ad34f731800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad34f731990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad34f731b20"/>
        <function-ref name="setEdge" scoped="" ref="0x2ad34f731cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2ad34f734020" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2ad34f734020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ad34f7343a0"/>
        <function-ref name="getControl" scoped="" ref="0x2ad34f734530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ad34f7346c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ad34f734850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ad34f7349e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ad34f734b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ad34f734d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ad34f732020"/>
        <function-ref name="setControl" scoped="" ref="0x2ad34f7321b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2ad34f72f7a0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2ad34f72f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ad34f72fb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2ad34f732480" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2ad34f732480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ad34f732800"/>
        <function-ref name="setEvent" scoped="" ref="0x2ad34f732990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ad34f732b20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ad34f732cb0"/>
        <function-ref name="fired" scoped="" ref="0x2ad34f732e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2ad34f730020" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2ad34f730020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad34f7303a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ad34f730530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ad34f7306c0"/>
        <function-ref name="get" scoped="" ref="0x2ad34f730850"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ad34f7309e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad34f730b70"/>
        <function-ref name="getMode" scoped="" ref="0x2ad34f730d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad34f72f020"/>
        <function-ref name="overflow" scoped="" ref="0x2ad34f72f1b0"/>
        <function-ref name="setMode" scoped="" ref="0x2ad34f72f340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2ad34f72f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2ad34f7507a0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2ad34f7507a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ad34f750b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2ad34f750cb0"/>
        <function-ref name="captured" scoped="" ref="0x2ad34f750e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad34f74f020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad34f74f1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2ad34f74f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2ad34f7526d0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2ad34f7526d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ad34f752a50"/>
        <function-ref name="getControl" scoped="" ref="0x2ad34f752be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ad34f752d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ad34f751020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ad34f7511b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ad34f751340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ad34f7514d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ad34f751660"/>
        <function-ref name="setControl" scoped="" ref="0x2ad34f7517f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2ad34f74ec50" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2ad34f74ec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ad34f74d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2ad34f751ac0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2ad34f751ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ad34f751e40"/>
        <function-ref name="setEvent" scoped="" ref="0x2ad34f750020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ad34f7501b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ad34f750340"/>
        <function-ref name="fired" scoped="" ref="0x2ad34f7504d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2ad34f74f610" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2ad34f74f610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad34f74f990"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ad34f74fb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ad34f74fcb0"/>
        <function-ref name="get" scoped="" ref="0x2ad34f74fe40"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ad34f74e020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad34f74e1b0"/>
        <function-ref name="getMode" scoped="" ref="0x2ad34f74e340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad34f74e4d0"/>
        <function-ref name="overflow" scoped="" ref="0x2ad34f74e660"/>
        <function-ref name="setMode" scoped="" ref="0x2ad34f74e7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2ad34f74e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2ad34f748cb0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2ad34f748cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ad34f7470a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2ad34f747230"/>
        <function-ref name="captured" scoped="" ref="0x2ad34f7473c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad34f747550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad34f7476e0"/>
        <function-ref name="setEdge" scoped="" ref="0x2ad34f747870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2ad34f74bb30" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2ad34f74bb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ad34f749020"/>
        <function-ref name="getControl" scoped="" ref="0x2ad34f7491b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ad34f749340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ad34f7494d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ad34f749660"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ad34f7497f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ad34f749980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ad34f749b10"/>
        <function-ref name="setControl" scoped="" ref="0x2ad34f749ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2ad34f7452f0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2ad34f7452f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ad34f745670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2ad34f748020" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2ad34f748020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ad34f7483a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2ad34f748530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ad34f7486c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ad34f748850"/>
        <function-ref name="fired" scoped="" ref="0x2ad34f7489e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2ad34f747b40" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2ad34f747b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad34f746020"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ad34f7461b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ad34f746340"/>
        <function-ref name="get" scoped="" ref="0x2ad34f7464d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ad34f746660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad34f7467f0"/>
        <function-ref name="getMode" scoped="" ref="0x2ad34f746980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad34f746b10"/>
        <function-ref name="overflow" scoped="" ref="0x2ad34f746ca0"/>
        <function-ref name="setMode" scoped="" ref="0x2ad34f746e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2ad34f745020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2ad34f7402f0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2ad34f7402f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ad34f740670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2ad34f740800"/>
        <function-ref name="captured" scoped="" ref="0x2ad34f740990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad34f740b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad34f740cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x2ad34f740e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2ad34f742220" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2ad34f742220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ad34f7425a0"/>
        <function-ref name="getControl" scoped="" ref="0x2ad34f742730"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ad34f7428c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ad34f742a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ad34f742be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ad34f742d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ad34f741020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ad34f7411b0"/>
        <function-ref name="setControl" scoped="" ref="0x2ad34f741340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2ad34f7647a0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2ad34f7647a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ad34f764b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2ad34f741610" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2ad34f741610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ad34f741990"/>
        <function-ref name="setEvent" scoped="" ref="0x2ad34f741b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ad34f741cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ad34f741e40"/>
        <function-ref name="fired" scoped="" ref="0x2ad34f740020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2ad34f765160" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2ad34f765160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad34f7654e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ad34f765670"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ad34f765800"/>
        <function-ref name="get" scoped="" ref="0x2ad34f765990"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ad34f765b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad34f765cb0"/>
        <function-ref name="getMode" scoped="" ref="0x2ad34f765e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad34f764020"/>
        <function-ref name="overflow" scoped="" ref="0x2ad34f7641b0"/>
        <function-ref name="setMode" scoped="" ref="0x2ad34f764340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2ad34f7644d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2ad34f75e7a0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2ad34f75e7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ad34f75eb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2ad34f75ecb0"/>
        <function-ref name="captured" scoped="" ref="0x2ad34f75ee40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad34f75d020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad34f75d1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2ad34f75d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2ad34f7616d0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2ad34f7616d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ad34f761a50"/>
        <function-ref name="getControl" scoped="" ref="0x2ad34f761be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ad34f761d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ad34f760020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ad34f7601b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ad34f760340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ad34f7604d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ad34f760660"/>
        <function-ref name="setControl" scoped="" ref="0x2ad34f7607f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2ad34f75cc50" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2ad34f75cc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ad34f75b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2ad34f760ac0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2ad34f760ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ad34f760e40"/>
        <function-ref name="setEvent" scoped="" ref="0x2ad34f75e020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ad34f75e1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ad34f75e340"/>
        <function-ref name="fired" scoped="" ref="0x2ad34f75e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2ad34f75d610" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2ad34f75d610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad34f75d990"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ad34f75db20"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ad34f75dcb0"/>
        <function-ref name="get" scoped="" ref="0x2ad34f75de40"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ad34f75c020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad34f75c1b0"/>
        <function-ref name="getMode" scoped="" ref="0x2ad34f75c340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad34f75c4d0"/>
        <function-ref name="overflow" scoped="" ref="0x2ad34f75c660"/>
        <function-ref name="setMode" scoped="" ref="0x2ad34f75c7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2ad34f75c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2ad34f757cb0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2ad34f757cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ad34f7560a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2ad34f756230"/>
        <function-ref name="captured" scoped="" ref="0x2ad34f7563c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad34f756550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad34f7566e0"/>
        <function-ref name="setEdge" scoped="" ref="0x2ad34f756870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2ad34f759b30" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2ad34f759b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ad34f758020"/>
        <function-ref name="getControl" scoped="" ref="0x2ad34f7581b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ad34f758340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ad34f7584d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ad34f758660"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ad34f7587f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ad34f758980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ad34f758b10"/>
        <function-ref name="setControl" scoped="" ref="0x2ad34f758ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2ad34f7542f0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2ad34f7542f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ad34f754670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2ad34f757020" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2ad34f757020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ad34f7573a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2ad34f757530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ad34f7576c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ad34f757850"/>
        <function-ref name="fired" scoped="" ref="0x2ad34f7579e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2ad34f756b40" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2ad34f756b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad34f755020"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ad34f7551b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ad34f755340"/>
        <function-ref name="get" scoped="" ref="0x2ad34f7554d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ad34f755660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad34f7557f0"/>
        <function-ref name="getMode" scoped="" ref="0x2ad34f755980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad34f755b10"/>
        <function-ref name="overflow" scoped="" ref="0x2ad34f755ca0"/>
        <function-ref name="setMode" scoped="" ref="0x2ad34f755e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2ad34f754020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2ad34f7742f0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2ad34f7742f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ad34f774670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2ad34f774800"/>
        <function-ref name="captured" scoped="" ref="0x2ad34f774990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad34f774b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad34f774cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x2ad34f774e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2ad34f777220" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2ad34f777220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ad34f7775a0"/>
        <function-ref name="getControl" scoped="" ref="0x2ad34f777730"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ad34f7778c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ad34f777a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ad34f777be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ad34f777d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ad34f776020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ad34f7761b0"/>
        <function-ref name="setControl" scoped="" ref="0x2ad34f776340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2ad34f7727a0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2ad34f7727a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ad34f772b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2ad34f776610" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2ad34f776610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ad34f776990"/>
        <function-ref name="setEvent" scoped="" ref="0x2ad34f776b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ad34f776cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ad34f776e40"/>
        <function-ref name="fired" scoped="" ref="0x2ad34f774020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2ad34f773160" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2ad34f773160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad34f7734e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ad34f773670"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ad34f773800"/>
        <function-ref name="get" scoped="" ref="0x2ad34f773990"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ad34f773b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad34f773cb0"/>
        <function-ref name="getMode" scoped="" ref="0x2ad34f773e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad34f772020"/>
        <function-ref name="overflow" scoped="" ref="0x2ad34f7721b0"/>
        <function-ref name="setMode" scoped="" ref="0x2ad34f772340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2ad34f7724d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2ad34f76d7a0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2ad34f76d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ad34f76db20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2ad34f76dcb0"/>
        <function-ref name="captured" scoped="" ref="0x2ad34f76de40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad34f76c020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad34f76c1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2ad34f76c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2ad34f76f6d0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2ad34f76f6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ad34f76fa50"/>
        <function-ref name="getControl" scoped="" ref="0x2ad34f76fbe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ad34f76fd70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ad34f76e020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ad34f76e1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ad34f76e340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ad34f76e4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ad34f76e660"/>
        <function-ref name="setControl" scoped="" ref="0x2ad34f76e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2ad34f76bc50" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2ad34f76bc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ad34f76a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2ad34f76eac0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2ad34f76eac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ad34f76ee40"/>
        <function-ref name="setEvent" scoped="" ref="0x2ad34f76d020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ad34f76d1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ad34f76d340"/>
        <function-ref name="fired" scoped="" ref="0x2ad34f76d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2ad34f76c610" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2ad34f76c610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad34f76c990"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ad34f76cb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ad34f76ccb0"/>
        <function-ref name="get" scoped="" ref="0x2ad34f76ce40"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ad34f76b020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad34f76b1b0"/>
        <function-ref name="getMode" scoped="" ref="0x2ad34f76b340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad34f76b4d0"/>
        <function-ref name="overflow" scoped="" ref="0x2ad34f76b660"/>
        <function-ref name="setMode" scoped="" ref="0x2ad34f76b7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2ad34f76b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2ad34f766cb0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2ad34f766cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ad34f78a0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2ad34f78a230"/>
        <function-ref name="captured" scoped="" ref="0x2ad34f78a3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad34f78a550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad34f78a6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x2ad34f78a870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2ad34f768b30" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2ad34f768b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ad34f767020"/>
        <function-ref name="getControl" scoped="" ref="0x2ad34f7671b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ad34f767340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ad34f7674d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ad34f767660"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ad34f7677f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ad34f767980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ad34f767b10"/>
        <function-ref name="setControl" scoped="" ref="0x2ad34f767ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2ad34f7882f0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2ad34f7882f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ad34f788670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2ad34f766020" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2ad34f766020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ad34f7663a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2ad34f766530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ad34f7666c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ad34f766850"/>
        <function-ref name="fired" scoped="" ref="0x2ad34f7669e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2ad34f78ab40" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2ad34f78ab40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad34f789020"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ad34f7891b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ad34f789340"/>
        <function-ref name="get" scoped="" ref="0x2ad34f7894d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ad34f789660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad34f7897f0"/>
        <function-ref name="getMode" scoped="" ref="0x2ad34f789980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad34f789b10"/>
        <function-ref name="overflow" scoped="" ref="0x2ad34f789ca0"/>
        <function-ref name="setMode" scoped="" ref="0x2ad34f789e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2ad34f788020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x2ad34f782240" loc="7:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x2ad34f782240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ad34f7825c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x2ad34f786aa0" loc="4:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x2ad34f786aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ad34f786e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x2ad34f783260" loc="5:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x2ad34f783260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ad34f7835e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x2ad34f7839f0" loc="6:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x2ad34f7839f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ad34f783d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2ad34f267080" loc="55:/home/zdenial/tinyos/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x2ad34f267080"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2ad34f267400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2ad34f12a2d0" loc="51:/home/zdenial/tinyos/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x2ad34f12a2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2ad34f12a650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2ad34f2ff7d0" loc="52:/home/zdenial/tinyos/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x2ad34f2ff7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2ad34f2ffb50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x2ad34f615b50" loc="39:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x2ad34f615b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x2ad34f7ccb10"/>
        <function-ref name="initTimerB" scoped="" ref="0x2ad34f7cc1b0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x2ad34f7cc340"/>
        <function-ref name="initTimerA" scoped="" ref="0x2ad34f7cc4d0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x2ad34f7cc020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x2ad34f7cc660"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x2ad34f7cc7f0"/>
        <function-ref name="initClocks" scoped="" ref="0x2ad34f7cc980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2ad34f7c0dc0" loc="60:/home/zdenial/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x2ad34f7c0dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad34f7bf180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2ad34f7a2590" loc="57:/home/zdenial/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x2ad34f7a2590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2ad34f7a2910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2ad34f7c06c0" loc="59:/home/zdenial/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x2ad34f7c06c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad34f7c0a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2ad34f7a2c00" loc="58:/home/zdenial/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x2ad34f7a2c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad34f7c0020"/>
        <function-ref name="taskLoop" scoped="" ref="0x2ad34f7c01b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x2ad34f7c0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2ad34f0501d0" loc="48:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x2ad34f0501d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ad34f050550"/>
        <function-ref name="runTask" scoped="" ref="0x2ad34f0506e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2ad34f0ba3a0" loc="47:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x2ad34f0ba3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad34f0ba720"/>
        <function-ref name="taskLoop" scoped="" ref="0x2ad34f0ba8b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x2ad34f0baa40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2ad34f50e040" loc="56:/home/zdenial/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x2ad34f50e040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ad34f50e3c0"/>
        <function-ref name="runTask" scoped="" ref="0x2ad34f50e550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2ad34f50b5d0" loc="57:/home/zdenial/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x2ad34f50b5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2ad34f50b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2ad34f510140" loc="55:/home/zdenial/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x2ad34f510140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad34f5104c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x2ad34f510650"/>
        <function-ref name="runNextTask" scoped="" ref="0x2ad34f5107e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ad34f7dcae0" loc="12:TDMALinkC.nc">
      <component-ref qname="TDMALinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2ad34f7dcae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad34f7dce60"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad34f7db020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad34f7db1b0"/>
        <function-ref name="cancel" scoped="" ref="0x2ad34f7db340"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad34f7db4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ad34f7dc490" loc="11:TDMALinkC.nc">
      <component-ref qname="TDMALinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2ad34f7dc490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad34f7dc810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2ad34f5fe550" loc="10:TDMALinkC.nc">
      <component-ref qname="TDMALinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2ad34f5fe550"/></type-interface>
      <instance>
        <interfacedef-ref qname="TDMALink"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x2ad34f7dc1b0"/>
        <function-ref name="startDone" scoped="" ref="0x2ad34f5fea60"/>
        <function-ref name="startSlave" scoped="" ref="0x2ad34f5febf0"/>
        <function-ref name="stopDone" scoped="" ref="0x2ad34f5fed80"/>
        <function-ref name="startMaster" scoped="" ref="0x2ad34f7dc020"/>
        <function-ref name="isMaster" scoped="" ref="0x2ad34f5fe8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0x2ad34f7f4470" loc="28:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMControl" scoped="" ref="0x2ad34f7f4470"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ad34f7f47f0"/>
        <function-ref name="stopDone" scoped="" ref="0x2ad34f7f4980"/>
        <function-ref name="start" scoped="" ref="0x2ad34f7f4b10"/>
        <function-ref name="stop" scoped="" ref="0x2ad34f7f4ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="JoinAnsRcv" ref="0x2ad34f7fad30" loc="42:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="JoinAnsRcv" scoped="" ref="0x2ad34f7fad30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad34f7f90e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ad34f7d5490" loc="23:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2ad34f7d5490"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad34f7d5810"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad34f7d59a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad34f7d5b30"/>
        <function-ref name="cancel" scoped="" ref="0x2ad34f7d5cc0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad34f7d5e50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncSnd" ref="0x2ad34f7f3290" loc="31:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncSnd" scoped="" ref="0x2ad34f7f3290"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad34f7eb090"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad34f7e3970"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad34f7e34f0"/>
        <function-ref name="cancel" scoped="" ref="0x2ad34f7eb960"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad34f7ebe70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="JoinReqRandom" ref="0x2ad34f800ca0" loc="35:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="JoinReqRandom" scoped="" ref="0x2ad34f800ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2ad34f8030a0"/>
        <function-ref name="rand32" scoped="" ref="0x2ad34f803230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="JoinReqSnd" ref="0x2ad34f7fca70" loc="38:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="JoinReqSnd" scoped="" ref="0x2ad34f7fca70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad34f7fcdf0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad34f7fb020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad34f7fb1b0"/>
        <function-ref name="cancel" scoped="" ref="0x2ad34f7fb340"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad34f7fb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="JoinReqDelayTimer" ref="0x2ad34f803710" loc="36:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="JoinReqDelayTimer" scoped="" ref="0x2ad34f803710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad34f7fdc40"/>
        <function-ref name="fired" scoped="" ref="0x2ad34f7fe1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ad34f7fd020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ad34f7feae0"/>
        <function-ref name="getdt" scoped="" ref="0x2ad34f7fc590"/>
        <function-ref name="gett0" scoped="" ref="0x2ad34f7fc110"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad34f7fe660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ad34f801390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ad34f7fd630"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ad34f801860"/>
        <function-ref name="stop" scoped="" ref="0x2ad34f801d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataSnd" ref="0x2ad34f7f9400" loc="44:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DataSnd" scoped="" ref="0x2ad34f7f9400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad34f7f9780"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad34f7f9910"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad34f7f9aa0"/>
        <function-ref name="cancel" scoped="" ref="0x2ad34f7f9c30"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad34f7f9dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ad34f7d3170" loc="24:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2ad34f7d3170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad34f7d34f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncRcv" ref="0x2ad34f7e10b0" loc="32:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncRcv" scoped="" ref="0x2ad34f7e10b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad34f7e1430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2ad34f7d6640" loc="22:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2ad34f7d6640"/></type-interface>
      <instance>
        <interfacedef-ref qname="TDMALink"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x2ad34f7d51c0"/>
        <function-ref name="startDone" scoped="" ref="0x2ad34f7d6b50"/>
        <function-ref name="startSlave" scoped="" ref="0x2ad34f7d6ce0"/>
        <function-ref name="stopDone" scoped="" ref="0x2ad34f7d6e70"/>
        <function-ref name="startMaster" scoped="" ref="0x2ad34f7d5030"/>
        <function-ref name="isMaster" scoped="" ref="0x2ad34f7d69c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TSPacket" ref="0x2ad34f805de0" loc="33:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TSPacket" scoped="" ref="0x2ad34f805de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x2ad34f808c60"/>
        <function-ref name="eventTime" scoped="" ref="0x2ad34f8041b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="JoinReqRcv" ref="0x2ad34f7fb820" loc="39:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="JoinReqRcv" scoped="" ref="0x2ad34f7fb820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad34f7fbca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="JoinAnsSnd" ref="0x2ad34f7fa020" loc="41:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="JoinAnsSnd" scoped="" ref="0x2ad34f7fa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad34f7fa3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad34f7fa530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad34f7fa6c0"/>
        <function-ref name="cancel" scoped="" ref="0x2ad34f7fa850"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad34f7fa9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketLink" ref="0x2ad34f7ec880" loc="29:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x2ad34f7ec880"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2ad34f7ecc00"/>
        <function-ref name="setRetries" scoped="" ref="0x2ad34f7ecd90"/>
        <function-ref name="getRetries" scoped="" ref="0x2ad34f7cf020"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2ad34f7cf1b0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2ad34f7cf340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2ad34f7d3800" loc="27:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2ad34f7d3800"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ad34f7d3b80"/>
        <function-ref name="source" scoped="" ref="0x2ad34f7d3d10"/>
        <function-ref name="address" scoped="" ref="0x2ad34f7d2020"/>
        <function-ref name="destination" scoped="" ref="0x2ad34f7d21b0"/>
        <function-ref name="setSource" scoped="" ref="0x2ad34f7d2340"/>
        <function-ref name="setDestination" scoped="" ref="0x2ad34f7d24d0"/>
        <function-ref name="type" scoped="" ref="0x2ad34f7d2660"/>
        <function-ref name="setType" scoped="" ref="0x2ad34f7d27f0"/>
        <function-ref name="isForMe" scoped="" ref="0x2ad34f7d2980"/>
        <function-ref name="setGroup" scoped="" ref="0x2ad34f7d2b10"/>
        <function-ref name="localGroup" scoped="" ref="0x2ad34f7d2ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SlotScheduler" ref="0x2ad34f81ad40" loc="46:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SlotScheduler" scoped="" ref="0x2ad34f81ad40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlotScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x2ad34f7f7bd0"/>
        <function-ref name="slotStarted" scoped="" ref="0x2ad34f7f7270"/>
        <function-ref name="getScheduledSlot" scoped="" ref="0x2ad34f7f7400"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad34f7f7590"/>
        <function-ref name="syncEpochTime" scoped="" ref="0x2ad34f7f7720"/>
        <function-ref name="start" scoped="" ref="0x2ad34f7f78b0"/>
        <function-ref name="slotEnded" scoped="" ref="0x2ad34f7f7a40"/>
        <function-ref name="getEpochTime" scoped="" ref="0x2ad34f7f70e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2ad34f88dd10" loc="38:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <component-ref qname="SerialPrintfC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2ad34f88dd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ad34f8900e0"/>
        <function-ref name="stop" scoped="" ref="0x2ad34f890270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0x2ad34f8ae7f0" loc="44:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x2ad34f8ae7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2ad34f8aeb70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartByte" ref="0x2ad34f887bd0" loc="39:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x2ad34f887bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad34f88a020"/>
        <function-ref name="receive" scoped="" ref="0x2ad34f88a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad34f88ac80" loc="43:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ad34f88ac80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad34f8b10a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartControl" ref="0x2ad34f88b020" loc="38:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartControl" scoped="" ref="0x2ad34f88b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ad34f88b3a0"/>
        <function-ref name="stop" scoped="" ref="0x2ad34f88b530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2ad34f88a4f0" loc="42:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2ad34f88a4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ad34f88a870"/>
        <function-ref name="stop" scoped="" ref="0x2ad34f88aa00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2ad34f8a3e10" loc="6:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x2ad34f8a3e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad34f8a21c0"/>
        <function-ref name="receive" scoped="" ref="0x2ad34f8a2350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2ad34f8c6e10" loc="5:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x2ad34f8c6e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad34f8a31c0"/>
        <function-ref name="receivedByte" scoped="" ref="0x2ad34f8a3350"/>
        <function-ref name="receive" scoped="" ref="0x2ad34f8a34e0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2ad34f8a3670"/>
        <function-ref name="receiveDone" scoped="" ref="0x2ad34f8a3800"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2ad34f8a3990"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad34f8a3b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2ad34f88c6a0" loc="4:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2ad34f88c6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ad34f88ca20"/>
        <function-ref name="stop" scoped="" ref="0x2ad34f88cbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2ad34fdcf8f0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2ad34fdcf8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2ad34fdcfc70"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ad34fdcfe00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2ad34fdcd060" loc="47:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x2ad34fdcd060"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad34fdcd3e0"/>
        <function-ref name="receive" scoped="" ref="0x2ad34fdcd570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x2ad34fdcd800" loc="49:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2ad34fdcd800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2ad34fdcdb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2ad34fdce0c0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x2ad34fdce0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad34fdce440"/>
        <function-ref name="receivedByte" scoped="" ref="0x2ad34fdce5d0"/>
        <function-ref name="receive" scoped="" ref="0x2ad34fdce760"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2ad34fdce8f0"/>
        <function-ref name="receiveDone" scoped="" ref="0x2ad34fdcea80"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2ad34fdcec10"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad34fdceda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ad34fdd0c00" loc="44:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ad34fdd0c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad34fdcf020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad34fdcf1b0"/>
        <function-ref name="request" scoped="" ref="0x2ad34fdcf340"/>
        <function-ref name="granted" scoped="" ref="0x2ad34fdcf4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad34fdcf660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x2ad34f914450" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad34f914450"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2ad34f9147d0"/>
        <function-ref name="configure" scoped="" ref="0x2ad34f914960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2ad34f910850" loc="44:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x2ad34f910850"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad34f910bd0"/>
        <function-ref name="receive" scoped="" ref="0x2ad34f910d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x2ad34f90ea40" loc="47:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2ad34f90ea40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2ad34f90edc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2ad34f9111d0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x2ad34f9111d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad34f911550"/>
        <function-ref name="receivedByte" scoped="" ref="0x2ad34f9116e0"/>
        <function-ref name="receive" scoped="" ref="0x2ad34f911870"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2ad34f911a00"/>
        <function-ref name="receiveDone" scoped="" ref="0x2ad34f911b90"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2ad34f911d20"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad34f910020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x2ad34f90f690" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x2ad34f90f690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad34f90fa10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad34f90fba0"/>
        <function-ref name="request" scoped="" ref="0x2ad34f90fd30"/>
        <function-ref name="granted" scoped="" ref="0x2ad34f90e020"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad34f90e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ad34f9198d0" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ad34f9198d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad34f919c50"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad34f919de0"/>
        <function-ref name="request" scoped="" ref="0x2ad34f915020"/>
        <function-ref name="granted" scoped="" ref="0x2ad34f9151b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad34f915340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x2ad34f90b020" loc="48:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x2ad34f90b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2ad34f90b3a0"/>
        <function-ref name="txDone" scoped="" ref="0x2ad34f90b530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x2ad34f9bfdc0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad34f9bfdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2ad34f9be180"/>
        <function-ref name="configure" scoped="" ref="0x2ad34f9be310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2ad34f9bd890" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x2ad34f9bd890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad34f9bdc30"/>
        <function-ref name="receive" scoped="" ref="0x2ad34f9bddc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x2ad34f9bb020" loc="49:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2ad34f9bb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2ad34f9bb3c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x2ad34f9bb690" loc="50:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x2ad34f9bb690"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2ad34f9bba10"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2ad34f9bbba0"/>
        <function-ref name="setUctl" scoped="" ref="0x2ad34f9bbd30"/>
        <function-ref name="enableUart" scoped="" ref="0x2ad34f9ba020"/>
        <function-ref name="setUrctl" scoped="" ref="0x2ad34f9ba1b0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2ad34f9ba340"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2ad34f9ba4d0"/>
        <function-ref name="getUtctl" scoped="" ref="0x2ad34f9ba660"/>
        <function-ref name="getUrctl" scoped="" ref="0x2ad34f9ba7f0"/>
        <function-ref name="resetUsart" scoped="" ref="0x2ad34f9ba980"/>
        <function-ref name="getUmctl" scoped="" ref="0x2ad34f9bab10"/>
        <function-ref name="disableIntr" scoped="" ref="0x2ad34f9baca0"/>
        <function-ref name="setUtctl" scoped="" ref="0x2ad34f9bae30"/>
        <function-ref name="getUbr" scoped="" ref="0x2ad34f9b9120"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2ad34f9b92b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x2ad34f9b9440"/>
        <function-ref name="isUartRx" scoped="" ref="0x2ad34f9b95d0"/>
        <function-ref name="isUart" scoped="" ref="0x2ad34f9b9760"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2ad34f9b98f0"/>
        <function-ref name="isSpi" scoped="" ref="0x2ad34f9b9a80"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2ad34f9b9c10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2ad34f9b9da0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2ad34f9b8020"/>
        <function-ref name="enableIntr" scoped="" ref="0x2ad34f9b81b0"/>
        <function-ref name="getMode" scoped="" ref="0x2ad34f9b8340"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2ad34f9b86d0"/>
        <function-ref name="clrIntr" scoped="" ref="0x2ad34f9b8860"/>
        <function-ref name="setUbr" scoped="" ref="0x2ad34f9b89f0"/>
        <function-ref name="tx" scoped="" ref="0x2ad34f9b8b80"/>
        <function-ref name="getUctl" scoped="" ref="0x2ad34f9b8d10"/>
        <function-ref name="disableUart" scoped="" ref="0x2ad34f9b7020"/>
        <function-ref name="enableSpi" scoped="" ref="0x2ad34f9b71b0"/>
        <function-ref name="setModeUart" scoped="" ref="0x2ad34f9b7340"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2ad34f9b74d0"/>
        <function-ref name="rx" scoped="" ref="0x2ad34f9b7660"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2ad34f9b77f0"/>
        <function-ref name="isUartTx" scoped="" ref="0x2ad34f9b7980"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2ad34f9b7b10"/>
        <function-ref name="disableSpi" scoped="" ref="0x2ad34f9b7ca0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2ad34f9b7e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2ad34f9be6d0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x2ad34f9be6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad34f9bea70"/>
        <function-ref name="receivedByte" scoped="" ref="0x2ad34f9bec00"/>
        <function-ref name="receive" scoped="" ref="0x2ad34f9bed90"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2ad34f9bd020"/>
        <function-ref name="receiveDone" scoped="" ref="0x2ad34f9bd1b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2ad34f9bd340"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad34f9bd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2ad34f9b6c90" loc="52:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2ad34f9b6c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad34f9b5ac0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad34f9b44e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad34f9b4020"/>
        <function-ref name="overflow" scoped="" ref="0x2ad34f9b49a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x2ad34f9bc230" loc="48:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x2ad34f9bc230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad34f9bc5d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad34f9bc760"/>
        <function-ref name="request" scoped="" ref="0x2ad34f9bc8f0"/>
        <function-ref name="granted" scoped="" ref="0x2ad34f9bca80"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad34f9bcc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ad34f9bf020" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ad34f9bf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad34f9bf3c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad34f9bf550"/>
        <function-ref name="request" scoped="" ref="0x2ad34f9bf6e0"/>
        <function-ref name="granted" scoped="" ref="0x2ad34f9bf870"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad34f9bfa00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x2ad34f9b6290" loc="51:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x2ad34f9b6290"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2ad34f9b6630"/>
        <function-ref name="txDone" scoped="" ref="0x2ad34f9b67c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ad34f9b4dd0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2ad34f9b4dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ad34f9b2180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ad34f9b2310"/>
        <function-ref name="led1On" scoped="" ref="0x2ad34f9b24a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ad34f9b2630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ad34f9b27c0"/>
        <function-ref name="get" scoped="" ref="0x2ad34f9b2950"/>
        <function-ref name="led1Off" scoped="" ref="0x2ad34f9b2ae0"/>
        <function-ref name="led2On" scoped="" ref="0x2ad34f9b11b0"/>
        <function-ref name="set" scoped="" ref="0x2ad34f9b2e00"/>
        <function-ref name="led2Off" scoped="" ref="0x2ad34f9b2c70"/>
        <function-ref name="led0On" scoped="" ref="0x2ad34f9b1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x2ad34f9d33b0" loc="78:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2ad34f9d33b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2ad34f9d3730"/>
        <function-ref name="txDone" scoped="" ref="0x2ad34f9d38c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2ad34f9d9080" loc="76:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x2ad34f9d9080"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ad34f9d9400"/>
        <function-ref name="stop" scoped="" ref="0x2ad34f9d9590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x2ad34f9d98b0" loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x2ad34f9d98b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2ad34f9d9c30"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2ad34f9d9dc0"/>
        <function-ref name="setUctl" scoped="" ref="0x2ad34f9d8020"/>
        <function-ref name="enableUart" scoped="" ref="0x2ad34f9d81b0"/>
        <function-ref name="setUrctl" scoped="" ref="0x2ad34f9d8340"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2ad34f9d84d0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2ad34f9d8660"/>
        <function-ref name="getUtctl" scoped="" ref="0x2ad34f9d87f0"/>
        <function-ref name="getUrctl" scoped="" ref="0x2ad34f9d8980"/>
        <function-ref name="resetUsart" scoped="" ref="0x2ad34f9d8b10"/>
        <function-ref name="getUmctl" scoped="" ref="0x2ad34f9d8ca0"/>
        <function-ref name="disableIntr" scoped="" ref="0x2ad34f9d8e30"/>
        <function-ref name="setUtctl" scoped="" ref="0x2ad34f9d6020"/>
        <function-ref name="getUbr" scoped="" ref="0x2ad34f9d62b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2ad34f9d6440"/>
        <function-ref name="setUmctl" scoped="" ref="0x2ad34f9d65d0"/>
        <function-ref name="isUartRx" scoped="" ref="0x2ad34f9d6760"/>
        <function-ref name="isUart" scoped="" ref="0x2ad34f9d68f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2ad34f9d6a80"/>
        <function-ref name="isSpi" scoped="" ref="0x2ad34f9d6c10"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2ad34f9d6da0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2ad34f9d5020"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2ad34f9d51b0"/>
        <function-ref name="enableIntr" scoped="" ref="0x2ad34f9d5340"/>
        <function-ref name="getMode" scoped="" ref="0x2ad34f9d54d0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2ad34f9d5860"/>
        <function-ref name="clrIntr" scoped="" ref="0x2ad34f9d59f0"/>
        <function-ref name="setUbr" scoped="" ref="0x2ad34f9d5b80"/>
        <function-ref name="tx" scoped="" ref="0x2ad34f9d5d10"/>
        <function-ref name="getUctl" scoped="" ref="0x2ad34f9d4020"/>
        <function-ref name="disableUart" scoped="" ref="0x2ad34f9d41b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2ad34f9d4340"/>
        <function-ref name="setModeUart" scoped="" ref="0x2ad34f9d44d0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2ad34f9d4660"/>
        <function-ref name="rx" scoped="" ref="0x2ad34f9d47f0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2ad34f9d4980"/>
        <function-ref name="isUartTx" scoped="" ref="0x2ad34f9d4b10"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2ad34f9d4ca0"/>
        <function-ref name="disableSpi" scoped="" ref="0x2ad34f9d4e30"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2ad34f9d3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x2ad34f9ec800" loc="80:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x2ad34f9ec800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34f9ecb80"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34f9ecd10"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34f9eb020"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34f9eb1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34f9eb340"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34f9eb4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34f9eb660"/>
        <function-ref name="get" scoped="" ref="0x2ad34f9eb7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34f9eb980"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34f9ebb10"/>
        <function-ref name="set" scoped="" ref="0x2ad34f9ebca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34f9ebe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34f9ea020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34f9ea2b0"/>
        <function-ref name="clr" scoped="" ref="0x2ad34f9ea440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2ad34f9cbdc0" loc="76:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2ad34f9cbdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2ad34f9ca180"/>
        <function-ref name="txDone" scoped="" ref="0x2ad34f9ca310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x2ad34f9ea800" loc="81:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x2ad34f9ea800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34f9eab80"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34f9ead10"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34f9e9020"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34f9e91b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34f9e9340"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34f9e94d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34f9e9660"/>
        <function-ref name="get" scoped="" ref="0x2ad34f9e97f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34f9e9980"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34f9e9b10"/>
        <function-ref name="set" scoped="" ref="0x2ad34f9e9ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34f9e9e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34f9e8020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34f9e82b0"/>
        <function-ref name="clr" scoped="" ref="0x2ad34f9e8440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x2ad34f9e8800" loc="82:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x2ad34f9e8800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34f9e8b80"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34f9e8d10"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34f9e6020"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34f9e61b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34f9e6340"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34f9e64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34f9e6660"/>
        <function-ref name="get" scoped="" ref="0x2ad34f9e67f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34f9e6980"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34f9e6b10"/>
        <function-ref name="set" scoped="" ref="0x2ad34f9e6ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34f9e6e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34f9e5020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34f9e52b0"/>
        <function-ref name="clr" scoped="" ref="0x2ad34f9e5440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x2ad34f9cf020" loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x2ad34f9cf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2ad34f9cf3a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2ad34f9cf530"/>
        <function-ref name="setUctl" scoped="" ref="0x2ad34f9cf6c0"/>
        <function-ref name="enableUart" scoped="" ref="0x2ad34f9cf850"/>
        <function-ref name="setUrctl" scoped="" ref="0x2ad34f9cf9e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2ad34f9cfb70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2ad34f9cfd00"/>
        <function-ref name="getUtctl" scoped="" ref="0x2ad34f9ce020"/>
        <function-ref name="getUrctl" scoped="" ref="0x2ad34f9ce1b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x2ad34f9ce340"/>
        <function-ref name="getUmctl" scoped="" ref="0x2ad34f9ce4d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x2ad34f9ce660"/>
        <function-ref name="setUtctl" scoped="" ref="0x2ad34f9ce7f0"/>
        <function-ref name="getUbr" scoped="" ref="0x2ad34f9cea80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2ad34f9cec10"/>
        <function-ref name="setUmctl" scoped="" ref="0x2ad34f9ceda0"/>
        <function-ref name="isUartRx" scoped="" ref="0x2ad34f9cd020"/>
        <function-ref name="isUart" scoped="" ref="0x2ad34f9cd1b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2ad34f9cd340"/>
        <function-ref name="isSpi" scoped="" ref="0x2ad34f9cd4d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2ad34f9cd660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2ad34f9cd7f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2ad34f9cd980"/>
        <function-ref name="enableIntr" scoped="" ref="0x2ad34f9cdb10"/>
        <function-ref name="getMode" scoped="" ref="0x2ad34f9cdca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2ad34f9cc220"/>
        <function-ref name="clrIntr" scoped="" ref="0x2ad34f9cc3b0"/>
        <function-ref name="setUbr" scoped="" ref="0x2ad34f9cc540"/>
        <function-ref name="tx" scoped="" ref="0x2ad34f9cc6d0"/>
        <function-ref name="getUctl" scoped="" ref="0x2ad34f9cc860"/>
        <function-ref name="disableUart" scoped="" ref="0x2ad34f9cc9f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2ad34f9ccb80"/>
        <function-ref name="setModeUart" scoped="" ref="0x2ad34f9ccd10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2ad34f9cb020"/>
        <function-ref name="rx" scoped="" ref="0x2ad34f9cb1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2ad34f9cb340"/>
        <function-ref name="isUartTx" scoped="" ref="0x2ad34f9cb4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2ad34f9cb660"/>
        <function-ref name="disableSpi" scoped="" ref="0x2ad34f9cb7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2ad34f9cb980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2ad34f9d2710" loc="74:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x2ad34f9d2710"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ad34f9d2a90"/>
        <function-ref name="stop" scoped="" ref="0x2ad34f9d2c20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x2ad34f9c8800" loc="79:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x2ad34f9c8800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34f9c8b80"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34f9c8d10"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34f9ed020"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34f9ed1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34f9ed340"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34f9ed4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34f9ed660"/>
        <function-ref name="get" scoped="" ref="0x2ad34f9ed7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34f9ed980"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34f9edb10"/>
        <function-ref name="set" scoped="" ref="0x2ad34f9edca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34f9ede30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34f9ec020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34f9ec2b0"/>
        <function-ref name="clr" scoped="" ref="0x2ad34f9ec440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x2ad34f9ee860" loc="78:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x2ad34f9ee860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34f9eebe0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34f9eed70"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34f9c9020"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34f9c91b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34f9c9340"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34f9c94d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34f9c9660"/>
        <function-ref name="get" scoped="" ref="0x2ad34f9c97f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34f9c9980"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34f9c9b10"/>
        <function-ref name="set" scoped="" ref="0x2ad34f9c9ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34f9c9e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34f9c8020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34f9c82b0"/>
        <function-ref name="clr" scoped="" ref="0x2ad34f9c8440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x2ad34fa63cc0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x2ad34fa63cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fa620a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fa62230"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fa623c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fa62550"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fa626e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fa62870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fa62a00"/>
        <function-ref name="get" scoped="" ref="0x2ad34fa62b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fa62d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fa61020"/>
        <function-ref name="set" scoped="" ref="0x2ad34fa611b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fa61340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fa614d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fa61760"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fa618f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x2ad34fa81cc0" loc="66:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x2ad34fa81cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fa800a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fa80230"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fa803c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fa80550"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fa806e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fa80870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fa80a00"/>
        <function-ref name="get" scoped="" ref="0x2ad34fa80b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fa80d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fa7f020"/>
        <function-ref name="set" scoped="" ref="0x2ad34fa7f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fa7f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fa7f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fa7f760"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fa7f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x2ad34fad13d0" loc="145:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x2ad34fad13d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fad1750"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fad18e0"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fad1a70"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fad1c00"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fad1d90"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fad0020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fad01b0"/>
        <function-ref name="get" scoped="" ref="0x2ad34fad0340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fad04d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fad0660"/>
        <function-ref name="set" scoped="" ref="0x2ad34fad07f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fad0980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fad0b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fad0da0"/>
        <function-ref name="clr" scoped="" ref="0x2ad34facf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x2ad34fae03e0" loc="165:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x2ad34fae03e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fae0760"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fae08f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fae0a80"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fae0c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fae0da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fadf020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fadf1b0"/>
        <function-ref name="get" scoped="" ref="0x2ad34fadf340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fadf4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fadf660"/>
        <function-ref name="set" scoped="" ref="0x2ad34fadf7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fadf980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fadfb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fadfda0"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fade020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x2ad34facf3f0" loc="146:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x2ad34facf3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34facf770"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34facf900"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34facfa90"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34facfc20"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34facfdb0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34face020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34face1b0"/>
        <function-ref name="get" scoped="" ref="0x2ad34face340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34face4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34face660"/>
        <function-ref name="set" scoped="" ref="0x2ad34face7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34face980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34faceb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34faceda0"/>
        <function-ref name="clr" scoped="" ref="0x2ad34facd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x2ad34fa7dcc0" loc="71:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x2ad34fa7dcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fa7c0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fa7c230"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fa7c3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fa7c550"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fa7c6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fa7c870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fa7ca00"/>
        <function-ref name="get" scoped="" ref="0x2ad34fa7cb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fa7cd20"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fa7b020"/>
        <function-ref name="set" scoped="" ref="0x2ad34fa7b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fa7b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fa7b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fa7b760"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fa7b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x2ad34fa9a020" loc="84:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x2ad34fa9a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fa9a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fa9a530"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fa9a6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fa9a850"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fa9a9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fa9ab70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fa9ad00"/>
        <function-ref name="get" scoped="" ref="0x2ad34fa99020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fa991b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fa99340"/>
        <function-ref name="set" scoped="" ref="0x2ad34fa994d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fa99660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fa997f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fa99a80"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fa99c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x2ad34faba020" loc="97:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x2ad34faba020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34faba3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34faba530"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34faba6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34faba850"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34faba9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fabab70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fabad00"/>
        <function-ref name="get" scoped="" ref="0x2ad34fab9020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fab91b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fab9340"/>
        <function-ref name="set" scoped="" ref="0x2ad34fab94d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fab9660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fab97f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fab9a80"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fab9c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x2ad34faa9020" loc="108:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x2ad34faa9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34faa93a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34faa9530"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34faa96c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34faa9850"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34faa99e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34faa9b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34faa9d00"/>
        <function-ref name="get" scoped="" ref="0x2ad34faa8020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34faa81b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34faa8340"/>
        <function-ref name="set" scoped="" ref="0x2ad34faa84d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34faa8660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34faa87f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34faa8a80"/>
        <function-ref name="clr" scoped="" ref="0x2ad34faa8c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x2ad34fac93f0" loc="149:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x2ad34fac93f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fac9770"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fac9900"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fac9a90"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fac9c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fac9db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fac8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fac81b0"/>
        <function-ref name="get" scoped="" ref="0x2ad34fac8340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fac84d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fac8660"/>
        <function-ref name="set" scoped="" ref="0x2ad34fac87f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fac8980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fac8b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fac8da0"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fac7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x2ad34faed3e0" loc="159:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x2ad34faed3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34faed760"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34faed8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34faeda80"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34faedc10"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34faedda0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34faec020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34faec1b0"/>
        <function-ref name="get" scoped="" ref="0x2ad34faec340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34faec4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34faec660"/>
        <function-ref name="set" scoped="" ref="0x2ad34faec7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34faec980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34faecb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34faecda0"/>
        <function-ref name="clr" scoped="" ref="0x2ad34faeb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x2ad34fad83f0" loc="171:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x2ad34fad83f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fad8770"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fad8900"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fad8a90"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fad8c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fad8db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fad7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fad71b0"/>
        <function-ref name="get" scoped="" ref="0x2ad34fad7340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fad74d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fad7660"/>
        <function-ref name="set" scoped="" ref="0x2ad34fad77f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fad7980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fad7b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fad7da0"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fb0a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x2ad34fa5dcc0" loc="56:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x2ad34fa5dcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fa5c0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fa5c230"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fa5c3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fa5c550"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fa5c6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fa5c870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fa5ca00"/>
        <function-ref name="get" scoped="" ref="0x2ad34fa5cb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fa5cd20"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fa5b020"/>
        <function-ref name="set" scoped="" ref="0x2ad34fa5b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fa5b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fa5b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fa5b760"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fa5b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x2ad34fac73f0" loc="150:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x2ad34fac73f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fac7770"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fac7900"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fac7a90"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fac7c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fac7db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fac6020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fac61b0"/>
        <function-ref name="get" scoped="" ref="0x2ad34fac6340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fac64d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fac6660"/>
        <function-ref name="set" scoped="" ref="0x2ad34fac67f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fac6980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fac6b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fac6da0"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fac5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x2ad34fa59cc0" loc="61:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x2ad34fa59cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fa580a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fa58230"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fa583c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fa58550"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fa586e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fa58870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fa58a00"/>
        <function-ref name="get" scoped="" ref="0x2ad34fa58b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fa58d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fa57020"/>
        <function-ref name="set" scoped="" ref="0x2ad34fa571b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fa57340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fa574d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fa57760"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fa578f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x2ad34fa77cc0" loc="74:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x2ad34fa77cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fa750a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fa75230"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fa753c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fa75550"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fa756e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fa75870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fa75a00"/>
        <function-ref name="get" scoped="" ref="0x2ad34fa75b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fa75d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fa74020"/>
        <function-ref name="set" scoped="" ref="0x2ad34fa741b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fa74340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fa744d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fa74760"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fa748f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x2ad34fa94020" loc="87:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x2ad34fa94020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fa943a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fa94530"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fa946c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fa94850"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fa949e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fa94b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fa94d00"/>
        <function-ref name="get" scoped="" ref="0x2ad34fa93020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fa931b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fa93340"/>
        <function-ref name="set" scoped="" ref="0x2ad34fa934d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fa93660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fa937f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fa93a80"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fa93c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x2ad34fab4020" loc="100:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x2ad34fab4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fab43a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fab4530"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fab46c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fab4850"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fab49e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fab4b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fab4d00"/>
        <function-ref name="get" scoped="" ref="0x2ad34fab3020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fab31b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fab3340"/>
        <function-ref name="set" scoped="" ref="0x2ad34fab34d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fab3660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fab37f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fab3a80"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fab3c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x2ad34faa3020" loc="111:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x2ad34faa3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34faa33a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34faa3530"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34faa36c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34faa3850"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34faa39e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34faa3b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34faa3d00"/>
        <function-ref name="get" scoped="" ref="0x2ad34fad6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fad61b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fad6340"/>
        <function-ref name="set" scoped="" ref="0x2ad34fad64d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fad6660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fad67f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fad6a80"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fad6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x2ad34fa67cc0" loc="51:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x2ad34fa67cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fa660a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fa66230"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fa663c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fa66550"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fa666e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fa66870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fa66a00"/>
        <function-ref name="get" scoped="" ref="0x2ad34fa66b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fa66d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fa65020"/>
        <function-ref name="set" scoped="" ref="0x2ad34fa651b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fa65340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fa654d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fa65760"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fa658f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x2ad34fa85cc0" loc="64:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x2ad34fa85cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fa84180"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fa84310"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fa844a0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fa84630"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fa847c0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fa84950"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fa84ae0"/>
        <function-ref name="get" scoped="" ref="0x2ad34fa84c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fa84e00"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fa83020"/>
        <function-ref name="set" scoped="" ref="0x2ad34fa831b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fa83340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fa834d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fa83760"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fa838f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x2ad34fa70cc0" loc="77:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x2ad34fa70cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34faa20a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34faa2230"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34faa23c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34faa2550"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34faa26e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34faa2870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34faa2a00"/>
        <function-ref name="get" scoped="" ref="0x2ad34faa2b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34faa2d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34faa1020"/>
        <function-ref name="set" scoped="" ref="0x2ad34faa11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34faa1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34faa14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34faa1760"/>
        <function-ref name="clr" scoped="" ref="0x2ad34faa18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x2ad34fad33f0" loc="144:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x2ad34fad33f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fad3770"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fad3900"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fad3a90"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fad3c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fad3db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fad2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fad21b0"/>
        <function-ref name="get" scoped="" ref="0x2ad34fad2340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fad24d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fad2660"/>
        <function-ref name="set" scoped="" ref="0x2ad34fad27f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fad2980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fad2b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fad2da0"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fad1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x2ad34fae73e0" loc="162:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x2ad34fae73e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fae7760"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fae78f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fae7a80"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fae7c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fae7da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fae5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fae51b0"/>
        <function-ref name="get" scoped="" ref="0x2ad34fae5340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fae54d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fae5660"/>
        <function-ref name="set" scoped="" ref="0x2ad34fae57f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fae5980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fae5b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fae5da0"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fae4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x2ad34fada3e0" loc="169:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x2ad34fada3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fada760"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fada8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fadaa80"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fadac10"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fadada0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fad9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fad91b0"/>
        <function-ref name="get" scoped="" ref="0x2ad34fad9340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fad94d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fad9660"/>
        <function-ref name="set" scoped="" ref="0x2ad34fad97f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fad9980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fad9b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fad9da0"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fad8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x2ad34fabf3f0" loc="155:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x2ad34fabf3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fabf770"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fabf900"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fabfa90"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fabfc20"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fabfdb0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fabe020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fabe1b0"/>
        <function-ref name="get" scoped="" ref="0x2ad34fabe340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fabe4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fabe660"/>
        <function-ref name="set" scoped="" ref="0x2ad34fabe7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fabe980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fabeb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fabeda0"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fabd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x2ad34fa9fcc0" loc="82:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x2ad34fa9fcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fa9e410"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fa9e5a0"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fa9e730"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fa9e8c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fa9ea50"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fa9ebe0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fa9ed70"/>
        <function-ref name="get" scoped="" ref="0x2ad34fa9d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fa9d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fa9d340"/>
        <function-ref name="set" scoped="" ref="0x2ad34fa9d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fa9d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fa9d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fa9da80"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fa9dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x2ad34fa8a020" loc="95:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x2ad34fa8a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fa8a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fa8a530"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fa8a6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fa8a850"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fa8a9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fa8ab70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fa8ad00"/>
        <function-ref name="get" scoped="" ref="0x2ad34fa89020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fa891b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fa89340"/>
        <function-ref name="set" scoped="" ref="0x2ad34fa894d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fa89660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fa897f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fa89a80"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fa89c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x2ad34faad020" loc="106:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x2ad34faad020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34faad3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34faad530"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34faad6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34faad850"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34faad9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34faadb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34faadd00"/>
        <function-ref name="get" scoped="" ref="0x2ad34faac020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34faac1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34faac340"/>
        <function-ref name="set" scoped="" ref="0x2ad34faac4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34faac660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34faac7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34faaca80"/>
        <function-ref name="clr" scoped="" ref="0x2ad34faacc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x2ad34fae43e0" loc="163:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x2ad34fae43e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fae4760"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fae48f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fae4a80"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fae4c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fae4da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fae3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fae31b0"/>
        <function-ref name="get" scoped="" ref="0x2ad34fae3340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fae34d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fae3660"/>
        <function-ref name="set" scoped="" ref="0x2ad34fae37f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fae3980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fae3b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fae3da0"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fae2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x2ad34fac53e0" loc="152:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x2ad34fac53e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fac5760"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fac58f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fac5a80"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fac5c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fac5da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fac4020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fac41b0"/>
        <function-ref name="get" scoped="" ref="0x2ad34fac4340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fac44d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fac4660"/>
        <function-ref name="set" scoped="" ref="0x2ad34fac47f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fac4980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fac4b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fac4da0"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fac3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x2ad34fa61cc0" loc="54:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x2ad34fa61cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fa600a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fa60230"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fa603c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fa60550"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fa606e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fa60870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fa60a00"/>
        <function-ref name="get" scoped="" ref="0x2ad34fa60b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fa60d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fa5f020"/>
        <function-ref name="set" scoped="" ref="0x2ad34fa5f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fa5f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fa5f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fa5f760"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fa5f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x2ad34fa7fcc0" loc="67:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x2ad34fa7fcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fa7e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fa7e230"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fa7e3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fa7e550"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fa7e6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fa7e870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fa7ea00"/>
        <function-ref name="get" scoped="" ref="0x2ad34fa7eb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fa7ed20"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fa7d020"/>
        <function-ref name="set" scoped="" ref="0x2ad34fa7d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fa7d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fa7d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fa7d760"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fa7d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x2ad34fab2020" loc="104:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x2ad34fab2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fab23a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fab2530"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fab26c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fab2850"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fab29e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fab2b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fab2d00"/>
        <function-ref name="get" scoped="" ref="0x2ad34fab1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fab11b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fab1340"/>
        <function-ref name="set" scoped="" ref="0x2ad34fab14d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fab1660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fab17f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fab1a80"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fab1c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x2ad34fa7bcc0" loc="72:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x2ad34fa7bcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fa7a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fa7a230"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fa7a3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fa7a550"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fa7a6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fa7a870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fa7aa00"/>
        <function-ref name="get" scoped="" ref="0x2ad34fa7ab90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fa7ad20"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fa79020"/>
        <function-ref name="set" scoped="" ref="0x2ad34fa791b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fa79340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fa794d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fa79760"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fa798f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x2ad34fa98020" loc="85:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x2ad34fa98020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fa983a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fa98530"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fa986c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fa98850"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fa989e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fa98b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fa98d00"/>
        <function-ref name="get" scoped="" ref="0x2ad34fa97020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fa971b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fa97340"/>
        <function-ref name="set" scoped="" ref="0x2ad34fa974d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fa97660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fa977f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fa97a80"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fa97c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x2ad34fab8020" loc="98:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x2ad34fab8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fab83a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fab8530"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fab86c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fab8850"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fab89e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fab8b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fab8d00"/>
        <function-ref name="get" scoped="" ref="0x2ad34fab7020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fab71b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fab7340"/>
        <function-ref name="set" scoped="" ref="0x2ad34fab74d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fab7660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fab77f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fab7a80"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fab7c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x2ad34faa7020" loc="109:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x2ad34faa7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34faa73a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34faa7530"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34faa76c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34faa7850"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34faa79e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34faa7b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34faa7d00"/>
        <function-ref name="get" scoped="" ref="0x2ad34faa6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34faa61b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34faa6340"/>
        <function-ref name="set" scoped="" ref="0x2ad34faa64d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34faa6660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34faa67f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34faa6a80"/>
        <function-ref name="clr" scoped="" ref="0x2ad34faa6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x2ad34fac13f0" loc="154:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x2ad34fac13f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fac1770"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fac1900"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fac1a90"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fac1c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fac1db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fac0020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fac01b0"/>
        <function-ref name="get" scoped="" ref="0x2ad34fac0340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fac04d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fac0660"/>
        <function-ref name="set" scoped="" ref="0x2ad34fac07f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fac0980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fac0b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fac0da0"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fabf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x2ad34fa6de10" loc="49:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x2ad34fa6de10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fa6a1c0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fa6a350"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fa6a4e0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fa6a670"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fa6a800"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fa6a990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fa6ab20"/>
        <function-ref name="get" scoped="" ref="0x2ad34fa6acb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fa6ae40"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fa69020"/>
        <function-ref name="set" scoped="" ref="0x2ad34fa691b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fa69340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fa694d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fa69760"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fa698f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x2ad34fa57cc0" loc="62:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x2ad34fa57cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fa880a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fa88230"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fa883c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fa88550"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fa886e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fa88870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fa88a00"/>
        <function-ref name="get" scoped="" ref="0x2ad34fa88b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fa88d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fa87020"/>
        <function-ref name="set" scoped="" ref="0x2ad34fa871b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fa87340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fa874d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fa87760"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fa878f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x2ad34fa74cc0" loc="75:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x2ad34fa74cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fa730a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fa73230"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fa733c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fa73550"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fa736e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fa73870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fa73a00"/>
        <function-ref name="get" scoped="" ref="0x2ad34fa73b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fa73d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fa72020"/>
        <function-ref name="set" scoped="" ref="0x2ad34fa721b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fa72340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fa724d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fa72760"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fa728f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x2ad34fa92020" loc="88:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x2ad34fa92020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fa923a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fa92530"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fa926c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fa92850"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fa929e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fa92b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fa92d00"/>
        <function-ref name="get" scoped="" ref="0x2ad34fa91020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fa911b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fa91340"/>
        <function-ref name="set" scoped="" ref="0x2ad34fa914d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fa91660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fa917f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fa91a80"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fa91c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x2ad34fabd3f0" loc="156:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x2ad34fabd3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fabd770"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fabd900"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fabda90"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fabdc20"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fabddb0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34faf0020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34faf01b0"/>
        <function-ref name="get" scoped="" ref="0x2ad34faf0340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34faf04d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34faf0660"/>
        <function-ref name="set" scoped="" ref="0x2ad34faf07f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34faf0980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34faf0b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34faf0da0"/>
        <function-ref name="clr" scoped="" ref="0x2ad34faef020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x2ad34faeb3e0" loc="160:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x2ad34faeb3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34faeb760"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34faeb8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34faeba80"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34faebc10"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34faebda0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34faea020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34faea1b0"/>
        <function-ref name="get" scoped="" ref="0x2ad34faea340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34faea4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34faea660"/>
        <function-ref name="set" scoped="" ref="0x2ad34faea7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34faea980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34faeab10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34faeada0"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fae9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x2ad34fade3e0" loc="166:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x2ad34fade3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fade760"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fade8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fadea80"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fadec10"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fadeda0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fadd020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fadd1b0"/>
        <function-ref name="get" scoped="" ref="0x2ad34fadd340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fadd4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fadd660"/>
        <function-ref name="set" scoped="" ref="0x2ad34fadd7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fadd980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34faddb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34faddda0"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fadc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x2ad34fa8e020" loc="93:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x2ad34fa8e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fa8e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fa8e530"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fa8e6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fa8e850"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fa8e9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fa8eb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fa8ed00"/>
        <function-ref name="get" scoped="" ref="0x2ad34fa8d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fa8d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fa8d340"/>
        <function-ref name="set" scoped="" ref="0x2ad34fa8d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fa8d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fa8d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fa8da80"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fa8dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x2ad34faef3f0" loc="157:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x2ad34faef3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34faef770"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34faef900"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34faefa90"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34faefc20"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34faefdb0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34faee020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34faee1b0"/>
        <function-ref name="get" scoped="" ref="0x2ad34faee340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34faee4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34faee660"/>
        <function-ref name="set" scoped="" ref="0x2ad34faee7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34faee980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34faeeb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34faeeda0"/>
        <function-ref name="clr" scoped="" ref="0x2ad34faed020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x2ad34fa65cc0" loc="52:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x2ad34fa65cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fa640a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fa64230"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fa643c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fa64550"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fa646e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fa64870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fa64a00"/>
        <function-ref name="get" scoped="" ref="0x2ad34fa64b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fa64d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fa63020"/>
        <function-ref name="set" scoped="" ref="0x2ad34fa631b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fa63340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fa634d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fa63760"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fa638f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x2ad34fa83cc0" loc="65:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x2ad34fa83cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fa820a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fa82230"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fa823c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fa82550"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fa826e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fa82870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fa82a00"/>
        <function-ref name="get" scoped="" ref="0x2ad34fa82b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fa82d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fa81020"/>
        <function-ref name="set" scoped="" ref="0x2ad34fa811b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fa81340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fa814d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fa81760"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fa818f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x2ad34faa1cc0" loc="78:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x2ad34faa1cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34faa00a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34faa0230"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34faa03c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34faa0550"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34faa06e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34faa0870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34faa0a00"/>
        <function-ref name="get" scoped="" ref="0x2ad34faa0b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34faa0d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fa9f020"/>
        <function-ref name="set" scoped="" ref="0x2ad34fa9f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fa9f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fa9f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fa9f760"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fa9f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x2ad34fac33f0" loc="153:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x2ad34fac33f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fac3770"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fac3900"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fac3a90"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fac3c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fac3db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fac2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fac21b0"/>
        <function-ref name="get" scoped="" ref="0x2ad34fac2340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fac24d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fac2660"/>
        <function-ref name="set" scoped="" ref="0x2ad34fac27f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fac2980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fac2b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fac2da0"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fac1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x2ad34fae23e0" loc="164:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x2ad34fae23e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fae2760"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fae28f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fae2a80"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fae2c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fae2da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fae1020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fae11b0"/>
        <function-ref name="get" scoped="" ref="0x2ad34fae1340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fae14d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fae1660"/>
        <function-ref name="set" scoped="" ref="0x2ad34fae17f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fae1980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fae1b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fae1da0"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fae0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x2ad34fa9c020" loc="83:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x2ad34fa9c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fa9c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fa9c530"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fa9c6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fa9c850"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fa9c9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fa9cb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fa9cd00"/>
        <function-ref name="get" scoped="" ref="0x2ad34fa9b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fa9b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fa9b340"/>
        <function-ref name="set" scoped="" ref="0x2ad34fa9b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fa9b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fa9b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fa9ba80"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fa9bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x2ad34fabc020" loc="96:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x2ad34fabc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fabc3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fabc530"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fabc6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fabc850"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fabc9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fabcb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fabcd00"/>
        <function-ref name="get" scoped="" ref="0x2ad34fabb020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fabb1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fabb340"/>
        <function-ref name="set" scoped="" ref="0x2ad34fabb4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fabb660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fabb7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fabba80"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fabbc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x2ad34faab020" loc="107:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x2ad34faab020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34faab3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34faab530"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34faab6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34faab850"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34faab9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34faabb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34faabd00"/>
        <function-ref name="get" scoped="" ref="0x2ad34faaa020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34faaa1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34faaa340"/>
        <function-ref name="set" scoped="" ref="0x2ad34faaa4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34faaa660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34faaa7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34faaaa80"/>
        <function-ref name="clr" scoped="" ref="0x2ad34faaac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x2ad34fa5fcc0" loc="55:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x2ad34fa5fcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fa5e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fa5e230"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fa5e3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fa5e550"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fa5e6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fa5e870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fa5ea00"/>
        <function-ref name="get" scoped="" ref="0x2ad34fa5eb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fa5ed20"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fa5d020"/>
        <function-ref name="set" scoped="" ref="0x2ad34fa5d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fa5d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fa5d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fa5d760"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fa5d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x2ad34fab0020" loc="105:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x2ad34fab0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fab03a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fab0530"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fab06c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fab0850"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fab09e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fab0b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fab0d00"/>
        <function-ref name="get" scoped="" ref="0x2ad34faaf020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34faaf1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34faaf340"/>
        <function-ref name="set" scoped="" ref="0x2ad34faaf4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34faaf660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34faaf7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34faafa80"/>
        <function-ref name="clr" scoped="" ref="0x2ad34faafc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x2ad34fa5bcc0" loc="60:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x2ad34fa5bcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fa5a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fa5a230"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fa5a3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fa5a550"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fa5a6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fa5a870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fa5aa00"/>
        <function-ref name="get" scoped="" ref="0x2ad34fa5ab90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fa5ad20"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fa59020"/>
        <function-ref name="set" scoped="" ref="0x2ad34fa591b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fa59340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fa594d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fa59760"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fa598f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x2ad34fa79cc0" loc="73:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x2ad34fa79cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fa780a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fa78230"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fa783c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fa78550"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fa786e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fa78870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fa78a00"/>
        <function-ref name="get" scoped="" ref="0x2ad34fa78b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fa78d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fa77020"/>
        <function-ref name="set" scoped="" ref="0x2ad34fa771b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fa77340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fa774d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fa77760"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fa778f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x2ad34fa96020" loc="86:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x2ad34fa96020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fa963a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fa96530"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fa966c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fa96850"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fa969e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fa96b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fa96d00"/>
        <function-ref name="get" scoped="" ref="0x2ad34fa95020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fa951b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fa95340"/>
        <function-ref name="set" scoped="" ref="0x2ad34fa954d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fa95660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fa957f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fa95a80"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fa95c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x2ad34fab6020" loc="99:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x2ad34fab6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fab63a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fab6530"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fab66c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fab6850"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fab69e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fab6b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fab6d00"/>
        <function-ref name="get" scoped="" ref="0x2ad34fab5020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fab51b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fab5340"/>
        <function-ref name="set" scoped="" ref="0x2ad34fab54d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fab5660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fab57f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fab5a80"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fab5c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x2ad34faa5020" loc="110:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x2ad34faa5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34faa53a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34faa5530"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34faa56c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34faa5850"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34faa59e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34faa5b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34faa5d00"/>
        <function-ref name="get" scoped="" ref="0x2ad34faa4020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34faa41b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34faa4340"/>
        <function-ref name="set" scoped="" ref="0x2ad34faa44d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34faa4660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34faa47f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34faa4a80"/>
        <function-ref name="clr" scoped="" ref="0x2ad34faa4c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x2ad34fa69cc0" loc="50:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x2ad34fa69cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fa680a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fa68230"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fa683c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fa68550"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fa686e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fa68870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fa68a00"/>
        <function-ref name="get" scoped="" ref="0x2ad34fa68b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fa68d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fa67020"/>
        <function-ref name="set" scoped="" ref="0x2ad34fa671b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fa67340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fa674d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fa67760"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fa678f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x2ad34fa87cc0" loc="63:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x2ad34fa87cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fa860a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fa86230"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fa863c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fa86550"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fa866e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fa86870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fa86a00"/>
        <function-ref name="get" scoped="" ref="0x2ad34fa86b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fa86d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fa85020"/>
        <function-ref name="set" scoped="" ref="0x2ad34fa851b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fa85340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fa854d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fa85760"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fa858f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x2ad34fa72cc0" loc="76:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x2ad34fa72cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fa710a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fa71230"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fa713c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fa71550"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fa716e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fa71870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fa71a00"/>
        <function-ref name="get" scoped="" ref="0x2ad34fa71b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fa71d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fa70020"/>
        <function-ref name="set" scoped="" ref="0x2ad34fa701b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fa70340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fa704d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fa70760"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fa708f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x2ad34fa90020" loc="89:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x2ad34fa90020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fa903a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fa90530"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fa906c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fa90850"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fa909e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fa90b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fa90d00"/>
        <function-ref name="get" scoped="" ref="0x2ad34fa8f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fa8f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fa8f340"/>
        <function-ref name="set" scoped="" ref="0x2ad34fa8f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fa8f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fa8f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fa8fa80"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fa8fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x2ad34facb3d0" loc="148:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x2ad34facb3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34facb750"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34facb8e0"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34facba70"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34facbc00"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34facbd90"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34faca020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34faca1b0"/>
        <function-ref name="get" scoped="" ref="0x2ad34faca340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34faca4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34faca660"/>
        <function-ref name="set" scoped="" ref="0x2ad34faca7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34faca980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34facab10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34facada0"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fac9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x2ad34fae93e0" loc="161:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x2ad34fae93e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fae9760"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fae98f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fae9a80"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fae9c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fae9da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fae8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fae81b0"/>
        <function-ref name="get" scoped="" ref="0x2ad34fae8340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fae84d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fae8660"/>
        <function-ref name="set" scoped="" ref="0x2ad34fae87f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fae8980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fae8b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fae8da0"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fae7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x2ad34facd3f0" loc="147:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x2ad34facd3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34facd770"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34facd900"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34facda90"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34facdc20"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34facddb0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34facc020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34facc1b0"/>
        <function-ref name="get" scoped="" ref="0x2ad34facc340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34facc4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34facc660"/>
        <function-ref name="set" scoped="" ref="0x2ad34facc7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34facc980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34faccb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34faccda0"/>
        <function-ref name="clr" scoped="" ref="0x2ad34facb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x2ad34fa8c020" loc="94:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x2ad34fa8c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fa8c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fa8c530"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fa8c6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fa8c850"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fa8c9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fa8cb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fa8cd00"/>
        <function-ref name="get" scoped="" ref="0x2ad34fa8b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fa8b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fa8b340"/>
        <function-ref name="set" scoped="" ref="0x2ad34fa8b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fa8b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fa8b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fa8ba80"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fa8bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x2ad34fadc3e0" loc="168:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x2ad34fadc3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fadc760"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fadc8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fadca80"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fadcc10"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fadcda0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fadb020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fadb1b0"/>
        <function-ref name="get" scoped="" ref="0x2ad34fadb340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fadb4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fadb660"/>
        <function-ref name="set" scoped="" ref="0x2ad34fadb7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fadb980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fadbb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fadbda0"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fada020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x2ad34fb0a3f0" loc="172:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x2ad34fb0a3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fb0a770"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fb0a900"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fb0aa90"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fb0ac20"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fb0adb0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fb09020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fb091b0"/>
        <function-ref name="get" scoped="" ref="0x2ad34fb09340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fb094d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fb09660"/>
        <function-ref name="set" scoped="" ref="0x2ad34fb097f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fb09980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fb09b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fb09da0"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fb08020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x2ad34fad5060" loc="143:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x2ad34fad5060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fad57e0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fad5970"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fad5b00"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fad5c90"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fad5e20"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fad4020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fad41b0"/>
        <function-ref name="get" scoped="" ref="0x2ad34fad4340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fad44d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fad4660"/>
        <function-ref name="set" scoped="" ref="0x2ad34fad47f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fad4980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fad4b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fad4da0"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fad3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad34fb143f0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ad34fb143f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fb14770"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fb14900"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fb14a90"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fb14c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fb14db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fb13020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fb131b0"/>
        <function-ref name="get" scoped="" ref="0x2ad34fb13340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fb134d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fb13660"/>
        <function-ref name="set" scoped="" ref="0x2ad34fb137f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fb13980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fb13b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fb13da0"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fb12020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad34fb10e00" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ad34fb10e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fb0f1c0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fb0f350"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fb0f4e0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fb0f670"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fb0f800"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fb0f990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fb0fb20"/>
        <function-ref name="get" scoped="" ref="0x2ad34fb0fcb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fb0fe40"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fb0e020"/>
        <function-ref name="set" scoped="" ref="0x2ad34fb0e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fb0e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fb0e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fb0e760"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fb0e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad34fb0b740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ad34fb0b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fb0bac0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fb0bc50"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fb0bde0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fb40020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fb401b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fb40340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fb404d0"/>
        <function-ref name="get" scoped="" ref="0x2ad34fb40660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fb407f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fb40980"/>
        <function-ref name="set" scoped="" ref="0x2ad34fb40b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fb40ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fb40e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fb3f120"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fb3f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad34fb3c100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ad34fb3c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fb3c480"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fb3c610"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fb3c7a0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fb3c930"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fb3cac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fb3cc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fb3cde0"/>
        <function-ref name="get" scoped="" ref="0x2ad34fb3b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fb3b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fb3b340"/>
        <function-ref name="set" scoped="" ref="0x2ad34fb3b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fb3b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fb3b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fb3ba80"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fb3bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad34fb37d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ad34fb37d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fb360e0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fb36270"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fb36400"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fb36590"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fb36720"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fb368b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fb36a40"/>
        <function-ref name="get" scoped="" ref="0x2ad34fb36bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fb36d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fb35020"/>
        <function-ref name="set" scoped="" ref="0x2ad34fb351b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fb35340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fb354d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fb35760"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fb358f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad34fb32740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ad34fb32740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fb32ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fb32c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fb32de0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fb31020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fb311b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fb31340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fb314d0"/>
        <function-ref name="get" scoped="" ref="0x2ad34fb31660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fb317f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fb31980"/>
        <function-ref name="set" scoped="" ref="0x2ad34fb31b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fb31ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fb31e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fb30120"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fb302b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad34fb2d100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ad34fb2d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fb2d480"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fb2d610"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fb2d7a0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fb2d930"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fb2dac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fb2dc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fb2dde0"/>
        <function-ref name="get" scoped="" ref="0x2ad34fb2c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fb2c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fb2c340"/>
        <function-ref name="set" scoped="" ref="0x2ad34fb2c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fb2c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fb2c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fb2ca80"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fb2cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad34fb29d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ad34fb29d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fb280e0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fb28270"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fb28400"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fb28590"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fb28720"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fb288b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fb28a40"/>
        <function-ref name="get" scoped="" ref="0x2ad34fb28bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fb28d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fb27020"/>
        <function-ref name="set" scoped="" ref="0x2ad34fb271b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fb27340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fb274d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fb27760"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fb278f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad34fb5a740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ad34fb5a740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fb5aac0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fb5ac50"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fb5ade0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fb59020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fb591b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fb59340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fb594d0"/>
        <function-ref name="get" scoped="" ref="0x2ad34fb59660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fb597f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fb59980"/>
        <function-ref name="set" scoped="" ref="0x2ad34fb59b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fb59ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fb59e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fb58120"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fb582b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad34fb55100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ad34fb55100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fb55480"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fb55610"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fb557a0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fb55930"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fb55ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fb55c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fb55de0"/>
        <function-ref name="get" scoped="" ref="0x2ad34fb54020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fb541b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fb54340"/>
        <function-ref name="set" scoped="" ref="0x2ad34fb544d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fb54660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fb547f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fb54a80"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fb54c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad34fb51d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ad34fb51d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fb500e0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fb50270"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fb50400"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fb50590"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fb50720"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fb508b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fb50a40"/>
        <function-ref name="get" scoped="" ref="0x2ad34fb50bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fb50d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fb4f020"/>
        <function-ref name="set" scoped="" ref="0x2ad34fb4f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fb4f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fb4f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fb4f760"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fb4f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad34fb4c740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ad34fb4c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fb4cac0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fb4cc50"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fb4cde0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fb4a020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fb4a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fb4a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fb4a4d0"/>
        <function-ref name="get" scoped="" ref="0x2ad34fb4a660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fb4a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fb4a980"/>
        <function-ref name="set" scoped="" ref="0x2ad34fb4ab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fb4aca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fb4ae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fb49120"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fb492b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad34fb46260" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ad34fb46260"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fb465e0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fb46770"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fb46900"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fb46a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fb46c20"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fb46db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fb45020"/>
        <function-ref name="get" scoped="" ref="0x2ad34fb451b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fb45340"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fb454d0"/>
        <function-ref name="set" scoped="" ref="0x2ad34fb45660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fb457f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fb45980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fb45c10"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fb45da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad34fb42d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ad34fb42d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fb410e0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fb41270"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fb41400"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fb41590"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fb41720"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fb418b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fb41a40"/>
        <function-ref name="get" scoped="" ref="0x2ad34fb41bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fb41d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fb76020"/>
        <function-ref name="set" scoped="" ref="0x2ad34fb761b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fb76340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fb764d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fb76760"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fb768f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad34fb73740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ad34fb73740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fb73ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fb73c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fb73de0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fb72020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fb721b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fb72340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fb724d0"/>
        <function-ref name="get" scoped="" ref="0x2ad34fb72660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fb727f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fb72980"/>
        <function-ref name="set" scoped="" ref="0x2ad34fb72b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fb72ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fb72e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fb71120"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fb712b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad34fb6e100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ad34fb6e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fb6e480"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fb6e610"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fb6e7a0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fb6e930"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fb6eac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fb6ec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fb6ede0"/>
        <function-ref name="get" scoped="" ref="0x2ad34fb6d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fb6d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fb6d340"/>
        <function-ref name="set" scoped="" ref="0x2ad34fb6d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fb6d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fb6d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fb6da80"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fb6dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad34fb6ad10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ad34fb6ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fb690e0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fb69270"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fb69400"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fb69590"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fb69720"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fb698b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fb69a40"/>
        <function-ref name="get" scoped="" ref="0x2ad34fb69bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fb69d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fb68020"/>
        <function-ref name="set" scoped="" ref="0x2ad34fb681b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fb68340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fb684d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fb68760"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fb688f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad34fb65740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ad34fb65740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fb65ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fb65c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fb65de0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fb64020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fb641b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fb64340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fb644d0"/>
        <function-ref name="get" scoped="" ref="0x2ad34fb64660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fb647f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fb64980"/>
        <function-ref name="set" scoped="" ref="0x2ad34fb64b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fb64ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fb64e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fb63120"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fb632b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad34fb60100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ad34fb60100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fb60480"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fb60610"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fb607a0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fb60930"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fb60ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fb60c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fb60de0"/>
        <function-ref name="get" scoped="" ref="0x2ad34fb5f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fb5f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fb5f340"/>
        <function-ref name="set" scoped="" ref="0x2ad34fb5f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fb5f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fb5f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fb5fa80"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fb5fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad34fb5cd10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ad34fb5cd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fb900e0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fb90270"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fb90400"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fb90590"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fb90720"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fb908b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fb90a40"/>
        <function-ref name="get" scoped="" ref="0x2ad34fb90bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fb90d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fb8f020"/>
        <function-ref name="set" scoped="" ref="0x2ad34fb8f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fb8f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fb8f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fb8f760"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fb8f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad34fb8c740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ad34fb8c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fb8cac0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fb8cc50"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fb8cde0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fb8b020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fb8b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fb8b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fb8b4d0"/>
        <function-ref name="get" scoped="" ref="0x2ad34fb8b660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fb8b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fb8b980"/>
        <function-ref name="set" scoped="" ref="0x2ad34fb8bb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fb8bca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fb8be30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fb8a120"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fb8a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad34fb87100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ad34fb87100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fb87480"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fb87610"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fb877a0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fb87930"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fb87ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fb87c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fb87de0"/>
        <function-ref name="get" scoped="" ref="0x2ad34fb86020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fb861b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fb86340"/>
        <function-ref name="set" scoped="" ref="0x2ad34fb864d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fb86660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fb867f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fb86a80"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fb86c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad34fb83d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ad34fb83d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fb820e0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fb82270"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fb82400"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fb82590"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fb82720"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fb828b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fb82a40"/>
        <function-ref name="get" scoped="" ref="0x2ad34fb82bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fb82d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fb81020"/>
        <function-ref name="set" scoped="" ref="0x2ad34fb811b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fb81340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fb814d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fb81760"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fb818f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad34fb7e740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ad34fb7e740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fb7eac0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fb7ec50"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fb7ede0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fb7d020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fb7d1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fb7d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fb7d4d0"/>
        <function-ref name="get" scoped="" ref="0x2ad34fb7d660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fb7d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fb7d980"/>
        <function-ref name="set" scoped="" ref="0x2ad34fb7db10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fb7dca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fb7de30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fb7c120"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fb7c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad34fb793f0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ad34fb793f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fb79770"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fb79900"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fb79a90"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fb79c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fb79db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fb78020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fb781b0"/>
        <function-ref name="get" scoped="" ref="0x2ad34fb78340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fb784d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fb78660"/>
        <function-ref name="set" scoped="" ref="0x2ad34fb787f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fb78980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fb78b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fb78da0"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fb77020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad34fbace00" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ad34fbace00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fbab1c0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fbab350"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fbab4e0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fbab670"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fbab800"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fbab990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fbabb20"/>
        <function-ref name="get" scoped="" ref="0x2ad34fbabcb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fbabe40"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fbaa020"/>
        <function-ref name="set" scoped="" ref="0x2ad34fbaa1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fbaa340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fbaa4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fbaa760"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fbaa8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad34fba7740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ad34fba7740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fba7ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fba7c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fba7de0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fba6020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fba61b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fba6340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fba64d0"/>
        <function-ref name="get" scoped="" ref="0x2ad34fba6660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fba67f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fba6980"/>
        <function-ref name="set" scoped="" ref="0x2ad34fba6b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fba6ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fba6e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fba5120"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fba52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad34fba1100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ad34fba1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fba1480"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fba1610"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fba17a0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fba1930"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fba1ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fba1c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fba1de0"/>
        <function-ref name="get" scoped="" ref="0x2ad34fba0020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fba01b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fba0340"/>
        <function-ref name="set" scoped="" ref="0x2ad34fba04d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fba0660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fba07f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fba0a80"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fba0c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad34fb9dd10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ad34fb9dd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fb9c0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fb9c270"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fb9c400"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fb9c590"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fb9c720"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fb9c8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fb9ca40"/>
        <function-ref name="get" scoped="" ref="0x2ad34fb9cbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fb9cd60"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fb9b020"/>
        <function-ref name="set" scoped="" ref="0x2ad34fb9b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fb9b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fb9b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fb9b760"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fb9b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad34fb98740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ad34fb98740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fb98ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fb98c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fb98de0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fb97020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fb971b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fb97340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fb974d0"/>
        <function-ref name="get" scoped="" ref="0x2ad34fb97660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fb977f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fb97980"/>
        <function-ref name="set" scoped="" ref="0x2ad34fb97b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fb97ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fb97e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fb96120"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fb962b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad34fb93100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ad34fb93100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fb93480"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fb93610"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fb937a0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fb93930"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fb93ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fb93c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fb93de0"/>
        <function-ref name="get" scoped="" ref="0x2ad34fb92020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fb921b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fb92340"/>
        <function-ref name="set" scoped="" ref="0x2ad34fb924d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fb92660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fb927f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fb92a80"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fb92c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad34fbc7d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ad34fbc7d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fbc60e0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fbc6270"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fbc6400"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fbc6590"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fbc6720"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fbc68b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fbc6a40"/>
        <function-ref name="get" scoped="" ref="0x2ad34fbc6bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fbc6d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fbc5020"/>
        <function-ref name="set" scoped="" ref="0x2ad34fbc51b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fbc5340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fbc54d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fbc5760"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fbc58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad34fbc2740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ad34fbc2740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fbc2ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fbc2c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fbc2de0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fbc1020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fbc11b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fbc1340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fbc14d0"/>
        <function-ref name="get" scoped="" ref="0x2ad34fbc1660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fbc17f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fbc1980"/>
        <function-ref name="set" scoped="" ref="0x2ad34fbc1b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fbc1ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fbc1e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fbc0120"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fbc02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad34fbbd100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ad34fbbd100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fbbd480"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fbbd610"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fbbd7a0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fbbd930"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fbbdac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fbbdc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fbbdde0"/>
        <function-ref name="get" scoped="" ref="0x2ad34fbbc020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fbbc1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fbbc340"/>
        <function-ref name="set" scoped="" ref="0x2ad34fbbc4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fbbc660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fbbc7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fbbca80"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fbbcc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad34fbb9d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ad34fbb9d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fbb70e0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fbb7270"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fbb7400"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fbb7590"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fbb7720"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fbb78b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fbb7a40"/>
        <function-ref name="get" scoped="" ref="0x2ad34fbb7bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fbb7d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fbb6020"/>
        <function-ref name="set" scoped="" ref="0x2ad34fbb61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fbb6340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fbb64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fbb6760"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fbb68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad34fbb3740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ad34fbb3740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fbb3ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fbb3c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fbb3de0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fbb2020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fbb21b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fbb2340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fbb24d0"/>
        <function-ref name="get" scoped="" ref="0x2ad34fbb2660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fbb27f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fbb2980"/>
        <function-ref name="set" scoped="" ref="0x2ad34fbb2b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fbb2ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fbb2e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fbb1120"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fbb12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad34fbae100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ad34fbae100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fbae480"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fbae610"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fbae7a0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fbae930"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fbaeac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fbaec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fbaede0"/>
        <function-ref name="get" scoped="" ref="0x2ad34fbe5020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fbe51b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fbe5340"/>
        <function-ref name="set" scoped="" ref="0x2ad34fbe54d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fbe5660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fbe57f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fbe5a80"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fbe5c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad34fbe2d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ad34fbe2d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fbe10e0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fbe1270"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fbe1400"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fbe1590"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fbe1720"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fbe18b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fbe1a40"/>
        <function-ref name="get" scoped="" ref="0x2ad34fbe1bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fbe1d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fbe0020"/>
        <function-ref name="set" scoped="" ref="0x2ad34fbe01b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fbe0340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fbe04d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fbe0760"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fbe08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad34fbdd740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ad34fbdd740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fbddac0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fbddc50"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fbddde0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fbdc020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fbdc1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fbdc340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fbdc4d0"/>
        <function-ref name="get" scoped="" ref="0x2ad34fbdc660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fbdc7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fbdc980"/>
        <function-ref name="set" scoped="" ref="0x2ad34fbdcb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fbdcca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fbdce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fbdb120"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fbdb2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad34fbd8100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ad34fbd8100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fbd8480"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fbd8610"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fbd87a0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fbd8930"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fbd8ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fbd8c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fbd8de0"/>
        <function-ref name="get" scoped="" ref="0x2ad34fbd7020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fbd71b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fbd7340"/>
        <function-ref name="set" scoped="" ref="0x2ad34fbd74d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fbd7660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fbd77f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fbd7a80"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fbd7c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad34fbd4d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ad34fbd4d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fbd30e0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fbd3270"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fbd3400"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fbd3590"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fbd3720"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fbd38b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fbd3a40"/>
        <function-ref name="get" scoped="" ref="0x2ad34fbd3bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fbd3d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fbd2020"/>
        <function-ref name="set" scoped="" ref="0x2ad34fbd21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fbd2340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fbd24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fbd2760"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fbd28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad34fbcf740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ad34fbcf740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fbcfac0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fbcfc50"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fbcfde0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fbce020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fbce1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fbce340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fbce4d0"/>
        <function-ref name="get" scoped="" ref="0x2ad34fbce660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fbce7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fbce980"/>
        <function-ref name="set" scoped="" ref="0x2ad34fbceb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fbceca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fbcee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fbcd120"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fbcd2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad34fbca100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ad34fbca100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fbca480"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fbca610"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fbca7a0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fbca930"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fbcaac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fbcac50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fbcade0"/>
        <function-ref name="get" scoped="" ref="0x2ad34fc00020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fc001b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fc00340"/>
        <function-ref name="set" scoped="" ref="0x2ad34fc004d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fc00660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fc007f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fc00a80"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fc00c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad34fbfdd10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ad34fbfdd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fbfc0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fbfc270"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fbfc400"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fbfc590"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fbfc720"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fbfc8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fbfca40"/>
        <function-ref name="get" scoped="" ref="0x2ad34fbfcbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fbfcd60"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fbfb020"/>
        <function-ref name="set" scoped="" ref="0x2ad34fbfb1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fbfb340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fbfb4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fbfb760"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fbfb8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad34fbf8740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ad34fbf8740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fbf8ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fbf8c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fbf8de0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fbf7020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fbf71b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fbf7340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fbf74d0"/>
        <function-ref name="get" scoped="" ref="0x2ad34fbf7660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fbf77f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fbf7980"/>
        <function-ref name="set" scoped="" ref="0x2ad34fbf7b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fbf7ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fbf7e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fbf6120"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fbf62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad34fbf3100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ad34fbf3100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fbf3480"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fbf3610"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fbf37a0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fbf3930"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fbf3ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fbf3c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fbf3de0"/>
        <function-ref name="get" scoped="" ref="0x2ad34fbf2020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fbf21b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fbf2340"/>
        <function-ref name="set" scoped="" ref="0x2ad34fbf24d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fbf2660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fbf27f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fbf2a80"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fbf2c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad34fbefd10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ad34fbefd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fbee0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fbee270"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fbee400"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fbee590"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fbee720"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fbee8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fbeea40"/>
        <function-ref name="get" scoped="" ref="0x2ad34fbeebd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fbeed60"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fbed020"/>
        <function-ref name="set" scoped="" ref="0x2ad34fbed1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fbed340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fbed4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fbed760"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fbed8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad34fbea740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ad34fbea740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fbeaac0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fbeac50"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fbeade0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fbe9020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fbe91b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fbe9340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fbe94d0"/>
        <function-ref name="get" scoped="" ref="0x2ad34fbe9660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fbe97f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fbe9980"/>
        <function-ref name="set" scoped="" ref="0x2ad34fbe9b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fbe9ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fbe9e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fbe8120"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fbe82b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2ad34fc879a0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2ad34fc879a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad34fc847e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad34fc821b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad34fc84ca0"/>
        <function-ref name="overflow" scoped="" ref="0x2ad34fc82670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x2ad34fc819d0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2ad34fc819d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad34fc7e810"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad34fc7d1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad34fc7ecd0"/>
        <function-ref name="overflow" scoped="" ref="0x2ad34fc7d670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2ad34fca7c50" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2ad34fca7c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad34fca5020"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ad34fca51b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ad34fca5340"/>
        <function-ref name="get" scoped="" ref="0x2ad34fca54d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ad34fca5660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad34fca57f0"/>
        <function-ref name="getMode" scoped="" ref="0x2ad34fca5980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad34fca5b10"/>
        <function-ref name="overflow" scoped="" ref="0x2ad34fca5ca0"/>
        <function-ref name="setMode" scoped="" ref="0x2ad34fca5e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2ad34fca4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2ad34fc7ab80" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2ad34fc7ab80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad34fc799b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad34fca7360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad34fc79e70"/>
        <function-ref name="overflow" scoped="" ref="0x2ad34fca7820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2ad34fc86970" loc="46:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2ad34fc86970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ad34fc86cf0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ad34fc86e80"/>
        <function-ref name="led1On" scoped="" ref="0x2ad34fca1030"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ad34fca11c0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ad34fca1350"/>
        <function-ref name="get" scoped="" ref="0x2ad34fca14e0"/>
        <function-ref name="led1Off" scoped="" ref="0x2ad34fca1670"/>
        <function-ref name="led2Off" scoped="" ref="0x2ad34fca1cb0"/>
        <function-ref name="set" scoped="" ref="0x2ad34fca1800"/>
        <function-ref name="led0On" scoped="" ref="0x2ad34fca1990"/>
        <function-ref name="led2On" scoped="" ref="0x2ad34fca1b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x2ad34fc95910" loc="50:/home/zdenial/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x2ad34fc95910"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fc95c90"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fc95e20"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fc9b020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fc9b1b0"/>
        <function-ref name="get" scoped="" ref="0x2ad34fc9b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fc9b4d0"/>
        <function-ref name="set" scoped="" ref="0x2ad34fc9b660"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fc9b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad34fca0c40" loc="46:/home/zdenial/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ad34fca0c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad34fc9d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x2ad34fc9bb10" loc="51:/home/zdenial/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x2ad34fc9bb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fc9a020"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fc9a1b0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fc9a340"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fc9a4d0"/>
        <function-ref name="get" scoped="" ref="0x2ad34fc9a660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fc9a7f0"/>
        <function-ref name="set" scoped="" ref="0x2ad34fc9a980"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fc9ab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2ad34fc9d2a0" loc="47:/home/zdenial/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2ad34fc9d2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ad34fc9d620"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ad34fc9d7b0"/>
        <function-ref name="led1On" scoped="" ref="0x2ad34fc9d940"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ad34fc9dad0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ad34fc9dc60"/>
        <function-ref name="get" scoped="" ref="0x2ad34fc9ddf0"/>
        <function-ref name="led1Off" scoped="" ref="0x2ad34fc9c020"/>
        <function-ref name="led2Off" scoped="" ref="0x2ad34fc9c660"/>
        <function-ref name="set" scoped="" ref="0x2ad34fc9c1b0"/>
        <function-ref name="led0On" scoped="" ref="0x2ad34fc9c340"/>
        <function-ref name="led2On" scoped="" ref="0x2ad34fc9c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x2ad34fc9ae30" loc="52:/home/zdenial/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x2ad34fc9ae30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fc941e0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fc94370"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fc94500"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fc94690"/>
        <function-ref name="get" scoped="" ref="0x2ad34fc94820"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fc949b0"/>
        <function-ref name="set" scoped="" ref="0x2ad34fc94b40"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fc94cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x2ad34fcb4360" loc="41:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x2ad34fcb4360"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fcb46e0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fcb4870"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fcb4a00"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fcb4b90"/>
        <function-ref name="get" scoped="" ref="0x2ad34fcb4d20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fcb3020"/>
        <function-ref name="set" scoped="" ref="0x2ad34fcb31b0"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fcb3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x2ad34fcb36a0" loc="42:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x2ad34fcb36a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fcb3a20"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fcb3bb0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fcb3d40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fcb2020"/>
        <function-ref name="get" scoped="" ref="0x2ad34fcb21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fcb2340"/>
        <function-ref name="set" scoped="" ref="0x2ad34fcb24d0"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fcb2660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x2ad34fcb1c40" loc="44:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ad34fcb1c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad34fcb0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x2ad34fcb29c0" loc="43:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x2ad34fcb29c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fcb2d40"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fcb1020"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fcb11b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fcb1340"/>
        <function-ref name="get" scoped="" ref="0x2ad34fcb14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fcb1660"/>
        <function-ref name="set" scoped="" ref="0x2ad34fcb17f0"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fcb1980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2ad34fcd9930" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2ad34fcd9930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fcd9cb0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fcd9e40"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fcd8020"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fcd81b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fcd8340"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fcd84d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fcd8660"/>
        <function-ref name="get" scoped="" ref="0x2ad34fcd87f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fcd8980"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fcd8b10"/>
        <function-ref name="set" scoped="" ref="0x2ad34fcd8ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fcd8e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fcd7020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fcd72b0"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fcd7440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2ad34fcae710" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2ad34fcae710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fcaea90"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fcaec20"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fcaedb0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fcd9020"/>
        <function-ref name="get" scoped="" ref="0x2ad34fcd91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fcd9340"/>
        <function-ref name="set" scoped="" ref="0x2ad34fcd94d0"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fcd9660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2ad34fcd4480" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2ad34fcd4480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fcd4800"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fcd4990"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fcd4b20"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fcd4cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fcd4e40"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fcd3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fcd31b0"/>
        <function-ref name="get" scoped="" ref="0x2ad34fcd3340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fcd34d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fcd3660"/>
        <function-ref name="set" scoped="" ref="0x2ad34fcd37f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fcd3980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fcd3b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fcd3da0"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fcd2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2ad34fcd51d0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2ad34fcd51d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fcd5550"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fcd56e0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fcd5870"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fcd5a00"/>
        <function-ref name="get" scoped="" ref="0x2ad34fcd5b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fcd5d20"/>
        <function-ref name="set" scoped="" ref="0x2ad34fcd4020"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fcd41b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2ad34fccf020" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2ad34fccf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fccf3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fccf530"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad34fccf6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fccf850"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fccf9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad34fccfb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fccfd00"/>
        <function-ref name="get" scoped="" ref="0x2ad34fcce020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad34fcce1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad34fcce340"/>
        <function-ref name="set" scoped="" ref="0x2ad34fcce4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad34fcce660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad34fcce7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad34fccea80"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fccec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2ad34fcd1d70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2ad34fcd1d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad34fcd0180"/>
        <function-ref name="isInput" scoped="" ref="0x2ad34fcd0310"/>
        <function-ref name="toggle" scoped="" ref="0x2ad34fcd04a0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad34fcd0630"/>
        <function-ref name="get" scoped="" ref="0x2ad34fcd07c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad34fcd0950"/>
        <function-ref name="set" scoped="" ref="0x2ad34fcd0ae0"/>
        <function-ref name="clr" scoped="" ref="0x2ad34fcd0c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2ad351197c70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2ad351197c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2ad351196020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ad3511961b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2ad351191d70" loc="48:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad351191d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2ad351190180"/>
        <function-ref name="configure" scoped="" ref="0x2ad351190310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x2ad3511915d0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2ad3511915d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2ad351191950"/>
        <function-ref name="txDone" scoped="" ref="0x2ad351191ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ad351197020" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ad351197020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad3511973a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad351197530"/>
        <function-ref name="request" scoped="" ref="0x2ad3511976c0"/>
        <function-ref name="granted" scoped="" ref="0x2ad351197850"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad3511979e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x2ad351196be0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x2ad351196be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2ad351195020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2ad3511951b0"/>
        <function-ref name="setUctl" scoped="" ref="0x2ad351195340"/>
        <function-ref name="enableUart" scoped="" ref="0x2ad3511954d0"/>
        <function-ref name="setUrctl" scoped="" ref="0x2ad351195660"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2ad3511957f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2ad351195980"/>
        <function-ref name="getUtctl" scoped="" ref="0x2ad351195b10"/>
        <function-ref name="getUrctl" scoped="" ref="0x2ad351195ca0"/>
        <function-ref name="resetUsart" scoped="" ref="0x2ad351195e30"/>
        <function-ref name="getUmctl" scoped="" ref="0x2ad351194020"/>
        <function-ref name="disableIntr" scoped="" ref="0x2ad3511941b0"/>
        <function-ref name="setUtctl" scoped="" ref="0x2ad351194340"/>
        <function-ref name="getUbr" scoped="" ref="0x2ad3511945d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2ad351194760"/>
        <function-ref name="setUmctl" scoped="" ref="0x2ad3511948f0"/>
        <function-ref name="isUartRx" scoped="" ref="0x2ad351194a80"/>
        <function-ref name="isUart" scoped="" ref="0x2ad351194c10"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2ad351194da0"/>
        <function-ref name="isSpi" scoped="" ref="0x2ad351193020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2ad3511931b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2ad351193340"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2ad3511934d0"/>
        <function-ref name="enableIntr" scoped="" ref="0x2ad351193660"/>
        <function-ref name="getMode" scoped="" ref="0x2ad3511937f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2ad351193b80"/>
        <function-ref name="clrIntr" scoped="" ref="0x2ad351193d10"/>
        <function-ref name="setUbr" scoped="" ref="0x2ad351192020"/>
        <function-ref name="tx" scoped="" ref="0x2ad3511921b0"/>
        <function-ref name="getUctl" scoped="" ref="0x2ad351192340"/>
        <function-ref name="disableUart" scoped="" ref="0x2ad3511924d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2ad351192660"/>
        <function-ref name="setModeUart" scoped="" ref="0x2ad3511927f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2ad351192980"/>
        <function-ref name="rx" scoped="" ref="0x2ad351192b10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2ad351192ca0"/>
        <function-ref name="isUartTx" scoped="" ref="0x2ad351192e30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2ad351191020"/>
        <function-ref name="disableSpi" scoped="" ref="0x2ad3511911b0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2ad351191340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2ad351196440" loc="44:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad351196440"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ad3511967c0"/>
        <function-ref name="userId" scoped="" ref="0x2ad351196950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2ad34fce52c0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2ad34fce52c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2ad34fce5640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ad34fce57d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2ad34fce48a0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad34fce48a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2ad34fce4c20"/>
        <function-ref name="configure" scoped="" ref="0x2ad34fce4db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2ad34fce71d0" loc="40:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2ad34fce71d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2ad34fce7550"/>
        <function-ref name="txDone" scoped="" ref="0x2ad34fce76e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ad34fce6020" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ad34fce6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad34fce63a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad34fce6530"/>
        <function-ref name="request" scoped="" ref="0x2ad34fce66c0"/>
        <function-ref name="granted" scoped="" ref="0x2ad34fce6850"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad34fce69e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2ad34fce5ad0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad34fce5ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ad34fce5e50"/>
        <function-ref name="userId" scoped="" ref="0x2ad34fce4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2ad34fd0aa90" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad34fd0aa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ad34fd0ae10"/>
        <function-ref name="userId" scoped="" ref="0x2ad34fd08020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2ad34fd1db60" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2ad34fd1db60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2ad34fd1c020"/>
        <function-ref name="txDone" scoped="" ref="0x2ad34fd1c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x2ad34fd0a480" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x2ad34fd0a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ad34fd0a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x2ad34fd1c5b0" loc="40:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x2ad34fd1c5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ad34fd1c950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x2ad34fd1cc20" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x2ad34fd1cc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2ad34fd0a020"/>
        <function-ref name="txDone" scoped="" ref="0x2ad34fd0a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2ad34fd85020" loc="92:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2ad34fd85020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2ad34fd853c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ad34fd85550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2ad34fd84cd0" loc="96:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad34fd84cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2ad34fd830a0"/>
        <function-ref name="configure" scoped="" ref="0x2ad34fd83230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2ad34fd857a0" loc="93:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad34fd857a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad34fd85b20"/>
        <function-ref name="requested" scoped="" ref="0x2ad34fd85cb0"/>
        <function-ref name="granted" scoped="" ref="0x2ad34fd85e40"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad34fd84020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ad34fd841b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ad34fd86210" loc="91:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ad34fd86210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad34fd865b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad34fd86740"/>
        <function-ref name="request" scoped="" ref="0x2ad34fd868d0"/>
        <function-ref name="granted" scoped="" ref="0x2ad34fd86a60"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad34fd86bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2ad34fd84400" loc="94:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad34fd84400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ad34fd84780"/>
        <function-ref name="userId" scoped="" ref="0x2ad34fd84910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad3514f5ca0" loc="44:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ad3514f5ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad3514f40a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2ad3514f4330" loc="45:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x2ad3514f4330"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2ad3514f46b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2ad3514f4840"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2ad3514f49d0"/>
        <function-ref name="dequeue" scoped="" ref="0x2ad3514f4b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2ad3514f13a0" loc="55:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2ad3514f13a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2ad3514f1740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ad3514f18d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2ad35159e210" loc="60:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad35159e210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2ad35159e5b0"/>
        <function-ref name="configure" scoped="" ref="0x2ad35159e740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2ad35159e9d0" loc="61:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x2ad35159e9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2ad35159ed50"/>
        <function-ref name="isEmpty" scoped="" ref="0x2ad35159c020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2ad35159c1b0"/>
        <function-ref name="dequeue" scoped="" ref="0x2ad35159c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2ad3514f1b20" loc="56:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad3514f1b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad35159f020"/>
        <function-ref name="requested" scoped="" ref="0x2ad35159f1b0"/>
        <function-ref name="granted" scoped="" ref="0x2ad35159f340"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad35159f4d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ad35159f660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ad35159c590" loc="62:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2ad35159c590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ad35159c910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ad35159caa0"/>
        <function-ref name="led1On" scoped="" ref="0x2ad35159cc30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ad35159cdc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ad35159b020"/>
        <function-ref name="get" scoped="" ref="0x2ad35159b1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x2ad35159b340"/>
        <function-ref name="led0On" scoped="" ref="0x2ad35159b980"/>
        <function-ref name="set" scoped="" ref="0x2ad35159b660"/>
        <function-ref name="led2On" scoped="" ref="0x2ad35159b4d0"/>
        <function-ref name="led2Off" scoped="" ref="0x2ad35159b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ad3514f2540" loc="54:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ad3514f2540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad3514f28e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad3514f2a70"/>
        <function-ref name="request" scoped="" ref="0x2ad3514f2c00"/>
        <function-ref name="granted" scoped="" ref="0x2ad3514f2d90"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad3514f1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2ad35159f8b0" loc="57:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad35159f8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ad35159fc30"/>
        <function-ref name="userId" scoped="" ref="0x2ad35159fdc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2ad35159bc50" loc="75:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x2ad35159bc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ad35159a020"/>
        <function-ref name="runTask" scoped="" ref="0x2ad35159a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2ad34fda8400" loc="72:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2ad34fda8400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2ad34fda8780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2ad34fda89d0" loc="73:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad34fda89d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad34fda8d50"/>
        <function-ref name="requested" scoped="" ref="0x2ad34fda7020"/>
        <function-ref name="granted" scoped="" ref="0x2ad34fda71b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad34fda7340"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ad34fda74d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x2ad34fd7fb20" loc="70:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x2ad34fd7fb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ad34fda8020"/>
        <function-ref name="stop" scoped="" ref="0x2ad34fda81b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2ad34fda7720" loc="74:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad34fda7720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ad34fda7aa0"/>
        <function-ref name="userId" scoped="" ref="0x2ad34fda7c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2ad35156bb00" loc="62:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2ad35156bb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2ad35156be80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2ad35156a0f0" loc="63:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad35156a0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad35156a470"/>
        <function-ref name="requested" scoped="" ref="0x2ad35156a600"/>
        <function-ref name="granted" scoped="" ref="0x2ad35156a790"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad35156a920"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ad35156aab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x2ad35156b3a0" loc="60:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x2ad35156b3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ad35156b720"/>
        <function-ref name="stop" scoped="" ref="0x2ad35156b8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2ad35156ad00" loc="64:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad35156ad00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ad3515680a0"/>
        <function-ref name="userId" scoped="" ref="0x2ad351568230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x2ad34fdc8080" loc="3:/home/zdenial/tinyos/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2ad34fdc8080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2ad34fdc8400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2ad34fdc86f0" loc="4:/home/zdenial/tinyos/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ad34fdc86f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad34fdc8a70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad34fdc8c00"/>
        <function-ref name="request" scoped="" ref="0x2ad34fdc8d90"/>
        <function-ref name="granted" scoped="" ref="0x2ad34fdc7020"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad34fdc71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2ad34fdcb7a0" loc="2:/home/zdenial/tinyos/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2ad34fdcb7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ad34fdcbb20"/>
        <function-ref name="stop" scoped="" ref="0x2ad34fdcbcb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x2ad34fdfb430" loc="43:/home/zdenial/tinyos/tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x2ad34fdfb430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2ad34fdfb7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad34fdfa780" loc="94:/home/zdenial/tinyos/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ad34fdfa780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad34fdfab00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x2ad34fdfade0" loc="95:/home/zdenial/tinyos/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x2ad34fdfade0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2ad34fdf7180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2ad34fdf0020" loc="39:/home/zdenial/tinyos/tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x2ad34fdf0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2ad34fdf03a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x2ad34fdf0740" loc="40:/home/zdenial/tinyos/tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x2ad34fdf0740"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ad34fdf0ac0"/>
        <function-ref name="stopDone" scoped="" ref="0x2ad34fdf0c50"/>
        <function-ref name="start" scoped="" ref="0x2ad34fdf0de0"/>
        <function-ref name="stop" scoped="" ref="0x2ad34fdef020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2ad34fde8320" loc="46:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2ad34fde8320"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ad34fde86a0"/>
        <function-ref name="stopDone" scoped="" ref="0x2ad34fde8830"/>
        <function-ref name="start" scoped="" ref="0x2ad34fde89c0"/>
        <function-ref name="stop" scoped="" ref="0x2ad34fde8b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ad34fde7370" loc="47:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2ad34fde7370"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ad34f5a01b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad34fde76f0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad34fde7880"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad34fde7a10"/>
        <function-ref name="cancel" scoped="" ref="0x2ad34fde7ba0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad34fde7d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ad34fde5020" loc="49:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2ad34fde5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad34fde53a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad34fde5530"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad34fde56c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad34fde5850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad34fde59e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ad34fde6530" loc="48:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2ad34fde6530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ad34f5a01b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad34fde68b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ad34fe1a490" loc="53:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2ad34fe1a490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ad34fe1a810"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ad34fe1a9a0"/>
        <function-ref name="led1On" scoped="" ref="0x2ad34fe1ab30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ad34fe1acc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ad34fe1ae50"/>
        <function-ref name="get" scoped="" ref="0x2ad34fe13020"/>
        <function-ref name="led1Off" scoped="" ref="0x2ad34fe131b0"/>
        <function-ref name="led2Off" scoped="" ref="0x2ad34fe137f0"/>
        <function-ref name="set" scoped="" ref="0x2ad34fe13340"/>
        <function-ref name="led0On" scoped="" ref="0x2ad34fe134d0"/>
        <function-ref name="led2On" scoped="" ref="0x2ad34fe13660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2ad34fe149f0" loc="51:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ad34fe149f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ad34fe14d70"/>
        <function-ref name="noAck" scoped="" ref="0x2ad34fe1a020"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ad34fe1a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ad34fde5c90" loc="50:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2ad34fde5c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ad34fde40a0"/>
        <function-ref name="source" scoped="" ref="0x2ad34fde4230"/>
        <function-ref name="address" scoped="" ref="0x2ad34fde43c0"/>
        <function-ref name="destination" scoped="" ref="0x2ad34fde4550"/>
        <function-ref name="setSource" scoped="" ref="0x2ad34fde46e0"/>
        <function-ref name="setDestination" scoped="" ref="0x2ad34fde4870"/>
        <function-ref name="type" scoped="" ref="0x2ad34fde4a00"/>
        <function-ref name="setType" scoped="" ref="0x2ad34fde4b90"/>
        <function-ref name="isForMe" scoped="" ref="0x2ad34fde4d20"/>
        <function-ref name="setGroup" scoped="" ref="0x2ad34fe1b020"/>
        <function-ref name="localGroup" scoped="" ref="0x2ad34fe1b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ad34fe76d90" loc="54:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2ad34fe76d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad34fe75180"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad34fe75310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad34fe754a0"/>
        <function-ref name="cancel" scoped="" ref="0x2ad34fe75630"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad34fe757c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2ad34fe75a50" loc="55:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2ad34fe75a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad34fe75dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ad34fe10b40" loc="47:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2ad34fe10b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ad34f5a01b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad34fe79020"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad34fe791b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad34fe79340"/>
        <function-ref name="cancel" scoped="" ref="0x2ad34fe794d0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad34fe79660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ad34fe77720" loc="50:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2ad34fe77720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad34fe77aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad34fe77c30"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad34fe77dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad34fe76020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad34fe761b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ad34fe799e0" loc="48:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2ad34fe799e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ad34f5a01b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad34fe79d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2ad34fe76400" loc="51:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ad34fe76400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ad34fe76780"/>
        <function-ref name="noAck" scoped="" ref="0x2ad34fe76910"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ad34fe76aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ad34fe78020" loc="49:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2ad34fe78020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ad34fe783a0"/>
        <function-ref name="source" scoped="" ref="0x2ad34fe78530"/>
        <function-ref name="address" scoped="" ref="0x2ad34fe786c0"/>
        <function-ref name="destination" scoped="" ref="0x2ad34fe78850"/>
        <function-ref name="setSource" scoped="" ref="0x2ad34fe789e0"/>
        <function-ref name="setDestination" scoped="" ref="0x2ad34fe78b70"/>
        <function-ref name="type" scoped="" ref="0x2ad34fe78d00"/>
        <function-ref name="setType" scoped="" ref="0x2ad34fe77020"/>
        <function-ref name="isForMe" scoped="" ref="0x2ad34fe771b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2ad34fe77340"/>
        <function-ref name="localGroup" scoped="" ref="0x2ad34fe774d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2ad34fe704e0" loc="50:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2ad34fe704e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ad34fe70860"/>
        <function-ref name="stopDone" scoped="" ref="0x2ad34fe709f0"/>
        <function-ref name="start" scoped="" ref="0x2ad34fe70b80"/>
        <function-ref name="stop" scoped="" ref="0x2ad34fe70d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ad34fe6e020" loc="52:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2ad34fe6e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2ad34f59fd70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad34fe6e3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad34fe6e530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad34fe6e6c0"/>
        <function-ref name="cancel" scoped="" ref="0x2ad34fe6e850"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad34fe6e9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad34fe73e60" loc="49:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ad34fe73e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad34fe70210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ad34fe6f4c0" loc="51:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2ad34fe6f4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2ad34f59fd70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad34fe6f840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ad34fe6c940" loc="56:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2ad34fe6c940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ad34fe6ccc0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ad34fe6ce50"/>
        <function-ref name="led1On" scoped="" ref="0x2ad34fe67020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ad34fe671b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ad34fe67340"/>
        <function-ref name="get" scoped="" ref="0x2ad34fe674d0"/>
        <function-ref name="led1Off" scoped="" ref="0x2ad34fe67660"/>
        <function-ref name="led2Off" scoped="" ref="0x2ad34fe67ca0"/>
        <function-ref name="set" scoped="" ref="0x2ad34fe677f0"/>
        <function-ref name="led0On" scoped="" ref="0x2ad34fe67980"/>
        <function-ref name="led2On" scoped="" ref="0x2ad34fe67b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x2ad34fe6c020" loc="55:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialPacketInfo" scoped="" ref="0x2ad34fe6c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2ad34f59fd70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2ad34fe6c3a0"/>
        <function-ref name="offset" scoped="" ref="0x2ad34fe6c530"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2ad34fe6c6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2ad34fe5e2f0" loc="66:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2ad34fe5e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ad34fe5e670"/>
        <function-ref name="stopDone" scoped="" ref="0x2ad34fe5e800"/>
        <function-ref name="start" scoped="" ref="0x2ad34fe5e990"/>
        <function-ref name="stop" scoped="" ref="0x2ad34fe5eb20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x2ad34fec2e40" loc="332:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDoneTask" scoped="" ref="0x2ad34fec2e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ad34ff051e0"/>
        <function-ref name="runTask" scoped="" ref="0x2ad34ff05370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x2ad34fe8f060" loc="74:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x2ad34fe8f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ad34fe8f3e0"/>
        <function-ref name="stop" scoped="" ref="0x2ad34fe8f570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x2ad34feb6d10" loc="191:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RunTx" scoped="" ref="0x2ad34feb6d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ad34feb40e0"/>
        <function-ref name="runTask" scoped="" ref="0x2ad34feb4270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad34fe61c30" loc="65:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ad34fe61c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad34fe5e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x2ad34fe8cc50" loc="75:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFlush" scoped="" ref="0x2ad34fe8cc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x2ad34fe8e020"/>
        <function-ref name="flush" scoped="" ref="0x2ad34fe8e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x2ad34fec5400" loc="322:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDoneTask" scoped="" ref="0x2ad34fec5400"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ad34fec5780"/>
        <function-ref name="runTask" scoped="" ref="0x2ad34fec5910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x2ad34fe908e0" loc="72:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x2ad34fe908e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x2ad34fe90c60"/>
        <function-ref name="resetSend" scoped="" ref="0x2ad34fe90df0"/>
        <function-ref name="dataReceived" scoped="" ref="0x2ad34fe9d020"/>
        <function-ref name="resetReceive" scoped="" ref="0x2ad34fe9d1b0"/>
        <function-ref name="putData" scoped="" ref="0x2ad34fe9d340"/>
        <function-ref name="putDone" scoped="" ref="0x2ad34fe9d4d0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x2ad34fe9d660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ad34fe9d8e0" loc="73:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2ad34fe9d8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ad34fe9dc60"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ad34fe9ddf0"/>
        <function-ref name="led1On" scoped="" ref="0x2ad34fe95020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ad34fe951b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ad34fe95340"/>
        <function-ref name="get" scoped="" ref="0x2ad34fe954d0"/>
        <function-ref name="led1Off" scoped="" ref="0x2ad34fe95660"/>
        <function-ref name="led2Off" scoped="" ref="0x2ad34fe95ca0"/>
        <function-ref name="set" scoped="" ref="0x2ad34fe957f0"/>
        <function-ref name="led0On" scoped="" ref="0x2ad34fe95980"/>
        <function-ref name="led2On" scoped="" ref="0x2ad34fe95b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x2ad34ff020c0" loc="341:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x2ad34ff020c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ad34ff02440"/>
        <function-ref name="runTask" scoped="" ref="0x2ad34ff025d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x2ad34fe9a130" loc="67:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x2ad34fe9a130"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x2ad34fe9a4b0"/>
        <function-ref name="nextByte" scoped="" ref="0x2ad34fe9a640"/>
        <function-ref name="startSend" scoped="" ref="0x2ad34fe9a7d0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x2ad34fe9a960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x2ad34fe965c0" loc="68:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2ad34fe965c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x2ad34fe96940"/>
        <function-ref name="byteReceived" scoped="" ref="0x2ad34fe96ad0"/>
        <function-ref name="endPacket" scoped="" ref="0x2ad34fe96c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x2ad34ff94c50" loc="275:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveTask" scoped="" ref="0x2ad34ff94c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ad34ff93020"/>
        <function-ref name="runTask" scoped="" ref="0x2ad34ff931b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ad34ff98830" loc="51:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2ad34ff98830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2ad34f59fd70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad34ff98bd0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad34ff98d60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad34ff97020"/>
        <function-ref name="cancel" scoped="" ref="0x2ad34ff971b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad34ff97340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x2ad34ff93480" loc="158:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalSendDone" scoped="" ref="0x2ad34ff93480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ad34ff93800"/>
        <function-ref name="runTask" scoped="" ref="0x2ad34ff93990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ad34ff98110" loc="50:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2ad34ff98110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2ad34f59fd70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad34ff984b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x2ad34ff97760" loc="54:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketInfo" scoped="" ref="0x2ad34ff97760"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2ad34f59fd70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2ad34ff97b00"/>
        <function-ref name="offset" scoped="" ref="0x2ad34ff97c90"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2ad34ff97e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ad34ff95590" loc="57:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2ad34ff95590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ad34ff95910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ad34ff95aa0"/>
        <function-ref name="led1On" scoped="" ref="0x2ad34ff95c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ad34ff95dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ad34ff94020"/>
        <function-ref name="get" scoped="" ref="0x2ad34ff941b0"/>
        <function-ref name="led1Off" scoped="" ref="0x2ad34ff94340"/>
        <function-ref name="led2On" scoped="" ref="0x2ad34ff94980"/>
        <function-ref name="set" scoped="" ref="0x2ad34ff94660"/>
        <function-ref name="led2Off" scoped="" ref="0x2ad34ff944d0"/>
        <function-ref name="led0On" scoped="" ref="0x2ad34ff947f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x2ad34ff969d0" loc="56:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x2ad34ff969d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x2ad34ff96d50"/>
        <function-ref name="nextByte" scoped="" ref="0x2ad34ff95020"/>
        <function-ref name="startSend" scoped="" ref="0x2ad34ff951b0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x2ad34ff95340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x2ad34ff960e0" loc="55:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2ad34ff960e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x2ad34ff96460"/>
        <function-ref name="byteReceived" scoped="" ref="0x2ad34ff965f0"/>
        <function-ref name="endPacket" scoped="" ref="0x2ad34ff96780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x2ad34ffd5ca0" loc="50:/home/zdenial/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x2ad34ffd5ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad34ffd40a0"/>
        <function-ref name="receivedByte" scoped="" ref="0x2ad34ffd4230"/>
        <function-ref name="receive" scoped="" ref="0x2ad34ffd43c0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2ad34ffd4550"/>
        <function-ref name="receiveDone" scoped="" ref="0x2ad34ffd46e0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2ad34ffd4870"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad34ffd4a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x2ad34ffd8b70" loc="48:/home/zdenial/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x2ad34ffd8b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x2ad34ffd5020"/>
        <function-ref name="resetSend" scoped="" ref="0x2ad34ffd51b0"/>
        <function-ref name="dataReceived" scoped="" ref="0x2ad34ffd5340"/>
        <function-ref name="resetReceive" scoped="" ref="0x2ad34ffd54d0"/>
        <function-ref name="putData" scoped="" ref="0x2ad34ffd5660"/>
        <function-ref name="putDone" scoped="" ref="0x2ad34ffd57f0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x2ad34ffd5980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ad34ffd4c80" loc="51:/home/zdenial/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2ad34ffd4c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ad34ffd30a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ad34ffd3230"/>
        <function-ref name="led1On" scoped="" ref="0x2ad34ffd33c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ad34ffd3550"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ad34ffd36e0"/>
        <function-ref name="get" scoped="" ref="0x2ad34ffd3870"/>
        <function-ref name="led1Off" scoped="" ref="0x2ad34ffd3a00"/>
        <function-ref name="led2Off" scoped="" ref="0x2ad34ffd21b0"/>
        <function-ref name="set" scoped="" ref="0x2ad34ffd3b90"/>
        <function-ref name="led0On" scoped="" ref="0x2ad34ffd3d20"/>
        <function-ref name="led2On" scoped="" ref="0x2ad34ffd2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x2ad34fffb6c0" loc="47:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Info" scoped="" ref="0x2ad34fffb6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2ad34fffba40"/>
        <function-ref name="offset" scoped="" ref="0x2ad34fffbbd0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2ad34fffbd60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2ad34ffe8020" loc="61:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2ad34ffe8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ad34ffe83a0"/>
        <function-ref name="stopDone" scoped="" ref="0x2ad34ffe8530"/>
        <function-ref name="start" scoped="" ref="0x2ad34ffe86c0"/>
        <function-ref name="stop" scoped="" ref="0x2ad34ffe8850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ad34ffe7050" loc="63:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2ad34ffe7050"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ad34f5a01b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad34ffe73d0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad34ffe7560"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad34ffe76f0"/>
        <function-ref name="cancel" scoped="" ref="0x2ad34ffe7880"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad34ffe7a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2ad34ffe6df0" loc="65:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x2ad34ffe6df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ad34f5a01b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad34ffe51c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ad34ffe5450" loc="67:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2ad34ffe5450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad34ffe57d0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad34ffe5960"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad34ffe5af0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad34ffe5c80"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad34ffe5e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2ad3500209e0" loc="70:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2ad3500209e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ad34ffe0020"/>
        <function-ref name="clear" scoped="" ref="0x2ad34ffe0750"/>
        <function-ref name="isValid" scoped="" ref="0x2ad34ffe1890"/>
        <function-ref name="set" scoped="" ref="0x2ad34ffe0e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2ad3500148a0" loc="72:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2ad3500148a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2ad350014c20"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2ad350014db0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2ad35001a020"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2ad35001a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ad34ffe6210" loc="64:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2ad34ffe6210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ad34f5a01b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad34ffe6590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2ad34ffe3800" loc="69:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ad34ffe3800"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ad34ffe3b80"/>
        <function-ref name="noAck" scoped="" ref="0x2ad34ffe3d10"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ad34ffe2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ad34ffe4120" loc="68:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2ad34ffe4120"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ad34ffe44a0"/>
        <function-ref name="source" scoped="" ref="0x2ad34ffe4630"/>
        <function-ref name="address" scoped="" ref="0x2ad34ffe47c0"/>
        <function-ref name="destination" scoped="" ref="0x2ad34ffe4950"/>
        <function-ref name="setSource" scoped="" ref="0x2ad34ffe4ae0"/>
        <function-ref name="setDestination" scoped="" ref="0x2ad34ffe4c70"/>
        <function-ref name="type" scoped="" ref="0x2ad34ffe4e00"/>
        <function-ref name="setType" scoped="" ref="0x2ad34ffe3020"/>
        <function-ref name="isForMe" scoped="" ref="0x2ad34ffe31b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2ad34ffe3340"/>
        <function-ref name="localGroup" scoped="" ref="0x2ad34ffe34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2ad35001faf0" loc="71:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ad35001faf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5b6bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad34f5e1020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ad35001d0d0"/>
        <function-ref name="clear" scoped="" ref="0x2ad35001d800"/>
        <function-ref name="isValid" scoped="" ref="0x2ad35001e970"/>
        <function-ref name="set" scoped="" ref="0x2ad35001b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2ad350008680" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2ad350008680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ad350008a00"/>
        <function-ref name="stopDone" scoped="" ref="0x2ad350008b90"/>
        <function-ref name="start" scoped="" ref="0x2ad350008d20"/>
        <function-ref name="stop" scoped="" ref="0x2ad350007020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2ad3500b8d40" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2ad3500b8d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ad34f5a01b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2ad3500c00e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2ad3500c0270"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2ad3500c0400"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2ad3500c0590"/>
        <function-ref name="setCca" scoped="" ref="0x2ad3500c0720"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2ad3500c08b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2ad3500b5500" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x2ad3500b5500"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ad34f5a01b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2ad3500b5980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ad350002760" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2ad350002760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad350002ae0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad350002c70"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad350002e00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad350001020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad3500011b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ad3500077f0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2ad3500077f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ad34f5a01b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad350007b70"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad350007d00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad350006020"/>
        <function-ref name="cancel" scoped="" ref="0x2ad3500061b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad350006340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2ad350004880" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x2ad350004880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ad34f5a01b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad350004c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2ad3500c3970" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2ad3500c3970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2ad3500c3cf0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2ad3500c3e80"/>
        <function-ref name="getRssi" scoped="" ref="0x2ad350000030"/>
        <function-ref name="getNetwork" scoped="" ref="0x2ad3500001c0"/>
        <function-ref name="getPower" scoped="" ref="0x2ad350000350"/>
        <function-ref name="getLqi" scoped="" ref="0x2ad3500004e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2ad3500c0bb0" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2ad3500c0bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2ad3500b7020"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2ad3500b71b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2ad3500b7340"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2ad3500b74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ad350006b20" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2ad350006b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ad34f5a01b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad350004020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2ad350000810" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ad350000810"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ad350000b90"/>
        <function-ref name="noAck" scoped="" ref="0x2ad350000d20"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ad3500c2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2ad3500b7790" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x2ad3500b7790"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2ad3500b7b10"/>
        <function-ref name="setRetries" scoped="" ref="0x2ad3500b7ca0"/>
        <function-ref name="getRetries" scoped="" ref="0x2ad3500b7e30"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2ad3500b6020"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2ad3500b61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ad350003020" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2ad350003020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ad3500033a0"/>
        <function-ref name="source" scoped="" ref="0x2ad350003530"/>
        <function-ref name="address" scoped="" ref="0x2ad3500036c0"/>
        <function-ref name="destination" scoped="" ref="0x2ad350003850"/>
        <function-ref name="setSource" scoped="" ref="0x2ad3500039e0"/>
        <function-ref name="setDestination" scoped="" ref="0x2ad350003b70"/>
        <function-ref name="type" scoped="" ref="0x2ad350003d00"/>
        <function-ref name="setType" scoped="" ref="0x2ad350002020"/>
        <function-ref name="isForMe" scoped="" ref="0x2ad3500021b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2ad350002340"/>
        <function-ref name="localGroup" scoped="" ref="0x2ad3500024d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2ad3500bfa80" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2ad3500bfa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2ad3500bfe00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2ad3500ae340" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2ad3500ae340"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ad3500ae6c0"/>
        <function-ref name="stopDone" scoped="" ref="0x2ad3500ae850"/>
        <function-ref name="start" scoped="" ref="0x2ad3500ae9e0"/>
        <function-ref name="stop" scoped="" ref="0x2ad3500aeb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2ad3500a7080" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2ad3500a7080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2ad3500a7400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2ad3500a62e0" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x2ad3500a62e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2ad3500a6660"/>
        <function-ref name="setRetries" scoped="" ref="0x2ad3500a67f0"/>
        <function-ref name="getRetries" scoped="" ref="0x2ad3500a6980"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2ad3500a6b10"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2ad3500a6ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2ad3500a9740" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2ad3500a9740"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2ad3500a9ac0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2ad3500a9c50"/>
        <function-ref name="getRssi" scoped="" ref="0x2ad3500a9de0"/>
        <function-ref name="getNetwork" scoped="" ref="0x2ad3500a8020"/>
        <function-ref name="getPower" scoped="" ref="0x2ad3500a81b0"/>
        <function-ref name="getLqi" scoped="" ref="0x2ad3500a8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x2ad3500aa350" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x2ad3500aa350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad3500aa6d0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad3500aa860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad3500aa9f0"/>
        <function-ref name="cancel" scoped="" ref="0x2ad3500aab80"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad3500aad10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2ad3500a7700" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2ad3500a7700"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2ad3500a7a80"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2ad3500a7c10"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2ad3500a7da0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2ad3500a6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x2ad3500ace70" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x2ad3500ace70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad3500ab220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2ad3500a8670" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ad3500a8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ad3500a89f0"/>
        <function-ref name="noAck" scoped="" ref="0x2ad3500a8b80"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ad3500a8d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ad3500ad430" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ad3500ad430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad3500ad7b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad3500ad940"/>
        <function-ref name="request" scoped="" ref="0x2ad3500adad0"/>
        <function-ref name="granted" scoped="" ref="0x2ad3500adc60"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad3500addf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2ad3500ac160" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x2ad3500ac160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad3500ac4e0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad3500ac670"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad3500ac800"/>
        <function-ref name="cancel" scoped="" ref="0x2ad3500ac990"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad3500acb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x2ad3500ab560" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x2ad3500ab560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad3500ab8e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad3500aba70"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad3500abc00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad3500abd90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad3500aa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x2ad3500a90f0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x2ad3500a90f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad3500a9470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2ad3500a59f0" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2ad3500a59f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ad3500a5d70"/>
        <function-ref name="stopDone" scoped="" ref="0x2ad3500a2020"/>
        <function-ref name="start" scoped="" ref="0x2ad3500a21b0"/>
        <function-ref name="stop" scoped="" ref="0x2ad3500a2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2ad3500eb990" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2ad3500eb990"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2ad3500ebd10"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2ad3500ea020"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2ad3500ea1b0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2ad3500ea340"/>
        <function-ref name="setCca" scoped="" ref="0x2ad3500ea4d0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2ad3500ea660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ad3500a2600" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2ad3500a2600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad3500a2980"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad3500a2b10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad3500a2ca0"/>
        <function-ref name="cancel" scoped="" ref="0x2ad3500a2e30"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad3500eb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ad3500eb300" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2ad3500eb300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad3500eb680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2ad3500e6690" loc="39:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2ad3500e6690"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ad3500e6a10"/>
        <function-ref name="stopDone" scoped="" ref="0x2ad3500e6ba0"/>
        <function-ref name="start" scoped="" ref="0x2ad3500e6d30"/>
        <function-ref name="stop" scoped="" ref="0x2ad3500e5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2ad3500e4020" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2ad3500e4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2ad3500e43a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2ad3500e4530"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2ad3500e46c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2ad3500e4850"/>
        <function-ref name="setCca" scoped="" ref="0x2ad3500e49e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2ad3500e4b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x2ad3500da060" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x2ad3500da060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2ad3500da3e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2ad3500da570"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2ad3500da700"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2ad3500da890"/>
        <function-ref name="setCca" scoped="" ref="0x2ad3500daa20"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2ad3500dabb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2ad3500d2e20" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2ad3500d2e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2ad3500d11c0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2ad3500d1350"/>
        <function-ref name="getRssi" scoped="" ref="0x2ad3500d14e0"/>
        <function-ref name="getNetwork" scoped="" ref="0x2ad3500d1670"/>
        <function-ref name="getPower" scoped="" ref="0x2ad3500d1800"/>
        <function-ref name="getLqi" scoped="" ref="0x2ad3500d1990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x2ad3500d32a0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x2ad3500d32a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad3500d3620"/>
        <function-ref name="cancel" scoped="" ref="0x2ad3500d37b0"/>
        <function-ref name="modify" scoped="" ref="0x2ad3500d3940"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad3500d3ad0"/>
        <function-ref name="resend" scoped="" ref="0x2ad3500d3c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ad3500e52e0" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2ad3500e52e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad3500e5660"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad3500e57f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad3500e5980"/>
        <function-ref name="cancel" scoped="" ref="0x2ad3500e5b10"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad3500e5ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2ad3500dae80" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x2ad3500dae80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2ad3500d9220"/>
        <function-ref name="rand32" scoped="" ref="0x2ad3500d93b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2ad3500e26f0" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x2ad3500e26f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ad3500e2a70"/>
        <function-ref name="stop" scoped="" ref="0x2ad3500e2c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2ad3500ca430" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ad3500ca430"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2ad3500ca7b0"/>
        <function-ref name="getHeader" scoped="" ref="0x2ad3500ca940"/>
        <function-ref name="getMetadata" scoped="" ref="0x2ad3500caad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x2ad3500db3f0" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x2ad3500db3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2ad3500db770"/>
        <function-ref name="rfOff" scoped="" ref="0x2ad3500db900"/>
        <function-ref name="rxOn" scoped="" ref="0x2ad3500dba90"/>
        <function-ref name="startVReg" scoped="" ref="0x2ad3500dbc20"/>
        <function-ref name="stopVReg" scoped="" ref="0x2ad3500dbdb0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2ad3500e2020"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2ad3500e21b0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2ad3500e2340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ad3500d9670" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2ad3500d9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ad3500d99f0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ad3500d9b80"/>
        <function-ref name="led1On" scoped="" ref="0x2ad3500d9d10"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ad3500d2020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ad3500d21b0"/>
        <function-ref name="get" scoped="" ref="0x2ad3500d2340"/>
        <function-ref name="led1Off" scoped="" ref="0x2ad3500d24d0"/>
        <function-ref name="led2Off" scoped="" ref="0x2ad3500d2b10"/>
        <function-ref name="set" scoped="" ref="0x2ad3500d2660"/>
        <function-ref name="led0On" scoped="" ref="0x2ad3500d27f0"/>
        <function-ref name="led2On" scoped="" ref="0x2ad3500d2980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2ad3500e4e60" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ad3500e4e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad3500e3210"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad3500e33a0"/>
        <function-ref name="request" scoped="" ref="0x2ad3500e3530"/>
        <function-ref name="granted" scoped="" ref="0x2ad3500e36c0"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad3500e3850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x2ad35010fbc0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x2ad35010fbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2ad3500cf0a0"/>
        <function-ref name="toIdle" scoped="" ref="0x2ad3500cf230"/>
        <function-ref name="isState" scoped="" ref="0x2ad3500cf3c0"/>
        <function-ref name="isIdle" scoped="" ref="0x2ad3500cf550"/>
        <function-ref name="requestState" scoped="" ref="0x2ad3500cf6e0"/>
        <function-ref name="forceState" scoped="" ref="0x2ad3500cf870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x2ad35010a5d0" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x2ad35010a5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ad35010a950"/>
        <function-ref name="runTask" scoped="" ref="0x2ad35010aae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x2ad35010b660" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x2ad35010b660"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ad35010b9e0"/>
        <function-ref name="runTask" scoped="" ref="0x2ad35010bb70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x2ad35010c730" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x2ad35010c730"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ad35010cab0"/>
        <function-ref name="runTask" scoped="" ref="0x2ad35010cc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x2ad350149550" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x2ad350149550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2ad3501498d0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2ad350149a60"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2ad350149bf0"/>
        <function-ref name="syncDone" scoped="" ref="0x2ad350149d80"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2ad350156020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2ad3501561b0"/>
        <function-ref name="setChannel" scoped="" ref="0x2ad350156340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2ad3501564d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2ad350156660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2ad3501567f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2ad350156980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2ad350156b10"/>
        <function-ref name="sync" scoped="" ref="0x2ad350156ca0"/>
        <function-ref name="getChannel" scoped="" ref="0x2ad350155020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2ad3501551b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x2ad350144890" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x2ad350144890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3501474c0"/>
        <function-ref name="readDone" scoped="" ref="0x2ad350147940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x2ad3501554b0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x2ad3501554b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2ad350155830"/>
        <function-ref name="rfOff" scoped="" ref="0x2ad3501559c0"/>
        <function-ref name="rxOn" scoped="" ref="0x2ad350155b50"/>
        <function-ref name="startVReg" scoped="" ref="0x2ad350155ce0"/>
        <function-ref name="stopVReg" scoped="" ref="0x2ad350155e70"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2ad350148030"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2ad3501481c0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2ad350148350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ad350157020" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ad350157020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad3501573a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad350157530"/>
        <function-ref name="request" scoped="" ref="0x2ad3501576c0"/>
        <function-ref name="granted" scoped="" ref="0x2ad350157850"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad3501579e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x2ad35013f1a0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x2ad35013f1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2ad35013f520"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2ad35013f6b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2ad35013f840"/>
        <function-ref name="syncDone" scoped="" ref="0x2ad35013f9d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2ad35013fb60"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2ad35013fcf0"/>
        <function-ref name="setChannel" scoped="" ref="0x2ad35013fe80"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2ad35013e030"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2ad35013e1c0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2ad35013e350"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2ad35013e4e0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2ad35013e670"/>
        <function-ref name="sync" scoped="" ref="0x2ad35013e800"/>
        <function-ref name="getChannel" scoped="" ref="0x2ad35013ea90"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2ad35013ec20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x2ad3501621e0" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2ad3501621e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350162560"/>
        <function-ref name="write" scoped="" ref="0x2ad3501626f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x2ad350138970" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2ad350138970"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x2ad350138cf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x2ad35017c790" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x2ad35017c790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad35017b020"/>
        <function-ref name="fired" scoped="" ref="0x2ad350182020"/>
        <function-ref name="startAt" scoped="" ref="0x2ad3501829a0"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad3501824e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ad35017b4e0"/>
        <function-ref name="start" scoped="" ref="0x2ad3501395d0"/>
        <function-ref name="stop" scoped="" ref="0x2ad350139ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x2ad350163020" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2ad350163020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3501633a0"/>
        <function-ref name="write" scoped="" ref="0x2ad350163530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x2ad350179ce0" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x2ad350179ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad3501780a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad350178230"/>
        <function-ref name="toggle" scoped="" ref="0x2ad3501783c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad350178550"/>
        <function-ref name="get" scoped="" ref="0x2ad3501786e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad350178870"/>
        <function-ref name="set" scoped="" ref="0x2ad350178a00"/>
        <function-ref name="clr" scoped="" ref="0x2ad350178b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x2ad35013c500" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x2ad35013c500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad35013b130"/>
        <function-ref name="readDone" scoped="" ref="0x2ad35013b5b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x2ad35019c2f0" loc="126:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x2ad35019c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ad35019c670"/>
        <function-ref name="runTask" scoped="" ref="0x2ad35019c800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x2ad350162a80" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2ad350162a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350162e00"/>
        <function-ref name="write" scoped="" ref="0x2ad350161020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x2ad3501613c0" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2ad3501613c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350161740"/>
        <function-ref name="write" scoped="" ref="0x2ad3501618d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x2ad350164cd0" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2ad350164cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad35016c0a0"/>
        <function-ref name="write" scoped="" ref="0x2ad35016c230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2ad35016d390" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2ad35016d390"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2ad35016d710"/>
        <function-ref name="changed" scoped="" ref="0x2ad35016d8a0"/>
        <function-ref name="amGroup" scoped="" ref="0x2ad35016da30"/>
        <function-ref name="setAddress" scoped="" ref="0x2ad35016dbc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2ad35017b9d0" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x2ad35017b9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad35017bd50"/>
        <function-ref name="isInput" scoped="" ref="0x2ad350179020"/>
        <function-ref name="toggle" scoped="" ref="0x2ad3501791b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad350179340"/>
        <function-ref name="get" scoped="" ref="0x2ad3501794d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad350179660"/>
        <function-ref name="set" scoped="" ref="0x2ad3501797f0"/>
        <function-ref name="clr" scoped="" ref="0x2ad350179980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x2ad350160ae0" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2ad350160ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad35015f0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x2ad350177020" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x2ad350177020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad3501773a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad350177530"/>
        <function-ref name="toggle" scoped="" ref="0x2ad3501776c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad350177850"/>
        <function-ref name="get" scoped="" ref="0x2ad3501779e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad350177b70"/>
        <function-ref name="set" scoped="" ref="0x2ad350177d00"/>
        <function-ref name="clr" scoped="" ref="0x2ad350176020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad350146d60" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ad350146d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad350140180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x2ad3501638f0" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2ad3501638f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350163c70"/>
        <function-ref name="write" scoped="" ref="0x2ad350163e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x2ad35015f440" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2ad35015f440"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad35015f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2ad35015fb60" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x2ad35015fb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad35015d020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad35015d1b0"/>
        <function-ref name="request" scoped="" ref="0x2ad35015d340"/>
        <function-ref name="granted" scoped="" ref="0x2ad35015d4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad35015d660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x2ad3501a8880" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x2ad3501a8880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad3501a8c00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad3501a8d90"/>
        <function-ref name="request" scoped="" ref="0x2ad3501a7020"/>
        <function-ref name="granted" scoped="" ref="0x2ad3501a71b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad3501a7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x2ad35013d020" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x2ad35013d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2ad35013d3a0"/>
        <function-ref name="rfOff" scoped="" ref="0x2ad35013d530"/>
        <function-ref name="rxOn" scoped="" ref="0x2ad35013d6c0"/>
        <function-ref name="startVReg" scoped="" ref="0x2ad35013d850"/>
        <function-ref name="stopVReg" scoped="" ref="0x2ad35013d9e0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2ad35013db70"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2ad35013dd00"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2ad35013c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x2ad35016c5d0" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2ad35016c5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad35016c950"/>
        <function-ref name="write" scoped="" ref="0x2ad35016cae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x2ad350164420" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2ad350164420"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3501647a0"/>
        <function-ref name="write" scoped="" ref="0x2ad350164930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x2ad35015ebb0" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2ad35015ebb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad350160020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ad3501a7600" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2ad3501a7600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ad3501a7980"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ad3501a7b10"/>
        <function-ref name="led1On" scoped="" ref="0x2ad3501a7ca0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ad3501a7e30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ad3501a6020"/>
        <function-ref name="get" scoped="" ref="0x2ad3501a61b0"/>
        <function-ref name="led1Off" scoped="" ref="0x2ad3501a6340"/>
        <function-ref name="led2Off" scoped="" ref="0x2ad3501a6980"/>
        <function-ref name="set" scoped="" ref="0x2ad3501a64d0"/>
        <function-ref name="led0On" scoped="" ref="0x2ad3501a6660"/>
        <function-ref name="led2On" scoped="" ref="0x2ad3501a67f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x2ad35019e410" loc="125:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x2ad35019e410"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ad35019e790"/>
        <function-ref name="runTask" scoped="" ref="0x2ad35019e920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ad350140470" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ad350140470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad3501407f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad350140980"/>
        <function-ref name="request" scoped="" ref="0x2ad350140b10"/>
        <function-ref name="granted" scoped="" ref="0x2ad350140ca0"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad350140e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x2ad350167e20" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2ad350167e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3501711c0"/>
        <function-ref name="write" scoped="" ref="0x2ad350171350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x2ad3501674a0" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2ad3501674a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350167920"/>
        <function-ref name="write" scoped="" ref="0x2ad350167ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x2ad350172c00" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x2ad350172c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ad350175020"/>
        <function-ref name="disable" scoped="" ref="0x2ad3501751b0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2ad350175340"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2ad3501754d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x2ad35015da10" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x2ad35015da10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad35015dd90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad3501a8020"/>
        <function-ref name="request" scoped="" ref="0x2ad3501a81b0"/>
        <function-ref name="granted" scoped="" ref="0x2ad3501a8340"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad3501a84d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x2ad3501603b0" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2ad3501603b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad350160730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad35020f7e0" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ad35020f7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad35020fb60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x2ad35020c220" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x2ad35020c220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad35020ab30"/>
        <function-ref name="fired" scoped="" ref="0x2ad35020ba60"/>
        <function-ref name="startAt" scoped="" ref="0x2ad35020a4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad35020a020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ad350209020"/>
        <function-ref name="start" scoped="" ref="0x2ad35020b090"/>
        <function-ref name="stop" scoped="" ref="0x2ad35020b5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad350207a20" loc="42:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ad350207a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad350207da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x2ad3502062e0" loc="43:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x2ad3502062e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad350312b30"/>
        <function-ref name="fired" scoped="" ref="0x2ad3502c1ae0"/>
        <function-ref name="startAt" scoped="" ref="0x2ad3503124e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad350312020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ad350311020"/>
        <function-ref name="start" scoped="" ref="0x2ad3502c1110"/>
        <function-ref name="stop" scoped="" ref="0x2ad3502c1620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ad35160e180" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2ad35160e180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad35160cb30"/>
        <function-ref name="fired" scoped="" ref="0x2ad35160d9f0"/>
        <function-ref name="startAt" scoped="" ref="0x2ad35160c4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad35160c020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ad35160b020"/>
        <function-ref name="start" scoped="" ref="0x2ad35160d020"/>
        <function-ref name="stop" scoped="" ref="0x2ad35160d530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad35160f8e0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ad35160f8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad35160fc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ad3516072a0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2ad3516072a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad351605b30"/>
        <function-ref name="fired" scoped="" ref="0x2ad351606aa0"/>
        <function-ref name="startAt" scoped="" ref="0x2ad3516054e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad351605020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ad351603020"/>
        <function-ref name="start" scoped="" ref="0x2ad3516060d0"/>
        <function-ref name="stop" scoped="" ref="0x2ad3516065e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad351608a10" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ad351608a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad351608d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x2ad3515efc10" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2ad3515efc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ad35168c020"/>
        <function-ref name="setEvent" scoped="" ref="0x2ad35168c1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ad35168c340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ad35168c4d0"/>
        <function-ref name="fired" scoped="" ref="0x2ad35168c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x2ad3515f11b0" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2ad3515f11b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad3515f1530"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ad3515f16c0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ad3515f1850"/>
        <function-ref name="get" scoped="" ref="0x2ad3515f19e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ad3515f1b70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad3515f1d00"/>
        <function-ref name="getMode" scoped="" ref="0x2ad3515f0020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad3515f01b0"/>
        <function-ref name="overflow" scoped="" ref="0x2ad3515f0340"/>
        <function-ref name="setMode" scoped="" ref="0x2ad3515f04d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2ad3515f0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x2ad3515f08f0" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ad3515f08f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ad3515f0c70"/>
        <function-ref name="getControl" scoped="" ref="0x2ad3515f0e00"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ad3515ef020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ad3515ef1b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ad3515ef340"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ad3515ef4d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ad3515ef660"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ad3515ef7f0"/>
        <function-ref name="setControl" scoped="" ref="0x2ad3515ef980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x2ad350233ba0" loc="52:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2ad350233ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ad350232020"/>
        <function-ref name="setEvent" scoped="" ref="0x2ad3502321b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ad350232340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ad3502324d0"/>
        <function-ref name="fired" scoped="" ref="0x2ad350232660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x2ad3502374d0" loc="50:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2ad3502374d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad350237850"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ad3502379e0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ad350237b70"/>
        <function-ref name="get" scoped="" ref="0x2ad350237d00"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ad350236020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad3502361b0"/>
        <function-ref name="getMode" scoped="" ref="0x2ad350236340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad3502364d0"/>
        <function-ref name="overflow" scoped="" ref="0x2ad350236660"/>
        <function-ref name="setMode" scoped="" ref="0x2ad3502367f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2ad350236980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x2ad350234280" loc="51:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ad350234280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ad350234600"/>
        <function-ref name="getControl" scoped="" ref="0x2ad350234790"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ad350234920"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ad350234ab0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ad350234c40"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ad350234dd0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ad350233020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ad3502331b0"/>
        <function-ref name="setControl" scoped="" ref="0x2ad350233340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x2ad351683a80" loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2ad351683a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ad351683e00"/>
        <function-ref name="setEvent" scoped="" ref="0x2ad351682020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ad3516821b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ad351682340"/>
        <function-ref name="fired" scoped="" ref="0x2ad3516824d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2ad351686020" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2ad351686020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad3516863a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ad351686530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ad3516866c0"/>
        <function-ref name="get" scoped="" ref="0x2ad351686850"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ad3516869e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad351686b70"/>
        <function-ref name="getMode" scoped="" ref="0x2ad351686d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad351685020"/>
        <function-ref name="overflow" scoped="" ref="0x2ad3516851b0"/>
        <function-ref name="setMode" scoped="" ref="0x2ad351685340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2ad3516854d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ad35168ada0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2ad35168ada0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad351687670"/>
        <function-ref name="fired" scoped="" ref="0x2ad351688610"/>
        <function-ref name="startAt" scoped="" ref="0x2ad351687020"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad351688ad0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ad351687b30"/>
        <function-ref name="start" scoped="" ref="0x2ad351689bf0"/>
        <function-ref name="stop" scoped="" ref="0x2ad351688150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad35168a510" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ad35168a510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad35168a890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x2ad351685760" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ad351685760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ad351685ae0"/>
        <function-ref name="getControl" scoped="" ref="0x2ad351685c70"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ad351685e00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ad351683020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ad3516831b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ad351683340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ad3516834d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ad351683660"/>
        <function-ref name="setControl" scoped="" ref="0x2ad3516837f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2ad350286020" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2ad350286020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad350286e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad350285800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad350285340"/>
        <function-ref name="overflow" scoped="" ref="0x2ad350285cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2ad3502b4950" loc="63:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x2ad3502b4950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad3502b3780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad3502b2150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad3502b3c40"/>
        <function-ref name="overflow" scoped="" ref="0x2ad3502b2610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2ad3502805f0" loc="62:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2ad3502805f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad3502b6430"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad3502b6db0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad3502b68f0"/>
        <function-ref name="overflow" scoped="" ref="0x2ad3502b42a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ad3516015f0" loc="61:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2ad3516015f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad3515ffe50"/>
        <function-ref name="fired" scoped="" ref="0x2ad351600e00"/>
        <function-ref name="startAt" scoped="" ref="0x2ad3515ff800"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad3515ff340"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ad3515fe340"/>
        <function-ref name="start" scoped="" ref="0x2ad351600430"/>
        <function-ref name="stop" scoped="" ref="0x2ad351600940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2ad3515fbd20" loc="73:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x2ad3515fbd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad3515f8670"/>
        <function-ref name="fired" scoped="" ref="0x2ad3515f9550"/>
        <function-ref name="startAt" scoped="" ref="0x2ad3515f8020"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad3515f9a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ad3515f8b30"/>
        <function-ref name="start" scoped="" ref="0x2ad3515fab60"/>
        <function-ref name="stop" scoped="" ref="0x2ad3515f9090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2ad3515fe9b0" loc="68:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2ad3515fe9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad3515fc7e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad3515fb1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad3515fcca0"/>
        <function-ref name="overflow" scoped="" ref="0x2ad3515fb670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x2ad35030b6a0" loc="44:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x2ad35030b6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad35030ba20"/>
        <function-ref name="isInput" scoped="" ref="0x2ad35030bbb0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad35030bd40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad35030a020"/>
        <function-ref name="get" scoped="" ref="0x2ad35030a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad35030a340"/>
        <function-ref name="set" scoped="" ref="0x2ad35030a4d0"/>
        <function-ref name="clr" scoped="" ref="0x2ad35030a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x2ad35030a9d0" loc="45:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x2ad35030a9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad35030ad50"/>
        <function-ref name="isInput" scoped="" ref="0x2ad350309020"/>
        <function-ref name="toggle" scoped="" ref="0x2ad3503091b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad350309340"/>
        <function-ref name="get" scoped="" ref="0x2ad3503094d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad350309660"/>
        <function-ref name="set" scoped="" ref="0x2ad3503097f0"/>
        <function-ref name="clr" scoped="" ref="0x2ad350309980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x2ad350309ce0" loc="46:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x2ad350309ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad3503080a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad350308230"/>
        <function-ref name="toggle" scoped="" ref="0x2ad3503083c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad350308550"/>
        <function-ref name="get" scoped="" ref="0x2ad3503086e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad350308870"/>
        <function-ref name="set" scoped="" ref="0x2ad350308a00"/>
        <function-ref name="clr" scoped="" ref="0x2ad350308b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x2ad35030c370" loc="43:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x2ad35030c370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad35030c6f0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad35030c880"/>
        <function-ref name="toggle" scoped="" ref="0x2ad35030ca10"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad35030cba0"/>
        <function-ref name="get" scoped="" ref="0x2ad35030cd30"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad35030b020"/>
        <function-ref name="set" scoped="" ref="0x2ad35030b1b0"/>
        <function-ref name="clr" scoped="" ref="0x2ad35030b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x2ad350306380" loc="48:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x2ad350306380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad350306700"/>
        <function-ref name="isInput" scoped="" ref="0x2ad350306890"/>
        <function-ref name="toggle" scoped="" ref="0x2ad350306a20"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad350306bb0"/>
        <function-ref name="get" scoped="" ref="0x2ad350306d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad350305020"/>
        <function-ref name="set" scoped="" ref="0x2ad3503051b0"/>
        <function-ref name="clr" scoped="" ref="0x2ad350305340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x2ad35030d0e0" loc="42:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x2ad35030d0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad35030d460"/>
        <function-ref name="isInput" scoped="" ref="0x2ad35030d5f0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad35030d780"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad35030d910"/>
        <function-ref name="get" scoped="" ref="0x2ad35030daa0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad35030dc30"/>
        <function-ref name="set" scoped="" ref="0x2ad35030ddc0"/>
        <function-ref name="clr" scoped="" ref="0x2ad35030c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x2ad350307020" loc="47:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x2ad350307020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad3503073a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad350307530"/>
        <function-ref name="toggle" scoped="" ref="0x2ad3503076c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad350307850"/>
        <function-ref name="get" scoped="" ref="0x2ad3503079e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad350307b70"/>
        <function-ref name="set" scoped="" ref="0x2ad350307d00"/>
        <function-ref name="clr" scoped="" ref="0x2ad350306020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2ad350303930" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2ad350303930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad350303cb0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad350303e40"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad350302020"/>
        <function-ref name="toggle" scoped="" ref="0x2ad3503021b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad350302340"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad3503024d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad350302660"/>
        <function-ref name="get" scoped="" ref="0x2ad3503027f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad350302980"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad350302b10"/>
        <function-ref name="set" scoped="" ref="0x2ad350302ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad350302e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad350301020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad3503012b0"/>
        <function-ref name="clr" scoped="" ref="0x2ad350301440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2ad350304710" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2ad350304710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad350304a90"/>
        <function-ref name="isInput" scoped="" ref="0x2ad350304c20"/>
        <function-ref name="toggle" scoped="" ref="0x2ad350304db0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad350303020"/>
        <function-ref name="get" scoped="" ref="0x2ad3503031b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad350303340"/>
        <function-ref name="set" scoped="" ref="0x2ad3503034d0"/>
        <function-ref name="clr" scoped="" ref="0x2ad350303660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2ad3502fe480" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2ad3502fe480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad3502fe800"/>
        <function-ref name="isInput" scoped="" ref="0x2ad3502fe990"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad3502feb20"/>
        <function-ref name="toggle" scoped="" ref="0x2ad3502fecb0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad3502fee40"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad3502fd020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad3502fd1b0"/>
        <function-ref name="get" scoped="" ref="0x2ad3502fd340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad3502fd4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad3502fd660"/>
        <function-ref name="set" scoped="" ref="0x2ad3502fd7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad3502fd980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad3502fdb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad3502fdda0"/>
        <function-ref name="clr" scoped="" ref="0x2ad3502fc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2ad3502ff1b0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2ad3502ff1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad3502ff530"/>
        <function-ref name="isInput" scoped="" ref="0x2ad3502ff6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad3502ff850"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad3502ff9e0"/>
        <function-ref name="get" scoped="" ref="0x2ad3502ffb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad3502ffd00"/>
        <function-ref name="set" scoped="" ref="0x2ad3502fe020"/>
        <function-ref name="clr" scoped="" ref="0x2ad3502fe1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2ad3502f8020" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2ad3502f8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad3502f83a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad3502f8530"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad3502f86c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad3502f8850"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad3502f89e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad3502f8b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad3502f8d00"/>
        <function-ref name="get" scoped="" ref="0x2ad3502f7020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad3502f71b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad3502f7340"/>
        <function-ref name="set" scoped="" ref="0x2ad3502f74d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad3502f7660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad3502f77f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad3502f7a80"/>
        <function-ref name="clr" scoped="" ref="0x2ad3502f7c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2ad3502fbd70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2ad3502fbd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad3502f9180"/>
        <function-ref name="isInput" scoped="" ref="0x2ad3502f9310"/>
        <function-ref name="toggle" scoped="" ref="0x2ad3502f94a0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad3502f9630"/>
        <function-ref name="get" scoped="" ref="0x2ad3502f97c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad3502f9950"/>
        <function-ref name="set" scoped="" ref="0x2ad3502f9ae0"/>
        <function-ref name="clr" scoped="" ref="0x2ad3502f9c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2ad3502f4de0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2ad3502f4de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad3502f3180"/>
        <function-ref name="isInput" scoped="" ref="0x2ad3502f3310"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad3502f34a0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad3502f3630"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad3502f37c0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad3502f3950"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad3502f3ae0"/>
        <function-ref name="get" scoped="" ref="0x2ad3502f3c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad3502f3e00"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad3502f2020"/>
        <function-ref name="set" scoped="" ref="0x2ad3502f21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad3502f2340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad3502f24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad3502f2760"/>
        <function-ref name="clr" scoped="" ref="0x2ad3502f28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2ad3502f5b70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2ad3502f5b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad3502f4020"/>
        <function-ref name="isInput" scoped="" ref="0x2ad3502f41b0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad3502f4340"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad3502f44d0"/>
        <function-ref name="get" scoped="" ref="0x2ad3502f4660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad3502f47f0"/>
        <function-ref name="set" scoped="" ref="0x2ad3502f4980"/>
        <function-ref name="clr" scoped="" ref="0x2ad3502f4b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2ad3502ef930" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2ad3502ef930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad3502efcb0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad3502efe40"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad3502ee020"/>
        <function-ref name="toggle" scoped="" ref="0x2ad3502ee1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad3502ee340"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad3502ee4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad3502ee660"/>
        <function-ref name="get" scoped="" ref="0x2ad3502ee7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad3502ee980"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad3502eeb10"/>
        <function-ref name="set" scoped="" ref="0x2ad3502eeca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad3502eee30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad3502ed020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad3502ed2b0"/>
        <function-ref name="clr" scoped="" ref="0x2ad3502ed440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2ad3502f0710" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2ad3502f0710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad3502f0a90"/>
        <function-ref name="isInput" scoped="" ref="0x2ad3502f0c20"/>
        <function-ref name="toggle" scoped="" ref="0x2ad3502f0db0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad3502ef020"/>
        <function-ref name="get" scoped="" ref="0x2ad3502ef1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad3502ef340"/>
        <function-ref name="set" scoped="" ref="0x2ad3502ef4d0"/>
        <function-ref name="clr" scoped="" ref="0x2ad3502ef660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2ad3502ea480" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2ad3502ea480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad3502ea800"/>
        <function-ref name="isInput" scoped="" ref="0x2ad3502ea990"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad3502eab20"/>
        <function-ref name="toggle" scoped="" ref="0x2ad3502eacb0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad3502eae40"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad35033c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad35033c1b0"/>
        <function-ref name="get" scoped="" ref="0x2ad35033c340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad35033c4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad35033c660"/>
        <function-ref name="set" scoped="" ref="0x2ad35033c7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad35033c980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad35033cb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad35033cda0"/>
        <function-ref name="clr" scoped="" ref="0x2ad35033b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2ad3502eb1b0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2ad3502eb1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad3502eb530"/>
        <function-ref name="isInput" scoped="" ref="0x2ad3502eb6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad3502eb850"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad3502eb9e0"/>
        <function-ref name="get" scoped="" ref="0x2ad3502ebb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad3502ebd00"/>
        <function-ref name="set" scoped="" ref="0x2ad3502ea020"/>
        <function-ref name="clr" scoped="" ref="0x2ad3502ea1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2ad350338020" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2ad350338020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad3503383a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad350338530"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad3503386c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad350338850"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad3503389e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad350338b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad350338d00"/>
        <function-ref name="get" scoped="" ref="0x2ad350337020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad3503371b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad350337340"/>
        <function-ref name="set" scoped="" ref="0x2ad3503374d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad350337660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad3503377f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad350337a80"/>
        <function-ref name="clr" scoped="" ref="0x2ad350337c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2ad35033ad70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2ad35033ad70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad350339180"/>
        <function-ref name="isInput" scoped="" ref="0x2ad350339310"/>
        <function-ref name="toggle" scoped="" ref="0x2ad3503394a0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad350339630"/>
        <function-ref name="get" scoped="" ref="0x2ad3503397c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad350339950"/>
        <function-ref name="set" scoped="" ref="0x2ad350339ae0"/>
        <function-ref name="clr" scoped="" ref="0x2ad350339c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x2ad35031f5a0" loc="42:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x2ad35031f5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2ad35031f920"/>
        <function-ref name="disable" scoped="" ref="0x2ad35031fab0"/>
        <function-ref name="captured" scoped="" ref="0x2ad35031fc40"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2ad35031fdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x2ad350323210" loc="43:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x2ad350323210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ad350323590"/>
        <function-ref name="disable" scoped="" ref="0x2ad350323720"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2ad3503238b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2ad350323a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x2ad350323e30" loc="44:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x2ad350323e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ad3503221e0"/>
        <function-ref name="disable" scoped="" ref="0x2ad350322370"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2ad350322500"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2ad350322690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x2ad35035fda0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x2ad35035fda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ad35035e180"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2ad35035e310"/>
        <function-ref name="captured" scoped="" ref="0x2ad35035e4a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad35035e630"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad35035e7c0"/>
        <function-ref name="setEdge" scoped="" ref="0x2ad35035e950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2ad350360020" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2ad350360020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2ad3503603a0"/>
        <function-ref name="disable" scoped="" ref="0x2ad350360530"/>
        <function-ref name="captured" scoped="" ref="0x2ad3503606c0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2ad350360850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x2ad350360ae0" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ad350360ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ad350360e60"/>
        <function-ref name="getControl" scoped="" ref="0x2ad35035f020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ad35035f1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ad35035f340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ad35035f4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ad35035f660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ad35035f7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ad35035f980"/>
        <function-ref name="setControl" scoped="" ref="0x2ad35035fb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x2ad35035ec20" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2ad35035ec20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad35035d020"/>
        <function-ref name="isInput" scoped="" ref="0x2ad35035d1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad35035d340"/>
        <function-ref name="toggle" scoped="" ref="0x2ad35035d4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad35035d660"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad35035d7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad35035d980"/>
        <function-ref name="get" scoped="" ref="0x2ad35035db10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad35035dca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad35035de30"/>
        <function-ref name="set" scoped="" ref="0x2ad35035c020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad35035c1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad35035c340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad35035c5d0"/>
        <function-ref name="clr" scoped="" ref="0x2ad35035c760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x2ad35034fc40" loc="46:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x2ad35034fc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad35034e020"/>
        <function-ref name="fired" scoped="" ref="0x2ad35034e1b0"/>
        <function-ref name="disable" scoped="" ref="0x2ad35034e340"/>
        <function-ref name="edge" scoped="" ref="0x2ad35034e4d0"/>
        <function-ref name="enable" scoped="" ref="0x2ad35034e660"/>
        <function-ref name="getValue" scoped="" ref="0x2ad35034e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x2ad350345bc0" loc="58:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x2ad350345bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad350344020"/>
        <function-ref name="fired" scoped="" ref="0x2ad3503441b0"/>
        <function-ref name="disable" scoped="" ref="0x2ad350344340"/>
        <function-ref name="edge" scoped="" ref="0x2ad3503444d0"/>
        <function-ref name="enable" scoped="" ref="0x2ad350344660"/>
        <function-ref name="getValue" scoped="" ref="0x2ad3503447f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x2ad35034cbc0" loc="49:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x2ad35034cbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad35034b020"/>
        <function-ref name="fired" scoped="" ref="0x2ad35034b1b0"/>
        <function-ref name="disable" scoped="" ref="0x2ad35034b340"/>
        <function-ref name="edge" scoped="" ref="0x2ad35034b4d0"/>
        <function-ref name="enable" scoped="" ref="0x2ad35034b660"/>
        <function-ref name="getValue" scoped="" ref="0x2ad35034b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x2ad35034abc0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x2ad35034abc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad350349020"/>
        <function-ref name="fired" scoped="" ref="0x2ad3503491b0"/>
        <function-ref name="disable" scoped="" ref="0x2ad350349340"/>
        <function-ref name="edge" scoped="" ref="0x2ad3503494d0"/>
        <function-ref name="enable" scoped="" ref="0x2ad350349660"/>
        <function-ref name="getValue" scoped="" ref="0x2ad3503497f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x2ad350355d20" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x2ad350355d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad3503500e0"/>
        <function-ref name="fired" scoped="" ref="0x2ad350350270"/>
        <function-ref name="disable" scoped="" ref="0x2ad350350400"/>
        <function-ref name="edge" scoped="" ref="0x2ad350350590"/>
        <function-ref name="enable" scoped="" ref="0x2ad350350720"/>
        <function-ref name="getValue" scoped="" ref="0x2ad3503508b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x2ad350347bc0" loc="56:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x2ad350347bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad3503460a0"/>
        <function-ref name="fired" scoped="" ref="0x2ad350346230"/>
        <function-ref name="disable" scoped="" ref="0x2ad3503463c0"/>
        <function-ref name="edge" scoped="" ref="0x2ad350346550"/>
        <function-ref name="enable" scoped="" ref="0x2ad3503466e0"/>
        <function-ref name="getValue" scoped="" ref="0x2ad350346870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x2ad35034ebc0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x2ad35034ebc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad35034d020"/>
        <function-ref name="fired" scoped="" ref="0x2ad35034d1b0"/>
        <function-ref name="disable" scoped="" ref="0x2ad35034d340"/>
        <function-ref name="edge" scoped="" ref="0x2ad35034d4d0"/>
        <function-ref name="enable" scoped="" ref="0x2ad35034d660"/>
        <function-ref name="getValue" scoped="" ref="0x2ad35034d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x2ad350344bc0" loc="59:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x2ad350344bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad350343020"/>
        <function-ref name="fired" scoped="" ref="0x2ad3503431b0"/>
        <function-ref name="disable" scoped="" ref="0x2ad350343340"/>
        <function-ref name="edge" scoped="" ref="0x2ad3503434d0"/>
        <function-ref name="enable" scoped="" ref="0x2ad350343660"/>
        <function-ref name="getValue" scoped="" ref="0x2ad3503437f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x2ad350351e70" loc="42:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x2ad350351e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad350356220"/>
        <function-ref name="fired" scoped="" ref="0x2ad3503563b0"/>
        <function-ref name="disable" scoped="" ref="0x2ad350356540"/>
        <function-ref name="edge" scoped="" ref="0x2ad3503566d0"/>
        <function-ref name="enable" scoped="" ref="0x2ad350356860"/>
        <function-ref name="getValue" scoped="" ref="0x2ad3503569f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x2ad350349bc0" loc="54:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x2ad350349bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad350348020"/>
        <function-ref name="fired" scoped="" ref="0x2ad3503481b0"/>
        <function-ref name="disable" scoped="" ref="0x2ad350348340"/>
        <function-ref name="edge" scoped="" ref="0x2ad3503484d0"/>
        <function-ref name="enable" scoped="" ref="0x2ad350348660"/>
        <function-ref name="getValue" scoped="" ref="0x2ad3503487f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x2ad350350c80" loc="45:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x2ad350350c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad35034f0a0"/>
        <function-ref name="fired" scoped="" ref="0x2ad35034f230"/>
        <function-ref name="disable" scoped="" ref="0x2ad35034f3c0"/>
        <function-ref name="edge" scoped="" ref="0x2ad35034f550"/>
        <function-ref name="enable" scoped="" ref="0x2ad35034f6e0"/>
        <function-ref name="getValue" scoped="" ref="0x2ad35034f870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x2ad350346c40" loc="57:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x2ad350346c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad350345020"/>
        <function-ref name="fired" scoped="" ref="0x2ad3503451b0"/>
        <function-ref name="disable" scoped="" ref="0x2ad350345340"/>
        <function-ref name="edge" scoped="" ref="0x2ad3503454d0"/>
        <function-ref name="enable" scoped="" ref="0x2ad350345660"/>
        <function-ref name="getValue" scoped="" ref="0x2ad3503457f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x2ad35034dbc0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x2ad35034dbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad35034c020"/>
        <function-ref name="fired" scoped="" ref="0x2ad35034c1b0"/>
        <function-ref name="disable" scoped="" ref="0x2ad35034c340"/>
        <function-ref name="edge" scoped="" ref="0x2ad35034c4d0"/>
        <function-ref name="enable" scoped="" ref="0x2ad35034c660"/>
        <function-ref name="getValue" scoped="" ref="0x2ad35034c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x2ad35034bbc0" loc="52:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x2ad35034bbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad35034a020"/>
        <function-ref name="fired" scoped="" ref="0x2ad35034a1b0"/>
        <function-ref name="disable" scoped="" ref="0x2ad35034a340"/>
        <function-ref name="edge" scoped="" ref="0x2ad35034a4d0"/>
        <function-ref name="enable" scoped="" ref="0x2ad35034a660"/>
        <function-ref name="getValue" scoped="" ref="0x2ad35034a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x2ad350356dc0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x2ad350356dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad350355180"/>
        <function-ref name="fired" scoped="" ref="0x2ad350355310"/>
        <function-ref name="disable" scoped="" ref="0x2ad3503554a0"/>
        <function-ref name="edge" scoped="" ref="0x2ad350355630"/>
        <function-ref name="enable" scoped="" ref="0x2ad3503557c0"/>
        <function-ref name="getValue" scoped="" ref="0x2ad350355950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x2ad350348bc0" loc="55:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x2ad350348bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad350347020"/>
        <function-ref name="fired" scoped="" ref="0x2ad3503471b0"/>
        <function-ref name="disable" scoped="" ref="0x2ad350347340"/>
        <function-ref name="edge" scoped="" ref="0x2ad3503474d0"/>
        <function-ref name="enable" scoped="" ref="0x2ad350347660"/>
        <function-ref name="getValue" scoped="" ref="0x2ad3503477f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x2ad35038fa30" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x2ad35038fa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad35038fdb0"/>
        <function-ref name="fired" scoped="" ref="0x2ad35038e020"/>
        <function-ref name="disable" scoped="" ref="0x2ad35038e1b0"/>
        <function-ref name="edge" scoped="" ref="0x2ad35038e340"/>
        <function-ref name="enable" scoped="" ref="0x2ad35038e4d0"/>
        <function-ref name="getValue" scoped="" ref="0x2ad35038e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x2ad350385bc0" loc="55:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x2ad350385bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad350384020"/>
        <function-ref name="fired" scoped="" ref="0x2ad3503841b0"/>
        <function-ref name="disable" scoped="" ref="0x2ad350384340"/>
        <function-ref name="edge" scoped="" ref="0x2ad3503844d0"/>
        <function-ref name="enable" scoped="" ref="0x2ad350384660"/>
        <function-ref name="getValue" scoped="" ref="0x2ad3503847f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x2ad35038ca30" loc="46:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x2ad35038ca30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad35038cdb0"/>
        <function-ref name="fired" scoped="" ref="0x2ad35038b020"/>
        <function-ref name="disable" scoped="" ref="0x2ad35038b1b0"/>
        <function-ref name="edge" scoped="" ref="0x2ad35038b340"/>
        <function-ref name="enable" scoped="" ref="0x2ad35038b4d0"/>
        <function-ref name="getValue" scoped="" ref="0x2ad35038b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x2ad35038aa30" loc="50:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x2ad35038aa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad35038adb0"/>
        <function-ref name="fired" scoped="" ref="0x2ad350389020"/>
        <function-ref name="disable" scoped="" ref="0x2ad3503891b0"/>
        <function-ref name="edge" scoped="" ref="0x2ad350389340"/>
        <function-ref name="enable" scoped="" ref="0x2ad3503894d0"/>
        <function-ref name="getValue" scoped="" ref="0x2ad350389660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x2ad350391a30" loc="41:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x2ad350391a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad350391db0"/>
        <function-ref name="fired" scoped="" ref="0x2ad350390020"/>
        <function-ref name="disable" scoped="" ref="0x2ad3503901b0"/>
        <function-ref name="edge" scoped="" ref="0x2ad350390340"/>
        <function-ref name="enable" scoped="" ref="0x2ad3503904d0"/>
        <function-ref name="getValue" scoped="" ref="0x2ad350390660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x2ad350387a30" loc="53:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x2ad350387a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad350386020"/>
        <function-ref name="fired" scoped="" ref="0x2ad3503861b0"/>
        <function-ref name="disable" scoped="" ref="0x2ad350386340"/>
        <function-ref name="edge" scoped="" ref="0x2ad3503864d0"/>
        <function-ref name="enable" scoped="" ref="0x2ad350386660"/>
        <function-ref name="getValue" scoped="" ref="0x2ad3503867f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x2ad35038ea30" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x2ad35038ea30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad35038edb0"/>
        <function-ref name="fired" scoped="" ref="0x2ad35038d020"/>
        <function-ref name="disable" scoped="" ref="0x2ad35038d1b0"/>
        <function-ref name="edge" scoped="" ref="0x2ad35038d340"/>
        <function-ref name="enable" scoped="" ref="0x2ad35038d4d0"/>
        <function-ref name="getValue" scoped="" ref="0x2ad35038d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x2ad350384bc0" loc="56:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x2ad350384bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad350383020"/>
        <function-ref name="fired" scoped="" ref="0x2ad3503831b0"/>
        <function-ref name="disable" scoped="" ref="0x2ad350383340"/>
        <function-ref name="edge" scoped="" ref="0x2ad3503834d0"/>
        <function-ref name="enable" scoped="" ref="0x2ad350383660"/>
        <function-ref name="getValue" scoped="" ref="0x2ad3503837f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x2ad3503429d0" loc="39:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x2ad3503429d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad350342d50"/>
        <function-ref name="fired" scoped="" ref="0x2ad350392020"/>
        <function-ref name="disable" scoped="" ref="0x2ad3503921b0"/>
        <function-ref name="edge" scoped="" ref="0x2ad350392340"/>
        <function-ref name="enable" scoped="" ref="0x2ad3503924d0"/>
        <function-ref name="getValue" scoped="" ref="0x2ad350392660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x2ad350389a30" loc="51:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x2ad350389a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad350389db0"/>
        <function-ref name="fired" scoped="" ref="0x2ad350388020"/>
        <function-ref name="disable" scoped="" ref="0x2ad3503881b0"/>
        <function-ref name="edge" scoped="" ref="0x2ad350388340"/>
        <function-ref name="enable" scoped="" ref="0x2ad3503884d0"/>
        <function-ref name="getValue" scoped="" ref="0x2ad350388660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x2ad350390a30" loc="42:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x2ad350390a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad350390db0"/>
        <function-ref name="fired" scoped="" ref="0x2ad35038f020"/>
        <function-ref name="disable" scoped="" ref="0x2ad35038f1b0"/>
        <function-ref name="edge" scoped="" ref="0x2ad35038f340"/>
        <function-ref name="enable" scoped="" ref="0x2ad35038f4d0"/>
        <function-ref name="getValue" scoped="" ref="0x2ad35038f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x2ad350386bc0" loc="54:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x2ad350386bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad350385020"/>
        <function-ref name="fired" scoped="" ref="0x2ad3503851b0"/>
        <function-ref name="disable" scoped="" ref="0x2ad350385340"/>
        <function-ref name="edge" scoped="" ref="0x2ad3503854d0"/>
        <function-ref name="enable" scoped="" ref="0x2ad350385660"/>
        <function-ref name="getValue" scoped="" ref="0x2ad3503857f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x2ad35038da30" loc="45:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x2ad35038da30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad35038ddb0"/>
        <function-ref name="fired" scoped="" ref="0x2ad35038c020"/>
        <function-ref name="disable" scoped="" ref="0x2ad35038c1b0"/>
        <function-ref name="edge" scoped="" ref="0x2ad35038c340"/>
        <function-ref name="enable" scoped="" ref="0x2ad35038c4d0"/>
        <function-ref name="getValue" scoped="" ref="0x2ad35038c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x2ad35038ba30" loc="49:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x2ad35038ba30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad35038bdb0"/>
        <function-ref name="fired" scoped="" ref="0x2ad35038a020"/>
        <function-ref name="disable" scoped="" ref="0x2ad35038a1b0"/>
        <function-ref name="edge" scoped="" ref="0x2ad35038a340"/>
        <function-ref name="enable" scoped="" ref="0x2ad35038a4d0"/>
        <function-ref name="getValue" scoped="" ref="0x2ad35038a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x2ad350392a30" loc="40:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x2ad350392a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad350392db0"/>
        <function-ref name="fired" scoped="" ref="0x2ad350391020"/>
        <function-ref name="disable" scoped="" ref="0x2ad3503911b0"/>
        <function-ref name="edge" scoped="" ref="0x2ad350391340"/>
        <function-ref name="enable" scoped="" ref="0x2ad3503914d0"/>
        <function-ref name="getValue" scoped="" ref="0x2ad350391660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x2ad350388a30" loc="52:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x2ad350388a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad350388db0"/>
        <function-ref name="fired" scoped="" ref="0x2ad350387020"/>
        <function-ref name="disable" scoped="" ref="0x2ad3503871b0"/>
        <function-ref name="edge" scoped="" ref="0x2ad350387340"/>
        <function-ref name="enable" scoped="" ref="0x2ad3503874d0"/>
        <function-ref name="getValue" scoped="" ref="0x2ad350387660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x2ad350460610" loc="46:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x2ad350460610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad350460990"/>
        <function-ref name="fired" scoped="" ref="0x2ad350460b20"/>
        <function-ref name="disable" scoped="" ref="0x2ad350460cb0"/>
        <function-ref name="edge" scoped="" ref="0x2ad350460e40"/>
        <function-ref name="enable" scoped="" ref="0x2ad350453020"/>
        <function-ref name="getValue" scoped="" ref="0x2ad3504531b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x2ad350461a30" loc="45:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x2ad350461a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ad350461db0"/>
        <function-ref name="disable" scoped="" ref="0x2ad350460020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2ad3504601b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2ad350460340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x2ad350451610" loc="46:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x2ad350451610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad350451990"/>
        <function-ref name="fired" scoped="" ref="0x2ad350451b20"/>
        <function-ref name="disable" scoped="" ref="0x2ad350451cb0"/>
        <function-ref name="edge" scoped="" ref="0x2ad350451e40"/>
        <function-ref name="enable" scoped="" ref="0x2ad350450020"/>
        <function-ref name="getValue" scoped="" ref="0x2ad3504501b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x2ad350452a70" loc="45:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x2ad350452a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ad350452df0"/>
        <function-ref name="disable" scoped="" ref="0x2ad350451020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2ad3504511b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2ad350451340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2ad3507a8e50" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2ad3507a8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3507a7410"/>
        <function-ref name="write" scoped="" ref="0x2ad3507a75a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2ad3507b1160" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2ad3507b1160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad3507b14e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2ad3507abe50" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2ad3507abe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3507aa210"/>
        <function-ref name="write" scoped="" ref="0x2ad3507aa3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2ad3507a5880" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2ad3507a5880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3507a5c00"/>
        <function-ref name="write" scoped="" ref="0x2ad3507a5d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2ad35079d0a0" loc="86:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2ad35079d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad35079d420"/>
        <function-ref name="write" scoped="" ref="0x2ad35079d5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2ad3507a40a0" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2ad3507a40a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3507a4420"/>
        <function-ref name="write" scoped="" ref="0x2ad3507a45b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2ad3507f9500" loc="108:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2ad3507f9500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3507f9880"/>
        <function-ref name="write" scoped="" ref="0x2ad3507f9a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2ad350794500" loc="104:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2ad350794500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350794880"/>
        <function-ref name="write" scoped="" ref="0x2ad350794a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2ad3507b0490" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2ad3507b0490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad3507b0810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2ad35079a880" loc="93:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2ad35079a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad35079ac00"/>
        <function-ref name="write" scoped="" ref="0x2ad35079ad90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2ad350795500" loc="102:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2ad350795500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350795880"/>
        <function-ref name="write" scoped="" ref="0x2ad350795a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2ad3507aae50" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2ad3507aae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3507a9210"/>
        <function-ref name="write" scoped="" ref="0x2ad3507a93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2ad3507a9e50" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2ad3507a9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3507a8210"/>
        <function-ref name="write" scoped="" ref="0x2ad3507a83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2ad35079f880" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2ad35079f880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad35079fc00"/>
        <function-ref name="write" scoped="" ref="0x2ad35079fd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2ad3507a10a0" loc="79:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2ad3507a10a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3507a1420"/>
        <function-ref name="write" scoped="" ref="0x2ad3507a15b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2ad3507a4880" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2ad3507a4880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3507a4c00"/>
        <function-ref name="write" scoped="" ref="0x2ad3507a4d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2ad3507b4a90" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2ad3507b4a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2ad3507b4e10"/>
        <function-ref name="abortRelease" scoped="" ref="0x2ad3507b2020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2ad3507b21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2ad3507afe00" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2ad3507afe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad3507ae1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2ad3507ae490" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2ad3507ae490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad3507ae910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2ad350798c80" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2ad350798c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3507970a0"/>
        <function-ref name="write" scoped="" ref="0x2ad350797230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2ad3507aebe0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2ad3507aebe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad3507ac020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2ad350795ce0" loc="103:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2ad350795ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3507940a0"/>
        <function-ref name="write" scoped="" ref="0x2ad350794230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2ad3507af160" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2ad3507af160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad3507af4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2ad35079a0a0" loc="92:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2ad35079a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad35079a420"/>
        <function-ref name="write" scoped="" ref="0x2ad35079a5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2ad3507a9670" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2ad3507a9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3507a99f0"/>
        <function-ref name="write" scoped="" ref="0x2ad3507a9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2ad3507aa670" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2ad3507aa670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3507aa9f0"/>
        <function-ref name="write" scoped="" ref="0x2ad3507aab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2ad3507b2ad0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2ad3507b2ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad3507b2e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2ad35079b0a0" loc="90:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2ad35079b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad35079b420"/>
        <function-ref name="write" scoped="" ref="0x2ad35079b5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2ad35079d880" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2ad35079d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad35079dc00"/>
        <function-ref name="write" scoped="" ref="0x2ad35079dd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2ad35079b880" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2ad35079b880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad35079bc00"/>
        <function-ref name="write" scoped="" ref="0x2ad35079bd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2ad350793ce0" loc="107:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2ad350793ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3507f90a0"/>
        <function-ref name="write" scoped="" ref="0x2ad3507f9230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2ad350794ce0" loc="105:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2ad350794ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3507930a0"/>
        <function-ref name="write" scoped="" ref="0x2ad350793230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2ad3507a1880" loc="80:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2ad3507a1880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3507a1c00"/>
        <function-ref name="write" scoped="" ref="0x2ad3507a1d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2ad35079c0a0" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2ad35079c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad35079c420"/>
        <function-ref name="write" scoped="" ref="0x2ad35079c5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2ad350796ce0" loc="101:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2ad350796ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3507950a0"/>
        <function-ref name="write" scoped="" ref="0x2ad350795230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2ad3507a3880" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2ad3507a3880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3507a3c00"/>
        <function-ref name="write" scoped="" ref="0x2ad3507a3d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2ad3507f9ce0" loc="111:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2ad3507f9ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2ad3507f80a0"/>
        <function-ref name="writeDone" scoped="" ref="0x2ad3507f8230"/>
        <function-ref name="write" scoped="" ref="0x2ad3507f83c0"/>
        <function-ref name="beginRead" scoped="" ref="0x2ad3507f8550"/>
        <function-ref name="readDone" scoped="" ref="0x2ad3507f86e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2ad3507b2480" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2ad3507b2480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad3507b2800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2ad3507ab670" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2ad3507ab670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3507ab9f0"/>
        <function-ref name="write" scoped="" ref="0x2ad3507abb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2ad3507a8670" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2ad3507a8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3507a89f0"/>
        <function-ref name="write" scoped="" ref="0x2ad3507a8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2ad35079e0a0" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2ad35079e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad35079e420"/>
        <function-ref name="write" scoped="" ref="0x2ad35079e5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2ad3507a30a0" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2ad3507a30a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3507a3420"/>
        <function-ref name="write" scoped="" ref="0x2ad3507a35b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2ad35079e880" loc="85:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2ad35079e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad35079ec00"/>
        <function-ref name="write" scoped="" ref="0x2ad35079ed90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2ad3507a7870" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2ad3507a7870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3507a7bf0"/>
        <function-ref name="write" scoped="" ref="0x2ad3507a7d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2ad3507b17b0" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2ad3507b17b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad3507b1b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2ad3507a50a0" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2ad3507a50a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3507a5420"/>
        <function-ref name="write" scoped="" ref="0x2ad3507a55b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ad3507b5e20" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ad3507b5e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad3507b41c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad3507b4350"/>
        <function-ref name="request" scoped="" ref="0x2ad3507b44e0"/>
        <function-ref name="granted" scoped="" ref="0x2ad3507b4670"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad3507b4800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2ad3507ac2f0" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2ad3507ac2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad3507ac670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2ad3507ab020" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2ad3507ab020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad3507ab3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2ad350796500" loc="100:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2ad350796500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350796880"/>
        <function-ref name="write" scoped="" ref="0x2ad350796a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2ad350797ce0" loc="99:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2ad350797ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3507960a0"/>
        <function-ref name="write" scoped="" ref="0x2ad350796230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2ad3507af7b0" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2ad3507af7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad3507afb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2ad350797500" loc="96:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2ad350797500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350797880"/>
        <function-ref name="write" scoped="" ref="0x2ad350797a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2ad350793500" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2ad350793500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350793880"/>
        <function-ref name="write" scoped="" ref="0x2ad350793a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2ad35079f0a0" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2ad35079f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad35079f420"/>
        <function-ref name="write" scoped="" ref="0x2ad35079f5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2ad35079c880" loc="89:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2ad35079c880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad35079cc00"/>
        <function-ref name="write" scoped="" ref="0x2ad35079cd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2ad3507b1e00" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2ad3507b1e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad3507b01c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2ad3507b0ae0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2ad3507b0ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad3507b0e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2ad3507a20a0" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2ad3507a20a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3507a2420"/>
        <function-ref name="write" scoped="" ref="0x2ad3507a25b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2ad3507ac940" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2ad3507ac940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad3507accc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2ad3507a2880" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2ad3507a2880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3507a2c00"/>
        <function-ref name="write" scoped="" ref="0x2ad3507a2d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2ad3507980a0" loc="94:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2ad3507980a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350798820"/>
        <function-ref name="write" scoped="" ref="0x2ad3507989b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2ad3507f89b0" loc="112:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2ad3507f89b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2ad3507f8d30"/>
        <function-ref name="writeDone" scoped="" ref="0x2ad3507f7020"/>
        <function-ref name="write" scoped="" ref="0x2ad3507f71b0"/>
        <function-ref name="beginRead" scoped="" ref="0x2ad3507f7340"/>
        <function-ref name="readDone" scoped="" ref="0x2ad3507f74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x2ad3504c0630" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x2ad3504c0630"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2ad3504c09b0"/>
        <function-ref name="writeDone" scoped="" ref="0x2ad3504c0b40"/>
        <function-ref name="write" scoped="" ref="0x2ad3504c0cd0"/>
        <function-ref name="beginRead" scoped="" ref="0x2ad3504c0e60"/>
        <function-ref name="readDone" scoped="" ref="0x2ad3504bf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2ad3504c2680" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2ad3504c2680"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2ad3504c2a00"/>
        <function-ref name="abortRelease" scoped="" ref="0x2ad3504c2b90"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2ad3504c2d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x2ad3504bf8c0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x2ad3504bf8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3504bfc40"/>
        <function-ref name="write" scoped="" ref="0x2ad3504bfdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x2ad3504be6f0" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x2ad3504be6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3504bea70"/>
        <function-ref name="write" scoped="" ref="0x2ad3504bec00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ad35046c960" loc="39:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ad35046c960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad35046cce0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad35046ce70"/>
        <function-ref name="request" scoped="" ref="0x2ad3504c2030"/>
        <function-ref name="granted" scoped="" ref="0x2ad3504c21c0"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad3504c2350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x2ad3504bd510" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x2ad3504bd510"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad3504bd890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x2ad3504a7680" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2ad3504a7680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad3504a7a00"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad3504a7b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x2ad3504b7bb0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x2ad3504b7bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2ad3504b6020"/>
        <function-ref name="writeDone" scoped="" ref="0x2ad3504b61b0"/>
        <function-ref name="write" scoped="" ref="0x2ad3504b6340"/>
        <function-ref name="beginRead" scoped="" ref="0x2ad3504b64d0"/>
        <function-ref name="readDone" scoped="" ref="0x2ad3504b6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2ad3504bc930" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2ad3504bc930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2ad3504bccb0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2ad3504bce40"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2ad3504b9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x2ad3504b0080" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2ad3504b0080"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2ad3504b0400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x2ad3504af020" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x2ad3504af020"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2ad3504af3a0"/>
        <function-ref name="toIdle" scoped="" ref="0x2ad3504af530"/>
        <function-ref name="isState" scoped="" ref="0x2ad3504af6c0"/>
        <function-ref name="isIdle" scoped="" ref="0x2ad3504af850"/>
        <function-ref name="requestState" scoped="" ref="0x2ad3504af9e0"/>
        <function-ref name="forceState" scoped="" ref="0x2ad3504afb70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2ad3504b2400" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x2ad3504b2400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad3504b2780"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad3504b2910"/>
        <function-ref name="request" scoped="" ref="0x2ad3504b2aa0"/>
        <function-ref name="granted" scoped="" ref="0x2ad3504b2c30"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad3504b2dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x2ad3504b5020" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x2ad3504b5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3504b53a0"/>
        <function-ref name="write" scoped="" ref="0x2ad3504b5530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x2ad3504b5db0" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x2ad3504b5db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3504b4180"/>
        <function-ref name="write" scoped="" ref="0x2ad3504b4310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ad3504afdf0" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2ad3504afdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ad3504ae1c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ad3504ae350"/>
        <function-ref name="led1On" scoped="" ref="0x2ad3504ae4e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ad3504ae670"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ad3504ae800"/>
        <function-ref name="get" scoped="" ref="0x2ad3504ae990"/>
        <function-ref name="led1Off" scoped="" ref="0x2ad3504aeb20"/>
        <function-ref name="led2Off" scoped="" ref="0x2ad3504a81b0"/>
        <function-ref name="set" scoped="" ref="0x2ad3504aecb0"/>
        <function-ref name="led0On" scoped="" ref="0x2ad3504aee40"/>
        <function-ref name="led2On" scoped="" ref="0x2ad3504a8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ad3504b9810" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ad3504b9810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad3504b9b90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad3504b9d20"/>
        <function-ref name="request" scoped="" ref="0x2ad3504b7020"/>
        <function-ref name="granted" scoped="" ref="0x2ad3504b71b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad3504b7340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x2ad3504a2120" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x2ad3504a2120"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ad3504a24a0"/>
        <function-ref name="runTask" scoped="" ref="0x2ad3504a2630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x2ad3504b4ba0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x2ad3504b4ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad3504b2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2ad3504fb770" loc="67:/home/zdenial/tinyos/tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2ad3504fb770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2ad3504fbaf0"/>
        <function-ref name="toIdle" scoped="" ref="0x2ad3504fbc80"/>
        <function-ref name="isState" scoped="" ref="0x2ad3504fbe10"/>
        <function-ref name="isIdle" scoped="" ref="0x2ad3504f4020"/>
        <function-ref name="requestState" scoped="" ref="0x2ad3504f41b0"/>
        <function-ref name="forceState" scoped="" ref="0x2ad3504f4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2ad3504f7280" loc="66:/home/zdenial/tinyos/tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2ad3504f7280"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2ad3504f7600"/>
        <function-ref name="toIdle" scoped="" ref="0x2ad3504f7790"/>
        <function-ref name="isState" scoped="" ref="0x2ad3504f7920"/>
        <function-ref name="isIdle" scoped="" ref="0x2ad3504f7ab0"/>
        <function-ref name="requestState" scoped="" ref="0x2ad3504f7c40"/>
        <function-ref name="forceState" scoped="" ref="0x2ad3504f7dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad3504f3020" loc="66:/home/zdenial/tinyos/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ad3504f3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad3504f33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2ad3504f3b70" loc="67:/home/zdenial/tinyos/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2ad3504f3b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2ad3504f2020"/>
        <function-ref name="toIdle" scoped="" ref="0x2ad3504f21b0"/>
        <function-ref name="isState" scoped="" ref="0x2ad3504f2340"/>
        <function-ref name="isIdle" scoped="" ref="0x2ad3504f24d0"/>
        <function-ref name="requestState" scoped="" ref="0x2ad3504f2660"/>
        <function-ref name="forceState" scoped="" ref="0x2ad3504f27f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2ad350775020" loc="44:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2ad350775020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad3507753a0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad350775530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2ad3505348f0" loc="43:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2ad3505348f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2ad350534c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ad350535c40" loc="42:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ad350535c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad350534020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad3505341b0"/>
        <function-ref name="request" scoped="" ref="0x2ad350534340"/>
        <function-ref name="granted" scoped="" ref="0x2ad3505344d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad350534660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2ad3516f0af0" loc="82:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2ad3516f0af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2ad3516f0e70"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ad3516ef030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2ad3516ee440" loc="87:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2ad3516ee440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad3516ee7c0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad3516ee950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x2ad3516eebe0" loc="89:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2ad3516eebe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2ad3516ec020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2ad3516ef2c0" loc="83:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2ad3516ef2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2ad3516ef640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ad3516f2e70" loc="81:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ad3516f2e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad3516f0220"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad3516f03b0"/>
        <function-ref name="request" scoped="" ref="0x2ad3516f0540"/>
        <function-ref name="granted" scoped="" ref="0x2ad3516f06d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad3516f0860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2ad3516ef8d0" loc="85:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x2ad3516ef8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2ad3516efc50"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2ad3516efde0"/>
        <function-ref name="splitRead" scoped="" ref="0x2ad3516ee020"/>
        <function-ref name="write" scoped="" ref="0x2ad3516ee1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x2ad3505216b0" loc="74:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad3505216b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2ad350521a30"/>
        <function-ref name="configure" scoped="" ref="0x2ad350521bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2ad35051f850" loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2ad35051f850"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad35051fbd0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad35051fd60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x2ad350579a40" loc="80:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2ad350579a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2ad350579dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2ad350520020" loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2ad350520020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2ad3505203a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x2ad35057a690" loc="79:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x2ad35057a690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad35057aa10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad35057aba0"/>
        <function-ref name="request" scoped="" ref="0x2ad35057ad30"/>
        <function-ref name="granted" scoped="" ref="0x2ad350579020"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad3505791b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ad350523430" loc="73:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ad350523430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad3505237b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad350523940"/>
        <function-ref name="request" scoped="" ref="0x2ad350523ad0"/>
        <function-ref name="granted" scoped="" ref="0x2ad350523c60"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad350523df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2ad3505206a0" loc="76:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x2ad3505206a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2ad350520a20"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2ad350520bb0"/>
        <function-ref name="splitRead" scoped="" ref="0x2ad350520d40"/>
        <function-ref name="write" scoped="" ref="0x2ad35051f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x2ad3505782a0" loc="81:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x2ad3505782a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2ad350578620"/>
        <function-ref name="txDone" scoped="" ref="0x2ad3505787b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x2ad35057c250" loc="76:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad35057c250"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2ad35057c5f0"/>
        <function-ref name="configure" scoped="" ref="0x2ad35057c780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2ad3505d7c50" loc="79:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2ad3505d7c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad3505d6020"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad3505d61b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x2ad3505d53e0" loc="82:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2ad3505d53e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2ad3505d5780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2ad35057ca10" loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2ad35057ca10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2ad35057cd90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x2ad3505d5a50" loc="83:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x2ad3505d5a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2ad3505d5dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2ad3505d4020"/>
        <function-ref name="setUctl" scoped="" ref="0x2ad3505d41b0"/>
        <function-ref name="enableUart" scoped="" ref="0x2ad3505d4340"/>
        <function-ref name="setUrctl" scoped="" ref="0x2ad3505d44d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2ad3505d4660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2ad3505d47f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x2ad3505d4980"/>
        <function-ref name="getUrctl" scoped="" ref="0x2ad3505d4b10"/>
        <function-ref name="resetUsart" scoped="" ref="0x2ad3505d4ca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x2ad3505d4e30"/>
        <function-ref name="disableIntr" scoped="" ref="0x2ad3505d3020"/>
        <function-ref name="setUtctl" scoped="" ref="0x2ad3505d31b0"/>
        <function-ref name="getUbr" scoped="" ref="0x2ad3505d3440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2ad3505d35d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x2ad3505d3760"/>
        <function-ref name="isUartRx" scoped="" ref="0x2ad3505d38f0"/>
        <function-ref name="isUart" scoped="" ref="0x2ad3505d3a80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2ad3505d3c10"/>
        <function-ref name="isSpi" scoped="" ref="0x2ad3505d3da0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2ad3505d2020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2ad3505d21b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2ad3505d2340"/>
        <function-ref name="enableIntr" scoped="" ref="0x2ad3505d24d0"/>
        <function-ref name="getMode" scoped="" ref="0x2ad3505d2660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2ad3505d29f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x2ad3505d2b80"/>
        <function-ref name="setUbr" scoped="" ref="0x2ad3505d2d10"/>
        <function-ref name="tx" scoped="" ref="0x2ad3505d1020"/>
        <function-ref name="getUctl" scoped="" ref="0x2ad3505d11b0"/>
        <function-ref name="disableUart" scoped="" ref="0x2ad3505d1340"/>
        <function-ref name="enableSpi" scoped="" ref="0x2ad3505d14d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x2ad3505d1660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2ad3505d17f0"/>
        <function-ref name="rx" scoped="" ref="0x2ad3505d1980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2ad3505d1b10"/>
        <function-ref name="isUartTx" scoped="" ref="0x2ad3505d1ca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2ad3505d1e30"/>
        <function-ref name="disableSpi" scoped="" ref="0x2ad3505d0020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2ad3505d01b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ad3505d0c20" loc="85:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2ad3505d0c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ad3505cf020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ad3505cf1b0"/>
        <function-ref name="led1On" scoped="" ref="0x2ad3505cf340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ad3505cf4d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ad3505cf660"/>
        <function-ref name="get" scoped="" ref="0x2ad3505cf7f0"/>
        <function-ref name="led1Off" scoped="" ref="0x2ad3505cf980"/>
        <function-ref name="led2On" scoped="" ref="0x2ad3505ce020"/>
        <function-ref name="set" scoped="" ref="0x2ad3505cfca0"/>
        <function-ref name="led2Off" scoped="" ref="0x2ad3505cfb10"/>
        <function-ref name="led0On" scoped="" ref="0x2ad3505cfe30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x2ad3505d65b0" loc="81:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x2ad3505d65b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad3505d6950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad3505d6ae0"/>
        <function-ref name="request" scoped="" ref="0x2ad3505d6c70"/>
        <function-ref name="granted" scoped="" ref="0x2ad3505d6e00"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad3505d5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ad35057d470" loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ad35057d470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad35057d810"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad35057d9a0"/>
        <function-ref name="request" scoped="" ref="0x2ad35057db30"/>
        <function-ref name="granted" scoped="" ref="0x2ad35057dcc0"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad35057de50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2ad3505d7060" loc="78:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x2ad3505d7060"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2ad3505d73e0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2ad3505d7570"/>
        <function-ref name="splitRead" scoped="" ref="0x2ad3505d7700"/>
        <function-ref name="write" scoped="" ref="0x2ad3505d7890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x2ad3505d0480" loc="84:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x2ad3505d0480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2ad3505d0800"/>
        <function-ref name="txDone" scoped="" ref="0x2ad3505d0990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x2ad3505ce2f0" loc="102:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x2ad3505ce2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ad3505ce670"/>
        <function-ref name="runTask" scoped="" ref="0x2ad3505ce800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x2ad3505c15e0" loc="78:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2ad3505c15e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ad3505c1960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x2ad3505c2d10" loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2ad3505c2d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2ad3505c10e0"/>
        <function-ref name="txDone" scoped="" ref="0x2ad3505c1270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x2ad3505c6020" loc="76:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x2ad3505c6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2ad3505c63a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2ad3505c6530"/>
        <function-ref name="setUctl" scoped="" ref="0x2ad3505c66c0"/>
        <function-ref name="enableUart" scoped="" ref="0x2ad3505c6850"/>
        <function-ref name="setUrctl" scoped="" ref="0x2ad3505c69e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2ad3505c6b70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2ad3505c6d00"/>
        <function-ref name="getUtctl" scoped="" ref="0x2ad3505c5020"/>
        <function-ref name="getUrctl" scoped="" ref="0x2ad3505c51b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x2ad3505c5340"/>
        <function-ref name="getUmctl" scoped="" ref="0x2ad3505c54d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x2ad3505c5660"/>
        <function-ref name="setUtctl" scoped="" ref="0x2ad3505c57f0"/>
        <function-ref name="getUbr" scoped="" ref="0x2ad3505c5a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2ad3505c5c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x2ad3505c5da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x2ad3505c4020"/>
        <function-ref name="isUart" scoped="" ref="0x2ad3505c41b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2ad3505c4340"/>
        <function-ref name="isSpi" scoped="" ref="0x2ad3505c44d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2ad3505c4660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2ad3505c47f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2ad3505c4980"/>
        <function-ref name="enableIntr" scoped="" ref="0x2ad3505c4b10"/>
        <function-ref name="getMode" scoped="" ref="0x2ad3505c4ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2ad3505c3220"/>
        <function-ref name="clrIntr" scoped="" ref="0x2ad3505c33b0"/>
        <function-ref name="setUbr" scoped="" ref="0x2ad3505c3540"/>
        <function-ref name="tx" scoped="" ref="0x2ad3505c36d0"/>
        <function-ref name="getUctl" scoped="" ref="0x2ad3505c3860"/>
        <function-ref name="disableUart" scoped="" ref="0x2ad3505c39f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2ad3505c3b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x2ad3505c3d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2ad3505c2020"/>
        <function-ref name="rx" scoped="" ref="0x2ad3505c21b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2ad3505c2340"/>
        <function-ref name="isUartTx" scoped="" ref="0x2ad3505c24d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2ad3505c2660"/>
        <function-ref name="disableSpi" scoped="" ref="0x2ad3505c27f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2ad3505c2980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x2ad3505e4b20" loc="82:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x2ad3505e4b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad3505e3020"/>
        <function-ref name="isInput" scoped="" ref="0x2ad3505e31b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad3505e3340"/>
        <function-ref name="toggle" scoped="" ref="0x2ad3505e34d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad3505e3660"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad3505e37f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad3505e3980"/>
        <function-ref name="get" scoped="" ref="0x2ad3505e3b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad3505e3ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad3505e3e30"/>
        <function-ref name="set" scoped="" ref="0x2ad3505e2020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad3505e21b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad3505e2340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad3505e25d0"/>
        <function-ref name="clr" scoped="" ref="0x2ad3505e2760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2ad3505b9780" loc="76:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2ad3505b9780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2ad3505b9b00"/>
        <function-ref name="txDone" scoped="" ref="0x2ad3505b9c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x2ad3505e2b20" loc="83:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x2ad3505e2b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad3505e1020"/>
        <function-ref name="isInput" scoped="" ref="0x2ad3505e11b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad3505e1340"/>
        <function-ref name="toggle" scoped="" ref="0x2ad3505e14d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad3505e1660"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad3505e17f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad3505e1980"/>
        <function-ref name="get" scoped="" ref="0x2ad3505e1b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad3505e1ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad3505e1e30"/>
        <function-ref name="set" scoped="" ref="0x2ad3505e0020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad3505e01b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad3505e0340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad3505e05d0"/>
        <function-ref name="clr" scoped="" ref="0x2ad3505e0760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x2ad3505e0b20" loc="84:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x2ad3505e0b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad3505df020"/>
        <function-ref name="isInput" scoped="" ref="0x2ad3505df1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad3505df340"/>
        <function-ref name="toggle" scoped="" ref="0x2ad3505df4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad3505df660"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad3505df7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad3505df980"/>
        <function-ref name="get" scoped="" ref="0x2ad3505dfb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad3505dfca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad3505dfe30"/>
        <function-ref name="set" scoped="" ref="0x2ad3505de020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad3505de1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad3505de340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad3505de5d0"/>
        <function-ref name="clr" scoped="" ref="0x2ad3505de760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x2ad3505c0c70" loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x2ad3505c0c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2ad3505bd020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2ad3505bd1b0"/>
        <function-ref name="setUctl" scoped="" ref="0x2ad3505bd340"/>
        <function-ref name="enableUart" scoped="" ref="0x2ad3505bd4d0"/>
        <function-ref name="setUrctl" scoped="" ref="0x2ad3505bd660"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2ad3505bd7f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2ad3505bd980"/>
        <function-ref name="getUtctl" scoped="" ref="0x2ad3505bdb10"/>
        <function-ref name="getUrctl" scoped="" ref="0x2ad3505bdca0"/>
        <function-ref name="resetUsart" scoped="" ref="0x2ad3505bde30"/>
        <function-ref name="getUmctl" scoped="" ref="0x2ad3505bc020"/>
        <function-ref name="disableIntr" scoped="" ref="0x2ad3505bc1b0"/>
        <function-ref name="setUtctl" scoped="" ref="0x2ad3505bc340"/>
        <function-ref name="getUbr" scoped="" ref="0x2ad3505bc5d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2ad3505bc760"/>
        <function-ref name="setUmctl" scoped="" ref="0x2ad3505bc8f0"/>
        <function-ref name="isUartRx" scoped="" ref="0x2ad3505bca80"/>
        <function-ref name="isUart" scoped="" ref="0x2ad3505bcc10"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2ad3505bcda0"/>
        <function-ref name="isSpi" scoped="" ref="0x2ad3505bb020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2ad3505bb1b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2ad3505bb340"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2ad3505bb4d0"/>
        <function-ref name="enableIntr" scoped="" ref="0x2ad3505bb660"/>
        <function-ref name="getMode" scoped="" ref="0x2ad3505bb7f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2ad3505bbb80"/>
        <function-ref name="clrIntr" scoped="" ref="0x2ad3505bbd10"/>
        <function-ref name="setUbr" scoped="" ref="0x2ad3505ba020"/>
        <function-ref name="tx" scoped="" ref="0x2ad3505ba1b0"/>
        <function-ref name="getUctl" scoped="" ref="0x2ad3505ba340"/>
        <function-ref name="disableUart" scoped="" ref="0x2ad3505ba4d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2ad3505ba660"/>
        <function-ref name="setModeUart" scoped="" ref="0x2ad3505ba7f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2ad3505ba980"/>
        <function-ref name="rx" scoped="" ref="0x2ad3505bab10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2ad3505baca0"/>
        <function-ref name="isUartTx" scoped="" ref="0x2ad3505bae30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2ad3505b9020"/>
        <function-ref name="disableSpi" scoped="" ref="0x2ad3505b91b0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2ad3505b9340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x2ad3505edd10" loc="79:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x2ad3505edd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x2ad3505b60e0"/>
        <function-ref name="getStartByte" scoped="" ref="0x2ad3505b6270"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x2ad3505b6400"/>
        <function-ref name="setMasterMode" scoped="" ref="0x2ad3505b6590"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x2ad3505b6720"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x2ad3505b68b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x2ad3505b6a40"/>
        <function-ref name="getStopBit" scoped="" ref="0x2ad3505b6bd0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ad3505b6d60"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x2ad3505b5020"/>
        <function-ref name="getData" scoped="" ref="0x2ad3505b51b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x2ad3505b5340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x2ad3505b54d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x2ad3505b5760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x2ad3505b58f0"/>
        <function-ref name="getIV" scoped="" ref="0x2ad3505b5a80"/>
        <function-ref name="enableI2C" scoped="" ref="0x2ad3505b5c10"/>
        <function-ref name="setStartBit" scoped="" ref="0x2ad3505b5da0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x2ad3505ec020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x2ad3505ec1b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x2ad3505ec340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x2ad3505ec4d0"/>
        <function-ref name="isI2C" scoped="" ref="0x2ad3505ec660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x2ad3505ec7f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x2ad3505ec980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x2ad3505ecd10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x2ad3505eb020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x2ad3505eb1b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x2ad3505eb340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x2ad3505eb4d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x2ad3505eb660"/>
        <function-ref name="disableI2C" scoped="" ref="0x2ad3505eb7f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x2ad3505eb980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x2ad3505ebb10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x2ad3505ebca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x2ad3505ebe30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x2ad3505ea020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x2ad3505ea1b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x2ad3505ea340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x2ad3505ea4d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x2ad3505ea660"/>
        <function-ref name="setWordMode" scoped="" ref="0x2ad3505ea7f0"/>
        <function-ref name="setData" scoped="" ref="0x2ad3505ea980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x2ad3505eab10"/>
        <function-ref name="getClockSource" scoped="" ref="0x2ad3505eaca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x2ad3505eae30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x2ad3505e9020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x2ad3505e91b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x2ad3505e9340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x2ad3505e98d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x2ad3505e9a60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x2ad3505e9bf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x2ad3505e9d80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x2ad3505e8020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x2ad3505e81b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x2ad3505e8340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x2ad3505e84d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x2ad3505e8660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x2ad3505e87f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x2ad3505e6b20" loc="81:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x2ad3505e6b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad3505e5020"/>
        <function-ref name="isInput" scoped="" ref="0x2ad3505e51b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad3505e5340"/>
        <function-ref name="toggle" scoped="" ref="0x2ad3505e54d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad3505e5660"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad3505e57f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad3505e5980"/>
        <function-ref name="get" scoped="" ref="0x2ad3505e5b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad3505e5ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad3505e5e30"/>
        <function-ref name="set" scoped="" ref="0x2ad3505e4020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad3505e41b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad3505e4340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad3505e45d0"/>
        <function-ref name="clr" scoped="" ref="0x2ad3505e4760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x2ad3505b7150" loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x2ad3505b7150"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ad3505b74d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x2ad3505e8bb0" loc="80:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x2ad3505e8bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad3505e7020"/>
        <function-ref name="isInput" scoped="" ref="0x2ad3505e71b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad3505e7340"/>
        <function-ref name="toggle" scoped="" ref="0x2ad3505e74d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad3505e7660"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad3505e77f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad3505e7980"/>
        <function-ref name="get" scoped="" ref="0x2ad3505e7b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad3505e7ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad3505e7e30"/>
        <function-ref name="set" scoped="" ref="0x2ad3505e6020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad3505e61b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad3505e6340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad3505e65d0"/>
        <function-ref name="clr" scoped="" ref="0x2ad3505e6760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2ad3516e55d0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2ad3516e55d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2ad3516e5950"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ad3516e5ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x2ad3516df7c0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2ad3516df7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ad3516dfb40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2ad351782a80" loc="51:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad351782a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2ad351782e00"/>
        <function-ref name="configure" scoped="" ref="0x2ad351781020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x2ad3516dfdd0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x2ad3516dfdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x2ad351788180"/>
        <function-ref name="getStartByte" scoped="" ref="0x2ad351788310"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x2ad3517884a0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x2ad351788630"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x2ad3517887c0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x2ad351788950"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x2ad351788ae0"/>
        <function-ref name="getStopBit" scoped="" ref="0x2ad351788c70"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ad351788e00"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x2ad351787020"/>
        <function-ref name="getData" scoped="" ref="0x2ad3517871b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x2ad351787340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x2ad3517874d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x2ad351787760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x2ad3517878f0"/>
        <function-ref name="getIV" scoped="" ref="0x2ad351787a80"/>
        <function-ref name="enableI2C" scoped="" ref="0x2ad351787c10"/>
        <function-ref name="setStartBit" scoped="" ref="0x2ad351787da0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x2ad351786020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x2ad3517861b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x2ad351786340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x2ad3517864d0"/>
        <function-ref name="isI2C" scoped="" ref="0x2ad351786660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x2ad3517867f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x2ad351786980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x2ad351786d10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x2ad351785020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x2ad3517851b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x2ad351785340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x2ad3517854d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x2ad351785660"/>
        <function-ref name="disableI2C" scoped="" ref="0x2ad3517857f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x2ad351785980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x2ad351785b10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x2ad351785ca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x2ad351785e30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x2ad351784020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x2ad3517841b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x2ad351784340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x2ad3517844d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x2ad351784660"/>
        <function-ref name="setWordMode" scoped="" ref="0x2ad3517847f0"/>
        <function-ref name="setData" scoped="" ref="0x2ad351784980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x2ad351784b10"/>
        <function-ref name="getClockSource" scoped="" ref="0x2ad351784ca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x2ad351784e30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x2ad351783020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x2ad3517831b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x2ad351783340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x2ad3517838d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x2ad351783a60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x2ad351783bf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x2ad351783d80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x2ad351782020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x2ad3517821b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x2ad351782340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x2ad3517824d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x2ad351782660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x2ad3517827f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x2ad3516df020" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2ad3516df020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2ad3516df3a0"/>
        <function-ref name="txDone" scoped="" ref="0x2ad3516df530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ad3516e6860" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ad3516e6860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad3516e6be0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad3516e6d70"/>
        <function-ref name="request" scoped="" ref="0x2ad3516e5020"/>
        <function-ref name="granted" scoped="" ref="0x2ad3516e51b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad3516e5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x2ad3516e45a0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x2ad3516e45a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2ad3516e4920"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2ad3516e4ab0"/>
        <function-ref name="setUctl" scoped="" ref="0x2ad3516e4c40"/>
        <function-ref name="enableUart" scoped="" ref="0x2ad3516e4dd0"/>
        <function-ref name="setUrctl" scoped="" ref="0x2ad3516e3020"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2ad3516e31b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2ad3516e3340"/>
        <function-ref name="getUtctl" scoped="" ref="0x2ad3516e34d0"/>
        <function-ref name="getUrctl" scoped="" ref="0x2ad3516e3660"/>
        <function-ref name="resetUsart" scoped="" ref="0x2ad3516e37f0"/>
        <function-ref name="getUmctl" scoped="" ref="0x2ad3516e3980"/>
        <function-ref name="disableIntr" scoped="" ref="0x2ad3516e3b10"/>
        <function-ref name="setUtctl" scoped="" ref="0x2ad3516e3ca0"/>
        <function-ref name="getUbr" scoped="" ref="0x2ad3516e2020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2ad3516e21b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x2ad3516e2340"/>
        <function-ref name="isUartRx" scoped="" ref="0x2ad3516e24d0"/>
        <function-ref name="isUart" scoped="" ref="0x2ad3516e2660"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2ad3516e27f0"/>
        <function-ref name="isSpi" scoped="" ref="0x2ad3516e2980"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2ad3516e2b10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2ad3516e2ca0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2ad3516e2e30"/>
        <function-ref name="enableIntr" scoped="" ref="0x2ad3516e1020"/>
        <function-ref name="getMode" scoped="" ref="0x2ad3516e11b0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2ad3516e1540"/>
        <function-ref name="clrIntr" scoped="" ref="0x2ad3516e16d0"/>
        <function-ref name="setUbr" scoped="" ref="0x2ad3516e1860"/>
        <function-ref name="tx" scoped="" ref="0x2ad3516e19f0"/>
        <function-ref name="getUctl" scoped="" ref="0x2ad3516e1b80"/>
        <function-ref name="disableUart" scoped="" ref="0x2ad3516e1d10"/>
        <function-ref name="enableSpi" scoped="" ref="0x2ad3516e0020"/>
        <function-ref name="setModeUart" scoped="" ref="0x2ad3516e01b0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2ad3516e0340"/>
        <function-ref name="rx" scoped="" ref="0x2ad3516e04d0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2ad3516e0660"/>
        <function-ref name="isUartTx" scoped="" ref="0x2ad3516e07f0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2ad3516e0980"/>
        <function-ref name="disableSpi" scoped="" ref="0x2ad3516e0b10"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2ad3516e0ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2ad3516e5d70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad3516e5d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ad3516e4180"/>
        <function-ref name="userId" scoped="" ref="0x2ad3516e4310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2ad3506c02c0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2ad3506c02c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2ad3506c0640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ad3506c07d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2ad3506bf8a0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad3506bf8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2ad3506bfc20"/>
        <function-ref name="configure" scoped="" ref="0x2ad3506bfdb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2ad3506c34d0" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2ad3506c34d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2ad3506c3850"/>
        <function-ref name="txDone" scoped="" ref="0x2ad3506c39e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ad3506c1020" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ad3506c1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad3506c13a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad3506c1530"/>
        <function-ref name="request" scoped="" ref="0x2ad3506c16c0"/>
        <function-ref name="granted" scoped="" ref="0x2ad3506c1850"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad3506c19e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x2ad3506c23f0" loc="40:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x2ad3506c23f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ad3506c2770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2ad3506c0ad0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad3506c0ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ad3506c0e50"/>
        <function-ref name="userId" scoped="" ref="0x2ad3506bf020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2ad3506bbe50" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad3506bbe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ad3506ba210"/>
        <function-ref name="userId" scoped="" ref="0x2ad3506ba3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2ad3506bc060" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2ad3506bc060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2ad3506bc400"/>
        <function-ref name="txDone" scoped="" ref="0x2ad3506bc590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x2ad3506bb840" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x2ad3506bb840"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ad3506bbbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x2ad3506bc990" loc="40:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x2ad3506bc990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ad3506bcd30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x2ad3506bb060" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x2ad3506bb060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2ad3506bb3e0"/>
        <function-ref name="txDone" scoped="" ref="0x2ad3506bb570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2ad3506b7850" loc="92:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2ad3506b7850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2ad3506b7bf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ad3506b7d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2ad3506b4570" loc="96:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad3506b4570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2ad3506b4910"/>
        <function-ref name="configure" scoped="" ref="0x2ad3506b4aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2ad3506b6020" loc="93:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad3506b6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad3506b63a0"/>
        <function-ref name="requested" scoped="" ref="0x2ad3506b6530"/>
        <function-ref name="granted" scoped="" ref="0x2ad3506b66c0"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad3506b6850"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ad3506b69e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ad3506b8a80" loc="91:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ad3506b8a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad3506b8e20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad3506b7020"/>
        <function-ref name="request" scoped="" ref="0x2ad3506b71b0"/>
        <function-ref name="granted" scoped="" ref="0x2ad3506b7340"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad3506b74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2ad3506b6c30" loc="94:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad3506b6c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ad3506b4020"/>
        <function-ref name="userId" scoped="" ref="0x2ad3506b41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad3517c0a40" loc="44:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ad3517c0a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad3517c0dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2ad3517bf0a0" loc="45:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x2ad3517bf0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2ad3517bf420"/>
        <function-ref name="isEmpty" scoped="" ref="0x2ad3517bf5b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2ad3517bf740"/>
        <function-ref name="dequeue" scoped="" ref="0x2ad3517bf8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2ad3517bc020" loc="55:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2ad3517bc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2ad3517bc3c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ad3517bc550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2ad3517bbcf0" loc="60:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad3517bbcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2ad3517b90e0"/>
        <function-ref name="configure" scoped="" ref="0x2ad3517b9270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2ad3517b9500" loc="61:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x2ad3517b9500"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2ad3517b9880"/>
        <function-ref name="isEmpty" scoped="" ref="0x2ad3517b9a10"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2ad3517b9ba0"/>
        <function-ref name="dequeue" scoped="" ref="0x2ad3517b9d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2ad3517bc7a0" loc="56:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad3517bc7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad3517bcb20"/>
        <function-ref name="requested" scoped="" ref="0x2ad3517bccb0"/>
        <function-ref name="granted" scoped="" ref="0x2ad3517bce40"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad3517bb020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ad3517bb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ad3517b8020" loc="62:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2ad3517b8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ad3517b83a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ad3517b8530"/>
        <function-ref name="led1On" scoped="" ref="0x2ad3517b86c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ad3517b8850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ad3517b89e0"/>
        <function-ref name="get" scoped="" ref="0x2ad3517b8b70"/>
        <function-ref name="led1Off" scoped="" ref="0x2ad3517b8d00"/>
        <function-ref name="led0On" scoped="" ref="0x2ad3517b74d0"/>
        <function-ref name="set" scoped="" ref="0x2ad3517b71b0"/>
        <function-ref name="led2On" scoped="" ref="0x2ad3517b7020"/>
        <function-ref name="led2Off" scoped="" ref="0x2ad3517b7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ad3517bd270" loc="54:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ad3517bd270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad3517bd610"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad3517bd7a0"/>
        <function-ref name="request" scoped="" ref="0x2ad3517bd930"/>
        <function-ref name="granted" scoped="" ref="0x2ad3517bdac0"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad3517bdc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2ad3517bb400" loc="57:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad3517bb400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ad3517bb780"/>
        <function-ref name="userId" scoped="" ref="0x2ad3517bb910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2ad3517b77a0" loc="75:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x2ad3517b77a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ad3517b7b20"/>
        <function-ref name="runTask" scoped="" ref="0x2ad3517b7cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x2ad3506ad540" loc="4:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x2ad3506ad540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x2ad3506ad8c0"/>
        <function-ref name="getStartByte" scoped="" ref="0x2ad3506ada50"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x2ad3506adbe0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x2ad3506add70"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x2ad3506aa020"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x2ad3506aa1b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x2ad3506aa340"/>
        <function-ref name="getStopBit" scoped="" ref="0x2ad3506aa4d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ad3506aa660"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x2ad3506aa7f0"/>
        <function-ref name="getData" scoped="" ref="0x2ad3506aa980"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x2ad3506aab10"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x2ad3506aaca0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x2ad3506a9020"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x2ad3506a91b0"/>
        <function-ref name="getIV" scoped="" ref="0x2ad3506a9340"/>
        <function-ref name="enableI2C" scoped="" ref="0x2ad3506a94d0"/>
        <function-ref name="setStartBit" scoped="" ref="0x2ad3506a9660"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x2ad3506a97f0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x2ad3506a9980"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x2ad3506a9b10"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x2ad3506a9ca0"/>
        <function-ref name="isI2C" scoped="" ref="0x2ad3506a9e30"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x2ad3506a8020"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x2ad3506a81b0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x2ad3506a8540"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x2ad3506a86d0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x2ad3506a8860"/>
        <function-ref name="disableNoAck" scoped="" ref="0x2ad3506a89f0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x2ad3506a8b80"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x2ad3506a8d10"/>
        <function-ref name="disableI2C" scoped="" ref="0x2ad3506a7020"/>
        <function-ref name="getShiftClock" scoped="" ref="0x2ad3506a71b0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x2ad3506a7340"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x2ad3506a74d0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x2ad3506a7660"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x2ad3506a77f0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x2ad3506a7980"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x2ad3506a7b10"/>
        <function-ref name="setModeI2C" scoped="" ref="0x2ad3506a7ca0"/>
        <function-ref name="getStartBit" scoped="" ref="0x2ad3506a7e30"/>
        <function-ref name="setWordMode" scoped="" ref="0x2ad3506a6020"/>
        <function-ref name="setData" scoped="" ref="0x2ad3506a61b0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x2ad3506a6340"/>
        <function-ref name="getClockSource" scoped="" ref="0x2ad3506a64d0"/>
        <function-ref name="getWordMode" scoped="" ref="0x2ad3506a6660"/>
        <function-ref name="setShiftClock" scoped="" ref="0x2ad3506a67f0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x2ad3506a6980"/>
        <function-ref name="enableNoAck" scoped="" ref="0x2ad3506a6b10"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x2ad3506a5420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x2ad3506a55b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x2ad3506a5740"/>
        <function-ref name="setStopBit" scoped="" ref="0x2ad3506a58d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x2ad3506a5a60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x2ad3506a5bf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x2ad3506a5d80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x2ad3506a4020"/>
        <function-ref name="setStartByte" scoped="" ref="0x2ad3506a41b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x2ad3506a4340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x2ad350699250" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x2ad350699250"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2ad3506995d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2ad350699760"/>
        <function-ref name="setUctl" scoped="" ref="0x2ad3506998f0"/>
        <function-ref name="enableUart" scoped="" ref="0x2ad350699a80"/>
        <function-ref name="setUrctl" scoped="" ref="0x2ad350699c10"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2ad350699da0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2ad350698020"/>
        <function-ref name="getUtctl" scoped="" ref="0x2ad3506981b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x2ad350698340"/>
        <function-ref name="resetUsart" scoped="" ref="0x2ad3506984d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x2ad350698660"/>
        <function-ref name="disableIntr" scoped="" ref="0x2ad3506987f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x2ad350698980"/>
        <function-ref name="getUbr" scoped="" ref="0x2ad350698c10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2ad350698da0"/>
        <function-ref name="setUmctl" scoped="" ref="0x2ad3506f9020"/>
        <function-ref name="isUartRx" scoped="" ref="0x2ad3506f91b0"/>
        <function-ref name="isUart" scoped="" ref="0x2ad3506f9340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2ad3506f94d0"/>
        <function-ref name="isSpi" scoped="" ref="0x2ad3506f9660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2ad3506f97f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2ad3506f9980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2ad3506f9b10"/>
        <function-ref name="enableIntr" scoped="" ref="0x2ad3506f9ca0"/>
        <function-ref name="getMode" scoped="" ref="0x2ad3506f9e30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2ad3506f8220"/>
        <function-ref name="clrIntr" scoped="" ref="0x2ad3506f83b0"/>
        <function-ref name="setUbr" scoped="" ref="0x2ad3506f8540"/>
        <function-ref name="tx" scoped="" ref="0x2ad3506f86d0"/>
        <function-ref name="getUctl" scoped="" ref="0x2ad3506f8860"/>
        <function-ref name="disableUart" scoped="" ref="0x2ad3506f89f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2ad3506f8b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x2ad3506f8d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2ad3506f7020"/>
        <function-ref name="rx" scoped="" ref="0x2ad3506f71b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2ad3506f7340"/>
        <function-ref name="isUartTx" scoped="" ref="0x2ad3506f74d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2ad3506f7660"/>
        <function-ref name="disableSpi" scoped="" ref="0x2ad3506f77f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2ad3506f7980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x2ad3506f5cb0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x2ad3506f5cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad3506f40a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad3506f4230"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad3506f43c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad3506f4550"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad3506f46e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad3506f4870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad3506f4a00"/>
        <function-ref name="get" scoped="" ref="0x2ad3506f4b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad3506f4d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad3506f3020"/>
        <function-ref name="set" scoped="" ref="0x2ad3506f31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad3506f3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad3506f34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad3506f3760"/>
        <function-ref name="clr" scoped="" ref="0x2ad3506f38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x2ad3506a0430" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x2ad3506a0430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x2ad3506a07b0"/>
        <function-ref name="getStartByte" scoped="" ref="0x2ad3506a0940"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x2ad3506a0ad0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x2ad3506a0c60"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x2ad3506a0df0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x2ad35069f020"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x2ad35069f1b0"/>
        <function-ref name="getStopBit" scoped="" ref="0x2ad35069f340"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ad35069f4d0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x2ad35069f660"/>
        <function-ref name="getData" scoped="" ref="0x2ad35069f7f0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x2ad35069f980"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x2ad35069fb10"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x2ad35069fda0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x2ad35069e020"/>
        <function-ref name="getIV" scoped="" ref="0x2ad35069e1b0"/>
        <function-ref name="enableI2C" scoped="" ref="0x2ad35069e340"/>
        <function-ref name="setStartBit" scoped="" ref="0x2ad35069e4d0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x2ad35069e660"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x2ad35069e7f0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x2ad35069e980"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x2ad35069eb10"/>
        <function-ref name="isI2C" scoped="" ref="0x2ad35069eca0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x2ad35069ee30"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x2ad35069d020"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x2ad35069d3b0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x2ad35069d540"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x2ad35069d6d0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x2ad35069d860"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x2ad35069d9f0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x2ad35069db80"/>
        <function-ref name="disableI2C" scoped="" ref="0x2ad35069dd10"/>
        <function-ref name="getShiftClock" scoped="" ref="0x2ad35069c020"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x2ad35069c1b0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x2ad35069c340"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x2ad35069c4d0"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x2ad35069c660"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x2ad35069c7f0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x2ad35069c980"/>
        <function-ref name="setModeI2C" scoped="" ref="0x2ad35069cb10"/>
        <function-ref name="getStartBit" scoped="" ref="0x2ad35069cca0"/>
        <function-ref name="setWordMode" scoped="" ref="0x2ad35069ce30"/>
        <function-ref name="setData" scoped="" ref="0x2ad35069b020"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x2ad35069b1b0"/>
        <function-ref name="getClockSource" scoped="" ref="0x2ad35069b340"/>
        <function-ref name="getWordMode" scoped="" ref="0x2ad35069b4d0"/>
        <function-ref name="setShiftClock" scoped="" ref="0x2ad35069b660"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x2ad35069b7f0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x2ad35069b980"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x2ad35069a020"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x2ad35069a1b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x2ad35069a340"/>
        <function-ref name="setStopBit" scoped="" ref="0x2ad35069a4d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x2ad35069a660"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x2ad35069a7f0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x2ad35069a980"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x2ad35069ab10"/>
        <function-ref name="setStartByte" scoped="" ref="0x2ad35069aca0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x2ad35069ae30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x2ad3506f7d40" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x2ad3506f7d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad3506f60e0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad3506f6270"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad3506f6400"/>
        <function-ref name="toggle" scoped="" ref="0x2ad3506f6590"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad3506f6720"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad3506f68b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad3506f6a40"/>
        <function-ref name="get" scoped="" ref="0x2ad3506f6bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad3506f6d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad3506f5020"/>
        <function-ref name="set" scoped="" ref="0x2ad3506f51b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad3506f5340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad3506f54d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad3506f5760"/>
        <function-ref name="clr" scoped="" ref="0x2ad3506f58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2ad3507dfc60" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2ad3507dfc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3507de210"/>
        <function-ref name="write" scoped="" ref="0x2ad3507de3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2ad3507eada0" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2ad3507eada0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad3507e9180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2ad3507e3b50" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2ad3507e3b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3507e1020"/>
        <function-ref name="write" scoped="" ref="0x2ad3507e11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2ad3507dd670" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2ad3507dd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3507dd9f0"/>
        <function-ref name="write" scoped="" ref="0x2ad3507ddb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2ad3507d6e50" loc="86:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2ad3507d6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3507d5210"/>
        <function-ref name="write" scoped="" ref="0x2ad3507d53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2ad3507dde50" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2ad3507dde50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3507dc210"/>
        <function-ref name="write" scoped="" ref="0x2ad3507dc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2ad3507c92f0" loc="108:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2ad3507c92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3507c9670"/>
        <function-ref name="write" scoped="" ref="0x2ad3507c9800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2ad3507cb2f0" loc="104:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2ad3507cb2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3507cb670"/>
        <function-ref name="write" scoped="" ref="0x2ad3507cb800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2ad3507e7120" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2ad3507e7120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad3507e74a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2ad3507d1670" loc="93:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2ad3507d1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3507d19f0"/>
        <function-ref name="write" scoped="" ref="0x2ad3507d1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2ad3507cc2f0" loc="102:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2ad3507cc2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3507cc670"/>
        <function-ref name="write" scoped="" ref="0x2ad3507cc800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2ad3507e1c60" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2ad3507e1c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3507e0020"/>
        <function-ref name="write" scoped="" ref="0x2ad3507e01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2ad3507e0c60" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2ad3507e0c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3507df020"/>
        <function-ref name="write" scoped="" ref="0x2ad3507df1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2ad3507d7670" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2ad3507d7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3507d79f0"/>
        <function-ref name="write" scoped="" ref="0x2ad3507d7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2ad3507d9e50" loc="79:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2ad3507d9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3507d8210"/>
        <function-ref name="write" scoped="" ref="0x2ad3507d83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2ad3507dc670" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2ad3507dc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3507dc9f0"/>
        <function-ref name="write" scoped="" ref="0x2ad3507dcb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2ad3507eb760" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2ad3507eb760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2ad3507ebae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2ad3507ebc70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2ad3507ebe00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2ad3507e6aa0" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2ad3507e6aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad3507e6e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2ad3507e5120" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2ad3507e5120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad3507e55a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2ad3507d0a70" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2ad3507d0a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3507d0df0"/>
        <function-ref name="write" scoped="" ref="0x2ad3507cf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2ad3507e5870" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2ad3507e5870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad3507e5bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2ad3507ccad0" loc="103:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2ad3507ccad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3507cce50"/>
        <function-ref name="write" scoped="" ref="0x2ad3507cb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2ad3507e7dc0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2ad3507e7dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad3507e6180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2ad3507d2e50" loc="92:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2ad3507d2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3507d1210"/>
        <function-ref name="write" scoped="" ref="0x2ad3507d13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2ad3507e0480" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2ad3507e0480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3507e0800"/>
        <function-ref name="write" scoped="" ref="0x2ad3507e0990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2ad3507e1480" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2ad3507e1480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3507e1800"/>
        <function-ref name="write" scoped="" ref="0x2ad3507e1990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2ad3507ea750" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2ad3507ea750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad3507eaad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2ad3507d3e50" loc="90:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2ad3507d3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3507d2210"/>
        <function-ref name="write" scoped="" ref="0x2ad3507d23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2ad3507d5670" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2ad3507d5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3507d59f0"/>
        <function-ref name="write" scoped="" ref="0x2ad3507d5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2ad3507d2670" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2ad3507d2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3507d29f0"/>
        <function-ref name="write" scoped="" ref="0x2ad3507d2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2ad3507caad0" loc="107:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2ad3507caad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3507cae50"/>
        <function-ref name="write" scoped="" ref="0x2ad3507c9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2ad3507cbad0" loc="105:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2ad3507cbad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3507cbe50"/>
        <function-ref name="write" scoped="" ref="0x2ad3507ca020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2ad3507d8670" loc="80:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2ad3507d8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3507d89f0"/>
        <function-ref name="write" scoped="" ref="0x2ad3507d8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2ad3507d5e50" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2ad3507d5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3507d3210"/>
        <function-ref name="write" scoped="" ref="0x2ad3507d33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2ad3507cead0" loc="101:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2ad3507cead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3507cee50"/>
        <function-ref name="write" scoped="" ref="0x2ad3507cc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2ad3507da670" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2ad3507da670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3507da9f0"/>
        <function-ref name="write" scoped="" ref="0x2ad3507dab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2ad3507c9ad0" loc="111:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2ad3507c9ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2ad3507c9e50"/>
        <function-ref name="writeDone" scoped="" ref="0x2ad3507c8020"/>
        <function-ref name="write" scoped="" ref="0x2ad3507c81b0"/>
        <function-ref name="beginRead" scoped="" ref="0x2ad3507c8340"/>
        <function-ref name="readDone" scoped="" ref="0x2ad3507c84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2ad3507ea100" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2ad3507ea100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad3507ea480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2ad3507e3370" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2ad3507e3370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3507e36f0"/>
        <function-ref name="write" scoped="" ref="0x2ad3507e3880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2ad3507df480" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2ad3507df480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3507df800"/>
        <function-ref name="write" scoped="" ref="0x2ad3507df990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2ad3507d7e50" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2ad3507d7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3507d6210"/>
        <function-ref name="write" scoped="" ref="0x2ad3507d63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2ad3507dce50" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2ad3507dce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3507da210"/>
        <function-ref name="write" scoped="" ref="0x2ad3507da3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2ad3507d6670" loc="85:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2ad3507d6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3507d69f0"/>
        <function-ref name="write" scoped="" ref="0x2ad3507d6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2ad3507de670" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2ad3507de670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3507de9f0"/>
        <function-ref name="write" scoped="" ref="0x2ad3507deb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2ad3507e9450" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2ad3507e9450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad3507e97d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2ad3507dee50" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2ad3507dee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3507dd210"/>
        <function-ref name="write" scoped="" ref="0x2ad3507dd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ad3507eca80" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ad3507eca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad3507ece00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad3507eb020"/>
        <function-ref name="request" scoped="" ref="0x2ad3507eb1b0"/>
        <function-ref name="granted" scoped="" ref="0x2ad3507eb340"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad3507eb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2ad3507e4020" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2ad3507e4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad3507e43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2ad3507e4cc0" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2ad3507e4cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad3507e30a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2ad3507ce2f0" loc="100:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2ad3507ce2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3507ce670"/>
        <function-ref name="write" scoped="" ref="0x2ad3507ce800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2ad3507cfad0" loc="99:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2ad3507cfad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3507cfe50"/>
        <function-ref name="write" scoped="" ref="0x2ad3507ce020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2ad3507e6450" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2ad3507e6450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad3507e67d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2ad3507cf2f0" loc="96:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2ad3507cf2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3507cf670"/>
        <function-ref name="write" scoped="" ref="0x2ad3507cf800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2ad3507ca2f0" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2ad3507ca2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3507ca670"/>
        <function-ref name="write" scoped="" ref="0x2ad3507ca800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2ad3507d8e50" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2ad3507d8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3507d7210"/>
        <function-ref name="write" scoped="" ref="0x2ad3507d73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2ad3507d3670" loc="89:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2ad3507d3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3507d39f0"/>
        <function-ref name="write" scoped="" ref="0x2ad3507d3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2ad3507e9aa0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2ad3507e9aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad3507e9e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2ad3507e7770" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2ad3507e7770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad3507e7af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2ad3507dae50" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2ad3507dae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3507d9210"/>
        <function-ref name="write" scoped="" ref="0x2ad3507d93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2ad3507e4670" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2ad3507e4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad3507e49f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2ad3507d9670" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2ad3507d9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3507d99f0"/>
        <function-ref name="write" scoped="" ref="0x2ad3507d9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2ad3507d1e50" loc="94:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2ad3507d1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3507d0610"/>
        <function-ref name="write" scoped="" ref="0x2ad3507d07a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2ad3507c87a0" loc="112:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2ad3507c87a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2ad3507c8b20"/>
        <function-ref name="writeDone" scoped="" ref="0x2ad3507c8cb0"/>
        <function-ref name="write" scoped="" ref="0x2ad3507c8e40"/>
        <function-ref name="beginRead" scoped="" ref="0x2ad35082d020"/>
        <function-ref name="readDone" scoped="" ref="0x2ad35082d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2ad350819c60" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2ad350819c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350817210"/>
        <function-ref name="write" scoped="" ref="0x2ad3508173a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2ad350823da0" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2ad350823da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad350822180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2ad35081cb50" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2ad35081cb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad35081b020"/>
        <function-ref name="write" scoped="" ref="0x2ad35081b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2ad350816670" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2ad350816670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3508169f0"/>
        <function-ref name="write" scoped="" ref="0x2ad350816b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2ad35080fe50" loc="86:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2ad35080fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad35080e210"/>
        <function-ref name="write" scoped="" ref="0x2ad35080e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2ad350816e50" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2ad350816e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350815210"/>
        <function-ref name="write" scoped="" ref="0x2ad3508153a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2ad3508022f0" loc="108:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2ad3508022f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350802670"/>
        <function-ref name="write" scoped="" ref="0x2ad350802800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2ad3508052f0" loc="104:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2ad3508052f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350805670"/>
        <function-ref name="write" scoped="" ref="0x2ad350805800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2ad350821120" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2ad350821120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad3508214a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2ad35080a670" loc="93:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2ad35080a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad35080a9f0"/>
        <function-ref name="write" scoped="" ref="0x2ad35080ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2ad3508062f0" loc="102:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2ad3508062f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350806670"/>
        <function-ref name="write" scoped="" ref="0x2ad350806800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2ad35081bc60" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2ad35081bc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad35081a020"/>
        <function-ref name="write" scoped="" ref="0x2ad35081a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2ad35081ac60" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2ad35081ac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350819020"/>
        <function-ref name="write" scoped="" ref="0x2ad3508191b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2ad350810670" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2ad350810670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3508109f0"/>
        <function-ref name="write" scoped="" ref="0x2ad350810b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2ad350813e50" loc="79:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2ad350813e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350812210"/>
        <function-ref name="write" scoped="" ref="0x2ad3508123a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2ad350815670" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2ad350815670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3508159f0"/>
        <function-ref name="write" scoped="" ref="0x2ad350815b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2ad350824760" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2ad350824760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2ad350824ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2ad350824c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2ad350824e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2ad350820aa0" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2ad350820aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad350820e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2ad35081f120" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2ad35081f120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad35081f5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2ad350809a70" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2ad350809a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350809df0"/>
        <function-ref name="write" scoped="" ref="0x2ad350808020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2ad35081f870" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2ad35081f870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad35081fbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2ad350806ad0" loc="103:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2ad350806ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350806e50"/>
        <function-ref name="write" scoped="" ref="0x2ad350805020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2ad350821dc0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2ad350821dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad350820180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2ad35080ce50" loc="92:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2ad35080ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad35080a210"/>
        <function-ref name="write" scoped="" ref="0x2ad35080a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2ad35081a480" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2ad35081a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad35081a800"/>
        <function-ref name="write" scoped="" ref="0x2ad35081a990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2ad35081b480" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2ad35081b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad35081b800"/>
        <function-ref name="write" scoped="" ref="0x2ad35081b990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2ad350823750" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2ad350823750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad350823ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2ad35080de50" loc="90:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2ad35080de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad35080c210"/>
        <function-ref name="write" scoped="" ref="0x2ad35080c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2ad35080e670" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2ad35080e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad35080e9f0"/>
        <function-ref name="write" scoped="" ref="0x2ad35080eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2ad35080c670" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2ad35080c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad35080c9f0"/>
        <function-ref name="write" scoped="" ref="0x2ad35080cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2ad350804ad0" loc="107:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2ad350804ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350804e50"/>
        <function-ref name="write" scoped="" ref="0x2ad350802020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2ad350805ad0" loc="105:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2ad350805ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350805e50"/>
        <function-ref name="write" scoped="" ref="0x2ad350804020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2ad350812670" loc="80:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2ad350812670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3508129f0"/>
        <function-ref name="write" scoped="" ref="0x2ad350812b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2ad35080ee50" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2ad35080ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad35080d210"/>
        <function-ref name="write" scoped="" ref="0x2ad35080d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2ad350807ad0" loc="101:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2ad350807ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350807e50"/>
        <function-ref name="write" scoped="" ref="0x2ad350806020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2ad350814670" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2ad350814670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3508149f0"/>
        <function-ref name="write" scoped="" ref="0x2ad350814b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2ad350802ad0" loc="111:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2ad350802ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2ad350802e50"/>
        <function-ref name="writeDone" scoped="" ref="0x2ad350801020"/>
        <function-ref name="write" scoped="" ref="0x2ad3508011b0"/>
        <function-ref name="beginRead" scoped="" ref="0x2ad350801340"/>
        <function-ref name="readDone" scoped="" ref="0x2ad3508014d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2ad350823100" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2ad350823100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad350823480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2ad35081c370" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2ad35081c370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad35081c6f0"/>
        <function-ref name="write" scoped="" ref="0x2ad35081c880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2ad350819480" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2ad350819480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350819800"/>
        <function-ref name="write" scoped="" ref="0x2ad350819990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2ad350810e50" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2ad350810e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad35080f210"/>
        <function-ref name="write" scoped="" ref="0x2ad35080f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2ad350815e50" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2ad350815e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350814210"/>
        <function-ref name="write" scoped="" ref="0x2ad3508143a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2ad35080f670" loc="85:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2ad35080f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad35080f9f0"/>
        <function-ref name="write" scoped="" ref="0x2ad35080fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2ad350817670" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2ad350817670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3508179f0"/>
        <function-ref name="write" scoped="" ref="0x2ad350817b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2ad350822450" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2ad350822450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad3508227d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2ad350817e50" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2ad350817e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350816210"/>
        <function-ref name="write" scoped="" ref="0x2ad3508163a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ad3508269e0" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ad3508269e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad350826d60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad350824020"/>
        <function-ref name="request" scoped="" ref="0x2ad3508241b0"/>
        <function-ref name="granted" scoped="" ref="0x2ad350824340"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad3508244d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2ad35081d020" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2ad35081d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad35081d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2ad35081dcc0" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2ad35081dcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad35081c0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2ad3508072f0" loc="100:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2ad3508072f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350807670"/>
        <function-ref name="write" scoped="" ref="0x2ad350807800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2ad350808ad0" loc="99:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2ad350808ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350808e50"/>
        <function-ref name="write" scoped="" ref="0x2ad350807020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2ad350820450" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2ad350820450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad3508207d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2ad3508082f0" loc="96:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2ad3508082f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350808670"/>
        <function-ref name="write" scoped="" ref="0x2ad350808800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2ad3508042f0" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2ad3508042f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350804670"/>
        <function-ref name="write" scoped="" ref="0x2ad350804800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2ad350812e50" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2ad350812e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350810210"/>
        <function-ref name="write" scoped="" ref="0x2ad3508103a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2ad35080d670" loc="89:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2ad35080d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad35080d9f0"/>
        <function-ref name="write" scoped="" ref="0x2ad35080db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2ad350822aa0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2ad350822aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad350822e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2ad350821770" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2ad350821770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad350821af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2ad350814e50" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2ad350814e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350813210"/>
        <function-ref name="write" scoped="" ref="0x2ad3508133a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2ad35081d670" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2ad35081d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad35081d9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2ad350813670" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2ad350813670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3508139f0"/>
        <function-ref name="write" scoped="" ref="0x2ad350813b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2ad35080ae50" loc="94:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2ad35080ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350809610"/>
        <function-ref name="write" scoped="" ref="0x2ad3508097a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2ad3508017a0" loc="112:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2ad3508017a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2ad350801b20"/>
        <function-ref name="writeDone" scoped="" ref="0x2ad350801cb0"/>
        <function-ref name="write" scoped="" ref="0x2ad350801e40"/>
        <function-ref name="beginRead" scoped="" ref="0x2ad350800020"/>
        <function-ref name="readDone" scoped="" ref="0x2ad3508001b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x2ad350860b30" loc="54:/home/zdenial/tinyos/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2ad350860b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2ad35085d020"/>
        <function-ref name="changed" scoped="" ref="0x2ad35085d1b0"/>
        <function-ref name="amGroup" scoped="" ref="0x2ad35085d340"/>
        <function-ref name="setAddress" scoped="" ref="0x2ad35085d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x2ad35085fd30" loc="13:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2ad35085fd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x2ad3508490e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x2ad350845310" loc="5:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2ad350845310"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x2ad350845690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0x2ad3508428c0" loc="8:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x2ad3508428c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350842c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x2ad350837020" loc="8:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x2ad350837020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3508373a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x2ad350895cb0" loc="14:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x2ad350895cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3508300a0"/>
        <function-ref name="write" scoped="" ref="0x2ad350830230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0x2ad3508305b0" loc="15:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0x2ad3508305b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ad350830930"/>
        <function-ref name="stop" scoped="" ref="0x2ad350830ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x2ad350831210" loc="11:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x2ad350831210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350831590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x2ad350885020" loc="8:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x2ad350885020"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3508853a0"/>
        <function-ref name="write" scoped="" ref="0x2ad350885530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x2ad3508858c0" loc="11:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x2ad3508858c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad350885c40"/>
        <function-ref name="isInput" scoped="" ref="0x2ad350885dd0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad350884020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad3508841b0"/>
        <function-ref name="get" scoped="" ref="0x2ad350884340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad3508844d0"/>
        <function-ref name="set" scoped="" ref="0x2ad350884660"/>
        <function-ref name="clr" scoped="" ref="0x2ad3508847f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x2ad35087bb40" loc="15:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x2ad35087bb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e0460"/>
            <typename><typedef-ref name="TMicro" ref="0x2ad34f5e07d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2ad35087d970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x2ad350882490" loc="11:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x2ad350882490"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350882810"/>
        <function-ref name="write" scoped="" ref="0x2ad3508829a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x2ad350882d30" loc="14:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x2ad350882d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad35087f0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad35087f270"/>
        <function-ref name="toggle" scoped="" ref="0x2ad35087f400"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad35087f590"/>
        <function-ref name="get" scoped="" ref="0x2ad35087f720"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad35087f8b0"/>
        <function-ref name="set" scoped="" ref="0x2ad35087fa40"/>
        <function-ref name="clr" scoped="" ref="0x2ad35087fbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x2ad3508c4020" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x2ad3508c4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e0460"/>
            <typename><typedef-ref name="TMicro" ref="0x2ad34f5e07d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2ad3508c4e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x2ad3508c2d20" loc="54:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x2ad3508c2d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e0460"/>
            <typename><typedef-ref name="TMicro" ref="0x2ad34f5e07d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2ad3508c1b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2ad3508b1260" loc="55:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2ad3508b1260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e0460"/>
            <typename><typedef-ref name="TMicro" ref="0x2ad34f5e07d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad3508b0090"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad3508b0a10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad3508b0550"/>
        <function-ref name="overflow" scoped="" ref="0x2ad3508af020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x2ad3508ae890" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x2ad3508ae890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e0460"/>
            <typename><typedef-ref name="TMicro" ref="0x2ad34f5e07d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad3508ab6e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad3508a9090"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad3508abba0"/>
        <function-ref name="overflow" scoped="" ref="0x2ad3508a9550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2ad3508a4190" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2ad3508a4190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad3508a4510"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ad3508a46a0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ad3508a4830"/>
        <function-ref name="get" scoped="" ref="0x2ad3508a49c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ad3508a4b50"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad3508a4ce0"/>
        <function-ref name="getMode" scoped="" ref="0x2ad3508a4e70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad3508a3030"/>
        <function-ref name="overflow" scoped="" ref="0x2ad3508a31c0"/>
        <function-ref name="setMode" scoped="" ref="0x2ad3508a3350"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2ad3508a34e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2ad3508a7060" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2ad3508a7060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e0460"/>
            <typename><typedef-ref name="TMicro" ref="0x2ad34f5e07d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad3508a7e70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad3508a6820"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad3508a6360"/>
        <function-ref name="overflow" scoped="" ref="0x2ad3508a6ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0x2ad3508865a0" loc="3:/home/zdenial/tinyos/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0x2ad3508865a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad350886920"/>
        <function-ref name="isInput" scoped="" ref="0x2ad350886ab0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad350886c40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad350886dd0"/>
        <function-ref name="get" scoped="" ref="0x2ad35089f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad35089f1b0"/>
        <function-ref name="set" scoped="" ref="0x2ad35089f340"/>
        <function-ref name="clr" scoped="" ref="0x2ad35089f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2ad35089dc50" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2ad35089dc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad35089c020"/>
        <function-ref name="isInput" scoped="" ref="0x2ad35089c1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2ad35089c340"/>
        <function-ref name="toggle" scoped="" ref="0x2ad35089c4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad35089c660"/>
        <function-ref name="getResistor" scoped="" ref="0x2ad35089c7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad35089c980"/>
        <function-ref name="get" scoped="" ref="0x2ad35089cb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ad35089cca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ad35089ce30"/>
        <function-ref name="set" scoped="" ref="0x2ad35089b020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ad35089b1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ad35089b340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ad35089b5d0"/>
        <function-ref name="clr" scoped="" ref="0x2ad35089b760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2ad35089e9e0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2ad35089e9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad35089ed60"/>
        <function-ref name="isInput" scoped="" ref="0x2ad35089d020"/>
        <function-ref name="toggle" scoped="" ref="0x2ad35089d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad35089d340"/>
        <function-ref name="get" scoped="" ref="0x2ad35089d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad35089d660"/>
        <function-ref name="set" scoped="" ref="0x2ad35089d7f0"/>
        <function-ref name="clr" scoped="" ref="0x2ad35089d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2ad3508a0a20" loc="14:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2ad3508a0a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ad3508a0da0"/>
        <function-ref name="stop" scoped="" ref="0x2ad350896020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2ad3508f1cb0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2ad3508f1cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2ad3508f00a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2ad3508f0230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2ad3508f03c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2ad3508f0550"/>
        <function-ref name="setCca" scoped="" ref="0x2ad3508f06e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2ad3508f0870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x2ad3508ed9f0" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x2ad3508ed9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2ad3508edd70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x2ad3508f1020" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x2ad3508f1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad3508f13a0"/>
        <function-ref name="cancel" scoped="" ref="0x2ad3508f1530"/>
        <function-ref name="modify" scoped="" ref="0x2ad3508f16c0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad3508f1850"/>
        <function-ref name="resend" scoped="" ref="0x2ad3508f19e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2ad3508f46d0" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2ad3508f46d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ad3508f4a50"/>
        <function-ref name="stop" scoped="" ref="0x2ad3508f4be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x2ad3508ee190" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x2ad3508ee190"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2ad3508ee510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2ad3508e6650" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2ad3508e6650"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2ad3508e69d0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2ad3508e6b60"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2ad3508e6cf0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2ad3508e6e80"/>
        <function-ref name="setCca" scoped="" ref="0x2ad3508e5030"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2ad3508e51c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2ad3508de7c0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2ad3508de7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ad3508ddd50"/>
        <function-ref name="clear" scoped="" ref="0x2ad3508db4c0"/>
        <function-ref name="isValid" scoped="" ref="0x2ad3508dd620"/>
        <function-ref name="set" scoped="" ref="0x2ad3508dbbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x2ad350934020" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2ad350934020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3509343a0"/>
        <function-ref name="write" scoped="" ref="0x2ad350934530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x2ad350934890" loc="79:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2ad350934890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350934c10"/>
        <function-ref name="write" scoped="" ref="0x2ad350934da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x2ad3508e55e0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x2ad3508e55e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2ad3508e5960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x2ad350938530" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2ad350938530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad3509388b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x2ad3508d9880" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x2ad3508d9880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2ad3508d9c00"/>
        <function-ref name="disable" scoped="" ref="0x2ad3508d9d90"/>
        <function-ref name="captured" scoped="" ref="0x2ad3508d8020"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2ad3508d81b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x2ad3508e47f0" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x2ad3508e47f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad3508e0090"/>
        <function-ref name="fired" scoped="" ref="0x2ad3508e1090"/>
        <function-ref name="startAt" scoped="" ref="0x2ad3508e1a10"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad3508e1550"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ad3508e0550"/>
        <function-ref name="start" scoped="" ref="0x2ad3508e36a0"/>
        <function-ref name="stop" scoped="" ref="0x2ad3508e3bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2ad3508e0a00" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2ad3508e0a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2ad3508e0d80"/>
        <function-ref name="setNetwork" scoped="" ref="0x2ad3508df020"/>
        <function-ref name="getRssi" scoped="" ref="0x2ad3508df1b0"/>
        <function-ref name="getNetwork" scoped="" ref="0x2ad3508df340"/>
        <function-ref name="getPower" scoped="" ref="0x2ad3508df4d0"/>
        <function-ref name="getLqi" scoped="" ref="0x2ad3508df660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x2ad3508cc550" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2ad3508cc550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3508cc8d0"/>
        <function-ref name="write" scoped="" ref="0x2ad3508cca60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x2ad3508cce00" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2ad3508cce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3508cb1c0"/>
        <function-ref name="write" scoped="" ref="0x2ad3508cb350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x2ad35092ed40" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x2ad35092ed40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad3509310e0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2ad350931270"/>
        <function-ref name="sfd" scoped="" ref="0x2ad350931400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ad3508e78c0" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2ad3508e78c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad3508e7c40"/>
        <function-ref name="cancel" scoped="" ref="0x2ad3508e7dd0"/>
        <function-ref name="modify" scoped="" ref="0x2ad3508e6020"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad3508e61b0"/>
        <function-ref name="resend" scoped="" ref="0x2ad3508e6340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x2ad3508ced10" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2ad3508ced10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2ad3508cd0e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2ad3508cd270"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2ad3508cd400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x2ad350938c60" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2ad350938c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad350937020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2ad3508d1820" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x2ad3508d1820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad3508d1ba0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad3508d1d30"/>
        <function-ref name="toggle" scoped="" ref="0x2ad3508d0020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad3508d01b0"/>
        <function-ref name="get" scoped="" ref="0x2ad3508d0340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad3508d04d0"/>
        <function-ref name="set" scoped="" ref="0x2ad3508d0660"/>
        <function-ref name="clr" scoped="" ref="0x2ad3508d07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad3508e9820" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ad3508e9820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad3508e9ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2ad3508df9a0" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ad3508df9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2ad3508dfd20"/>
        <function-ref name="getHeader" scoped="" ref="0x2ad3508de020"/>
        <function-ref name="getMetadata" scoped="" ref="0x2ad3508de1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x2ad3508d2b30" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2ad3508d2b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad3508d9020"/>
        <function-ref name="isSet" scoped="" ref="0x2ad3508d91b0"/>
        <function-ref name="cancel" scoped="" ref="0x2ad3508d9340"/>
        <function-ref name="set" scoped="" ref="0x2ad3508d94d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x2ad3509373e0" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2ad3509373e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350937960"/>
        <function-ref name="write" scoped="" ref="0x2ad350937af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2ad3508ce020" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x2ad3508ce020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad3508ce3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad3508ce530"/>
        <function-ref name="request" scoped="" ref="0x2ad3508ce6c0"/>
        <function-ref name="granted" scoped="" ref="0x2ad3508ce850"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad3508ce9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x2ad3508d8500" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x2ad3508d8500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad3508d8980"/>
        <function-ref name="isInput" scoped="" ref="0x2ad3508d8b10"/>
        <function-ref name="toggle" scoped="" ref="0x2ad3508d8ca0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad3508d8e30"/>
        <function-ref name="get" scoped="" ref="0x2ad3508d1020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad3508d11b0"/>
        <function-ref name="set" scoped="" ref="0x2ad3508d1340"/>
        <function-ref name="clr" scoped="" ref="0x2ad3508d14d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x2ad350933130" loc="80:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2ad350933130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3509334b0"/>
        <function-ref name="write" scoped="" ref="0x2ad350933640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x2ad3509339c0" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2ad3509339c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350933d40"/>
        <function-ref name="write" scoped="" ref="0x2ad350932020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x2ad3508cb6d0" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2ad3508cb6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad3508cba50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x2ad3508d0b40" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x2ad3508d0b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad3508cf020"/>
        <function-ref name="isInput" scoped="" ref="0x2ad3508cf1b0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad3508cf340"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad3508cf4d0"/>
        <function-ref name="get" scoped="" ref="0x2ad3508cf660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad3508cf7f0"/>
        <function-ref name="set" scoped="" ref="0x2ad3508cf980"/>
        <function-ref name="clr" scoped="" ref="0x2ad3508cfb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ad3509316c0" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2ad3509316c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ad350931a40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ad350931bd0"/>
        <function-ref name="led1On" scoped="" ref="0x2ad350931d60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ad350930020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ad3509301b0"/>
        <function-ref name="get" scoped="" ref="0x2ad350930340"/>
        <function-ref name="led1Off" scoped="" ref="0x2ad3509304d0"/>
        <function-ref name="led2Off" scoped="" ref="0x2ad350930b10"/>
        <function-ref name="set" scoped="" ref="0x2ad350930660"/>
        <function-ref name="led0On" scoped="" ref="0x2ad3509307f0"/>
        <function-ref name="led2On" scoped="" ref="0x2ad350930980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x2ad3509355e0" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2ad3509355e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350935960"/>
        <function-ref name="write" scoped="" ref="0x2ad350935af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2ad3508e7020" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2ad3508e7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ad3508e73a0"/>
        <function-ref name="stop" scoped="" ref="0x2ad3508e7530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x2ad3508cd780" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2ad3508cd780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2ad3508cdb00"/>
        <function-ref name="writeDone" scoped="" ref="0x2ad3508cdc90"/>
        <function-ref name="write" scoped="" ref="0x2ad3508cde20"/>
        <function-ref name="beginRead" scoped="" ref="0x2ad3508cc020"/>
        <function-ref name="readDone" scoped="" ref="0x2ad3508cc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x2ad3508cbde0" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2ad3508cbde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad350938180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x2ad350937e80" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2ad350937e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad350935220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x2ad3508e5d70" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x2ad3508e5d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2ad3508e4180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2ad3509d8c60" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2ad3509d8c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3509d6210"/>
        <function-ref name="write" scoped="" ref="0x2ad3509d63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2ad350974020" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2ad350974020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad3509743a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2ad3509dbc70" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2ad3509dbc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3509da020"/>
        <function-ref name="write" scoped="" ref="0x2ad3509da1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2ad3509d5670" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2ad3509d5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3509d59f0"/>
        <function-ref name="write" scoped="" ref="0x2ad3509d5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2ad3509cee50" loc="86:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2ad3509cee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3509cd210"/>
        <function-ref name="write" scoped="" ref="0x2ad3509cd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2ad3509d5e50" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2ad3509d5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3509d4210"/>
        <function-ref name="write" scoped="" ref="0x2ad3509d43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2ad3509c12f0" loc="108:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2ad3509c12f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3509c1670"/>
        <function-ref name="write" scoped="" ref="0x2ad3509c1800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2ad3509c42f0" loc="104:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2ad3509c42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3509c4670"/>
        <function-ref name="write" scoped="" ref="0x2ad3509c4800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2ad350973370" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2ad350973370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad3509736f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2ad3509ca670" loc="93:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2ad3509ca670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3509ca9f0"/>
        <function-ref name="write" scoped="" ref="0x2ad3509cab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2ad3509c52f0" loc="102:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2ad3509c52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3509c5670"/>
        <function-ref name="write" scoped="" ref="0x2ad3509c5800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2ad3509dac60" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2ad3509dac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3509d9020"/>
        <function-ref name="write" scoped="" ref="0x2ad3509d91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2ad3509d9c60" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2ad3509d9c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3509d8020"/>
        <function-ref name="write" scoped="" ref="0x2ad3509d81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2ad3509cf670" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2ad3509cf670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3509cf9f0"/>
        <function-ref name="write" scoped="" ref="0x2ad3509cfb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2ad3509d2e50" loc="79:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2ad3509d2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3509d1210"/>
        <function-ref name="write" scoped="" ref="0x2ad3509d13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2ad3509d4670" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2ad3509d4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3509d49f0"/>
        <function-ref name="write" scoped="" ref="0x2ad3509d4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2ad3509778f0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2ad3509778f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2ad350977c70"/>
        <function-ref name="abortRelease" scoped="" ref="0x2ad350977e00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2ad350975020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2ad350972d00" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2ad350972d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad3509710a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2ad350971370" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2ad350971370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad3509717f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2ad3509c8a70" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2ad3509c8a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3509c8df0"/>
        <function-ref name="write" scoped="" ref="0x2ad3509c7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2ad350971ac0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2ad350971ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad350971e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2ad3509c5ad0" loc="103:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2ad3509c5ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3509c5e50"/>
        <function-ref name="write" scoped="" ref="0x2ad3509c4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2ad350972060" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2ad350972060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad3509723e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2ad3509cbe50" loc="92:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2ad3509cbe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3509ca210"/>
        <function-ref name="write" scoped="" ref="0x2ad3509ca3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2ad3509d9480" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2ad3509d9480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3509d9800"/>
        <function-ref name="write" scoped="" ref="0x2ad3509d9990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2ad3509da480" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2ad3509da480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3509da800"/>
        <function-ref name="write" scoped="" ref="0x2ad3509da990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2ad350975940" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2ad350975940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad350975cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2ad3509cce50" loc="90:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2ad3509cce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3509cb210"/>
        <function-ref name="write" scoped="" ref="0x2ad3509cb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2ad3509cd670" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2ad3509cd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3509cd9f0"/>
        <function-ref name="write" scoped="" ref="0x2ad3509cdb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2ad3509cb670" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2ad3509cb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3509cb9f0"/>
        <function-ref name="write" scoped="" ref="0x2ad3509cbb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2ad3509c3ad0" loc="107:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2ad3509c3ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3509c3e50"/>
        <function-ref name="write" scoped="" ref="0x2ad3509c1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2ad3509c4ad0" loc="105:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2ad3509c4ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3509c4e50"/>
        <function-ref name="write" scoped="" ref="0x2ad3509c3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2ad3509d1670" loc="80:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2ad3509d1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3509d19f0"/>
        <function-ref name="write" scoped="" ref="0x2ad3509d1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2ad3509cde50" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2ad3509cde50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3509cc210"/>
        <function-ref name="write" scoped="" ref="0x2ad3509cc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2ad3509c6ad0" loc="101:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2ad3509c6ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3509c6e50"/>
        <function-ref name="write" scoped="" ref="0x2ad3509c5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2ad3509d3670" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2ad3509d3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3509d39f0"/>
        <function-ref name="write" scoped="" ref="0x2ad3509d3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2ad3509c1ad0" loc="111:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2ad3509c1ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2ad3509c1e50"/>
        <function-ref name="writeDone" scoped="" ref="0x2ad3509c0020"/>
        <function-ref name="write" scoped="" ref="0x2ad3509c01b0"/>
        <function-ref name="beginRead" scoped="" ref="0x2ad3509c0340"/>
        <function-ref name="readDone" scoped="" ref="0x2ad3509c04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2ad3509752f0" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2ad3509752f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad350975670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2ad3509db490" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2ad3509db490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3509db810"/>
        <function-ref name="write" scoped="" ref="0x2ad3509db9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2ad3509d8480" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2ad3509d8480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3509d8800"/>
        <function-ref name="write" scoped="" ref="0x2ad3509d8990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2ad3509cfe50" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2ad3509cfe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3509ce210"/>
        <function-ref name="write" scoped="" ref="0x2ad3509ce3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2ad3509d4e50" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2ad3509d4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3509d3210"/>
        <function-ref name="write" scoped="" ref="0x2ad3509d33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2ad3509ce670" loc="85:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2ad3509ce670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3509ce9f0"/>
        <function-ref name="write" scoped="" ref="0x2ad3509ceb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2ad3509d6670" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2ad3509d6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3509d69f0"/>
        <function-ref name="write" scoped="" ref="0x2ad3509d6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2ad350974670" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2ad350974670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad3509749f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2ad3509d6e50" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2ad3509d6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3509d5210"/>
        <function-ref name="write" scoped="" ref="0x2ad3509d53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ad350978c30" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ad350978c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad350977020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad3509771b0"/>
        <function-ref name="request" scoped="" ref="0x2ad350977340"/>
        <function-ref name="granted" scoped="" ref="0x2ad3509774d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad350977660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2ad35096f160" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2ad35096f160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad35096f4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2ad35096fe00" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2ad35096fe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad3509db1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2ad3509c62f0" loc="100:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2ad3509c62f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3509c6670"/>
        <function-ref name="write" scoped="" ref="0x2ad3509c6800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2ad3509c7ad0" loc="99:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2ad3509c7ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3509c7e50"/>
        <function-ref name="write" scoped="" ref="0x2ad3509c6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2ad3509726b0" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2ad3509726b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad350972a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2ad3509c72f0" loc="96:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2ad3509c72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3509c7670"/>
        <function-ref name="write" scoped="" ref="0x2ad3509c7800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2ad3509c32f0" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2ad3509c32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3509c3670"/>
        <function-ref name="write" scoped="" ref="0x2ad3509c3800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2ad3509d1e50" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2ad3509d1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3509cf210"/>
        <function-ref name="write" scoped="" ref="0x2ad3509cf3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2ad3509cc670" loc="89:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2ad3509cc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3509cc9f0"/>
        <function-ref name="write" scoped="" ref="0x2ad3509ccb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2ad350974cc0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2ad350974cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad3509730a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2ad3509739c0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2ad3509739c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad350973d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2ad3509d3e50" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2ad3509d3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3509d2210"/>
        <function-ref name="write" scoped="" ref="0x2ad3509d23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2ad35096f7b0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2ad35096f7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad35096fb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2ad3509d2670" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2ad3509d2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3509d29f0"/>
        <function-ref name="write" scoped="" ref="0x2ad3509d2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2ad3509cae50" loc="94:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2ad3509cae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad3509c8610"/>
        <function-ref name="write" scoped="" ref="0x2ad3509c87a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2ad3509c07a0" loc="112:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2ad3509c07a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2ad3509c0b20"/>
        <function-ref name="writeDone" scoped="" ref="0x2ad3509c0cb0"/>
        <function-ref name="write" scoped="" ref="0x2ad3509c0e40"/>
        <function-ref name="beginRead" scoped="" ref="0x2ad3509bf020"/>
        <function-ref name="readDone" scoped="" ref="0x2ad3509bf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x2ad3509b4df0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x2ad3509b4df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad3509b11c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2ad3509b1350"/>
        <function-ref name="sfd" scoped="" ref="0x2ad3509b14e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ad3509b17c0" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2ad3509b17c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad3509b1b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x2ad3509b0020" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x2ad3509b0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2ad3509b03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2ad3509b45c0" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2ad3509b45c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ad3509b4940"/>
        <function-ref name="stop" scoped="" ref="0x2ad3509b4ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x2ad3509a9380" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x2ad3509a9380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad3509a9700"/>
        <function-ref name="isInput" scoped="" ref="0x2ad3509a9890"/>
        <function-ref name="toggle" scoped="" ref="0x2ad3509a9a20"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad3509a9bb0"/>
        <function-ref name="get" scoped="" ref="0x2ad3509a9d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad3509a8020"/>
        <function-ref name="set" scoped="" ref="0x2ad3509a81b0"/>
        <function-ref name="clr" scoped="" ref="0x2ad3509a8340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x2ad350a0fb90" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x2ad350a0fb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2ad350a0e020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2ad350a0e1b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2ad350a0e340"/>
        <function-ref name="syncDone" scoped="" ref="0x2ad350a0e4d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2ad350a0e660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2ad350a0e7f0"/>
        <function-ref name="setChannel" scoped="" ref="0x2ad350a0e980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2ad350a0eb10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2ad350a0eca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2ad350a0ee30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2ad350a0d020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2ad350a0d1b0"/>
        <function-ref name="sync" scoped="" ref="0x2ad350a0d340"/>
        <function-ref name="getChannel" scoped="" ref="0x2ad350a0d5d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2ad350a0d760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x2ad3509f89d0" loc="148:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x2ad3509f89d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ad3509f8d50"/>
        <function-ref name="runTask" scoped="" ref="0x2ad3509f7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2ad350a0dd70" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2ad350a0dd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ad350a0b330"/>
        <function-ref name="clear" scoped="" ref="0x2ad350a0ba60"/>
        <function-ref name="isValid" scoped="" ref="0x2ad350a0cba0"/>
        <function-ref name="set" scoped="" ref="0x2ad350a09210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x2ad3509a86b0" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x2ad3509a86b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad3509a8a30"/>
        <function-ref name="isInput" scoped="" ref="0x2ad3509a8bc0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad3509a8d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad3509a7020"/>
        <function-ref name="get" scoped="" ref="0x2ad3509a71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad3509a7340"/>
        <function-ref name="set" scoped="" ref="0x2ad3509a74d0"/>
        <function-ref name="clr" scoped="" ref="0x2ad3509a7660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x2ad350a08cb0" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2ad350a08cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350a070a0"/>
        <function-ref name="write" scoped="" ref="0x2ad350a07230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x2ad350a07590" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2ad350a07590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350a07910"/>
        <function-ref name="write" scoped="" ref="0x2ad350a07aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x2ad350a066d0" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2ad350a066d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350a06a50"/>
        <function-ref name="write" scoped="" ref="0x2ad350a06be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2ad350a10330" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2ad350a10330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2ad350a106b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2ad350a10840"/>
        <function-ref name="getRssi" scoped="" ref="0x2ad350a109d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x2ad350a10b60"/>
        <function-ref name="getPower" scoped="" ref="0x2ad350a10cf0"/>
        <function-ref name="getLqi" scoped="" ref="0x2ad350a10e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x2ad3509ac550" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x2ad3509ac550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad3509ac8d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2ad3509aca60"/>
        <function-ref name="sfd" scoped="" ref="0x2ad3509acbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x2ad350a113a0" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2ad350a113a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad350a11720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2ad3509aa020" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x2ad3509aa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad3509aa3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad3509aa530"/>
        <function-ref name="toggle" scoped="" ref="0x2ad3509aa6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad3509aa850"/>
        <function-ref name="get" scoped="" ref="0x2ad3509aa9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad3509aab70"/>
        <function-ref name="set" scoped="" ref="0x2ad3509aad00"/>
        <function-ref name="clr" scoped="" ref="0x2ad3509a9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x2ad350a05020" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2ad350a05020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350a053a0"/>
        <function-ref name="write" scoped="" ref="0x2ad350a05530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad3509ad620" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ad3509ad620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad3509ad9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2ad350a0f1e0" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ad350a0f1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2ad350a0f560"/>
        <function-ref name="getHeader" scoped="" ref="0x2ad350a0f6f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x2ad350a0f880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ad3509ab020" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2ad3509ab020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad3509ab3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2ad3509a66e0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x2ad3509a66e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad3509a6a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad3509a6bf0"/>
        <function-ref name="request" scoped="" ref="0x2ad3509a6d80"/>
        <function-ref name="granted" scoped="" ref="0x2ad350a12020"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad350a121b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x2ad350a07e00" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2ad350a07e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350a061c0"/>
        <function-ref name="write" scoped="" ref="0x2ad350a06350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x2ad350a12530" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2ad350a12530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2ad350a128b0"/>
        <function-ref name="writeDone" scoped="" ref="0x2ad350a12a40"/>
        <function-ref name="write" scoped="" ref="0x2ad350a12bd0"/>
        <function-ref name="beginRead" scoped="" ref="0x2ad350a12d60"/>
        <function-ref name="readDone" scoped="" ref="0x2ad350a11020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x2ad350a058b0" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2ad350a058b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad350a05e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x2ad3509ab7c0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x2ad3509ab7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2ad3509abb40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ad350a04150" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2ad350a04150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ad350a044d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ad350a04660"/>
        <function-ref name="led1On" scoped="" ref="0x2ad350a047f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ad350a04980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ad350a04b10"/>
        <function-ref name="get" scoped="" ref="0x2ad350a04ca0"/>
        <function-ref name="led1Off" scoped="" ref="0x2ad350a04e30"/>
        <function-ref name="led2Off" scoped="" ref="0x2ad350a034d0"/>
        <function-ref name="set" scoped="" ref="0x2ad350a03020"/>
        <function-ref name="led0On" scoped="" ref="0x2ad350a031b0"/>
        <function-ref name="led2On" scoped="" ref="0x2ad350a03340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x2ad350a083e0" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2ad350a083e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350a08760"/>
        <function-ref name="write" scoped="" ref="0x2ad350a088f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x2ad350a09b10" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2ad350a09b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad350a08020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x2ad3509a7a50" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x2ad3509a7a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ad3509a7dd0"/>
        <function-ref name="disable" scoped="" ref="0x2ad3509a6020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2ad3509a61b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2ad3509a6340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x2ad350a11ad0" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2ad350a11ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad350a10020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2ad3509adca0" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2ad3509adca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ad3509ac0a0"/>
        <function-ref name="stop" scoped="" ref="0x2ad3509ac230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2ad350a76a70" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2ad350a76a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2ad350a76df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2ad350a7b670" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2ad350a7b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2ad350a7b9f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2ad350a7bb80"/>
        <function-ref name="getRssi" scoped="" ref="0x2ad350a7bd10"/>
        <function-ref name="getNetwork" scoped="" ref="0x2ad350a78020"/>
        <function-ref name="getPower" scoped="" ref="0x2ad350a781b0"/>
        <function-ref name="getLqi" scoped="" ref="0x2ad350a78340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2ad350a75550" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2ad350a75550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ad350a74b00"/>
        <function-ref name="clear" scoped="" ref="0x2ad350a732a0"/>
        <function-ref name="isValid" scoped="" ref="0x2ad350a743d0"/>
        <function-ref name="set" scoped="" ref="0x2ad350a739d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x2ad350a760c0" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ad350a760c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2ad350a76440"/>
        <function-ref name="getHeader" scoped="" ref="0x2ad350a765d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x2ad350a76760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2ad350a6d480" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2ad350a6d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad350a6d800"/>
        <function-ref name="isSet" scoped="" ref="0x2ad350a6d990"/>
        <function-ref name="cancel" scoped="" ref="0x2ad350a6db20"/>
        <function-ref name="set" scoped="" ref="0x2ad350a6dcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2ad350a71660" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ad350a71660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5b6bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad34f5e1020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ad350a70ce0"/>
        <function-ref name="clear" scoped="" ref="0x2ad350a6f460"/>
        <function-ref name="isValid" scoped="" ref="0x2ad350a705b0"/>
        <function-ref name="set" scoped="" ref="0x2ad350a6fb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2ad350a786e0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2ad350a786e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ad350a78a60"/>
        <function-ref name="noAck" scoped="" ref="0x2ad350a78bf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ad350a78d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2ad350a67020" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2ad350a67020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2ad350a673a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2ad350a6cd20" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2ad350a6cd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2ad350a690e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2ad350a69270"/>
        <function-ref name="getRssi" scoped="" ref="0x2ad350a69400"/>
        <function-ref name="getNetwork" scoped="" ref="0x2ad350a69590"/>
        <function-ref name="getPower" scoped="" ref="0x2ad350a69720"/>
        <function-ref name="getLqi" scoped="" ref="0x2ad350a698b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2ad350a5e4a0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2ad350a5e4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad350a5e820"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad350a5e9b0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad350a5eb40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad350a5ecd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad350a5ee60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2ad350a67a80" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2ad350a67a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ad350a65020"/>
        <function-ref name="clear" scoped="" ref="0x2ad350a65750"/>
        <function-ref name="isValid" scoped="" ref="0x2ad350a668d0"/>
        <function-ref name="set" scoped="" ref="0x2ad350a65e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x2ad350a68640" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ad350a68640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2ad350a689c0"/>
        <function-ref name="getHeader" scoped="" ref="0x2ad350a68b50"/>
        <function-ref name="getMetadata" scoped="" ref="0x2ad350a68ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2ad350a5f8b0" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2ad350a5f8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad350a5fc30"/>
        <function-ref name="isSet" scoped="" ref="0x2ad350a5fdc0"/>
        <function-ref name="cancel" scoped="" ref="0x2ad350a5e020"/>
        <function-ref name="set" scoped="" ref="0x2ad350a5e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x2ad350a5a820" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x2ad350a5a820"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad350a5c4c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x2ad350a5cb80" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x2ad350a5cb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5b6bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad34f5e1020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad350a5b7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2ad350a63af0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ad350a63af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5b6bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad34f5e1020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ad350a610d0"/>
        <function-ref name="clear" scoped="" ref="0x2ad350a61800"/>
        <function-ref name="isValid" scoped="" ref="0x2ad350a62970"/>
        <function-ref name="set" scoped="" ref="0x2ad350a5f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2ad350a69c50" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2ad350a69c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ad350a68020"/>
        <function-ref name="noAck" scoped="" ref="0x2ad350a681b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ad350a68340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2ad350aea4e0" loc="48:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2ad350aea4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad350ae1150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2ad350ae17c0" loc="49:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2ad350ae17c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad350ae0620"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad350adf020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad350ae0ae0"/>
        <function-ref name="overflow" scoped="" ref="0x2ad350adf4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2ad350ad9020" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x2ad350ad9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5b6bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad34f5e1020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad350ad6630"/>
        <function-ref name="fired" scoped="" ref="0x2ad350ad8a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ad350ad7920"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ad350ad74a0"/>
        <function-ref name="getdt" scoped="" ref="0x2ad350ad4020"/>
        <function-ref name="gett0" scoped="" ref="0x2ad350ad6ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad350ad7020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ad350ad9c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ad350ad6020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ad350ad8110"/>
        <function-ref name="stop" scoped="" ref="0x2ad350ad85e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2ad350ad4610" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2ad350ad4610"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5b6bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad34f5e1020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad350ad33d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad350ada130" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ad350ada130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad350ada4b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ad350b17870" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2ad350b17870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5b6bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad34f5e1020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad350b14090"/>
        <function-ref name="fired" scoped="" ref="0x2ad350b15090"/>
        <function-ref name="startAt" scoped="" ref="0x2ad350b15a10"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad350b15550"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ad350b14550"/>
        <function-ref name="start" scoped="" ref="0x2ad350b166a0"/>
        <function-ref name="stop" scoped="" ref="0x2ad350b16bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad350b17020" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ad350b17020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad350b173a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ad3518d4260" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2ad3518d4260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad3518d2b30"/>
        <function-ref name="fired" scoped="" ref="0x2ad3518d3a60"/>
        <function-ref name="startAt" scoped="" ref="0x2ad3518d24e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad3518d2020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ad3518d1020"/>
        <function-ref name="start" scoped="" ref="0x2ad3518d3090"/>
        <function-ref name="stop" scoped="" ref="0x2ad3518d35a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad3518d59d0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ad3518d59d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad3518d5d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x2ad3518bca80" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2ad3518bca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ad3518bce00"/>
        <function-ref name="setEvent" scoped="" ref="0x2ad3518bb020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ad3518bb1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ad3518bb340"/>
        <function-ref name="fired" scoped="" ref="0x2ad3518bb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x2ad3518be020" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2ad3518be020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad3518be3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ad3518be530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ad3518be6c0"/>
        <function-ref name="get" scoped="" ref="0x2ad3518be850"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ad3518be9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad3518beb70"/>
        <function-ref name="getMode" scoped="" ref="0x2ad3518bed00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad3518bd020"/>
        <function-ref name="overflow" scoped="" ref="0x2ad3518bd1b0"/>
        <function-ref name="setMode" scoped="" ref="0x2ad3518bd340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2ad3518bd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x2ad3518bd760" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ad3518bd760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ad3518bdae0"/>
        <function-ref name="getControl" scoped="" ref="0x2ad3518bdc70"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ad3518bde00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ad3518bc020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ad3518bc1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ad3518bc340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ad3518bc4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ad3518bc660"/>
        <function-ref name="setControl" scoped="" ref="0x2ad3518bc7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x2ad3518b2760" loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2ad3518b2760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ad3518b2ae0"/>
        <function-ref name="setEvent" scoped="" ref="0x2ad3518b2c70"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ad3518b2e00"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ad3518b1020"/>
        <function-ref name="fired" scoped="" ref="0x2ad3518b11b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2ad3518b5dd0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2ad3518b5dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad3518b4180"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ad3518b4310"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ad3518b44a0"/>
        <function-ref name="get" scoped="" ref="0x2ad3518b4630"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ad3518b47c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad3518b4950"/>
        <function-ref name="getMode" scoped="" ref="0x2ad3518b4ae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad3518b4c70"/>
        <function-ref name="overflow" scoped="" ref="0x2ad3518b4e00"/>
        <function-ref name="setMode" scoped="" ref="0x2ad3518b3020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2ad3518b31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ad3518b9bf0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2ad3518b9bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad3518b54e0"/>
        <function-ref name="fired" scoped="" ref="0x2ad3518b74e0"/>
        <function-ref name="startAt" scoped="" ref="0x2ad3518b7e60"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad3518b79a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ad3518b59a0"/>
        <function-ref name="start" scoped="" ref="0x2ad3518b8a80"/>
        <function-ref name="stop" scoped="" ref="0x2ad3518b7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad3518b9360" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ad3518b9360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad3518b96e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x2ad3518b3440" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ad3518b3440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ad3518b37c0"/>
        <function-ref name="getControl" scoped="" ref="0x2ad3518b3950"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ad3518b3ae0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ad3518b3c70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ad3518b3e00"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ad3518b2020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ad3518b21b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ad3518b2340"/>
        <function-ref name="setControl" scoped="" ref="0x2ad3518b24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2ad350ac5b70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2ad350ac5b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5b6bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad34f5e1020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad350ac29b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad350ac0360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad350ac2e70"/>
        <function-ref name="overflow" scoped="" ref="0x2ad350ac0820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2ad350b2cb90" loc="63:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x2ad350b2cb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad350b2b9d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad350b294e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad350b29020"/>
        <function-ref name="overflow" scoped="" ref="0x2ad350b299a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2ad350abd610" loc="62:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2ad350abd610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5b6bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad34f5e1020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad350abb5b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad350b2c020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad350abba70"/>
        <function-ref name="overflow" scoped="" ref="0x2ad350b2c4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ad3518cf5f0" loc="61:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2ad3518cf5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5b6bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad34f5e1020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad3518cce50"/>
        <function-ref name="fired" scoped="" ref="0x2ad3518cee00"/>
        <function-ref name="startAt" scoped="" ref="0x2ad3518cc800"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad3518cc340"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ad3518cb340"/>
        <function-ref name="start" scoped="" ref="0x2ad3518ce430"/>
        <function-ref name="stop" scoped="" ref="0x2ad3518ce940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2ad3518c9d20" loc="73:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x2ad3518c9d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad3518c5670"/>
        <function-ref name="fired" scoped="" ref="0x2ad3518c6550"/>
        <function-ref name="startAt" scoped="" ref="0x2ad3518c5020"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad3518c6a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ad3518c5b30"/>
        <function-ref name="start" scoped="" ref="0x2ad3518c7b60"/>
        <function-ref name="stop" scoped="" ref="0x2ad3518c6090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2ad3518cb9b0" loc="68:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2ad3518cb9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5b6bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad34f5e1020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad3518ca7e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad3518c91b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad3518caca0"/>
        <function-ref name="overflow" scoped="" ref="0x2ad3518c9670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2ad350b559c0" loc="74:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x2ad350b559c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ad350b55d40"/>
        <function-ref name="runTask" scoped="" ref="0x2ad350b54020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2ad350b59850" loc="49:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2ad350b59850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5b6bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad34f5e1020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad350b55090"/>
        <function-ref name="fired" scoped="" ref="0x2ad350b57090"/>
        <function-ref name="startAt" scoped="" ref="0x2ad350b57a10"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad350b57550"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ad350b55550"/>
        <function-ref name="start" scoped="" ref="0x2ad350b586a0"/>
        <function-ref name="stop" scoped="" ref="0x2ad350b58bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ad350b5e2f0" loc="48:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2ad350b5e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5b6bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad34f5e1020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad350b5a870"/>
        <function-ref name="fired" scoped="" ref="0x2ad350b5de40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ad350b5cc00"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ad350b5c780"/>
        <function-ref name="getdt" scoped="" ref="0x2ad350b591e0"/>
        <function-ref name="gett0" scoped="" ref="0x2ad350b5acf0"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad350b5c300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ad350b5d020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ad350b5a260"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ad350b5d4f0"/>
        <function-ref name="stop" scoped="" ref="0x2ad350b5d9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2ad350b78a00" loc="71:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x2ad350b78a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ad350b78d80"/>
        <function-ref name="runTask" scoped="" ref="0x2ad350b77020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2ad350b7d640" loc="49:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x2ad350b7d640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5b6bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad34f5e1020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad350b79c40"/>
        <function-ref name="fired" scoped="" ref="0x2ad350b7a1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ad350b79020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ad350b7aae0"/>
        <function-ref name="getdt" scoped="" ref="0x2ad350b78590"/>
        <function-ref name="gett0" scoped="" ref="0x2ad350b78110"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad350b7a660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ad350b7c390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ad350b79630"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ad350b7c860"/>
        <function-ref name="stop" scoped="" ref="0x2ad350b7cd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ad350b83150" loc="48:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2ad350b83150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5b6bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad34f5e1020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad350b7f700"/>
        <function-ref name="fired" scoped="" ref="0x2ad350b82c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ad350b80a50"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ad350b805b0"/>
        <function-ref name="getdt" scoped="" ref="0x2ad350b7d090"/>
        <function-ref name="gett0" scoped="" ref="0x2ad350b7fba0"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad350b80110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ad350b83d60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ad350b7f0d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ad350b822a0"/>
        <function-ref name="stop" scoped="" ref="0x2ad350b82790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2ad350b752b0" loc="48:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2ad350b752b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5b6bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad34f5e1020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad350b73020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2ad350b73690" loc="49:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2ad350b73690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5b6bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad34f5e1020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad350b725b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad350b71020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad350b72a70"/>
        <function-ref name="overflow" scoped="" ref="0x2ad350b714e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ad350b6a8c0" loc="45:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2ad350b6a8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5b6bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad34f5e1020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad350bcccf0"/>
        <function-ref name="fired" scoped="" ref="0x2ad350bcd320"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ad350bcc0d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ad350bcdc20"/>
        <function-ref name="getdt" scoped="" ref="0x2ad350bca660"/>
        <function-ref name="gett0" scoped="" ref="0x2ad350bca1e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad350bcd7a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ad350bce4e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ad350bcc6e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ad350bce9b0"/>
        <function-ref name="stop" scoped="" ref="0x2ad350bcee80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2ad350bd62c0" loc="49:/home/zdenial/tinyos/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x2ad350bd62c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5b6bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad34f5e1020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad350bd3870"/>
        <function-ref name="fired" scoped="" ref="0x2ad350bd5e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ad350bd4c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ad350bd4780"/>
        <function-ref name="getdt" scoped="" ref="0x2ad350bd11e0"/>
        <function-ref name="gett0" scoped="" ref="0x2ad350bd3cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad350bd4300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ad350bd5020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ad350bd3260"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ad350bd54f0"/>
        <function-ref name="stop" scoped="" ref="0x2ad350bd59c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2ad350bbac60" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2ad350bbac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350bb9210"/>
        <function-ref name="write" scoped="" ref="0x2ad350bb93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2ad350bc4020" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2ad350bc4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad350bc43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2ad350bbec70" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2ad350bbec70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350bbc020"/>
        <function-ref name="write" scoped="" ref="0x2ad350bbc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2ad350bb8670" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2ad350bb8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350bb89f0"/>
        <function-ref name="write" scoped="" ref="0x2ad350bb8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2ad350bb1e50" loc="86:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2ad350bb1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350bb0210"/>
        <function-ref name="write" scoped="" ref="0x2ad350bb03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2ad350bb8e50" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2ad350bb8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350bb7210"/>
        <function-ref name="write" scoped="" ref="0x2ad350bb73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2ad350ba42f0" loc="108:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2ad350ba42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350ba4670"/>
        <function-ref name="write" scoped="" ref="0x2ad350ba4800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2ad350ba62f0" loc="104:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2ad350ba62f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350ba6670"/>
        <function-ref name="write" scoped="" ref="0x2ad350ba6800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2ad350bc3370" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2ad350bc3370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad350bc36f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2ad350bac670" loc="93:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2ad350bac670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350bac9f0"/>
        <function-ref name="write" scoped="" ref="0x2ad350bacb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2ad350ba72f0" loc="102:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2ad350ba72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350ba7670"/>
        <function-ref name="write" scoped="" ref="0x2ad350ba7800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2ad350bbcc60" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2ad350bbcc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350bbb020"/>
        <function-ref name="write" scoped="" ref="0x2ad350bbb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2ad350bbbc60" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2ad350bbbc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350bba020"/>
        <function-ref name="write" scoped="" ref="0x2ad350bba1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2ad350bb2670" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2ad350bb2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350bb29f0"/>
        <function-ref name="write" scoped="" ref="0x2ad350bb2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2ad350bb4e50" loc="79:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2ad350bb4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350bb3210"/>
        <function-ref name="write" scoped="" ref="0x2ad350bb33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2ad350bb7670" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2ad350bb7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350bb79f0"/>
        <function-ref name="write" scoped="" ref="0x2ad350bb7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2ad350bc6970" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2ad350bc6970"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2ad350bc6cf0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2ad350bc6e80"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2ad350bc5030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2ad350bc1d00" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2ad350bc1d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad350bc00a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2ad350bc0370" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2ad350bc0370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad350bc07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2ad350baba70" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2ad350baba70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350babdf0"/>
        <function-ref name="write" scoped="" ref="0x2ad350baa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2ad350bc0ac0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2ad350bc0ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad350bc0e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2ad350ba7ad0" loc="103:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2ad350ba7ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350ba7e50"/>
        <function-ref name="write" scoped="" ref="0x2ad350ba6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2ad350bc1060" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2ad350bc1060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad350bc13e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2ad350bade50" loc="92:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2ad350bade50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350bac210"/>
        <function-ref name="write" scoped="" ref="0x2ad350bac3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2ad350bbb480" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2ad350bbb480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350bbb800"/>
        <function-ref name="write" scoped="" ref="0x2ad350bbb990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2ad350bbc480" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2ad350bbc480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350bbc800"/>
        <function-ref name="write" scoped="" ref="0x2ad350bbc990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2ad350bc5950" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2ad350bc5950"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad350bc5cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2ad350baee50" loc="90:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2ad350baee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350bad210"/>
        <function-ref name="write" scoped="" ref="0x2ad350bad3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2ad350bb0670" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2ad350bb0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350bb09f0"/>
        <function-ref name="write" scoped="" ref="0x2ad350bb0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2ad350bad670" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2ad350bad670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350bad9f0"/>
        <function-ref name="write" scoped="" ref="0x2ad350badb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2ad350ba5ad0" loc="107:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2ad350ba5ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350ba5e50"/>
        <function-ref name="write" scoped="" ref="0x2ad350ba4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2ad350ba6ad0" loc="105:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2ad350ba6ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350ba6e50"/>
        <function-ref name="write" scoped="" ref="0x2ad350ba5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2ad350bb3670" loc="80:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2ad350bb3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350bb39f0"/>
        <function-ref name="write" scoped="" ref="0x2ad350bb3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2ad350bb0e50" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2ad350bb0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350bae210"/>
        <function-ref name="write" scoped="" ref="0x2ad350bae3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2ad350ba9ad0" loc="101:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2ad350ba9ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350ba9e50"/>
        <function-ref name="write" scoped="" ref="0x2ad350ba7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2ad350bb5670" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2ad350bb5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350bb59f0"/>
        <function-ref name="write" scoped="" ref="0x2ad350bb5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2ad350ba4ad0" loc="111:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2ad350ba4ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2ad350ba4e50"/>
        <function-ref name="writeDone" scoped="" ref="0x2ad350ba3020"/>
        <function-ref name="write" scoped="" ref="0x2ad350ba31b0"/>
        <function-ref name="beginRead" scoped="" ref="0x2ad350ba3340"/>
        <function-ref name="readDone" scoped="" ref="0x2ad350ba34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2ad350bc5300" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2ad350bc5300"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad350bc5680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2ad350bbe490" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2ad350bbe490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350bbe810"/>
        <function-ref name="write" scoped="" ref="0x2ad350bbe9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2ad350bba480" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2ad350bba480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350bba800"/>
        <function-ref name="write" scoped="" ref="0x2ad350bba990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2ad350bb2e50" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2ad350bb2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350bb1210"/>
        <function-ref name="write" scoped="" ref="0x2ad350bb13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2ad350bb7e50" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2ad350bb7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350bb5210"/>
        <function-ref name="write" scoped="" ref="0x2ad350bb53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2ad350bb1670" loc="85:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2ad350bb1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350bb19f0"/>
        <function-ref name="write" scoped="" ref="0x2ad350bb1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2ad350bb9670" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2ad350bb9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350bb99f0"/>
        <function-ref name="write" scoped="" ref="0x2ad350bb9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2ad350bc4670" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2ad350bc4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad350bc49f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2ad350bb9e50" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2ad350bb9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350bb8210"/>
        <function-ref name="write" scoped="" ref="0x2ad350bb83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ad350bc7d00" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ad350bc7d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad350bc60a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad350bc6230"/>
        <function-ref name="request" scoped="" ref="0x2ad350bc63c0"/>
        <function-ref name="granted" scoped="" ref="0x2ad350bc6550"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad350bc66e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2ad350bbf160" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2ad350bbf160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad350bbf4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2ad350bbfe00" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2ad350bbfe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad350bbe1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2ad350ba92f0" loc="100:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2ad350ba92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350ba9670"/>
        <function-ref name="write" scoped="" ref="0x2ad350ba9800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2ad350baaad0" loc="99:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2ad350baaad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350baae50"/>
        <function-ref name="write" scoped="" ref="0x2ad350ba9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2ad350bc16b0" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2ad350bc16b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad350bc1a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2ad350baa2f0" loc="96:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2ad350baa2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350baa670"/>
        <function-ref name="write" scoped="" ref="0x2ad350baa800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2ad350ba52f0" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2ad350ba52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350ba5670"/>
        <function-ref name="write" scoped="" ref="0x2ad350ba5800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2ad350bb3e50" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2ad350bb3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350bb2210"/>
        <function-ref name="write" scoped="" ref="0x2ad350bb23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2ad350bae670" loc="89:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2ad350bae670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350bae9f0"/>
        <function-ref name="write" scoped="" ref="0x2ad350baeb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2ad350bc4cc0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2ad350bc4cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad350bc30a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2ad350bc39c0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2ad350bc39c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad350bc3d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2ad350bb5e50" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2ad350bb5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350bb4210"/>
        <function-ref name="write" scoped="" ref="0x2ad350bb43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2ad350bbf7b0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2ad350bbf7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ad350bbfb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2ad350bb4670" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2ad350bb4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350bb49f0"/>
        <function-ref name="write" scoped="" ref="0x2ad350bb4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2ad350bace50" loc="94:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2ad350bace50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad350bab610"/>
        <function-ref name="write" scoped="" ref="0x2ad350bab7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2ad350ba37a0" loc="112:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2ad350ba37a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2ad350ba3b20"/>
        <function-ref name="writeDone" scoped="" ref="0x2ad350ba3cb0"/>
        <function-ref name="write" scoped="" ref="0x2ad350ba3e40"/>
        <function-ref name="beginRead" scoped="" ref="0x2ad350ba2020"/>
        <function-ref name="readDone" scoped="" ref="0x2ad350ba21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2ad350befa20" loc="46:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x2ad350befa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2ad350befda0"/>
        <function-ref name="rand32" scoped="" ref="0x2ad350bed020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2ad350bec920" loc="45:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x2ad350bec920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad350bef560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad350bf39a0" loc="44:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ad350bf39a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad350bf3d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2ad350be7a20" loc="48:/home/zdenial/tinyos/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x2ad350be7a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2ad350be7da0"/>
        <function-ref name="rand32" scoped="" ref="0x2ad350be6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2ad350be9940" loc="47:/home/zdenial/tinyos/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x2ad350be9940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad350be7560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad350be9080" loc="46:/home/zdenial/tinyos/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ad350be9080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad350be9400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2ad350bf1aa0" loc="67:/home/zdenial/tinyos/tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2ad350bf1aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2ad350bf1e20"/>
        <function-ref name="toIdle" scoped="" ref="0x2ad350bea020"/>
        <function-ref name="isState" scoped="" ref="0x2ad350bea1b0"/>
        <function-ref name="isIdle" scoped="" ref="0x2ad350bea340"/>
        <function-ref name="requestState" scoped="" ref="0x2ad350bea4d0"/>
        <function-ref name="forceState" scoped="" ref="0x2ad350bea660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ad350c4b020" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2ad350c4b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad350c4b3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad350c4b530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad350c4b6c0"/>
        <function-ref name="cancel" scoped="" ref="0x2ad350c4b850"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad350c4b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ad350c4c220" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2ad350c4c220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad350c4c5a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad350c4c730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad350c4c8c0"/>
        <function-ref name="cancel" scoped="" ref="0x2ad350c4ca50"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad350c4cbe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ad350c47e60" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2ad350c47e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad350c46210"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad350c463a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad350c46530"/>
        <function-ref name="cancel" scoped="" ref="0x2ad350c466c0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad350c46850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ad350c4aa20" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2ad350c4aa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad350c4ada0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad350c47020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad350c471b0"/>
        <function-ref name="cancel" scoped="" ref="0x2ad350c47340"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad350c474d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2ad350c458f0" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x2ad350c458f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2ad350c45c70"/>
        <function-ref name="rand32" scoped="" ref="0x2ad350c45e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad350c47750" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ad350c47750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad350c47ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2ad350c44170" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ad350c44170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2ad350c444f0"/>
        <function-ref name="getHeader" scoped="" ref="0x2ad350c44680"/>
        <function-ref name="getMetadata" scoped="" ref="0x2ad350c44810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x2ad350c46ae0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2ad350c46ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2ad350c46e60"/>
        <function-ref name="toIdle" scoped="" ref="0x2ad350c45020"/>
        <function-ref name="isState" scoped="" ref="0x2ad350c451b0"/>
        <function-ref name="isIdle" scoped="" ref="0x2ad350c45340"/>
        <function-ref name="requestState" scoped="" ref="0x2ad350c454d0"/>
        <function-ref name="forceState" scoped="" ref="0x2ad350c45660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2ad350c48690" loc="67:/home/zdenial/tinyos/tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2ad350c48690"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2ad350c48a10"/>
        <function-ref name="toIdle" scoped="" ref="0x2ad350c48ba0"/>
        <function-ref name="isState" scoped="" ref="0x2ad350c48d30"/>
        <function-ref name="isIdle" scoped="" ref="0x2ad350c33020"/>
        <function-ref name="requestState" scoped="" ref="0x2ad350c331b0"/>
        <function-ref name="forceState" scoped="" ref="0x2ad350c33340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2ad350c2c950" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2ad350c2c950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad350c2ccd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ad350c2faa0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2ad350c2faa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad350c2fe20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x2ad350c2c200" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x2ad350c2c200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad350c2c580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2ad350c273f0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2ad350c273f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad350c27770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad350c28b70" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ad350c28b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad350c27020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ad350c2be30" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2ad350c2be30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad350c281e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2ad350c27a70" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ad350c27a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2ad350c27df0"/>
        <function-ref name="getHeader" scoped="" ref="0x2ad350c26020"/>
        <function-ref name="getMetadata" scoped="" ref="0x2ad350c261b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x2ad350c28570" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x2ad350c28570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad350c288f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2ad350c71020" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2ad350c71020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad350c713a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ad350c716b0" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2ad350c716b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad350c71a30"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad350c71bc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad350c71d50"/>
        <function-ref name="cancel" scoped="" ref="0x2ad350c6f020"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad350c6f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ad350c75960" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2ad350c75960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad350c75ce0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad350c75e70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad350c74030"/>
        <function-ref name="cancel" scoped="" ref="0x2ad350c741c0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad350c74350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x2ad350c74ca0" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x2ad350c74ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad350c730a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad350c73230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad350c733c0"/>
        <function-ref name="cancel" scoped="" ref="0x2ad350c73550"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad350c736e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ad350c745f0" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2ad350c745f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad350c74970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ad350c76cb0" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ad350c76cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad350c750a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad350c75230"/>
        <function-ref name="request" scoped="" ref="0x2ad350c753c0"/>
        <function-ref name="granted" scoped="" ref="0x2ad350c75550"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad350c756e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x2ad350c73a50" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x2ad350c73a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad350c73dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x2ad350c72170" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x2ad350c72170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad350c724f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad350c72680"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad350c72810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad350c729a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad350c72b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ad350c67d70" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2ad350c67d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad350c66180"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad350c66310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad350c664a0"/>
        <function-ref name="cancel" scoped="" ref="0x2ad350c66630"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad350c667c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2ad350c66b10" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2ad350c66b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad350c65020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x2ad350cb0db0" loc="184:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x2ad350cb0db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ad350caf180"/>
        <function-ref name="runTask" scoped="" ref="0x2ad350caf310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2ad350c652f0" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2ad350c652f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2ad350c65670"/>
        <function-ref name="setNetwork" scoped="" ref="0x2ad350c65800"/>
        <function-ref name="getRssi" scoped="" ref="0x2ad350c65990"/>
        <function-ref name="getNetwork" scoped="" ref="0x2ad350c65b20"/>
        <function-ref name="getPower" scoped="" ref="0x2ad350c65cb0"/>
        <function-ref name="getLqi" scoped="" ref="0x2ad350c65e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x2ad350c69a20" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x2ad350c69a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad350c69da0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad350c68020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad350c681b0"/>
        <function-ref name="cancel" scoped="" ref="0x2ad350c68340"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad350c684d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2ad350c64b70" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x2ad350c64b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2ad350c63020"/>
        <function-ref name="isEmpty" scoped="" ref="0x2ad350c631b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2ad350c63340"/>
        <function-ref name="dequeue" scoped="" ref="0x2ad350c634d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2ad350c64170" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ad350c64170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2ad350c644f0"/>
        <function-ref name="getHeader" scoped="" ref="0x2ad350c64680"/>
        <function-ref name="getMetadata" scoped="" ref="0x2ad350c64810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x2ad350c69370" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x2ad350c69370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad350c696f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ad350c6b7b0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ad350c6b7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad350c6bb30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad350c6bcc0"/>
        <function-ref name="request" scoped="" ref="0x2ad350c6be50"/>
        <function-ref name="granted" scoped="" ref="0x2ad350c6a020"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad350c6a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2ad350c6a4d0" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x2ad350c6a4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad350c6a850"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad350c6a9e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad350c6ab70"/>
        <function-ref name="cancel" scoped="" ref="0x2ad350c6ad00"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad350c69020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x2ad350c68840" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x2ad350c68840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad350c68bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x2ad350c67020" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x2ad350c67020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad350c673a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad350c67530"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad350c676c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad350c67850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad350c679e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad350d0add0" loc="44:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ad350d0add0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad350d09180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2ad350d09410" loc="45:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x2ad350d09410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2ad350d09790"/>
        <function-ref name="isEmpty" scoped="" ref="0x2ad350d09920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2ad350d09ab0"/>
        <function-ref name="dequeue" scoped="" ref="0x2ad350d09c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2ad350cfeb80" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2ad350cfeb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ad350cfd020"/>
        <function-ref name="stopDone" scoped="" ref="0x2ad350cfd1b0"/>
        <function-ref name="start" scoped="" ref="0x2ad350cfd340"/>
        <function-ref name="stop" scoped="" ref="0x2ad350cfd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ad350cfc860" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2ad350cfc860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad350cfcbe0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad350cfcd70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad350cfb020"/>
        <function-ref name="cancel" scoped="" ref="0x2ad350cfb1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad350cfb340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2ad350cfb690" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2ad350cfb690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad350cfba10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ad350d02cf0" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2ad350d02cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad350cff0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad350cff230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad350cff3c0"/>
        <function-ref name="cancel" scoped="" ref="0x2ad350cff550"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad350cff6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2ad350cfe080" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2ad350cfe080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2ad350cfe400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2ad350cfe590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2ad350cfe720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2ad350cfe8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x2ad350cfd800" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x2ad350cfd800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2ad350cfdb80"/>
        <function-ref name="toIdle" scoped="" ref="0x2ad350cfdd10"/>
        <function-ref name="isState" scoped="" ref="0x2ad350cfc020"/>
        <function-ref name="isIdle" scoped="" ref="0x2ad350cfc1b0"/>
        <function-ref name="requestState" scoped="" ref="0x2ad350cfc340"/>
        <function-ref name="forceState" scoped="" ref="0x2ad350cfc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2ad350cfbd90" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x2ad350cfbd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ad350cfa180"/>
        <function-ref name="stopDone" scoped="" ref="0x2ad350cfa310"/>
        <function-ref name="start" scoped="" ref="0x2ad350cfa4a0"/>
        <function-ref name="stop" scoped="" ref="0x2ad350cfa630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ad350cff980" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2ad350cff980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad350cffd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2ad350cf72d0" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2ad350cf72d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2ad350cf7650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2ad350cf77e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2ad350cf7970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2ad350cf7b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2ad350cf8580" loc="67:/home/zdenial/tinyos/tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2ad350cf8580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2ad350cf8900"/>
        <function-ref name="toIdle" scoped="" ref="0x2ad350cf8a90"/>
        <function-ref name="isState" scoped="" ref="0x2ad350cf8c20"/>
        <function-ref name="isIdle" scoped="" ref="0x2ad350cf8db0"/>
        <function-ref name="requestState" scoped="" ref="0x2ad350cee020"/>
        <function-ref name="forceState" scoped="" ref="0x2ad350cee1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ad350ce9d70" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <component-ref qname="PacketLinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2ad350ce9d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad350ce8180"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad350ce8310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad350ce84a0"/>
        <function-ref name="cancel" scoped="" ref="0x2ad350ce8630"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad350ce87c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ad350cea2a0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <component-ref qname="PacketLinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2ad350cea2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad350cea620"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad350cea7b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad350cea940"/>
        <function-ref name="cancel" scoped="" ref="0x2ad350ceaad0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad350ceac60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2ad350ce9020" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <component-ref qname="PacketLinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x2ad350ce9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2ad350ce93a0"/>
        <function-ref name="setRetries" scoped="" ref="0x2ad350ce9530"/>
        <function-ref name="getRetries" scoped="" ref="0x2ad350ce96c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2ad350ce9850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2ad350ce99e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ad350ce4dd0" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2ad350ce4dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad350ce3180"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad350ce3310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad350ce34a0"/>
        <function-ref name="cancel" scoped="" ref="0x2ad350ce3630"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad350ce37c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="send" ref="0x2ad350cd92a0" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="send" scoped="" ref="0x2ad350cd92a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ad350cd9620"/>
        <function-ref name="runTask" scoped="" ref="0x2ad350cd97b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelayTimer" ref="0x2ad350ce1650" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DelayTimer" scoped="" ref="0x2ad350ce1650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5b6bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad34f5e1020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad350cddc40"/>
        <function-ref name="fired" scoped="" ref="0x2ad350cdf1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ad350cdd020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ad350cdfae0"/>
        <function-ref name="getdt" scoped="" ref="0x2ad350cdc590"/>
        <function-ref name="gett0" scoped="" ref="0x2ad350cdc110"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad350cdf660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ad350ce0390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ad350cdd630"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ad350ce0860"/>
        <function-ref name="stop" scoped="" ref="0x2ad350ce0d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ad350ce73b0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2ad350ce73b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad350ce7730"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad350ce78c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad350ce7a50"/>
        <function-ref name="cancel" scoped="" ref="0x2ad350ce7be0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad350ce7d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendState" ref="0x2ad350ce3af0" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x2ad350ce3af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2ad350ce3e70"/>
        <function-ref name="toIdle" scoped="" ref="0x2ad350ce2030"/>
        <function-ref name="isState" scoped="" ref="0x2ad350ce21c0"/>
        <function-ref name="isIdle" scoped="" ref="0x2ad350ce2350"/>
        <function-ref name="requestState" scoped="" ref="0x2ad350ce24e0"/>
        <function-ref name="forceState" scoped="" ref="0x2ad350ce2670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2ad350cdca30" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ad350cdca30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2ad350cdcdb0"/>
        <function-ref name="getHeader" scoped="" ref="0x2ad350cdb020"/>
        <function-ref name="getMetadata" scoped="" ref="0x2ad350cdb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x2ad350ce29a0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ad350ce29a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ad350ce2d20"/>
        <function-ref name="noAck" scoped="" ref="0x2ad350ce1020"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ad350ce11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2ad350ce4080" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x2ad350ce4080"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2ad350ce4400"/>
        <function-ref name="setRetries" scoped="" ref="0x2ad350ce4590"/>
        <function-ref name="getRetries" scoped="" ref="0x2ad350ce4720"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2ad350ce48b0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2ad350ce4a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2ad350d29350" loc="67:/home/zdenial/tinyos/tos/system/StateC.nc">
      <component-ref qname="PacketLinkC.SendStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2ad350d29350"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2ad350d296d0"/>
        <function-ref name="toIdle" scoped="" ref="0x2ad350d29860"/>
        <function-ref name="isState" scoped="" ref="0x2ad350d299f0"/>
        <function-ref name="isIdle" scoped="" ref="0x2ad350d29b80"/>
        <function-ref name="requestState" scoped="" ref="0x2ad350d29d10"/>
        <function-ref name="forceState" scoped="" ref="0x2ad350d28020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ad350d27750" loc="45:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="PacketLinkC.DelayTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2ad350d27750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5b6bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad34f5e1020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad350d23c40"/>
        <function-ref name="fired" scoped="" ref="0x2ad350d251e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ad350d23020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ad350d25ae0"/>
        <function-ref name="getdt" scoped="" ref="0x2ad350d22590"/>
        <function-ref name="gett0" scoped="" ref="0x2ad350d22110"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad350d25660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ad350d26390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ad350d23630"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ad350d26860"/>
        <function-ref name="stop" scoped="" ref="0x2ad350d26d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2ad350d83690" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2ad350d83690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad350d83a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ad350d85860" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2ad350d85860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad350d85be0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad350d85d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad350d83020"/>
        <function-ref name="cancel" scoped="" ref="0x2ad350d831b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad350d83340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x2ad350d81610" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x2ad350d81610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2ad350d81990"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2ad350d81b20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2ad350d81cb0"/>
        <function-ref name="syncDone" scoped="" ref="0x2ad350d81e40"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2ad350d80020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2ad350d801b0"/>
        <function-ref name="setChannel" scoped="" ref="0x2ad350d80340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2ad350d804d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2ad350d80660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2ad350d807f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2ad350d80980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2ad350d80b10"/>
        <function-ref name="sync" scoped="" ref="0x2ad350d80ca0"/>
        <function-ref name="getChannel" scoped="" ref="0x2ad350d7f020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2ad350d7f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2ad350d86830" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2ad350d86830"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ad34f5a01b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2ad350d86bb0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2ad350d86d40"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2ad350d85020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2ad350d851b0"/>
        <function-ref name="setCca" scoped="" ref="0x2ad350d85340"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2ad350d854d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2ad350d87b50" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x2ad350d87b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ad34f5a01b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2ad350d86020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x2ad350d7e1f0" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x2ad350d7e1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2ad350d7e570"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2ad350d7e700"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2ad350d7e890"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2ad350d7ea20"/>
        <function-ref name="setCca" scoped="" ref="0x2ad350d7ebb0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2ad350d7ed40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ad350d888f0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2ad350d888f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad350d88c70"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad350d88e00"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad350d87020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad350d871b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad350d87340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ad350d10da0" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2ad350d10da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ad34f5a01b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad350d0f180"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad350d0f310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad350d0f4a0"/>
        <function-ref name="cancel" scoped="" ref="0x2ad350d0f630"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad350d0f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2ad350d0ec00" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x2ad350d0ec00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ad34f5a01b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad350d0d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2ad350d83ce0" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2ad350d83ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2ad350d820a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2ad350d82230"/>
        <function-ref name="getRssi" scoped="" ref="0x2ad350d823c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x2ad350d82550"/>
        <function-ref name="getPower" scoped="" ref="0x2ad350d826e0"/>
        <function-ref name="getLqi" scoped="" ref="0x2ad350d82870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2ad350d7f4d0" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2ad350d7f4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2ad350d7f950"/>
        <function-ref name="changed" scoped="" ref="0x2ad350d7fae0"/>
        <function-ref name="amGroup" scoped="" ref="0x2ad350d7fc70"/>
        <function-ref name="setAddress" scoped="" ref="0x2ad350d7fe00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2ad350d82b70" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ad350d82b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2ad350d81020"/>
        <function-ref name="getHeader" scoped="" ref="0x2ad350d811b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x2ad350d81340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ad350d0e020" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2ad350d0e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ad34f5a01b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad350d0e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ad350d7dd30" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2ad350d7dd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ad350d7c0e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ad350d7c270"/>
        <function-ref name="led1On" scoped="" ref="0x2ad350d7c400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ad350d7c590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ad350d7c720"/>
        <function-ref name="get" scoped="" ref="0x2ad350d7c8b0"/>
        <function-ref name="led1Off" scoped="" ref="0x2ad350d7ca40"/>
        <function-ref name="led2Off" scoped="" ref="0x2ad350d7b1b0"/>
        <function-ref name="set" scoped="" ref="0x2ad350d7cbd0"/>
        <function-ref name="led0On" scoped="" ref="0x2ad350d7cd60"/>
        <function-ref name="led2On" scoped="" ref="0x2ad350d7b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ad350d0d2d0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2ad350d0d2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ad350d0d650"/>
        <function-ref name="source" scoped="" ref="0x2ad350d0d7e0"/>
        <function-ref name="address" scoped="" ref="0x2ad350d0d970"/>
        <function-ref name="destination" scoped="" ref="0x2ad350d0db00"/>
        <function-ref name="setSource" scoped="" ref="0x2ad350d0dc90"/>
        <function-ref name="setDestination" scoped="" ref="0x2ad350d0de20"/>
        <function-ref name="type" scoped="" ref="0x2ad350d88020"/>
        <function-ref name="setType" scoped="" ref="0x2ad350d881b0"/>
        <function-ref name="isForMe" scoped="" ref="0x2ad350d88340"/>
        <function-ref name="setGroup" scoped="" ref="0x2ad350d884d0"/>
        <function-ref name="localGroup" scoped="" ref="0x2ad350d88660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x2ad350d7d0f0" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x2ad350d7d0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad350d7d470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad350d7d600"/>
        <function-ref name="request" scoped="" ref="0x2ad350d7d790"/>
        <function-ref name="granted" scoped="" ref="0x2ad350d7d920"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad350d7dab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2ad350deb580" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2ad350deb580"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ad350deb900"/>
        <function-ref name="stopDone" scoped="" ref="0x2ad350deba90"/>
        <function-ref name="start" scoped="" ref="0x2ad350debc20"/>
        <function-ref name="stop" scoped="" ref="0x2ad350debdb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacketMilli" ref="0x2ad350dd6060" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x2ad350dd6060"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5b6bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad34f5e1020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x2ad350dd6e30"/>
        <function-ref name="eventTime" scoped="" ref="0x2ad350dd5380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ad350de77e0" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2ad350de77e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad350de7b60"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad350de7cf0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad350de7e80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad350de6030"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad350de61c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2ad350de71d0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x2ad350de71d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ad34f5a01b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad350de7550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2ad350de4640" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2ad350de4640"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2ad350de49c0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2ad350de4b50"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2ad350de4ce0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2ad350de4e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSendMilli" ref="0x2ad350ddce50" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x2ad350ddce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5b6bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad34f5e1020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ad34f5a01b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad350ddbc60"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad350dd8590"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad350dd8110"/>
        <function-ref name="cancel" scoped="" ref="0x2ad350dd9580"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad350dd9a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ad350de85c0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2ad350de85c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ad34f5a01b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad350de8940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2ad350de5b20" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ad350de5b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ad350de4020"/>
        <function-ref name="noAck" scoped="" ref="0x2ad350de41b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ad350de4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSend32khz" ref="0x2ad350de3aa0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x2ad350de3aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ad34f5a01b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad350de2890"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad350ddf1e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad350de0d10"/>
        <function-ref name="cancel" scoped="" ref="0x2ad350de01b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad350de06c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ad350de6470" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2ad350de6470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ad350de67f0"/>
        <function-ref name="source" scoped="" ref="0x2ad350de6980"/>
        <function-ref name="address" scoped="" ref="0x2ad350de6b10"/>
        <function-ref name="destination" scoped="" ref="0x2ad350de6ca0"/>
        <function-ref name="setSource" scoped="" ref="0x2ad350de6e30"/>
        <function-ref name="setDestination" scoped="" ref="0x2ad350de5020"/>
        <function-ref name="type" scoped="" ref="0x2ad350de51b0"/>
        <function-ref name="setType" scoped="" ref="0x2ad350de5340"/>
        <function-ref name="isForMe" scoped="" ref="0x2ad350de54d0"/>
        <function-ref name="setGroup" scoped="" ref="0x2ad350de5660"/>
        <function-ref name="localGroup" scoped="" ref="0x2ad350de57f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacket32khz" ref="0x2ad350ddfc50" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x2ad350ddfc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x2ad350ddda40"/>
        <function-ref name="eventTime" scoped="" ref="0x2ad350ddc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2ad350e3ce60" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2ad350e3ce60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad350e3b210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ad350e3fa00" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2ad350e3fa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad350e3fd80"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad350e3e020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad350e3e1b0"/>
        <function-ref name="cancel" scoped="" ref="0x2ad350e3e340"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad350e3e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacketMilli" ref="0x2ad350e43910" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x2ad350e43910"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5b6bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad34f5e1020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x2ad350e42740"/>
        <function-ref name="eventTime" scoped="" ref="0x2ad350e42c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSendMilli" ref="0x2ad350dcc4d0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x2ad350dcc4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5b6bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad34f5e1020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad350dcb390"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad350dcac80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad350dca800"/>
        <function-ref name="cancel" scoped="" ref="0x2ad350dcbc60"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad350dca1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ad350dc8340" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2ad350dc8340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad350dc86c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad350dc8850"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad350dc89e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad350dc8b70"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad350dc8d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2ad350e3f2c0" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x2ad350e3f2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ad34f5a01b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad350e3f640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2ad350e3e800" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubPacket" scoped="" ref="0x2ad350e3e800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad350e3eb80"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad350e3ed10"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad350e3d020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad350e3d1b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad350e3d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp32khz" ref="0x2ad350e3a130" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2ad350e3a130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ad350e39750"/>
        <function-ref name="clear" scoped="" ref="0x2ad350e39e80"/>
        <function-ref name="isValid" scoped="" ref="0x2ad350e39020"/>
        <function-ref name="set" scoped="" ref="0x2ad350e385d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMPacket" ref="0x2ad350e3d6a0" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubAMPacket" scoped="" ref="0x2ad350e3d6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ad350e3da20"/>
        <function-ref name="source" scoped="" ref="0x2ad350e3dbb0"/>
        <function-ref name="address" scoped="" ref="0x2ad350e3dd40"/>
        <function-ref name="destination" scoped="" ref="0x2ad350e3c020"/>
        <function-ref name="setSource" scoped="" ref="0x2ad350e3c1b0"/>
        <function-ref name="setDestination" scoped="" ref="0x2ad350e3c340"/>
        <function-ref name="type" scoped="" ref="0x2ad350e3c4d0"/>
        <function-ref name="setType" scoped="" ref="0x2ad350e3c660"/>
        <function-ref name="isForMe" scoped="" ref="0x2ad350e3c7f0"/>
        <function-ref name="setGroup" scoped="" ref="0x2ad350e3c980"/>
        <function-ref name="localGroup" scoped="" ref="0x2ad350e3cb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ad350e416b0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2ad350e416b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ad34f5a01b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad350e41a30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x2ad350e32020" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2ad350e32020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad350e323a0"/>
        <function-ref name="isSet" scoped="" ref="0x2ad350e32530"/>
        <function-ref name="cancel" scoped="" ref="0x2ad350e326c0"/>
        <function-ref name="set" scoped="" ref="0x2ad350e32850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x2ad350e32d30" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x2ad350e32d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad350e31980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ad350e2f0f0" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2ad350e2f0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ad350e2f470"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ad350e2f600"/>
        <function-ref name="led1On" scoped="" ref="0x2ad350e2f790"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ad350e2f920"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ad350e2fab0"/>
        <function-ref name="get" scoped="" ref="0x2ad350e2fc40"/>
        <function-ref name="led1Off" scoped="" ref="0x2ad350e2fdd0"/>
        <function-ref name="led2Off" scoped="" ref="0x2ad350e2e4d0"/>
        <function-ref name="set" scoped="" ref="0x2ad350e2e020"/>
        <function-ref name="led0On" scoped="" ref="0x2ad350e2e1b0"/>
        <function-ref name="led2On" scoped="" ref="0x2ad350e2e340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x2ad350e30060" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x2ad350e30060"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5b6bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad34f5e1020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad350e30c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSend32khz" ref="0x2ad350dd2c10" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x2ad350dd2c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad350dd1a40"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad350dce4a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad350dce020"/>
        <function-ref name="cancel" scoped="" ref="0x2ad350dcf350"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad350dcf860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ad350dc7020" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2ad350dc7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ad350dc73a0"/>
        <function-ref name="source" scoped="" ref="0x2ad350dc7530"/>
        <function-ref name="address" scoped="" ref="0x2ad350dc76c0"/>
        <function-ref name="destination" scoped="" ref="0x2ad350dc7850"/>
        <function-ref name="setSource" scoped="" ref="0x2ad350dc79e0"/>
        <function-ref name="setDestination" scoped="" ref="0x2ad350dc7b70"/>
        <function-ref name="type" scoped="" ref="0x2ad350dc7d00"/>
        <function-ref name="setType" scoped="" ref="0x2ad350e46020"/>
        <function-ref name="isForMe" scoped="" ref="0x2ad350e461b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2ad350e46340"/>
        <function-ref name="localGroup" scoped="" ref="0x2ad350e464d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacket32khz" ref="0x2ad350e46b90" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x2ad350e46b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x2ad350e45990"/>
        <function-ref name="eventTime" scoped="" ref="0x2ad350e43020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSnoop" ref="0x2ad350e3b550" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSnoop" scoped="" ref="0x2ad350e3b550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad350e3b9d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStampMilli" ref="0x2ad350e36270" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ad350e36270"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5b6bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad34f5e1020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ad350e35800"/>
        <function-ref name="clear" scoped="" ref="0x2ad350e34020"/>
        <function-ref name="isValid" scoped="" ref="0x2ad350e350d0"/>
        <function-ref name="set" scoped="" ref="0x2ad350e34750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ad350f43020" loc="49:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2ad350f43020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad350f433a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad350f43530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad350f436c0"/>
        <function-ref name="cancel" scoped="" ref="0x2ad350f43850"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad350f439e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ad350f43c30" loc="50:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2ad350f43c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad350f42020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad350f421b0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad350f42340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad350f424d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad350f42660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ad350f428b0" loc="51:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2ad350f428b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ad350f42c30"/>
        <function-ref name="source" scoped="" ref="0x2ad350f42dc0"/>
        <function-ref name="address" scoped="" ref="0x2ad350f41020"/>
        <function-ref name="destination" scoped="" ref="0x2ad350f411b0"/>
        <function-ref name="setSource" scoped="" ref="0x2ad350f41340"/>
        <function-ref name="setDestination" scoped="" ref="0x2ad350f414d0"/>
        <function-ref name="type" scoped="" ref="0x2ad350f41660"/>
        <function-ref name="setType" scoped="" ref="0x2ad350f417f0"/>
        <function-ref name="isForMe" scoped="" ref="0x2ad350f41980"/>
        <function-ref name="setGroup" scoped="" ref="0x2ad350f41b10"/>
        <function-ref name="localGroup" scoped="" ref="0x2ad350f41ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2ad350f40020" loc="52:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2ad350f40020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ad350f403a0"/>
        <function-ref name="noAck" scoped="" ref="0x2ad350f40530"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ad350f406c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ad3519f4cb0" loc="49:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2ad3519f4cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad3519f30a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad3519f3230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad3519f33c0"/>
        <function-ref name="cancel" scoped="" ref="0x2ad3519f3550"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad3519f36e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ad3519f3930" loc="50:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2ad3519f3930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad3519f3cb0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad3519f3e40"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad3519f2020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad3519f21b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad3519f2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ad3519f2590" loc="51:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2ad3519f2590"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ad3519f2910"/>
        <function-ref name="source" scoped="" ref="0x2ad3519f2aa0"/>
        <function-ref name="address" scoped="" ref="0x2ad3519f2c30"/>
        <function-ref name="destination" scoped="" ref="0x2ad3519f2dc0"/>
        <function-ref name="setSource" scoped="" ref="0x2ad3519f0020"/>
        <function-ref name="setDestination" scoped="" ref="0x2ad3519f01b0"/>
        <function-ref name="type" scoped="" ref="0x2ad3519f0340"/>
        <function-ref name="setType" scoped="" ref="0x2ad3519f04d0"/>
        <function-ref name="isForMe" scoped="" ref="0x2ad3519f0660"/>
        <function-ref name="setGroup" scoped="" ref="0x2ad3519f07f0"/>
        <function-ref name="localGroup" scoped="" ref="0x2ad3519f0980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2ad3519f0c10" loc="52:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2ad3519f0c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ad3519ef020"/>
        <function-ref name="noAck" scoped="" ref="0x2ad3519ef1b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ad3519ef340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ad3519e6660" loc="44:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2ad3519e6660"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad3519e69e0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad3519e6b70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad3519e6d00"/>
        <function-ref name="cancel" scoped="" ref="0x2ad3519e5020"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad3519e51b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2ad3519e5460" loc="46:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2ad3519e5460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad3519e57e0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad3519e5970"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad3519e5b00"/>
        <function-ref name="cancel" scoped="" ref="0x2ad3519e5c90"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad3519e5e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2ad3519e40e0" loc="47:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2ad3519e40e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ad3519e4460"/>
        <function-ref name="source" scoped="" ref="0x2ad3519e45f0"/>
        <function-ref name="address" scoped="" ref="0x2ad3519e4780"/>
        <function-ref name="destination" scoped="" ref="0x2ad3519e4910"/>
        <function-ref name="setSource" scoped="" ref="0x2ad3519e4aa0"/>
        <function-ref name="setDestination" scoped="" ref="0x2ad3519e4c30"/>
        <function-ref name="type" scoped="" ref="0x2ad3519e4dc0"/>
        <function-ref name="setType" scoped="" ref="0x2ad3519e3020"/>
        <function-ref name="isForMe" scoped="" ref="0x2ad3519e31b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2ad3519e3340"/>
        <function-ref name="localGroup" scoped="" ref="0x2ad3519e34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ad350ea2940" loc="43:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2ad350ea2940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad350ea2cc0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad350ea2e50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad350e9f020"/>
        <function-ref name="cancel" scoped="" ref="0x2ad350e9f1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad350e9f340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2ad350ed6400" loc="48:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2ad350ed6400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ad34f5a01b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad350ed67a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad350ed6930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad350ed6ac0"/>
        <function-ref name="cancel" scoped="" ref="0x2ad350ed6c50"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad350ed6de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ad350ed74b0" loc="46:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2ad350ed74b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad350ed7850"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad350ed79e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad350ed7b70"/>
        <function-ref name="cancel" scoped="" ref="0x2ad350ed7d00"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad350ed6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2ad350ed4720" loc="50:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2ad350ed4720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad350ed4aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad350ed4c30"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad350ed4dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad350ed3020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad350ed31b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x2ad350ed3480" loc="169:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x2ad350ed3480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ad350ed3800"/>
        <function-ref name="runTask" scoped="" ref="0x2ad350ed3990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x2ad350ed3c60" loc="126:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x2ad350ed3c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ad350ed1020"/>
        <function-ref name="runTask" scoped="" ref="0x2ad350ed11b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2ad350ed5060" loc="49:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2ad350ed5060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ad350ed53e0"/>
        <function-ref name="source" scoped="" ref="0x2ad350ed5570"/>
        <function-ref name="address" scoped="" ref="0x2ad350ed5700"/>
        <function-ref name="destination" scoped="" ref="0x2ad350ed5890"/>
        <function-ref name="setSource" scoped="" ref="0x2ad350ed5a20"/>
        <function-ref name="setDestination" scoped="" ref="0x2ad350ed5bb0"/>
        <function-ref name="type" scoped="" ref="0x2ad350ed5d40"/>
        <function-ref name="setType" scoped="" ref="0x2ad350ed4020"/>
        <function-ref name="isForMe" scoped="" ref="0x2ad350ed41b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2ad350ed4340"/>
        <function-ref name="localGroup" scoped="" ref="0x2ad350ed44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2ad350f3c830" loc="48:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.LocalTime32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2ad350f3c830"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad350f3b4c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2ad350f3bb30" loc="49:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.LocalTime32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2ad350f3bb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad350f39970"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad350f38340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad350f39e30"/>
        <function-ref name="overflow" scoped="" ref="0x2ad350f38800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2ad350f37e60" loc="20:/home/zdenial/tinyos/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2ad350f37e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5b6bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad34f5e1020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad350f34ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer32khz" ref="0x2ad350f23680" loc="3:Timer32C.nc">
      <component-ref qname="TDMALinkC.JoinReqDelayTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer32khz" scoped="" ref="0x2ad350f23680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad350f70c40"/>
        <function-ref name="fired" scoped="" ref="0x2ad350f711e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ad350f70020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ad350f71ae0"/>
        <function-ref name="getdt" scoped="" ref="0x2ad350f6e590"/>
        <function-ref name="gett0" scoped="" ref="0x2ad350f6e110"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad350f71660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ad350f72390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ad350f70630"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ad350f72860"/>
        <function-ref name="stop" scoped="" ref="0x2ad350f72d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer32khz" ref="0x2ad350f1a020" loc="3:Timer32P.nc">
      <component-ref qname="Timer32P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer32khz" scoped="" ref="0x2ad350f1a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad350f16630"/>
        <function-ref name="fired" scoped="" ref="0x2ad350f18a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ad350f17920"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ad350f174a0"/>
        <function-ref name="getdt" scoped="" ref="0x2ad350f15020"/>
        <function-ref name="gett0" scoped="" ref="0x2ad350f16ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad350f17020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ad350f1ac10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ad350f16020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ad350f18110"/>
        <function-ref name="stop" scoped="" ref="0x2ad350f185e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ad350f13a00" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="Timer32P.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2ad350f13a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad350f0f2a0"/>
        <function-ref name="fired" scoped="" ref="0x2ad350f112a0"/>
        <function-ref name="startAt" scoped="" ref="0x2ad350f11c20"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad350f11760"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ad350f0f760"/>
        <function-ref name="start" scoped="" ref="0x2ad350f12890"/>
        <function-ref name="stop" scoped="" ref="0x2ad350f12da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad350f131b0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="Timer32P.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ad350f131b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad350f13530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ad351a464f0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2ad351a464f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad351a43db0"/>
        <function-ref name="fired" scoped="" ref="0x2ad351a44da0"/>
        <function-ref name="startAt" scoped="" ref="0x2ad351a43760"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad351a432a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ad351a422a0"/>
        <function-ref name="start" scoped="" ref="0x2ad351a443d0"/>
        <function-ref name="stop" scoped="" ref="0x2ad351a448e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad351a47b10" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ad351a47b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad351a46020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x2ad351a2dda0" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2ad351a2dda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ad351a2c180"/>
        <function-ref name="setEvent" scoped="" ref="0x2ad351a2c310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ad351a2c4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ad351a2c630"/>
        <function-ref name="fired" scoped="" ref="0x2ad351a2c7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x2ad351a2f450" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2ad351a2f450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad351a2f7d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ad351a2f960"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ad351a2faf0"/>
        <function-ref name="get" scoped="" ref="0x2ad351a2fc80"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ad351a2fe10"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad351a2e020"/>
        <function-ref name="getMode" scoped="" ref="0x2ad351a2e1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad351a2e340"/>
        <function-ref name="overflow" scoped="" ref="0x2ad351a2e4d0"/>
        <function-ref name="setMode" scoped="" ref="0x2ad351a2e660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2ad351a2e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x2ad351a2ea80" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ad351a2ea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ad351a2ee00"/>
        <function-ref name="getControl" scoped="" ref="0x2ad351a2d020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ad351a2d1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ad351a2d340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ad351a2d4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ad351a2d660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ad351a2d7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ad351a2d980"/>
        <function-ref name="setControl" scoped="" ref="0x2ad351a2db10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x2ad351a23a80" loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2ad351a23a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ad351a23e00"/>
        <function-ref name="setEvent" scoped="" ref="0x2ad351a22020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ad351a221b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ad351a22340"/>
        <function-ref name="fired" scoped="" ref="0x2ad351a224d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2ad351a25190" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2ad351a25190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad351a25510"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ad351a256a0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ad351a25830"/>
        <function-ref name="get" scoped="" ref="0x2ad351a259c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ad351a25b50"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad351a25ce0"/>
        <function-ref name="getMode" scoped="" ref="0x2ad351a25e70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad351a24030"/>
        <function-ref name="overflow" scoped="" ref="0x2ad351a241c0"/>
        <function-ref name="setMode" scoped="" ref="0x2ad351a24350"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2ad351a244e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ad351a29020" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2ad351a29020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad351a27870"/>
        <function-ref name="fired" scoped="" ref="0x2ad351a28840"/>
        <function-ref name="startAt" scoped="" ref="0x2ad351a27220"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad351a28d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ad351a27d30"/>
        <function-ref name="start" scoped="" ref="0x2ad351a29e30"/>
        <function-ref name="stop" scoped="" ref="0x2ad351a28380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad351a2a660" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ad351a2a660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad351a2a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x2ad351a24770" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ad351a24770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ad351a24af0"/>
        <function-ref name="getControl" scoped="" ref="0x2ad351a24c80"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ad351a24e10"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ad351a23020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ad351a231b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ad351a23340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ad351a234d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ad351a23660"/>
        <function-ref name="setControl" scoped="" ref="0x2ad351a237f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ad351a40890" loc="61:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2ad351a40890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad351a3c0d0"/>
        <function-ref name="fired" scoped="" ref="0x2ad351a3e0d0"/>
        <function-ref name="startAt" scoped="" ref="0x2ad351a3ea50"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad351a3e590"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ad351a3c590"/>
        <function-ref name="start" scoped="" ref="0x2ad351a3f6e0"/>
        <function-ref name="stop" scoped="" ref="0x2ad351a3fbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2ad351a390a0" loc="73:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x2ad351a390a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad351a36b30"/>
        <function-ref name="fired" scoped="" ref="0x2ad351a389f0"/>
        <function-ref name="startAt" scoped="" ref="0x2ad351a364e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad351a36020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ad351a35020"/>
        <function-ref name="start" scoped="" ref="0x2ad351a38020"/>
        <function-ref name="stop" scoped="" ref="0x2ad351a38530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2ad351a3cc00" loc="68:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2ad351a3cc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad351a3ba80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad351a3a4e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad351a3a020"/>
        <function-ref name="overflow" scoped="" ref="0x2ad351a3a9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2ad350f87cc0" loc="74:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="Timer32P.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x2ad350f87cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ad350f860a0"/>
        <function-ref name="runTask" scoped="" ref="0x2ad350f86230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2ad350f08b10" loc="49:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="Timer32P.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2ad350f08b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad350f87390"/>
        <function-ref name="fired" scoped="" ref="0x2ad350f89360"/>
        <function-ref name="startAt" scoped="" ref="0x2ad350f89ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad350f89820"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ad350f87850"/>
        <function-ref name="start" scoped="" ref="0x2ad350f8a970"/>
        <function-ref name="stop" scoped="" ref="0x2ad350f8ae80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ad350f0d470" loc="48:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="Timer32P.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2ad350f0d470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad350f09a20"/>
        <function-ref name="fired" scoped="" ref="0x2ad350f0b020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ad350f0bda0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ad350f0b920"/>
        <function-ref name="getdt" scoped="" ref="0x2ad350f084a0"/>
        <function-ref name="gett0" scoped="" ref="0x2ad350f08020"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad350f0b4a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ad350f0c090"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ad350f09410"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ad350f0c560"/>
        <function-ref name="stop" scoped="" ref="0x2ad350f0ca30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2ad350f78650" loc="71:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="Timer32P.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x2ad350f78650"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ad350f789d0"/>
        <function-ref name="runTask" scoped="" ref="0x2ad350f78b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2ad350f7d3b0" loc="49:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="Timer32P.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x2ad350f7d3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad350f79870"/>
        <function-ref name="fired" scoped="" ref="0x2ad350f7be40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ad350f7ac00"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ad350f7a780"/>
        <function-ref name="getdt" scoped="" ref="0x2ad350f781e0"/>
        <function-ref name="gett0" scoped="" ref="0x2ad350f79cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad350f7a300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ad350f7b020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ad350f79260"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ad350f7b4f0"/>
        <function-ref name="stop" scoped="" ref="0x2ad350f7b9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ad350f84d70" loc="48:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="Timer32P.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2ad350f84d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad350f7e470"/>
        <function-ref name="fired" scoped="" ref="0x2ad350f819b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ad350f807c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ad350f80320"/>
        <function-ref name="getdt" scoped="" ref="0x2ad350f7edb0"/>
        <function-ref name="gett0" scoped="" ref="0x2ad350f7e910"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad350f81e50"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ad350f839a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ad350f80df0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ad350f81020"/>
        <function-ref name="stop" scoped="" ref="0x2ad350f81510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ad350f6cb30" loc="49:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2ad350f6cb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad350f6b020"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad350f6b1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad350f6b340"/>
        <function-ref name="cancel" scoped="" ref="0x2ad350f6b4d0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad350f6b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ad350f6b8b0" loc="50:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2ad350f6b8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad350f6bc30"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad350f6bdc0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad350f6a020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad350f6a1b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad350f6a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ad350f6a590" loc="51:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2ad350f6a590"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ad350f6a910"/>
        <function-ref name="source" scoped="" ref="0x2ad350f6aaa0"/>
        <function-ref name="address" scoped="" ref="0x2ad350f6ac30"/>
        <function-ref name="destination" scoped="" ref="0x2ad350f6adc0"/>
        <function-ref name="setSource" scoped="" ref="0x2ad350f69020"/>
        <function-ref name="setDestination" scoped="" ref="0x2ad350f691b0"/>
        <function-ref name="type" scoped="" ref="0x2ad350f69340"/>
        <function-ref name="setType" scoped="" ref="0x2ad350f694d0"/>
        <function-ref name="isForMe" scoped="" ref="0x2ad350f69660"/>
        <function-ref name="setGroup" scoped="" ref="0x2ad350f697f0"/>
        <function-ref name="localGroup" scoped="" ref="0x2ad350f69980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2ad350f69c10" loc="52:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2ad350f69c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ad350f68020"/>
        <function-ref name="noAck" scoped="" ref="0x2ad350f681b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ad350f68340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ad351a703b0" loc="49:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2ad351a703b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad351a70730"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad351a708c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad351a70a50"/>
        <function-ref name="cancel" scoped="" ref="0x2ad351a70be0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad351a70d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ad351a6f020" loc="50:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2ad351a6f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad351a6f3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad351a6f530"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad351a6f6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad351a6f850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad351a6f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ad351a6fc30" loc="51:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2ad351a6fc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ad351a6e020"/>
        <function-ref name="source" scoped="" ref="0x2ad351a6e1b0"/>
        <function-ref name="address" scoped="" ref="0x2ad351a6e340"/>
        <function-ref name="destination" scoped="" ref="0x2ad351a6e4d0"/>
        <function-ref name="setSource" scoped="" ref="0x2ad351a6e660"/>
        <function-ref name="setDestination" scoped="" ref="0x2ad351a6e7f0"/>
        <function-ref name="type" scoped="" ref="0x2ad351a6e980"/>
        <function-ref name="setType" scoped="" ref="0x2ad351a6eb10"/>
        <function-ref name="isForMe" scoped="" ref="0x2ad351a6eca0"/>
        <function-ref name="setGroup" scoped="" ref="0x2ad351a6ee30"/>
        <function-ref name="localGroup" scoped="" ref="0x2ad351a6d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2ad351a6d2b0" loc="52:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2ad351a6d2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ad351a6d630"/>
        <function-ref name="noAck" scoped="" ref="0x2ad351a6d7c0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ad351a6d950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ad351b14640" loc="44:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2ad351b14640"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad351b149c0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad351b14b50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad351b14ce0"/>
        <function-ref name="cancel" scoped="" ref="0x2ad351b14e70"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad351b12030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2ad351b122e0" loc="46:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2ad351b122e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad351b12660"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad351b127f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad351b12980"/>
        <function-ref name="cancel" scoped="" ref="0x2ad351b12b10"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad351b12ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2ad351b11020" loc="47:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2ad351b11020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ad351b113a0"/>
        <function-ref name="source" scoped="" ref="0x2ad351b11530"/>
        <function-ref name="address" scoped="" ref="0x2ad351b116c0"/>
        <function-ref name="destination" scoped="" ref="0x2ad351b11850"/>
        <function-ref name="setSource" scoped="" ref="0x2ad351b119e0"/>
        <function-ref name="setDestination" scoped="" ref="0x2ad351b11b70"/>
        <function-ref name="type" scoped="" ref="0x2ad351b11d00"/>
        <function-ref name="setType" scoped="" ref="0x2ad351b10020"/>
        <function-ref name="isForMe" scoped="" ref="0x2ad351b101b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2ad351b10340"/>
        <function-ref name="localGroup" scoped="" ref="0x2ad351b104d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ad350f5fdd0" loc="46:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.JoinReqRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2ad350f5fdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad350f5e180"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad350f5e310"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad350f5e4a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad350f5e630"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad350f5e7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ad350f5f800" loc="45:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.JoinReqRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2ad350f5f800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad350f5fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ad350f5ea10" loc="47:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.JoinReqRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2ad350f5ea10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ad350f5ed90"/>
        <function-ref name="source" scoped="" ref="0x2ad350f5d020"/>
        <function-ref name="address" scoped="" ref="0x2ad350f5d1b0"/>
        <function-ref name="destination" scoped="" ref="0x2ad350f5d340"/>
        <function-ref name="setSource" scoped="" ref="0x2ad350f5d4d0"/>
        <function-ref name="setDestination" scoped="" ref="0x2ad350f5d660"/>
        <function-ref name="type" scoped="" ref="0x2ad350f5d7f0"/>
        <function-ref name="setType" scoped="" ref="0x2ad350f5d980"/>
        <function-ref name="isForMe" scoped="" ref="0x2ad350f5db10"/>
        <function-ref name="setGroup" scoped="" ref="0x2ad350f5dca0"/>
        <function-ref name="localGroup" scoped="" ref="0x2ad350f5de30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ad350f5a530" loc="49:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2ad350f5a530"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad350f5a8b0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad350f5aa40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad350f5abd0"/>
        <function-ref name="cancel" scoped="" ref="0x2ad350f5ad60"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad350f59020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ad350f59270" loc="50:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2ad350f59270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad350f595f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad350f59780"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad350f59910"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad350f59aa0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad350f59c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ad350f59e80" loc="51:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2ad350f59e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ad350f58220"/>
        <function-ref name="source" scoped="" ref="0x2ad350f583b0"/>
        <function-ref name="address" scoped="" ref="0x2ad350f58540"/>
        <function-ref name="destination" scoped="" ref="0x2ad350f586d0"/>
        <function-ref name="setSource" scoped="" ref="0x2ad350f58860"/>
        <function-ref name="setDestination" scoped="" ref="0x2ad350f589f0"/>
        <function-ref name="type" scoped="" ref="0x2ad350f58b80"/>
        <function-ref name="setType" scoped="" ref="0x2ad350f58d10"/>
        <function-ref name="isForMe" scoped="" ref="0x2ad350f57020"/>
        <function-ref name="setGroup" scoped="" ref="0x2ad350f571b0"/>
        <function-ref name="localGroup" scoped="" ref="0x2ad350f57340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2ad350f575d0" loc="52:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2ad350f575d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ad350f57950"/>
        <function-ref name="noAck" scoped="" ref="0x2ad350f57ae0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ad350f57c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ad351af6920" loc="49:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2ad351af6920"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad351af6ca0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad351af6e30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad351af5020"/>
        <function-ref name="cancel" scoped="" ref="0x2ad351af51b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad351af5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ad351af5590" loc="50:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2ad351af5590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad351af5910"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad351af5aa0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad351af5c30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad351af5dc0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad351af4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ad351af4270" loc="51:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2ad351af4270"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ad351af45f0"/>
        <function-ref name="source" scoped="" ref="0x2ad351af4780"/>
        <function-ref name="address" scoped="" ref="0x2ad351af4910"/>
        <function-ref name="destination" scoped="" ref="0x2ad351af4aa0"/>
        <function-ref name="setSource" scoped="" ref="0x2ad351af4c30"/>
        <function-ref name="setDestination" scoped="" ref="0x2ad351af4dc0"/>
        <function-ref name="type" scoped="" ref="0x2ad351af3020"/>
        <function-ref name="setType" scoped="" ref="0x2ad351af31b0"/>
        <function-ref name="isForMe" scoped="" ref="0x2ad351af3340"/>
        <function-ref name="setGroup" scoped="" ref="0x2ad351af34d0"/>
        <function-ref name="localGroup" scoped="" ref="0x2ad351af3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2ad351af38f0" loc="52:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2ad351af38f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ad351af3c70"/>
        <function-ref name="noAck" scoped="" ref="0x2ad351af3e00"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ad351af2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ad351ae9b20" loc="44:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2ad351ae9b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad351ae8020"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad351ae81b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad351ae8340"/>
        <function-ref name="cancel" scoped="" ref="0x2ad351ae84d0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad351ae8660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2ad351ae8910" loc="46:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2ad351ae8910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad351ae8c90"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad351ae8e20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad351ae7020"/>
        <function-ref name="cancel" scoped="" ref="0x2ad351ae71b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad351ae7340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2ad351ae7590" loc="47:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2ad351ae7590"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ad351ae7910"/>
        <function-ref name="source" scoped="" ref="0x2ad351ae7aa0"/>
        <function-ref name="address" scoped="" ref="0x2ad351ae7c30"/>
        <function-ref name="destination" scoped="" ref="0x2ad351ae7dc0"/>
        <function-ref name="setSource" scoped="" ref="0x2ad351ae6020"/>
        <function-ref name="setDestination" scoped="" ref="0x2ad351ae61b0"/>
        <function-ref name="type" scoped="" ref="0x2ad351ae6340"/>
        <function-ref name="setType" scoped="" ref="0x2ad351ae64d0"/>
        <function-ref name="isForMe" scoped="" ref="0x2ad351ae6660"/>
        <function-ref name="setGroup" scoped="" ref="0x2ad351ae67f0"/>
        <function-ref name="localGroup" scoped="" ref="0x2ad351ae6980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ad350f53710" loc="46:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.JoinAnsRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2ad350f53710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad350f53a90"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad350f53c20"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad350f53db0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad350f52020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad350f521b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ad350f53140" loc="45:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.JoinAnsRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2ad350f53140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad350f534c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ad350f52400" loc="47:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.JoinAnsRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2ad350f52400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ad350f52780"/>
        <function-ref name="source" scoped="" ref="0x2ad350f52910"/>
        <function-ref name="address" scoped="" ref="0x2ad350f52aa0"/>
        <function-ref name="destination" scoped="" ref="0x2ad350f52c30"/>
        <function-ref name="setSource" scoped="" ref="0x2ad350f52dc0"/>
        <function-ref name="setDestination" scoped="" ref="0x2ad350f51020"/>
        <function-ref name="type" scoped="" ref="0x2ad350f511b0"/>
        <function-ref name="setType" scoped="" ref="0x2ad350f51340"/>
        <function-ref name="isForMe" scoped="" ref="0x2ad350f514d0"/>
        <function-ref name="setGroup" scoped="" ref="0x2ad350f51660"/>
        <function-ref name="localGroup" scoped="" ref="0x2ad350f517f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ad350f4e020" loc="49:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2ad350f4e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad350f4e3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad350f4e530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad350f4e6c0"/>
        <function-ref name="cancel" scoped="" ref="0x2ad350f4e850"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad350f4e9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ad350f4ec30" loc="50:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2ad350f4ec30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad350f4d020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad350f4d1b0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad350f4d340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad350f4d4d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad350f4d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ad350f4d8b0" loc="51:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2ad350f4d8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ad350f4dc30"/>
        <function-ref name="source" scoped="" ref="0x2ad350f4ddc0"/>
        <function-ref name="address" scoped="" ref="0x2ad350f4c020"/>
        <function-ref name="destination" scoped="" ref="0x2ad350f4c1b0"/>
        <function-ref name="setSource" scoped="" ref="0x2ad350f4c340"/>
        <function-ref name="setDestination" scoped="" ref="0x2ad350f4c4d0"/>
        <function-ref name="type" scoped="" ref="0x2ad350f4c660"/>
        <function-ref name="setType" scoped="" ref="0x2ad350f4c7f0"/>
        <function-ref name="isForMe" scoped="" ref="0x2ad350f4c980"/>
        <function-ref name="setGroup" scoped="" ref="0x2ad350f4cb10"/>
        <function-ref name="localGroup" scoped="" ref="0x2ad350f4cca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2ad350f4b020" loc="52:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2ad350f4b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ad350f4b3a0"/>
        <function-ref name="noAck" scoped="" ref="0x2ad350f4b530"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ad350f4b6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ad351aca140" loc="49:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2ad351aca140"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad351aca4c0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad351aca650"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad351aca7e0"/>
        <function-ref name="cancel" scoped="" ref="0x2ad351aca970"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad351acab00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ad351acad50" loc="50:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2ad351acad50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad351ac9100"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad351ac9290"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad351ac9420"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad351ac95b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad351ac9740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ad351ac9990" loc="51:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2ad351ac9990"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ad351ac9d10"/>
        <function-ref name="source" scoped="" ref="0x2ad351ac8020"/>
        <function-ref name="address" scoped="" ref="0x2ad351ac81b0"/>
        <function-ref name="destination" scoped="" ref="0x2ad351ac8340"/>
        <function-ref name="setSource" scoped="" ref="0x2ad351ac84d0"/>
        <function-ref name="setDestination" scoped="" ref="0x2ad351ac8660"/>
        <function-ref name="type" scoped="" ref="0x2ad351ac87f0"/>
        <function-ref name="setType" scoped="" ref="0x2ad351ac8980"/>
        <function-ref name="isForMe" scoped="" ref="0x2ad351ac8b10"/>
        <function-ref name="setGroup" scoped="" ref="0x2ad351ac8ca0"/>
        <function-ref name="localGroup" scoped="" ref="0x2ad351ac8e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2ad351ac7120" loc="52:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2ad351ac7120"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ad351ac74a0"/>
        <function-ref name="noAck" scoped="" ref="0x2ad351ac7630"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ad351ac77c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ad351abd390" loc="44:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.DataSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2ad351abd390"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad351abd710"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad351abd8a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad351abda30"/>
        <function-ref name="cancel" scoped="" ref="0x2ad351abdbc0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad351abdd50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2ad351b6f060" loc="46:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.DataSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2ad351b6f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad351b6f3e0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad351b6f570"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad351b6f700"/>
        <function-ref name="cancel" scoped="" ref="0x2ad351b6f890"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad351b6fa20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2ad351b6fc70" loc="47:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.DataSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2ad351b6fc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ad351b6e020"/>
        <function-ref name="source" scoped="" ref="0x2ad351b6e1b0"/>
        <function-ref name="address" scoped="" ref="0x2ad351b6e340"/>
        <function-ref name="destination" scoped="" ref="0x2ad351b6e4d0"/>
        <function-ref name="setSource" scoped="" ref="0x2ad351b6e660"/>
        <function-ref name="setDestination" scoped="" ref="0x2ad351b6e7f0"/>
        <function-ref name="type" scoped="" ref="0x2ad351b6e980"/>
        <function-ref name="setType" scoped="" ref="0x2ad351b6eb10"/>
        <function-ref name="isForMe" scoped="" ref="0x2ad351b6eca0"/>
        <function-ref name="setGroup" scoped="" ref="0x2ad351b6ee30"/>
        <function-ref name="localGroup" scoped="" ref="0x2ad351b6d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlotScheduler" ref="0x2ad350ff7900" loc="2:SlotSchedulerC.nc">
      <component-ref qname="TDMALinkC.SlotSchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SlotScheduler" scoped="" ref="0x2ad350ff7900"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlotScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="getEpochTime" scoped="" ref="0x2ad350ff67f0"/>
        <function-ref name="slotStarted" scoped="" ref="0x2ad350ff7e10"/>
        <function-ref name="getScheduledSlot" scoped="" ref="0x2ad350ff6020"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad350ff61b0"/>
        <function-ref name="syncEpochTime" scoped="" ref="0x2ad350ff6340"/>
        <function-ref name="start" scoped="" ref="0x2ad350ff64d0"/>
        <function-ref name="slotEnded" scoped="" ref="0x2ad350ff6660"/>
        <function-ref name="stop" scoped="" ref="0x2ad350ff7c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EndSlotTimer" ref="0x2ad351b509f0" loc="9:SlotSchedulerP.nc">
      <component-ref qname="TDMALinkC.SlotSchedulerC.SlotSchedulerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EndSlotTimer" scoped="" ref="0x2ad351b509f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad351b4b020"/>
        <function-ref name="fired" scoped="" ref="0x2ad351b4d510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ad351b4c300"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ad351b4de10"/>
        <function-ref name="getdt" scoped="" ref="0x2ad351b4b920"/>
        <function-ref name="gett0" scoped="" ref="0x2ad351b4b4a0"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad351b4d990"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ad351b4f670"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ad351b4c910"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ad351b4fb40"/>
        <function-ref name="stop" scoped="" ref="0x2ad351b4d090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartSlotTimer" ref="0x2ad351b55570" loc="8:SlotSchedulerP.nc">
      <component-ref qname="TDMALinkC.SlotSchedulerC.SlotSchedulerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartSlotTimer" scoped="" ref="0x2ad351b55570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad351b51a20"/>
        <function-ref name="fired" scoped="" ref="0x2ad351b52020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ad351b52da0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ad351b52920"/>
        <function-ref name="getdt" scoped="" ref="0x2ad351b504a0"/>
        <function-ref name="gett0" scoped="" ref="0x2ad351b50020"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad351b524a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ad351b541b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ad351b51410"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ad351b54680"/>
        <function-ref name="stop" scoped="" ref="0x2ad351b54b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EpochTimer" ref="0x2ad351b5a0a0" loc="7:SlotSchedulerP.nc">
      <component-ref qname="TDMALinkC.SlotSchedulerC.SlotSchedulerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EpochTimer" scoped="" ref="0x2ad351b5a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad351b56630"/>
        <function-ref name="fired" scoped="" ref="0x2ad351b59b00"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ad351b57920"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ad351b574a0"/>
        <function-ref name="getdt" scoped="" ref="0x2ad351b55020"/>
        <function-ref name="gett0" scoped="" ref="0x2ad351b56ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad351b57020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ad351b5ac90"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ad351b56020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ad351b591b0"/>
        <function-ref name="stop" scoped="" ref="0x2ad351b59680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlotScheduler" ref="0x2ad351b5cde0" loc="4:SlotSchedulerP.nc">
      <component-ref qname="TDMALinkC.SlotSchedulerC.SlotSchedulerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SlotScheduler" scoped="" ref="0x2ad351b5cde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlotScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x2ad351b5bc70"/>
        <function-ref name="slotStarted" scoped="" ref="0x2ad351b5b310"/>
        <function-ref name="getScheduledSlot" scoped="" ref="0x2ad351b5b4a0"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad351b5b630"/>
        <function-ref name="syncEpochTime" scoped="" ref="0x2ad351b5b7c0"/>
        <function-ref name="start" scoped="" ref="0x2ad351b5b950"/>
        <function-ref name="slotEnded" scoped="" ref="0x2ad351b5bae0"/>
        <function-ref name="getEpochTime" scoped="" ref="0x2ad351b5b180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer32khz" ref="0x2ad351b48220" loc="3:Timer32C.nc">
      <component-ref qname="TDMALinkC.SlotSchedulerC.EpochTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer32khz" scoped="" ref="0x2ad351b48220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad351b446e0"/>
        <function-ref name="fired" scoped="" ref="0x2ad351b46c90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ad351b45a70"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ad351b455f0"/>
        <function-ref name="getdt" scoped="" ref="0x2ad351b43020"/>
        <function-ref name="gett0" scoped="" ref="0x2ad351b44b60"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad351b45170"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ad351b48e10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ad351b440d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ad351b46340"/>
        <function-ref name="stop" scoped="" ref="0x2ad351b46810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer32khz" ref="0x2ad351b428b0" loc="3:Timer32C.nc">
      <component-ref qname="TDMALinkC.SlotSchedulerC.StartSlotTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer32khz" scoped="" ref="0x2ad351b428b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad351b3ecf0"/>
        <function-ref name="fired" scoped="" ref="0x2ad351b3f310"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ad351b3e0d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ad351b3fc10"/>
        <function-ref name="getdt" scoped="" ref="0x2ad351b3d660"/>
        <function-ref name="gett0" scoped="" ref="0x2ad351b3d1e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad351b3f790"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ad351b404c0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ad351b3e6e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ad351b40990"/>
        <function-ref name="stop" scoped="" ref="0x2ad351b40e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer32khz" ref="0x2ad351b3b020" loc="3:Timer32C.nc">
      <component-ref qname="TDMALinkC.SlotSchedulerC.EndSlotTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer32khz" scoped="" ref="0x2ad351b3b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad351b37630"/>
        <function-ref name="fired" scoped="" ref="0x2ad351b39a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ad351b38920"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ad351b384a0"/>
        <function-ref name="getdt" scoped="" ref="0x2ad351b36020"/>
        <function-ref name="gett0" scoped="" ref="0x2ad351b37ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad351b38020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ad351b3bc10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ad351b37020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ad351b39110"/>
        <function-ref name="stop" scoped="" ref="0x2ad351b395e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ad350ff4c20" loc="46:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.DataRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2ad350ff4c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad350ff3020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad350ff31b0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad350ff3340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad350ff34d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad350ff3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ad350ff4650" loc="45:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.DataRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2ad350ff4650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad350ff49d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ad350ff38b0" loc="47:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.DataRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2ad350ff38b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ad350ff3c30"/>
        <function-ref name="source" scoped="" ref="0x2ad350ff3dc0"/>
        <function-ref name="address" scoped="" ref="0x2ad350ff2020"/>
        <function-ref name="destination" scoped="" ref="0x2ad350ff21b0"/>
        <function-ref name="setSource" scoped="" ref="0x2ad350ff2340"/>
        <function-ref name="setDestination" scoped="" ref="0x2ad350ff24d0"/>
        <function-ref name="type" scoped="" ref="0x2ad350ff2660"/>
        <function-ref name="setType" scoped="" ref="0x2ad350ff27f0"/>
        <function-ref name="isForMe" scoped="" ref="0x2ad350ff2980"/>
        <function-ref name="setGroup" scoped="" ref="0x2ad350ff2b10"/>
        <function-ref name="localGroup" scoped="" ref="0x2ad350ff2ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer32khz" ref="0x2ad350fe7870" loc="3:Timer32C.nc">
      <component-ref qname="TestC.Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer32khz" scoped="" ref="0x2ad350fe7870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ad34f5e1460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad34f5e0020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad350fe4cf0"/>
        <function-ref name="fired" scoped="" ref="0x2ad350fe5300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ad350fe40d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ad350fe5c00"/>
        <function-ref name="getdt" scoped="" ref="0x2ad350fe3660"/>
        <function-ref name="gett0" scoped="" ref="0x2ad350fe31e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad350fe5780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ad350fe6480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ad350fe46e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ad350fe6950"/>
        <function-ref name="stop" scoped="" ref="0x2ad350fe6e20"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Boot" loc="50:/home/zdenial/tinyos/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/zdenial/tinyos/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2ad34f5aa5d0" loc="60:/home/zdenial/tinyos/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/zdenial/tinyos/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ad34f5e0dd0" loc="53:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ad34f5e0dd0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2ad34f5d9c10" loc="136:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2ad34f5dc420" loc="83:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2ad34f5da2b0" loc="114:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2ad34f5dbbd0" loc="114:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2ad34f5da020" loc="114:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2ad34f5db420" loc="98:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2ad34f5d8c60" loc="151:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2ad34f5d83e0" loc="144:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2ad34f5dcc00" loc="92:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2ad34f5df970" loc="64:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2ad34f5df6f0" loc="64:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2ad34f5d92b0" loc="129:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2ad34f5dac50" loc="129:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2ad34f5d9020" loc="129:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2ad34f5de4d0" loc="73:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2ad34f5de250" loc="73:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ad34f5decd0" loc="78:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2ad34f5a3970" loc="80:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2ad34f5a0970"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2ad34f5a3020" loc="80:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2ad34f5a0970"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2ad34f5a33a0" loc="80:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ad34f5a36d0" loc="80:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2ad34f5bb160" loc="135:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad34f5bdae0" loc="135:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ad34f5bde10" loc="135:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2ad34f5bd270" loc="123:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2ad34f5c0cd0" loc="96:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad34f5c0a50" loc="96:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2ad34f5bf3a0" loc="110:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad34f5c1d70" loc="110:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2ad34f5bf110" loc="110:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TDMALink" loc="1:TDMALink.nc">
      <function command="" provided="0" name="isMaster" ref="0x2ad34f5a8e60" loc="5:TDMALink.nc">
        <interfacedef-ref qname="TDMALink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startDone" ref="0x2ad34f5a67d0" loc="6:TDMALink.nc">
        <interfacedef-ref qname="TDMALink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2ad34f5a6550" loc="6:TDMALink.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startSlave" ref="0x2ad34f5a8070" loc="3:TDMALink.nc">
        <interfacedef-ref qname="TDMALink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x2ad34f5a52a0" loc="7:TDMALink.nc">
        <interfacedef-ref qname="TDMALink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2ad34f5a5020" loc="7:TDMALink.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startMaster" ref="0x2ad34f5ac900" loc="2:TDMALink.nc">
        <interfacedef-ref qname="TDMALink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ad34f5a8760" loc="4:TDMALink.nc">
        <interfacedef-ref qname="TDMALink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/zdenial/tinyos/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2ad34f5b7300" loc="78:/home/zdenial/tinyos/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
              <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad34f5a9870" loc="78:/home/zdenial/tinyos/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x2ad34f5a9bc0" loc="78:/home/zdenial/tinyos/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ad34f5b7020" loc="78:/home/zdenial/tinyos/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x2ad34f5c8040" loc="177:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2ad34f5a0590"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ad34f5cad90" loc="177:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x2ad34f5d1bc0" loc="88:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x2ad34f5a0970"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ad34f5d1940" loc="88:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x2ad34f5b4020" loc="68:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x2ad34f5a0970"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2ad34f5b4ae0" loc="78:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x2ad34f5a0970"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ad34f5b4860" loc="78:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2ad34f5cf600" loc="121:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2ad34f5a0970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ad34f5cf020" loc="121:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2ad34f5cf370" loc="121:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2ad34f5a0970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2ad34f5d2020" loc="103:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2ad34f5a0970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ad34f5d09e0" loc="103:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2ad34f5d0d30" loc="103:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2ad34f5a0970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x2ad34f5cbae0" loc="147:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2ad34f5a01b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ad34f5cb860" loc="147:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x2ad34f5c9e60" loc="162:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2ad34f5a01b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ad34f5c98b0" loc="162:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x2ad34f5c9bd0" loc="162:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2ad34f5a01b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2ad34f5cc890" loc="136:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ad34f5cc610" loc="136:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x2ad34f5c6600" loc="187:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2ad34f5a0590"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ad34f5c6020" loc="187:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2ad34f5c6370" loc="187:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2ad34f5a0590"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x2ad34f5c5490" loc="195:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2ad34f5a0590"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/home/zdenial/tinyos/tos/interfaces/Init.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2ad34f5fdd00" loc="62:/home/zdenial/tinyos/tos/interfaces/Init.nc">
        <documentation loc="53:/home/zdenial/tinyos/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x2ad34f631b40" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x2ad34f633de0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x2ad34f631420" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x2ad34f633700" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x2ad34f6325a0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x2ad34f614900" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x2ad34f633020" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x2ad34f632cc0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/zdenial/tinyos/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/home/zdenial/tinyos/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2ad34f1c1b70" loc="62:/home/zdenial/tinyos/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/zdenial/tinyos/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2ad34f179c00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x2ad34f687020" loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x2ad34f688cc0" loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x2ad34f669390" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad34f628910"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x2ad34f627390"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x2ad34f687890" loc="57:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x2ad34f6867b0" loc="59:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x2ad34f688560" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x2ad34f686020" loc="58:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x2ad34f669b30" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x2ad34f689350" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x2ad34f689da0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad34f628910"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x2ad34f627390"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2ad34f689b20" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad34f628910"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x2ad34f627390"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x2ad34f6790e0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x2ad34f69a630" loc="79:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x2ad34f69a3b0" loc="79:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2ad34f6992a0" loc="86:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="81:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2ad34f699020" loc="86:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2ad34f69bbe0" loc="68:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="65:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2ad34f69b3e0" loc="63:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x2ad34f679a90" loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x2ad34f679810" loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x2ad34f6803e0" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x2ad34f680d60" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2ad34f680ae0" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x2ad34f67f790" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x2ad34f67f510" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x2ad34f67e2a0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x2ad34f67e020" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2ad34f67e990" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2ad34f670810" loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x2ad34f66d2a0" loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x2ad34f66d020" loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x2ad34f66e020" loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2ad34f675ab0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x2ad34f66e760" loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2ad34f6729b0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x2ad34f670120" loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2ad34f672270" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2ad34f6710e0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x2ad34f6719f0" loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2ad34f671770" loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x2ad34f66dcb0" loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x2ad34f66da30" loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2ad34f6be9f0" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/home/zdenial/tinyos/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2ad34f50b2b0" loc="76:/home/zdenial/tinyos/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/home/zdenial/tinyos/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/zdenial/tinyos/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/zdenial/tinyos/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2ad34f2ff420" loc="52:/home/zdenial/tinyos/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/zdenial/tinyos/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2ad34f0bb020" loc="57:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2ad34f0ba020" loc="72:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2ad34f0bb790" loc="65:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/zdenial/tinyos/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2ad34f0cd020" loc="67:/home/zdenial/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2ad34f0cd870" loc="75:/home/zdenial/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/zdenial/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x2ad34f7ceab0" loc="113:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2ad34f7ce830" loc="113:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x2ad34f7f4020" loc="138:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2ad34f7cdd30" loc="138:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2ad34f7d1bd0" loc="104:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ad34f7cd350" loc="130:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TimeSyncAMSend" loc="44:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ad34f7cfbb0" loc="44:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <interfacedef-ref qname="TimeSyncAMSend"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ad34f7cfbb0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2ad34f7cfdf0" loc="44:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <interfacedef-ref qname="TimeSyncAMSend"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad34f7cfdf0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="send" ref="0x2ad34f7e9430" loc="64:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="46:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; This command sends a regular message just like &#60;tt>AMSend.send&#60;/tt>, but&#10; it also performs sender-receiver time synchronization.</short>
          <long>&#10; This command sends a regular message just like &#60;tt>AMSend.send&#60;/tt>, but&#10; it also performs sender-receiver time synchronization. The &#60;tt>event_time&#60;/tt>&#10; parameter holds the time of some event as expressed in the local clock of&#10; the sender. The receiver can obtain the time of this event (expressed in its&#10; own local time) via the &#60;tt>TimeSyncPacket&#60;/tt> interface.&#10;&#10; @param addr         address to which to send the packet&#10; @param msg          the packet&#10; @param len          the length of the data in the packet payload&#10; @param event_time&#9;  the synchronization point to be transfered with the message&#10; @return             SUCCESS if the request to send succeeded and a&#10;                     sendDone will be signaled later, EBUSY if the&#10;                     abstraction cannot send now but will be able to&#10;                     later, or FAIL if the communication layer is not&#10;                     in a state that can send (e.g., off).&#10; @see sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2ad34f5a0970"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad34f7cfdf0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2ad34f7ea710" loc="64:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2ad34f5a0970"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2ad34f7eaa90" loc="64:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ad34f7eadc0" loc="64:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </variable>
          <variable name="event_time" ref="0x2ad34f7e9180" loc="64:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad34f7cfdf0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2ad34f7e5ab0" loc="114:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="105:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad34f7e54b0" loc="114:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ad34f7e57e0" loc="114:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2ad34f7e6bf0" loc="103:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="95:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2ad34f7e72a0" loc="80:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="66:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the&#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a&#10; sendFailed event, and never a sendSucceeded event.&#10;&#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad34f7e7020" loc="80:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2ad34f7e62b0" loc="93:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="82:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; Signaled in response to an accepted send request.</short>
          <long>&#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad34f7e7c40" loc="93:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2ad34f7e6020" loc="93:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/home/zdenial/tinyos/tos/interfaces/Random.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x2ad34f800870" loc="52:/home/zdenial/tinyos/tos/interfaces/Random.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x2ad34f800070" loc="46:/home/zdenial/tinyos/tos/interfaces/Random.nc">
        <documentation loc="42:/home/zdenial/tinyos/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TimeSyncPacket" loc="37:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x2ad34f7e1b90" loc="37:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
          <interfacedef-ref qname="TimeSyncPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ad34f7e1b90"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2ad34f7e1dd0" loc="37:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
          <interfacedef-ref qname="TimeSyncPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad34f7e1dd0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="isValid" ref="0x2ad34f806980" loc="48:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
          <short>&#10; Returns TRUE if the value returned by &#60;tt>getTime&#60;/tt> can be trusted.</short>
          <long>&#10; Returns TRUE if the value returned by &#60;tt>getTime&#60;/tt> can be trusted.&#10; Under certain circumstances the received message cannot be properly&#10; time stamped, so the sender-receiver synchronization cannot be finished&#10; on the receiver side. In this case, this command returns FALSE.&#10; This command MUST BE called only on the receiver side and only for&#10; messages transmitted via the TimeSyncSend interface. It is recommended&#10; that this command be called from the receive event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad34f806700" loc="48:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="eventTime" ref="0x2ad34f8055f0" loc="58:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
        <documentation loc="50:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
          <short>&#10; This command should be called by the receiver of a message.</short>
          <long>&#10; This command should be called by the receiver of a message. The time&#10; of the synchronization event is returned as expressed in the local&#10; clock of the caller. This command MUST BE called only on the receiver&#10; side and only for messages transmitted via the TimeSyncSend interface.&#10; It is recommended that this command be called from the receive event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad34f7e1dd0"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad34f805370" loc="58:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x2ad34f7ed040" loc="65:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad34f7efd90" loc="65:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x2ad34f7f1020" loc="46:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad34f7d08b0" loc="46:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x2ad34f7d0c40" loc="46:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x2ad34f7ef020" loc="59:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad34f7f0c40" loc="59:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x2ad34f7f0410" loc="53:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad34f7f1dd0" loc="53:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x2ad34f7f0180" loc="53:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x2ad34f7ec020" loc="71:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad34f7edd70" loc="71:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlotScheduler" loc="1:SlotScheduler.nc">
      <function command="" provided="0" name="getEpochTime" ref="0x2ad34f81b020" loc="6:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="slotStarted" ref="0x2ad34f81a110" loc="8:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="slotId" ref="0x2ad34f81be60" loc="8:SlotScheduler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduledSlot" ref="0x2ad34f81b790" loc="7:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2ad34f81d720" loc="3:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="syncEpochTime" ref="0x2ad34f81c820" loc="5:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reference_time" ref="0x2ad34f81c5a0" loc="5:SlotScheduler.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2ad34f81d020" loc="2:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="epoch_time" ref="0x2ad34f7f8980" loc="2:SlotScheduler.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
            </type-int>
          </variable>
          <variable name="firstSlot" ref="0x2ad34f7f8cf0" loc="2:SlotScheduler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="slotEnded" ref="0x2ad34f81aaa0" loc="9:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="slotId" ref="0x2ad34f81a820" loc="9:SlotScheduler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ad34f81de10" loc="4:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/home/zdenial/tinyos/tos/interfaces/StdControl.nc">
      <documentation loc="72:/home/zdenial/tinyos/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2ad34f88d0e0" loc="95:/home/zdenial/tinyos/tos/interfaces/StdControl.nc">
        <documentation loc="88:/home/zdenial/tinyos/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ad34f88d8f0" loc="105:/home/zdenial/tinyos/tos/interfaces/StdControl.nc">
        <documentation loc="97:/home/zdenial/tinyos/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:/home/zdenial/tinyos/tos/lib/printf/Putchar.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TINYOS_OS_DIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0x2ad34f8ae4a0" loc="49:/home/zdenial/tinyos/tos/lib/printf/Putchar.nc">
        <documentation loc="46:/home/zdenial/tinyos/tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x2ad34f8ae220" loc="49:/home/zdenial/tinyos/tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2ad34f888400" loc="46:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2ad34f888180" loc="46:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2ad34f8872b0" loc="56:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2ad34f888c70" loc="56:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x2ad34f887020" loc="56:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2ad34f8a1020" loc="48:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2ad34f8a48f0" loc="48:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ad34f8a4c30" loc="48:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x2ad34f89ecc0" loc="79:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="74:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2ad34f89ea40" loc="79:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2ad34f89cae0" loc="90:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="81:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2ad34f89c510" loc="90:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ad34f89c850" loc="90:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x2ad34f89d930" loc="65:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="59:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x2ad34f8c63b0" loc="99:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="92:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2ad34f8c5a60" loc="99:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ad34f8c5da0" loc="99:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2ad34f8c6110" loc="99:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x2ad34f89e270" loc="72:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2ad34f89f950" loc="57:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="50:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2ad34f89f020" loc="57:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ad34f89f360" loc="57:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2ad34f89f6b0" loc="57:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/zdenial/tinyos/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x2ad34f8f6af0" loc="53:/home/zdenial/tinyos/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/zdenial/tinyos/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2ad34f91c4e0" loc="61:/home/zdenial/tinyos/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x2ad34f918610" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2ad34f8e7e70"/>
              <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x2ad34f8e62b0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2ad34f91f350" loc="120:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x2ad34f920350" loc="97:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2ad34f8f7980" loc="88:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2ad34f920b40" loc="102:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2ad34f91fdb0" loc="128:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/zdenial/tinyos/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/zdenial/tinyos/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x2ad34f912b70" loc="65:/home/zdenial/tinyos/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/zdenial/tinyos/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x2ad34f912350" loc="59:/home/zdenial/tinyos/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x2ad34f937680" loc="54:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ad34f937400" loc="54:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x2ad34f90cc00" loc="49:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x2ad34f940af0" loc="213:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x2ad34f94c790" loc="143:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x2ad34f92a530" loc="50:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2ad34f8bf080"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x2ad34f8bf8c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2ad34f92a2b0" loc="50:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2ad34f8bf080"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x2ad34f8bf8c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x2ad34f94e870" loc="123:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x2ad34f928a40" loc="70:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2ad34f8ba080"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x2ad34f8ba8c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2ad34f9287c0" loc="70:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2ad34f8ba080"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x2ad34f8ba8c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x2ad34f945e70" loc="180:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x2ad34f942480" loc="197:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x2ad34f928020" loc="65:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2ad34f8bc020"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x2ad34f8bc7b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x2ad34f927270" loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2ad34f8ba080"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x2ad34f8ba8c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x2ad34f923020" loc="97:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x2ad34f924d30" loc="97:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x2ad34f924610" loc="95:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x2ad34f945740" loc="179:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x2ad34f929780" loc="60:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2ad34f8bc020"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x2ad34f8bc7b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2ad34f929500" loc="60:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2ad34f8bc020"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x2ad34f8bc7b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x2ad34f925420" loc="85:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x2ad34f9445d0" loc="181:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x2ad34f925e00" loc="90:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x2ad34f925b80" loc="90:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x2ad34f922910" loc="113:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x2ad34f94e0e0" loc="118:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x2ad34f947840" loc="177:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x2ad34f949790" loc="163:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x2ad34f94d7e0" loc="133:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x2ad34f945020" loc="178:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x2ad34f94a020" loc="148:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x2ad34f944cf0" loc="182:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x2ad34f923800" loc="103:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x2ad34f8a2dd0"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x2ad34f8c1680"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x2ad34f9434c0" loc="187:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x2ad34f940350" loc="207:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x2ad34f927c10" loc="80:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x2ad34f927990" loc="80:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x2ad34f93f4d0" loc="224:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ad34f93f250" loc="224:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x2ad34f92ad10" loc="55:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2ad34f8bf080"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x2ad34f8bf8c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x2ad34f94d020" loc="128:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x2ad34f94a770" loc="153:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x2ad34f947020" loc="174:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2ad34f8e7e70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x2ad34f8e62b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x2ad34f948cf0" loc="174:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2ad34f8e7e70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x2ad34f8e62b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x2ad34f9482a0" loc="168:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x2ad34f8ce020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x2ad34f8ce440"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x2ad34f948020" loc="168:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x2ad34f8ce020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x2ad34f8ce440"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x2ad34f93fd90" loc="231:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x2ad34f943cb0" loc="192:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x2ad34f922070" loc="108:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x2ad34f942be0" loc="202:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x2ad34f949020" loc="158:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x2ad34f94c020" loc="138:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ad34f965410" loc="57:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ad34f965410"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2ad34f965650" loc="57:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad34f965650"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2ad34f963020" loc="64:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad34f965650"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2ad34f962120" loc="76:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2ad34f9638a0" loc="71:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2ad34f962880" loc="82:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x2ad34f95a020" loc="61:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x2ad34f95a7d0" loc="67:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x2ad34f959020" loc="72:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x2ad34f958020" loc="83:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x2ad34f9567d0" loc="100:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2ad34f955020" loc="117:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x2ad34f9597b0" loc="77:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2ad34f955b90" loc="134:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2ad34f955910" loc="134:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x2ad34f95b850" loc="56:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x2ad34f958800" loc="89:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x2ad34f956020" loc="94:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/zdenial/tinyos/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/zdenial/tinyos/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2ad34f9d7390" loc="95:/home/zdenial/tinyos/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/zdenial/tinyos/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ad34f9d7be0" loc="105:/home/zdenial/tinyos/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/zdenial/tinyos/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2ad34f9c47c0" loc="78:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2ad34f9f3020" loc="80:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x2ad34f9efb10" loc="110:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2ad34f9ef890" loc="110:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2ad34f9c5020" loc="58:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2ad34f9f1020" loc="87:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x2ad34f9ee490" loc="117:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2ad34f9f3760" loc="85:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2ad34f9c4020" loc="73:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x2ad34f9f0770" loc="99:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x2ad34f9c57c0" loc="66:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2ad34f9c70e0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x2ad34f9f17a0" loc="92:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x2ad34f9ef020" loc="101:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x2ad34f9f0020" loc="94:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2ad34f9c7810" loc="53:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2ad34fc96020" loc="44:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2ad34fc96750" loc="45:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2ad34fc980e0" loc="42:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2ad34fc955e0" loc="47:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2ad34fc987e0" loc="43:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2ad34fc96e70" loc="46:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2ad34fc992b0" loc="40:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2ad34fc99980" loc="41:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/zdenial/tinyos/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/zdenial/tinyos/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x2ad34fcf1460" loc="90:/home/zdenial/tinyos/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/zdenial/tinyos/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x2ad34fcf1cc0" loc="98:/home/zdenial/tinyos/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/zdenial/tinyos/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2ad34fd1aa40" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2ad34fd3be00" loc="56:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x2ad34fd38020" loc="73:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2ad34fd3b570" loc="46:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2ad34fd396d0" loc="65:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2ad34fd38950" loc="81:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x2ad34fd2d020" loc="79:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2ad34fd34090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2ad34fd2ed20" loc="79:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2ad34fd34090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x2ad34fd2f020" loc="53:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x2ad34fd2fb20" loc="62:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2ad34fd34090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2ad34fd2f8a0" loc="62:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2ad34fd34090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2ad34fd2e470" loc="70:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x2ad34fd34090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/home/zdenial/tinyos/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/home/zdenial/tinyos/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x2ad34fdba770" loc="62:/home/zdenial/tinyos/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/home/zdenial/tinyos/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2ad34fde37a0" loc="65:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad34fde3520" loc="65:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x2ad34fde2840" loc="78:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad34fde25c0" loc="78:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2ad34fdddd30" loc="126:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad34fddd730" loc="126:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ad34fddda60" loc="126:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2ad34fde0da0" loc="106:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x2ad34fddfce0" loc="94:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad34fddf720" loc="94:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ad34fddfa50" loc="94:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x2ad34fe18ad0" loc="59:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad34fe18850" loc="59:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x2ad34fe15cd0" loc="71:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad34fe15a50" loc="71:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x2ad34fe14020" loc="85:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad34fe16ce0" loc="85:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/zdenial/tinyos/tos/interfaces/Send.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2ad34fe08460" loc="75:/home/zdenial/tinyos/tos/interfaces/Send.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad34fe0be70" loc="75:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ad34fe081d0" loc="75:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2ad34fe02a40" loc="125:/home/zdenial/tinyos/tos/interfaces/Send.nc">
        <documentation loc="115:/home/zdenial/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad34fe02440" loc="125:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ad34fe02770" loc="125:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2ad34fe03b80" loc="112:/home/zdenial/tinyos/tos/interfaces/Send.nc">
        <documentation loc="102:/home/zdenial/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2ad34fe07790" loc="89:/home/zdenial/tinyos/tos/interfaces/Send.nc">
        <documentation loc="77:/home/zdenial/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad34fe07510" loc="89:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2ad34fe04c70" loc="100:/home/zdenial/tinyos/tos/interfaces/Send.nc">
        <documentation loc="91:/home/zdenial/tinyos/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad34fe04690" loc="100:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2ad34fe049e0" loc="100:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x2ad34fe68670" loc="31:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad34fe68060" loc="31:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x2ad34fe683e0" loc="31:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x2ad34fe6a820" loc="15:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x2ad34fe696d0" loc="23:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad34fe690d0" loc="23:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x2ad34fe69440" loc="23:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/home/zdenial/tinyos/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x2ad34fe8c960" loc="54:/home/zdenial/tinyos/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/home/zdenial/tinyos/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x2ad34fe8c1f0" loc="49:/home/zdenial/tinyos/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/home/zdenial/tinyos/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x2ad34fe9ec30" loc="56:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x2ad34fe930e0" loc="72:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x2ad34fe91d00" loc="94:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ad34fe91a80" loc="94:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x2ad34fe93960" loc="79:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x2ad34fe947e0" loc="65:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ad34fe94560" loc="65:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x2ad34fe905b0" loc="100:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x2ad34fe91270" loc="85:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x2ad34fe9c780" loc="71:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x2ad34fe9b0e0" loc="81:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x2ad34fe9fd90" loc="62:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x2ad34fe9fb10" loc="62:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x2ad34fe9bc60" loc="91:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2ad34fe9b9e0" loc="91:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x2ad34fe998f0" loc="62:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x2ad34fe975b0" loc="69:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ad34fe97330" loc="69:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x2ad34fe960b0" loc="80:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2ad34fe97e00" loc="80:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x2ad34ffe27a0" loc="35:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ad34ffe27a0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2ad34ffe29e0" loc="35:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad34ffe29e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x2ad34ffdd840" loc="63:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad34ffe29e0"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad34ffdd5c0" loc="63:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x2ad34ffdb9d0" loc="70:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad34ffdb750" loc="70:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x2ad34ffdf5f0" loc="49:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad34ffdf370" loc="49:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2ad34ffd9d00" loc="78:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad34ffe29e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad34ffd9710" loc="78:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2ad34ffd9a70" loc="78:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad34ffe29e0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x2ad350017e30" loc="65:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad350017810" loc="65:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x2ad350017ba0" loc="65:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x2ad350014020" loc="71:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad350015d70" loc="71:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x2ad350017020" loc="57:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x2ad350018560" loc="52:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x2ad3500182e0" loc="52:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x2ad3500b8430" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad3500b81b0" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x2ad3500ba720" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad3500ba4a0" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x2ad3500bddc0" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x2ad3500bdb40" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x2ad3500bd2a0" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x2ad3500bd020" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x2ad3500bc880" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x2ad3500bc600" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x2ad3500b95e0" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad3500b9360" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/home/zdenial/tinyos/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x2ad3500b2630" loc="59:/home/zdenial/tinyos/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/home/zdenial/tinyos/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2ad34f5a0970"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x2ad3500b2020" loc="59:/home/zdenial/tinyos/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2ad34f5a0970"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2ad3500b23a0" loc="59:/home/zdenial/tinyos/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x2ad34fffd0c0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2ad34fffeaa0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x2ad34fffedf0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x2ad3500c36d0" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2ad3500c30d0" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x2ad3500c3440" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x2ad34fffdba0" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x2ad34e9dd110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2ad34fffd920" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x2ad3500c4600" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2ad3500c4380" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x2ad34fffe2a0" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2ad34fffe020" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x2ad3500c5720" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2ad3500c54a0" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/home/zdenial/tinyos/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x2ad3500bf0b0" loc="47:/home/zdenial/tinyos/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad3500c2de0" loc="47:/home/zdenial/tinyos/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2ad3500d8360" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2ad3500e1d40" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x2ad3500d80d0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2ad3500d76a0" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x2ad3500d4e70" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2ad3500d4060" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x2ad3500d48a0" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ad3500d4bd0" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2ad3500d5840" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2ad3500d5260" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2ad3500d55b0" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x2ad3500d8df0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x2ad3500d8b70" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x2ad3500ccde0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad3500ccb20" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x2ad3500cc320" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x2ad34f564ea0"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x2ad34f561c70"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad3500cc020" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x2ad3500ca130" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:16" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x2ad34f5607c0"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x2ad34f55e660"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad3500cbde0" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x2ad3500de070" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x2ad3500db0e0" loc="97:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x2ad3500dd8f0" loc="90:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x2ad3500e0730" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x2ad3500df7e0" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x2ad3500de8e0" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x2ad3500dd120" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x2ad3500df020" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:/home/zdenial/tinyos/tos/interfaces/State.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x2ad35010f7f0" loc="71:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <documentation loc="68:/home/zdenial/tinyos/tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x2ad3500c7ce0" loc="56:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <documentation loc="53:/home/zdenial/tinyos/tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x2ad35010f020" loc="66:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x2ad350110c40" loc="66:/home/zdenial/tinyos/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x2ad3501104a0" loc="61:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x2ad3500d09f0" loc="45:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <documentation loc="40:/home/zdenial/tinyos/tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x2ad3500d0770" loc="45:/home/zdenial/tinyos/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x2ad3500c7500" loc="51:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <documentation loc="47:/home/zdenial/tinyos/tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x2ad3500c7280" loc="51:/home/zdenial/tinyos/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x2ad35014a020" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x2ad35014c9f0" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x2ad35014cd40" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x2ad35014d960" loc="93:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x2ad35014d020" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x2ad35014e820" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x2ad35014ec00" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x2ad3501532a0" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2ad350153020" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x2ad35014c270" loc="98:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x2ad350151d70" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x2ad350151af0" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x2ad3501523e0" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2ad350152160" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x2ad350149270" loc="117:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x2ad35014e020" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x2ad35014fc50" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x2ad35014aa20" loc="112:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x2ad350152b60" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x2ad350012360"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x2ad350012ac0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x2ad350151390" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x2ad350154850" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2ad3501539f0" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x2ad35014f530" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/home/zdenial/tinyos/tos/interfaces/Read.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x2ad350148c60" loc="49:/home/zdenial/tinyos/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2ad350148c60"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x2ad350145560" loc="55:/home/zdenial/tinyos/tos/interfaces/Read.nc">
        <documentation loc="50:/home/zdenial/tinyos/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2ad3501442f0" loc="63:/home/zdenial/tinyos/tos/interfaces/Read.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2ad350148c60"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2ad350145ce0" loc="63:/home/zdenial/tinyos/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x2ad350144060" loc="63:/home/zdenial/tinyos/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2ad350148c60"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2ad350165520" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2ad34f565090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ad3501652a0" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2ad350164030" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2ad34f565090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ad350165d80" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:/home/zdenial/tinyos/tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:/home/zdenial/tinyos/tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x2ad350138640" loc="48:/home/zdenial/tinyos/tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:/home/zdenial/tinyos/tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x2ad350012360"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x2ad350012ac0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ad35013a8b0" loc="56:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ad35013a8b0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2ad35013aaf0" loc="56:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad35013aaf0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2ad35017e800" loc="109:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad35013aaf0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2ad3501807e0" loc="78:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2ad35017fe10" loc="103:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad35013aaf0"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad35013aaf0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2ad35017f840" loc="103:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad35013aaf0"/></type-var>
          </variable>
          <variable name="dt" ref="0x2ad35017fb80" loc="103:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad35013aaf0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2ad35017f020" loc="88:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2ad35017c020" loc="116:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad35013aaf0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2ad350181680" loc="66:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad35013aaf0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2ad350181400" loc="66:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad35013aaf0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ad350180020" loc="73:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x2ad35016e0e0" loc="50:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x2ad34f5a0970"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x2ad35016d070" loc="60:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x2ad35016e8c0" loc="55:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2ad34f5a0590"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x2ad350170860" loc="45:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2ad34f5a0590"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2ad34f5a0970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x2ad350170280" loc="45:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2ad34f5a0590"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2ad3501705d0" loc="45:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2ad34f5a0970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x2ad35015e760" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2ad34f565090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2ad35016a840" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2ad34f565090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2ad3501749b0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2ad35016a250" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2ad35016a5a0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2ad350167020" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2ad34f565090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2ad350168150" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2ad3501689c0" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2ad350168d10" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2ad3501727e0" loc="68:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2ad350172020" loc="61:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x2ad350173720" loc="54:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x2ad350176dc0" loc="53:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x2ad350320030" loc="54:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2ad35031f1f0" loc="66:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2ad3503209d0" loc="61:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2ad350320750" loc="61:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x2ad3503217a0" loc="53:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2ad350353020" loc="52:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2ad350351ac0" loc="72:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2ad3503547c0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x2ad3503512a0" loc="67:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x2ad350351020" loc="67:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x2ad350354020" loc="42:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x2ad350353820" loc="59:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x2ad3504442b0" loc="24:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x2ad350444b00" loc="31:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x2ad350443390" loc="39:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x2ad350473b60" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ad350473580" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2ad3504738d0" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x2ad35046edd0" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ad35046e490" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2ad35046e7e0" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2ad35046eb30" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2ad3504706b0" loc="82:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2ad34f565090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ad3504700d0" loc="82:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2ad350470420" loc="82:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x2ad350475730" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2ad34f565090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ad350475150" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2ad3504754a0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2ad3504712c0" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ad350472930" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2ad350472c80" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2ad350471020" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2ad3504adcf0" loc="70:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2ad3504ad380" loc="70:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2ad3504ad710" loc="70:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ad3504ada50" loc="70:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2ad3504ab3c0" loc="82:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2ad3504aa6a0" loc="82:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2ad3504aaa30" loc="82:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ad3504aad70" loc="82:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2ad3504ab110" loc="83:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/home/zdenial/tinyos/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x2ad3504b1c90" loc="45:/home/zdenial/tinyos/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/home/zdenial/tinyos/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x2ad3504b1a10" loc="45:/home/zdenial/tinyos/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x2ad350525120" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><union-ref ref="0x2ad34f8ce020"/>
              <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x2ad34f8ce440"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x2ad35052dd70" loc="62:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ad35052daf0" loc="62:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x2ad3505282a0" loc="74:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ad350528020" loc="74:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x2ad35052a610" loc="68:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2ad350528d30" loc="81:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ad350528ab0" loc="81:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableOwnAddress" ref="0x2ad3505f69d0" loc="80:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x2ad3505aa420" loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x2ad3505fd620" loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2ad3505fd3a0" loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x2ad3505b3af0" loc="11:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x2ad3505fac50" loc="71:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x2ad3506025e0" loc="49:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x2ad3505ab540" loc="28:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x2ad3505a92d0" loc="34:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x2ad3505ad500" loc="25:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x2ad3505ad280" loc="25:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x2ad3505afa10" loc="21:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x2ad350604070" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x2ad3505fb550" loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x2ad3505f6270" loc="78:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x2ad3505fec30" loc="61:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x2ad3505f1350" loc="91:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x2ad3505ed9d0" loc="100:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x2ad3505b2980" loc="14:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x2ad3506068b0" loc="38:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x2ad3506031f0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x2ad3505addc0" loc="27:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x2ad3505b48c0" loc="7:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x2ad3505fe460" loc="58:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2ad3505fe1e0" loc="58:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x2ad3505b4190" loc="6:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x2ad3505fa4d0" loc="69:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x2ad3505f5190" loc="81:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x2ad3505f0b00" loc="94:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x2ad3505ed270" loc="97:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x2ad3505f9b90" loc="74:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x2ad3505f58c0" loc="83:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x2ad3505fddb0" loc="65:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x2ad3505f3390" loc="87:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x2ad3505b00e0" loc="15:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x2ad3506007e0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x2ad3505f47b0" loc="86:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x2ad3505f8ac0" loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x2ad350603de0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x2ad350603b60" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x2ad3505ef2d0" loc="95:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x2ad3505ffa60" loc="57:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x2ad3505f9420" loc="72:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x2ad3505b3390" loc="8:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2ad34f900b90"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x2ad34f8ff020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x2ad3505b3110" loc="8:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2ad34f900b90"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x2ad34f8ff020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x2ad350606190" loc="37:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x2ad3505af2a0" loc="19:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2ad3505af020" loc="19:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x2ad3506049d0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ad350604750" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x2ad3505f3b60" loc="90:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x2ad3505aeb50" loc="24:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x2ad3505b0850" loc="18:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x2ad3505ff2a0" loc="54:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x2ad3505ff020" loc="54:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ad34e9de520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x2ad3505b2270" loc="12:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x2ad3505f4020" loc="84:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x2ad3505f8350" loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x2ad3505fbcc0" loc="68:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x2ad350600020" loc="50:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x2ad350602d30" loc="50:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x2ad3505a99f0" loc="35:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x2ad3505abc80" loc="29:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x2ad3505efa40" loc="96:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x2ad3505ae3c0" loc="22:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2ad3505ae140" loc="22:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x2ad3505f1b10" loc="92:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x2ad3505aab50" loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x2ad3505f0350" loc="93:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:/home/zdenial/tinyos/tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:/home/zdenial/tinyos/tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2ad350842620" loc="13:/home/zdenial/tinyos/tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2ad3508423a0" loc="13:/home/zdenial/tinyos/tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2ad35082ebc0" loc="10:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x2ad35082e280" loc="10:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x2ad35082e5f0" loc="10:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ad35082e920" loc="10:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2ad350895960" loc="11:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2ad3508953a0" loc="11:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ad3508956d0" loc="11:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ad35087e730" loc="59:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ad35087e730"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2ad35087e970" loc="59:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad35087e970"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x2ad35087b4d0" loc="66:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad35087e970"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2ad35087b250" loc="66:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad35087e970"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x2ad3508ed5e0" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2ad35092e9e0" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x2ad35092e020" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x2ad35092e750" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x2ad35092f7f0" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x2ad35092f020" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2ad350932d40" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x2ad3508d52a0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad34e9de160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad3508d5020" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x2ad3508d72a0" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad34f0b3090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad3508d7020" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2ad3508d22a0" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad3508d2020" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2ad3508d42a0" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad3508d4020" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad34f5b23c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ad34f5b1a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/zdenial/tinyos/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ad350a5d910" loc="53:/home/zdenial/tinyos/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ad350a5d910"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2ad350a5a270" loc="61:/home/zdenial/tinyos/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ad34e9de920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/home/zdenial/tinyos/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x2ad350bf0600" loc="53:/home/zdenial/tinyos/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2ad350bf0600"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x2ad350bec2a0" loc="64:/home/zdenial/tinyos/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad34f0c2980"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2ad350bf0600"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x2ad350bec020" loc="64:/home/zdenial/tinyos/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2ad350bf0600"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
